src,trg
write a python program to add two numbers,"""\nnum1 = 1.5\nnum2 = 6.3\nsum = num1 + num2\nprint(f'Sum :  {sum}')"""
write a python function to add two user provided numbers and return the sum,"'\ndef add_two_numbers(num1, num2) : \n\tsum = num1 + num2\n\treturn sum'"
write a program to find and print the largest among three numbers,"""\nnum1 = 10\nnum2 = 12\nnum3 = 14\nif (num1 >= num2) and (num1 >= num3) : \n\tlargest = num1\nelif (num2 >= num1) and (num2 >= num3) : \n\tlargest = num2\nelse : \n\tlargest = num3\nprint(f'largest : {largest}')"""
write a program to find and print the smallest among three numbers,"""\nnum1 = 10\nnum2 = 12\nnum3 = 14\nif (num1 <= num2) and (num1 <= num3) : \n\tsmallest = num1\nelif (num2 <= num1) and (num2 <= num3) : \n\tsmallest = num2\nelse : \n\tsmallest = num3\nprint(f'smallest : {smallest}')"""
Write a python function to merge two given lists into one,"'\ndef merge_lists(l1, l2) : \n\treturn l1 + l2'"
Write a python function that prints the factors of a given number,"'\ndef print_factors(x) : \n\tprint(f""The factors of {x} are : "")\n\tfor i in range(1, x + 1) : \n\t\tif x % i == 0 : \n\t\t\tprint(i)'"
"Write a python function to print whether a number is negative, positive or zero","'\ndef check_pnz(num) : \n\tif num > 0 : \n\t\tprint(""Positive number"")\n\telif num == 0 : \n\t\tprint(""Zero"")\n\telse : \n\t\tprint(""Negative number"")'"
Write a program to print the multiplication table of a given number,"'\nnum = 9\nfor i in range(1, 11) : \n\tprint(f""{num} x {i} = {num*i}"")'"
"Write a python function to print powers of 2, for given number of terms","'\ndef two_power(terms) : \n\tresult = list(map(lambda x :  2 ** x, range(terms)))\n\tprint(f""The total terms are :  {terms}"")\n\tfor i in range(terms) : \n\t\tprint(f""2^{i} = {result[i]}"")'"
Write a program to filter the numbers in a list which are divisible by a given number,"'\nmy_list = [11, 45, 74, 89, 132, 239, 721, 21]\nnum = 3\nresult = list(filter(lambda x :  (x % num == 0), my_list))\nprint(f""Numbers divisible by {num} are {result}"")'"
Write a python function that returns the sum of n natural numbers,"'\ndef sum_natural(num) : \n\tif num < 0 : \n\t\tprint(""Please enter a positive number!"")\n\telse : \n\t\tsum = 0\n\t\twhile(num > 0) : \n\t\t\tsum += num\n\t\t\tnum -= 1\n\t\treturn num'"
Write a program to swap first and last elements in a list,"'\nmy_list = [1, 2, 3, 4, 5, 6]\nmy_list[0], my_list[-1] = my_list[-1], my_list[0]'"
"Write a python function to find the area of a circle, whose radius is given",'\ndef findArea(r) :  \n\tPI = 3.142\n\treturn PI * (r*r)'
Write a program to print the sum of squares of first n natural numbers,"'\nn = 21\nsum_n = 0\nfor i in range(1, n+1) : \n\tsum_n += i**2\nprint(sum_n)'"
Write a program to print the length of a list,"'\nmy_list = [1, 2, 3, 4, 5, 6, 7, 8, 9]\nprint(len(my_list))'"
Write a pythno function to print the length of a given tuple,"'\nmy_tuple = (1, 2, 3, 4, 5, 6, 7, 8)\nprint(len(my_tuple))'"
"Write a python function to print the elements of a given list, one element in a line",'\ndef custom_print(l) : \n\tfor _ in l : \n\t\tprint(_)'
Write a python function to remove all the odd numbers from a list and return the remaining list,"'\ndef remove_odd(my_list) : \n\tresult = list(filter(lambda x :  (x % 2 == 0), my_list))\n\treturn result'"
Write a python function to remove all the even numbers from a list and return the remaining list,"'\ndef remove_even(my_list) : \n\tresult = list(filter(lambda x :  (x % 2 != 0), my_list))\n\treturn result'"
Write a function that takes two lists as input and returns a zipped list of corresponding elements,"'\ndef zip_list(list1, list2) : \n\treturn list(zip(list1, list2))'"
Write a program to to print the contents of a given file,"""\nfile_name = 'temp.txt'\nwith open(file_name, 'r') as f : \n\tprint(f.read())"""
Write a functin that returns the LCM of two input numbers,"'\ndef lcm(a, b) : \n\tif a>b : \n\t\tmin_ = a\n\telse : \n\t\tmin_ = b\n\twhile True : \n\t\tif min_%a==0 and min_%b==0 : \n\t\t\tbreak\n\t\tmin_+=1\n\treturn min_'"
Write a program to print the unique elements in a list,"'\nmy_list = [1, 2, 4, 5, 2, 3, 1, 5, 4, 7, 8, 2, 4, 5, 2, 7, 3]\nprint(set(my_list))'"
Write a function that returns the sum of digits of a given number,'\ndef digisum(num) : \n\tsum_=0\n\twhile num > 0 : \n\t\tdig = num % 10\n\t\tsum_+=dig\n\t\tnum//=10\n\treturn sum_'
Write a program to check and print whether a number is palindrome or not,"'\nnum = 12321\ntemp = num\nrev = 0\nwhile num > 0 : \n\tdig = num % 10\n\trev = rev*10 + dig\n\tnum//=10\nif temp==rev  : \n\tprint(""The number is a palindrome!"")\nelse : \n\tprint(""The number isn\'t a palindrome!"")'"
"Write a function that prints a given value, n number of times","'\ndef print_n(val, n) : \n\tfor _ in range(n) : \n\t\tprint(val)'"
Write a function to find the area of sqaure,'\ndef square_area(a) : \n\treturn a*a'
Write a function to find the perimeter of a square,'\ndef square_perimeter(a) : \n\treturn 4*a'
Write a function to find the area of rectangle,"'\ndef rectangle_area(l, b) : \n\treturn l*b'"
Write a function to find the permieter of a rectangle,"'\ndef rectangle_perimeter(l, b) : \n\treturn 2*(l+b)'"
"Write a python function to find the area of a circle, whose radius is given",'\ndef findArea(r) :  \n\tPI = 3.142\n\treturn PI * (r*r)'
Write a function to calculate and return electricity bill. Units used are given. Price per unit is fixed and is increased after 750 units.,'\ndef calc_elect_bill(units) : \n\tif units > 0 : \n\t\tif units <= 750 : \n\t\t\treturn 5*units\n\t\telse : \n\t\t\treturn 5*(750) + 7*(units-750)\n\telse : \n\t\treturn -1'
"Write a function to return day of a week, given the number","""\ndef give_day(n) : \n\tday_dict = {1 :  'Sunday', 2 :  'Monday', 3 :  'Tuesday', 4 :  'Wednesday', 5 :  'Thursday', 6 :  'Friday', 7 :  'Saturday'}\n\treturn day_dict[n]"""
Write a program to calculate and print the volume of a cylender,'\nr = 3\nh = 5\npi = 3.14\nvolume = pi*(r**2)*h\nprint(volume)'
Write a function to calculate and return the average of input numbers,'\ndef calc_avg(*args) : \n\tif len(args) > 0 : \n\t\treturn sum(args)/len(args)\n\treturn None'
"Write a function to calculate compound interest, given p, r, t","'\ndef comp_int(p, r, t) : \n\tamount = p * (1 + (r/100))**t\n\tinterest = amount - p\n\treturn interest'"
"Write a function to calculate simple interest, given p, r, t","'\ndef simp_int(p, r, t) : \n\tinterest = (p*r*t)/100\n\treturn interest'"
"Write a program to print a given string, replacing all the vowels with '_'","'\nst = ""Where is this going? Could you please help me understand!""\nvowels = ""AEIOUaeiou""\nfor v in vowels : \n\tst = st.replace(v, \'_\')\nprint(st)'"
Write a functio to check whether a number if perfect or not,"'\ndef is_perfect(n) : \n\tsum_ = 0\n\tfor i in range(1, n//2 + 1) : \n\t\tif n%i == 0 : \n\t\t\tsum_+=i\n\tif sum_ == n : \n\t\treturn True\n\treturn False'"
Write a function that returns seperate lists of positive and negative numbers from an input list,"'\ndef seperate_pn(l) : \n\tpos_list = []\n\tneg_list = []\n\tfor _ in l : \n\t\tif _<0 : \n\t\t\tneg_list.append(_)\n\t\telse : \n\t\t\tpos_list.append(_)\n\treturn pos_list, neg_list'"
"Write a program to find and print the area of a triangle, whose hight and width are given.",'\nh = 12\nw = 11\narea = 0.5*h*w\nprint(area)'
"Write a function to find acceleration, given u, v and t","'\ndef acc(u, v, t) : \n\treturn (v-u)/t'"
Write a lambda function to multiply two numbers,"'\nmultiply = lambda a, b :  a*b'"
Write a lambda function to add two numbers,"'\nadd = lambda a, b :  a+b'"
Write a lambda function that gives True if the input number is even otherwise False,'\neven = lambda a :  True if a%2 == 0 else False'
Write a lambda function to to give character grom it's ascii value,'\nascii = lambda a :  chr(a)'
Write a lambda function to that gives the number of digits in a number,'\ndig_cnt = lambda a :  len(str(a))'
"Write a program to to check if a triangle is valid or not, given it's all three angles","'\ndef is_valid_triangle_angle(a, b c) : \n\tif a+b+c == 180 : \n\t\treturn True\n\treturn False'"
"Write a program to to check if a triangle is valid or not, given it's all three sides' length","'\ndef is_valid_triangle_length(a, b c) : \n\tif a>0 and b>0 and c>0 : \n\t\tif a+b > c and a+c > b and b+c > a : \n\t\t\treturn True\n\treturn False'"
Write a lambda functio that gives the word count in a statement.,"""\ncount_word = lambda s :  len(s.split(' '))"""
Write a program to extract and print digits of a number in reverse order. The number is input from user.,"'\nnum = int(input(""Enter a number with multiple digit :  ""))\nn=0\nwhile num>0 : \n\ta = num%10\n\tnum = num - a\n\tnum = num/10\n\tprint(int(a),end="""")\n\tn = n + 1'"
Write a program that prints all the alphabets in a string and skips all other characters,"'\nstring = ""$john.snow#@Got.bad_ending/com""\nfor ch in string : \n\tif (ch>=\'A\' and ch<=\'Z\') or (ch>=\'a\' and ch<=\'z\') : \n\t\tprint(ch, end=\'\')\n\telse : \n\t\tpass'"
Write a function that takes number of disks in tower of hanaoi problem and returns the minimum number of steps required,'\ndef hanoi(x) : \n\tif x == 1 : \n\t\treturn 1\n\telse : \n\t\treturn 2*hanoi(x-1) + 1'
Write a lambda function to convert centimeters to inches,'\ncm_to_inch = lambda x :  x/2.54'
Write a lambda function to find the union of two lists,"'\nunion = lambda a, b :  list(set(a)|set(b))'"
Write a lambda function to find the intersection of two lists,"'\nintersection = lambda a, b :  list(set(a)&set(b))'"
Write a program that adds the square of two numbers and prints it,'\na = 32\nb = 21\nresult = a**2 + b**2\nprint(result)'
Write a python function to concat the input strings and there's also a choice for seperator,"""\ndef con_str(*args, sep = ' ') : \n\treturn sep.join(args)"""
Write a program to print all the even numbers in a range,"'\nr1, r2 = 1, 28\nfor _ in range(r1, r2+1) : \n\tif _%2 == 0 : \n\tprint(_)'"
write a program to display date and time,"'\nimport datetime\nnow = datetime.datetime.now()\ntime= now.strftime(""%Y-%m-%d %H : %M : %S"")\nprint(f""Current date and time  :  {time}"")'"
write a program to return the absolute value,"""\nnum = -10\nprint(f'Absolute of {num} is {abs(num)}')"""
write a python program to check the length of list,"""\nsample_list = ['a','b','c']\nprint(f'length of sample_list is {len(sample_list)}')"""
write a Python program to calculate number of days between two dates.,"""\nfrom datetime import date\nf_date = date(2019, 4, 15) # YYYY/MM/DD\nl_date = date(2020, 4, 15) # YYYY/MM/DD\ndelta = l_date - f_date\nprint(f'No of days between {f_date} and {l_date} is : {delta.days}')"""
write a Python program to convert Python objects into JSON strings.,"'\nimport json\npython_dict =  {""name"" :  ""David"", ""age"" :  6, ""class"" : ""I""}\njson_dict = json.dumps(python_dict, sort_keys=True, indent=4)\nprint(f""json dict  :  {json_dict}"")'"
write a Python program to get the largest number from a list,"""\ndef max_num_in_list(list) : \n\tmax = list[0]\n\tfor a in list : \n\t\tmax = a if a > max else max\n\treturn max\nprint(f'max_num_in_list [1, 10, -8, 0], Ans : {max_num_in_list([1, 10, -8, 0])}')"""
write a Python program to remove duplicates from a list,"""\na = [10,20,30,20,10,50,60,40,80,50,40]\ndup_items = set()\nuniq_items = []\nfor x in a : \n\tif x not in dup_items : \n\t\tuniq_items.append(x)\n\t\tdup_items.add(x)\nprint(f'dup_items : {dup_items}')"""
write a Python program to flatten a shallow list,"""\nimport itertools\noriginal_list = [[2,4,3],[1,5,6], [9], [7,9,0], [1,2,3,4]]\nnew_merged_list = list(itertools.chain(*original_list))\nprint(f'merged list/flatten : {new_merged_list}')"""
write a Python program to create multiple list,"""\nobj = {}\nfor i in range(1, 11) : \n\tobj[str(i)] = []\nprint(f'create multiple list : {obj}')"""
write a Python program to merge two dictionaries,"""\nd1 = {'a' :  100, 'b' :  200}\nd2 = {'x' :  300, 'y' :  200}\nd = d1.copy()\nd.update(d2)\nprint(f'merge two dictionaries : {d}')"""
write a Python program to Sum all the items in a dictionary,"""\nmy_dict = {'data1' : 100,'data2' : -54,'data3' : 247}\nprint(f'Sum all the items in a dictionary : {sum(my_dict.values())}')"""
write a python program to do nothing for a condition,'\nif 1 + 1 == 2 : \n\tpass # Nothing'
write a python program to make use of enumerate method,"'\nfor count, value in enumerate(obj) : \n\tprint(count, value)'"
write a python program to make use of setdefault for missing dictionary keys,"""\na_dict = {'a' : 1}\na_dict.setdefault('b',2)\nprint(f'After appending with new value : {a_dict}')"""
write a python program to make use of maps,"""\ndef square(number) : \n\treturn number ** 2\nnumbers = [1, 2, 3, 4, 5]\nsquared = map(square, numbers)\nprint(f'mapped numbers : {list(squared)}')"""
write a python program to make use of modulo operator,"""\nprint(f'modulo 15 % 4 :  Sol->{15 % 4}')"""
write a python program to explain enclosing and global scope,"""\nx = 'global'\ndef f() : \n\tx = 'enclosing'\n\tdef g() : \n\t\tprint(x)\n\tg()\n\treturn x\nobj1 = f()\nprint('explain global scope : ',obj1)"""
write a python program to expain local and global scope,"""\ndef f1() : \n\tx = 'enclosing'\n\tdef g() : \n\t\tx = 'local'\n\t\treturn x\n\tx=g()\n\treturn x\nobj2 = f1()\nprint('explain local scope : ',obj2)"""
write a python program to make use of regular expression for matching,"""\nimport re\nprint('Find the characters in the given string : ',re.findall(r'[a-z]+', '123FOO456', flags=re.IGNORECASE))"""
write a python program to make use of regular expression for matching,"""\ns = 'foo123bar'\nm = re.findall('123', s)\nprint('find the number position : ',m)"""
write a python program to convert lower string to UPPERCASE,"""\na = 'string'\nprint(f'convert lowercase to uppercase : {a.upper()}')"""
write a python program to convert uppercase string to lower,"""\na = 'STRING'\nprint(f'convert lowercase to uppercase : {a.lower()}')"""
write a Python Program to Find the Square Root,"""\nnum = 8 \nnum_sqrt = num ** 0.5\nprint('The square root of %0.3f is %0.3f'%(num ,num_sqrt))"""
write a Python Program to Convert Kilometers to Miles,"""\nkilometers = 10.0\nconv_fac = 0.621371\nmiles = kilometers * conv_fac\nprint('%0.2f kilometers is equal to %0.2f miles' %(kilometers,miles))"""
write a Python Program to Convert Celsius To Fahrenheit,"""\ncelsius = 37.5\nfahrenheit = (celsius * 1.8) + 32\nprint('%0.1f degree Celsius is equal to %0.1f degree Fahrenheit' %(celsius,fahrenheit))"""
"write a Python Program to Check if a Number is Positive, Negative or 0","'\nnum = 10\nif num > 0 : \n\tprint(""Positive number"")\nelif num == 0 : \n\tprint(""Zero"")\nelse : \n\tprint(""Negative number"")'"
Python Program to Check if a Number is Odd or Even,"'\nnum = 100\nif (num % 2) == 0 : \n\tprint(""{0} is Even"".format(num))\nelse : \n\tprint(""{0} is Odd"".format(num))'"
Python Program to Display the multiplication Table,"""\nnum = 12\nfor i in range(1, 11) : \n\tprint(num, 'x', i, '=', num*i)"""
write a program for Rolling the dices,"'\nimport random\nmin = 1\nmax = 6\nprint(""Rolling the dices...and the values are"",random.randint(min, max))\nprint(""Rolling the dices...and the values are"",random.randint(min, max))'"
write a python program to calculate the average,"'\nlist1 = [1,3,4,5]\naverage = (sum(list1)) / len(list1)\nprint(f""the average score is :   {average} "")'"
write a python program to print reverse list,"""\nprint(f'reverese the given list elements : {list1[ :  : -1]}')"""
write a python program to check a num is less than 1000,"""\ndef near_thousand(n) : \n\t\t return ((abs(1000 - n) <= 100) or (abs(2000 - n) <= 100))\nprint('near to 1000',near_thousand(1000))\nprint('near to 1300',near_thousand(1300))"""
write a python program to convert lower case to upper for list of elements,"""\nx = ['ab', 'cd']\nfor i in x : \n\tprint(i.upper())"""
write a python program to break when the num is perfectly divisible,'\ni = 1\nwhile True : \n\tif i%3 == 0 : \n\t\tbreak\n\tprint(i)\n\ti+= 1'
write a python program to check name exists in given list,"""\nnames1 = ['Amir', 'Bala', 'Chales']\nfor n in names1 : \n\tname = n.lower()\n\tif 'amir' == name : \n\t\tprint('Yes name exists : ',name)\n\telse : \n\t\tprint('No')"""
write a python program to print a matrix as output,"'\nmatrix = [[1, 2, 3, 4],\n\t\t[4, 5, 6, 7],\n\t\t[8, 9, 10, 11],\n\t\t[12, 13, 14, 15]]\nfor i in range(0, 4) : \n\tprint(matrix[i][1], end = "" "")'"
write a python program to expalin list comprehension and print alternative values,"'\nt = (1, 2, 4, 3, 8, 9)\nprint([t[i] for i in range(0, len(t), 2)])'"
write a python program to sort tuple values,"'\na=(2,3,1,5)\ntuple_sorted = sorted(a)\nprint(tuple(tuple_sorted))'"
write a python program to multiple two list values,"""\nl1=[1,2,3]\nl2=[4,5,6]\nprint('multiply two list values : ',[x*y for x in l1 for y in l2])"""
write the list comprehension to pick out only negative integers from a given list ‘l’.,"""\nl1=[1,2,3,-4,-8]\nprint('negative integers : ', [x for x in l1 if x<0])"""
write a python program to convert all list elements to upper case,"'\ns=[""pune"", ""mumbai"", ""delhi""]\nprint([(w.upper(), len(w)) for w in s])'"
write a python program to expalin python zip method,"'\nl1=[2,4,6]\nl2=[-2,-4,-6]\nfor i in zip(l1, l2) : \n\tprint(i)'"
write a python program to add two list using python zip method,"""\nl1=[10, 20, 30]\nl2=[-10, -20, -30]\nl3=[x+y for x, y in zip(l1, l2)]\nprint('added two list : ',l3)"""
write a list comprehension for number and its cube,"'\nl=[1, 2, 3, 4, 5, 6, 7, 8, 9]\nprint([x**3 for x in l])'"
write a list comprehension for printing rows into columns and vv,"'\nl=[[1 ,2, 3], [4, 5, 6], [7, 8, 9]]\nprint([[row[i] for row in l] for i in range(3)])'"
write a list comprehension for printing rows into columns and vv,"'\ndef unpack(a,b,c,d) : \n\tprint(a+d)\nx = [1,2,3,4]\nunpack(*x)'"
write a python program to use python lambda function,'\nlamb = lambda x :  x ** 3\nprint(lamb(5))'
write a python program to multiply a string n times,"""\na = 'python'\nprint(a*5)"""
write a python to check two numbers are greater than or equal or less than,"""\ndef maximum(x, y) : \n\tif x > y : \n\t\treturn x\n\telif x == y : \n\t\treturn 'The numbers are equal'\n\telse : \n\t\treturn y\nprint(maximum(2, 3))"""
write a python to dict to zip and print as dictionary elements in original form,"'\na={""a"" : 1,""b"" : 2,""c"" : 3}\nb=dict(zip(a.values(),a.keys()))\nprint(b)'"
write a python program to delete an dictionary element,"'\na={1 : 5,2 : 3,3 : 4}\na.pop(3)\nprint(a)'"
write a python program to check two dictionary are equal or not,"'\nd1 = {""john"" : 40, ""peter"" : 45}\nd2 = {""john"" : 466, ""peter"" : 45}\nd1 == d2'"
write a python program to print only dictionary keys as list,"'\nd = {""john"" : 40, ""peter"" : 45}\nprint(list(d.keys()))'"
write a python program to check two lists are equal or not,"'\na=[1, 4, 3, 5, 2]\nb=[3, 1, 5, 2, 4]\nprint(a==b)'"
write a python program to check two lists are equal or not,"'\na=frozenset(set([5,6,7]))\nprint(a)'"
write a python program to sum the set of unqiue elements,"'\na={5,6,7}\nprint(sum(a,5))'"
write a python program to implement try catch code,"'\ntry : \n\ts={5,6}\n\ts*3\nexcept Exception as e : \n\tprint(e)'"
write a python program to count the len of unique elements,"'\nnums = set([1,1,2,3,3,3,4,4])\nprint(len(nums))'"
write a python program to split in python,"""\nprint('abcdefcdghcd'.split('cd', 2))"""
write a python program to add title to string,"""\nprint('ab cd-ef'.title())"""
write a python program to print equal lenght of string,"""\nprint('ab'.zfill(5))"""
write a python program to use string replace,"""\nprint('abcdef12'.replace('cd', '12'))"""
write a python program to check string istitle,"""\nstr1 = 'Hello!2@#World'\nif str1.istitle() : \n\tprint('Yes string is title')"""
write a python program to do lstrip on string,"""\nprint('xyyzxxyxyy'.lstrip('xyy'))"""
write a python program to check identifier/keyword,"""\nprint('for'.isidentifier())"""
write a python program to check is an num/int,"""\nprint('11'.isnumeric())"""
write a python program to check is an variable is printable,"""\nprint('1@ a'.isprintable())"""
write a python program to check it contains any space,"""\nprint(''''''.isspace())"""
write a python program to check is an title,"""\nprint('HelloWorld'.istitle())"""
write a python program to check is all are num/int,"""\nprint('ab,12'.isalnum())"""
write a python program to check is all are alphanumeric,"""\nprint('ab'.isalpha())"""
write a python program to check is all are digit,"""\nprint('0xa'.isdigit())"""
write a python program to use f string,"""\nvar1 = 'python language'\nprint(f'f-string is an good feature in {var1}')"""
write a python program to iterate an dict and concatenate,"""\nD=dict(p='san', q='foundry')\nprint('{p}{q}'.format(**D))"""
write a python program to replace blank space to 1,"""\na='1 0 0 1'\nprint(a.replace(' ', '1'))"""
write a python program to explain the generator,'\ndef f11(x) : \n\tyield x+1\ng=f11(8)\nprint(next(g))'
write a python program to replace blank space to 1,"'\ndef f12(x) : \n\tyield x+1\n\tprint(""test"")\n\tyield x+2\ng=f12(9)\nprint(next(g))'"
write a python program to replace blank space to 1,"""\na = re.compile('[0-9]')\nz= a.findall('3 trees')\nprint(z)"""
write a python program to print current working directory,'\nimport os\nprint(os.getcwd())'
write a python program to print the ascii value of a string,"""\nprint([ord(ch) for ch in 'abc'])"""
write a python program to use extend in list/ append to a list,"'\na=[13,56,17]\na.append([87])\na.extend([45,67])\nprint(a)'"
write a python program to replace blank space to 1,"'\nmy_string = \'balaji\'\nk = [print(i) for i in my_string if i not in ""aeiou""]\nprint(\'Not a vowel\',k)'"
write a python program to add and square a range of number,'\nx = [i**+1 for i in range(3)]; print(x)'
write a python program to replace blank space to 1,"'\nprint([i+j for i in ""abc"" for j in ""def""])'"
write a python program to multiply two list with list comprehensive,"'\nl1=[1,2,3]\nl2=[4,5,6]\nprint([x*y for x in l1 for y in l2])'"
write a python program to print only digit or only apha charac in a given list,"'\nl=[""good"", ""oh!"", ""excellent!"", ""#450""]\nprint([n for n in l if n.isalpha() or n.isdigit()])'"
write a python program to print todays date,'\ntday=datetime.date.today()\nprint(tday)'
write a python program to check tuple are immutable,"'\na=(1,2,3)\ntry : \n\ta = a+1\nexcept Exception as e : \n\tprint(e)'"
write a python program to calculate factorial sum using list comprehensive,"'\nimport functools \nn =5\nprint(functools.reduce(lambda x, y :  x * y, range(1, n+1)))'"
write a python program to print len of each characters,"""\nwords = ['cat', 'window', 'defenestrate']\nfor w in words : \n\tprint(w, len(w))"""
write a python program to make increment on each call of method using lambda function,'\ndef make_incrementor(n) : \n\treturn lambda x :  x + n\nf = make_incrementor(42)\nf(0)\nprint(f(1))'
write a python program to sort using list comprehensive,"""\npairs = [(1, 'one'), (2, 'two'), (3, 'three'), (4, 'four')]\npairs.sort(key=lambda pair :  pair[1])\nprint(pairs)"""
write a python program to del the first element of the array/list,"'\na = [-1, 1, 66.25, 333, 333, 1234.5]\ndel a[0]\nprint(a)'"
write a python program to replace the first character of a given word,"'\nword = ""goal""\nword = ""f"" + word[1 : ]\nprint(word)'"
write a python program to find a string in a given phrase,"'\nphrase = ""the surprise is in here somewhere""\nprint(phrase.find(""surprise""))'"
write a python program to expalin the use of f-string,"'\nn = 3\nm = 4\nprint(f""{n} times {m} is {n*m}"")'"
write a python program to explain the use of assert,"""\nx=1\ny=8\nassert x>y, 'X too small'"""
write a python program to multiply three numbers,"""\nnum1 = 1.5\nnum2 = 6.3\nnum3 = -2.3\nproduct = num1 * num2 * num3\nprint(f'Product :  {product}')"""
"write a python function that when given two numbers, would divide the first number by second number and return the quotient and remainder","'\ndef divide_first_number_by_second(num1, num2) : \n\treturn (num1 // num2), (num1 % num2)'"
write a python function to return the largest and smallest numbers in the given list and return None if the list is empty,"'\ndef largest_and_smallest(list_of_nums) : \n\tif list_of_nums : \n\t\treturn max(list_of_nums), min(list_of_nums)\n\telse : \n\t\treturn'"
"write a recursive python function to print the nth fibonacci number, where n is provided as the argument",'\ndef fibonacci_recursive(n) : \n\tif n <= 1 : \n\t\treturn n\n\telse : \n\t\treturn (recur_fibo(n-1) + recur_fibo(n-2))'
write a python function that would read the given input file path and print its contents,"'\ndef read_and_print_file(filepath) : \n\twith open(filepath, ""r"") as infile : \n\t\tprint( infile.read() )'"
write a python program that would print the first n positive integers using a for loop,'\nn = 62\nfor num in range(n) : \n\tprint(num)'
write a python function that returns the input list sorted in ascending order,'\ndef sort_ascending(list_to_be_sorted) : \n\treturn sorted(list_to_be_sorted)'
write a python function that returns the input list sorted in descending order,"'\ndef sort_descending(list_to_be_sorted) : \n\treturn sorted(list_to_be_sorted, reverse=True)'"
"write a python function that would return the sum of first n natural numbers, where n is the input",'\ndef sum_first_n(n) : \n\treturn ( n * (n+1) ) // 2'
"write a recursive python function that would return the sum of first n natural numbers, where n is the input",'\ndef sum_first_n_recursive(n) : \n\tif n == 0 : \n\t\treturn 0\n\treturn sum_first_n_recursive(n-1) + n'
"write a python function that would filter a list of dictionaries where a specified key equals given value, list_of_dictionaries, key and value are inputs to this function.","'\ndef filter_with_key_value(list_of_dicts, key, value) : \n\treturn list( filter( lambda x :  x.get(key) == value, list_of_dicts ) )'"
write a recursive python function that takes either a list or tuple as input and reverses the order of its elements,'\ndef reverse(seq) : \n\tSeqType = type(seq)\n\temptySeq = SeqType()\n\tif seq == emptySeq : \n\t\treturn emptySeq\n\trestrev = reverse(seq[1 : ])\n\tfirst = seq[0 : 1]\n\tresult = restrev + first\n\treturn result'
write a python function that returns the square of a given input number,'\ndef square(x) : \n\treturn x**2'
write a python program that asks for user input and prints the given input,"'\na = input(""User Input"")\nprint(a)'"
write a python function shifts and scales all numbers in the given list by the given mean and standard deviation,"'\ndef shift_and_scale(list_of_nums, mean, std) : \n\treturn [ (x-mean) / std for x in list_of_nums ]'"
write a python function that takes in a list of sequences and zips each corresponding element from the list into a tuple and returns the list of such tuples,'\ndef zip_(list_of_seq) : \n\treturn list(zip(*list_of_seq))'
write python program that would merge two dictionaries by adding the second one into the first,"'\na = {""a"" :  1, ""b"" :  3}\nb = {""c"" :  1, ""d"" :  3}\na.update(b)'"
write a python function that would reverse the given string,'\ndef reverse_string(str_to_be_reversed) : \n\treturn str_to_be_reversed[ :  : -1]'
"write a python program that would print ""Hello World""","'\nprint(""Hello World"")'"
write a python program that would swap variable values,"'\na = 10\nb = 15\na, b = b, a'"
write a python program that iterates over a dictionary and prints its keys and values,"'\na = {""a"" : 1, ""b"" : 2, ""c"" : 3, ""d"" : 4}\nfor k, v in a.items() : \n\tprint(k, v)'"
write a python function that would print the ASCII value of a given character,'\ndef print_ascii(char) : \n\tprint(ord(char))'
write a python function that takes in two numbers and returns their HCF,"'\ndef hcf(num1, num2) : \n\tsmaller = num1 if num1 < num2 else num2\n\tfor i in range(1, smaller+1) : \n\t\tif (num1 % i == 0) and (num2 % i == 0) : \n\t\t\thcf = i\n\treturn hcf'"
write a python function that takes in two numbers and returns their LCM,"'\ndef lcm(num1, num2) : \n\tbigger = num1 if num1 > num2 else num2\n\twhile True : \n\t\tif (bigger % num1 == 0) and (bigger % num2 == 0) : \n\t\t\tbreak\n\t\tbigger += 1\n\treturn bigger'"
"write a recursive python function to calculate sum of natural numbers upto n, where n is an argument",'\ndef recursive_sum(n) : \n\tif n <= 1 : \n\t\treturn n\n\telse : \n\t\treturn n + recursive_sum(n-1)'
write a python function that deletes the last element of a list and returns the list and the deleted element,"'\ndef delete_last_element(list_to_be_processed) : \n\tdeleted_element = list_to_be_processed.pop()\n\treturn list_to_be_processed, deleted_element'"
write a python function that takes in a list and returns a list containing the squares of the elements of the input list,"'\ndef square_list_elements(list_to_be_squared) : \n\treturn list( map(lambda x :  x**2, list_to_be_squared) )'"
"write a python function that finds square roots of a given number, if the square root is an integer, else returns the message ""Error - the square root is not an integer""","'\ndef find_integer_square_roots(num) : \n\tfound = False\n\tfor k in range(1, (num//2)+1) : \n\t\tif ((k**2)==num) : \n\t\t\tfound = True\n\t\t\tbreak\n\tif not found : \n\t\treturn ""Error - the square root is not an integer""\n\treturn -k, k'"
write a python program that prints out natural numbers less than or equal to the given number using a while loop,'\ninput_num = 27\nwhile input_num : \n\tprint(input_num)\n\tinput_num -= 1'
"write a python function that takes two numbers. The function divides the first number by the second and returns the answer. The function returns None, if the second number is 0","'\ndef divide(num1, num2) : \n\tif num2 == 0 : \n\t\treturn\n\telse : \n\t\treturn num1 / num2'"
write a python program uses else with for loop,"'\nseq = ""abcde""\nfor k in seq : \n\tif k == ""f"" : \n\t\tbreak\nelse : \n\tprint(""f Not Found!"")'"
Write a function to return the mean of numbers in a list,'\ndef cal_mean(num_list : list)->float : \n\tif num_list : \n\t\treturn sum(num_list)/len(num_list)\n\telse : \n\t\treturn None'
Write a function to return the area of a equilateral triangle,'\ndef cal_eq_triangle_area(a : float)->float : \n\tif a : \n\t\treturn (3**(1/2))*(a**2)/4\n\telse : \n\t\treturn None'
Write a function to return the area of a right angle triangle,"'\ndef cal_rt_triangle_area(base : float,height : float)->float : \n\tif base and height : \n\t\treturn (base*height)/2\n\telse : \n\t\treturn None'"
Write a function to return the cartisian distance of a point from origin,"'\ndef cal_dist_from_orign(x : float,y : float)->float : \n\treturn (x**2+y**2)**(1/2)'"
Write a function to return the cartisian distance between two points,"'\ndef cal_cart_distance(x1 : float,y1 : float,x2 : float,y2 : float)->float : \n\treturn ((x1-x2)**2+(y1-y2)**2)**(1/2)'"
Write a function to return the type roots of a quadratic equation ax**2 + bx + c = 0,"""\ndef root_type(a : float,b : float,c : float) : \n\tif b**2-4*a*c >= 0 : \n\t\treturn 'real'\n\telse : \n\t\treturn 'imaginary'"""
Write a function to return the sum of the roots of a quadratic equation ax**2 + bx + c = 0,"'\ndef sum_of_roots(a : float,c : float) : \n\tif a : \n\t\treturn c/a\n\telse : \n\t\treturn None'"
Write a function to return the product of the roots of a quadratic equation ax**2 + bx + c = 0,"'\ndef prod_of_roots(a : float,b : float) : \n\tif a : \n\t\treturn -b/a\n\telse : \n\t\treturn None'"
Write a function to return the real of the roots of a quadratic equation else return None ax**2 + bx + c = 0,"'\ndef roots_of_qad_eq(a : float,b : float,c : float) : \n\td = b**2-4*a*c\n\tif d >= 0 : \n\t\treturn (-b+(d)**(1/2))/2*a,(-b-(d)**(1/2))/2*a\n\telse : \n\t\treturn None'"
Write a function to return the profit or loss based on cost price and selling price,"""\ndef find_profit_or_loss(cp,sp) : \n\tif cp > sp : \n\t\treturn 'loss', cp-sp\n\telif cp < sp : \n\t\treturn 'profit', sp-cp\n\telse : \n\t\treturn 'no profit or loss', 0"""
Write a function to return the area of a rectangle,"'\ndef cal_area_rect(length, breadth) : \n\treturn length*breadth'"
Write a function to return the area of a square,'\ndef cal_area_square(side) : \n\treturn side**2'
Write a function to return the area of a rhombus with diagonals q1 and q2,"'\ndef cal_area_rhombus(q1,q2) : \n\treturn (q1*q2)/2'"
Write a function to return the area of a trapezium with base a base b and height h between parallel sides,"'\ndef cal_area_trapezium(a,b,h) : \n\treturn h*(a+b)/2'"
Write a function to return the area of a circle of raidus r,'\ndef cal_area_circle(r) : \n\tpi = 3.14\n\treturn pi*r**2'
Write a function to return the circumference of a circle,'\ndef cal_circumference(r) : \n\tpi = 3.14\n\treturn 2*pi*r'
Write a function to return the perimeter of a rectangle,"'\ndef cal_perimeter_rect(length, bredth) : \n\treturn 2*(length+bredth)'"
Write a function to return the perimeter of a triangle,"'\ndef cal_perimeter_triangle(s1,s2,s3) : \n\treturn s1+s2+s3'"
Write a function to return the perimeter of a square,'\ndef cal_perimeter_square(side) : \n\treturn 4*side'
Write a function to return the perimeter of an equilateral triangle,'\ndef cal_perimeter_eq_triangle(a) : \n\treturn 3*a'
Write a function to return the perimeter of a isoscales triangle,"'\ndef cal_perimeter_iso_triangle(s1,s2) : \n\treturn 2*s1+s2'"
Write a function to return the area of an ellipse,"'\ndef cal_area_ellipse(minor, major) : \n\tpi = 3.14\n\treturn pi*(minor*major)'"
Write a function to return the lateral surface area of a cylinder,"'\ndef cal_cylinder_lat_surf_area(height,radius) : \n\tpi=3.14\n\treturn 2*pi*radius*height'"
Write a function to return the curved surface area of a cone,"'\ndef cal_cone_curved_surf_area(slant_height,radius) : \n\tpi=3.14\n\treturn pi*radius*slant_height'"
Write a function to return the total surface area of a cube of side a,'\ndef cal_surface_area_cube(a) : \n\treturn 6*(a**2)'
"Write a function to return the total surface area of a cuboid of length l, bredth b and height h","'\ndef cal_surface_area_cuboid(l,b,h) : \n\treturn 2*(l*b+b*h+h*l)'"
Write a function to return the surface area of a sphere,'\ndef cal_area_sphere(radius) : \n\tpi = 3.14\n\treturn 4*pi*(radius**2)'
Write a function to return the surface area of a hemi-sphere,'\ndef cal_area_hemisphere(radius) : \n\tpi = 3.14\n\treturn 2*pi*(radius**2)'
Write a function to return the total surface area of a cylinder,"'\ndef cal_cylinder_surf_area(height,radius) : \n\tpi=3.14\n\treturn 2*pi*radius**2*+2*pi*radius*height'"
Write a function to return the lateral surface area of a cone,"'\ndef cal_cone_lateral_surf_area(height,radius) : \n\tpi=3.14\n\treturn pi*radius*(((height**2)+(radius**2))**(1/2))'"
Write a function to return the volume of a cylinder,"'\ndef cal_cylinder_volume(height, radius) : \n\tpi=3.14\n\treturn pi*(radius**2)*height'"
Write a function to return the volume of a cone,"'\ndef cal_cone_volume(height,radius) : \n\tpi=3.14\n\treturn pi*(radius**2)*height/3'"
Write a function to return the volume of a hemi sphere,'\ndef cal_hemisphere_volume(radius : float)->float : \n\tpi=3.14\n\treturn (2/3)*pi*(radius**3)'
Write a function to return the volume of a sphere,'\ndef cal_sphere_volume(radius : float)->float : \n\tpi=3.14\n\treturn (4/3)*pi*(radius**3)'
Write a function to return the volume of a cuboid,"'\ndef cal_cuboid_volume(length : float, breadth : float, height : float)->float : \n\treturn length*breadth*height'"
Write a function to return the volume of a cube,'\ndef cal_cube_volume(side : float)->float : \n\treturn side**3'
Write a function to return the speed of moving object based of distance travelled in given time,"'\ndef cal_speed(distance : float,time : float)->float : \n\treturn distance/time'"
Write a function to return the distance covered by a moving object based on speend and given time,"'\ndef cal_distance(time : float,speed : float)->float : \n\treturn time*speed'"
Write a function to return the time taken by a given of moving object based of distance travelled in given time,"'\ndef cal_time(distance : float,speed : float)->float : \n\treturn distance/speed'"
Write a function to return the torque when a force f is applied at angle thea and distance for axis of rotation to place force applied is r,"'\ndef cal_torque(force : float,theta : float,r : float)->float : \n\timport math\n\treturn force*r*math.sin(theta)'"
Write a function to return the angualr veolcity based on augualr distance travelled in radian unit and time taken,"'\ndef cal_angular_velocity(angular_dist : float,time : float)->float : \n\treturn angular_dist/time'"
Write a function to calculate the focal length of a lense buy the distance of object and distance of image from lense,"'\ndef cal_focal_length_of_lense(u : float,v : float)->float : \n\treturn (u*v)/(u+v)'"
Write a function to calculate the gravitational force between two objects of mass m1 and m2 and distance of r between them,"'\ndef cal_gforce(mass1 : float,mass2 : float, distance : float)->float : \n\tg = 6.674*(10)**(-11)\n\treturn (g*mass1*mass2)/(distance**2)'"
Write a function to calculate the current in the curcit where the resistance is R and voltage is V,"'\ndef cal_current(resistance : float, voltage : float)->float : \n\treturn voltage/resistance'"
Write a function to calculate the total capacitance of capacitors in parallel in a given list,'\ndef cal_total_cap_in_parallel(cap_list : list)->float : \n\treturn sum(cap_list)'
Write a function to calculate the total resistance of resistances in parallel in a given list,'\ndef cal_total_res_in_parallel(res_list : list)->float : \n\treturn sum([1/r for r in res_list])'
Write a function to calculate the total resistance of resistances in series in a given list,'\ndef cal_total_res_in_series(res_list : list)->float : \n\treturn sum(res_list)'
Write a function to calculate the moment of inertia of a ring of mass M and radius R,"'\ndef cal_mi_ring(mass : float,radius : float)->float : \n\treturn mass*(radius**2)'"
Write a function to calculate the moment of inertia of a sphere of mass M and radius R,"'\ndef cal_mi_sphere(mass : float,radius : float)->float : \n\treturn (7/5)*mass*(radius**2)'"
"Write a function to calculate the pressure P of ideal gas based on ideal gas equation - Volume V, and Temperatue T are given","'\ndef find_pressure_of_ideal_gas(volume : float, temp : float,n : float)->float : \n\tr = 8.3145 # gas constant R\n\treturn (n*r*temp)/volume'"
Write a function to calculate the volume V of ideal gas based on ideal gas equation Pressure P and Tempreature T given,"'\ndef find_volume_of_ideal_gas(pressure : float, temp : float,n : float)->float : \n\tr = 8.3145 # gas constant R\n\treturn (n*r*temp)/pressure'"
Write a function to calculate the Temprature T of ideal gas based on ideal gas equation Pressure P and Volume V given,"'\ndef find_temp_of_ideal_gas(pressure : float, volume : float,n : float)->float : \n\tr = 8.3145 # gas constant R\n\treturn (pressure*volume)/n*r'"
"Write a function to calculate the velocity of an object with initial velocity u, time t and acceleration a","'\ndef cal_final_velocity(initial_velocity : float,accelration : float,time : float)->float : \n\treturn initial_velocity + accelration*time'"
"Write a function to calculate the displacement of an object with initial velocity u, time t and acceleration a","'\ndef cal_displacement(initial_velocity : float,accelration : float,time : float)->float : \n\treturn initial_velocity*time + .5*accelration*(time)**2'"
Write a function to calculate amount of radioactive element left based on initial amount and half life,"'\ndef cal_half_life(initail_quatity : float, time_elapsed : float, half_life : float)->float : \n\treturn initail_quatity*((1/2)**(time_elapsed/half_life))'"
Write a function to calculate the new selling price based on discount percentage,"'\ndef cal_sp_after_discount(sp : float,discount : float)->float : \n\treturn sp*(1 - discount/100)'"
"Write a function to calculate the simple interest for principal p, rate r and time in years y","'\ndef get_si(p : float, r : float, t : float)->float : \n\treturn (p*r*t)/100'"
"Write a function to calculate the compound interest for principal p, rate r and time in years y","'\ndef get_ci(p : float, r : float, t : float, n : float)->float : \n\treturn round(p*((1+(r/(n*100)))**(n*t)) - p,2)'"
Write a function to calculate the energy released by converting mass m in kg to energy,'\ndef cal_energy_by_mass(mass : float)->float : \n\tc = 300000\n\treturn mass * (c**2)'
Write a function to calculate the kinetic energy of an object of mass m and velocity v,"'\ndef cal_ke(mass : float,velocity : float)->float : \n\treturn (mass*(velocity)**2)/2'"
Write a function to calculate the potential energy of an object of mass m at height h,"'\ndef cal_pe(mass : float,height : float)->float : \n\tg = 9.8\n\treturn (mass*g*height)'"
Write a function to calculate the electrostatic force between two charged particles with charge q1 and q2 at a distance d apart,"'\ndef cal_electrostatic_force(q1,q2,d) : \n\tk = 9*(10**9)\n\treturn (k*q1*q2)/(d**2)'"
Write a function to calculate the density given mass and volume,"'\ndef cal_density(mass,volume) : \n\treturn (mass/volume)'"
Write a function to convert the temprature celsius 'c' to fahrenheit 'f' or fahrenheit to celsius,"""\n\tdef\ttemp_converter(temp,temp_given_in\t=\t'f') : """
Return the converted temprature,"""\n\tif temp_given_in.lower() == 'f' :  # Convert to C\n\t\treturn (temp - 32) * (5/9)\n\telse :  # Convert to F\n\t\treturn (temp * 9/5) + 32"""
Python code to Get Kth Column of Matrix,"'\ndef kth_column(test_list=[[4, 5, 6], [8, 1, 10], [7, 12, 5]],k=2) : \n\tprint(""The original list is  :  "" + str(test_list))\n\tK =k\n\tres = list(zip(*test_list)[K])\n\tprint(""The Kth column of matrix is  :  "" + str(res))'"
Python Program to find sum of nested list using Recursion,"'\ntotal = 0\ndef sum_nestedlist(l) : \n\tglobal total\n\tfor j in range(len(l)) : \n\t\tif type(l[j]) == list : \n\t\t\tsum_nestedlist(l[j])\n\t\telse : \n\t\t\ttotal += l[j]\nsum_nestedlist([[1, 2, 3], [4, [5, 6]], 7])\nprint(total)'"
python program to find power of number using recursion,"'\ndef power(N, P) : \n\tif (P == 0 or P == 1) : \n\t\treturn N\n\telse : \n\t\treturn (N * power(N, P - 1))\nprint(power(5, 2))'"
Python 3 program to find time for a given angle.,"'\ndef calcAngle(hh, mm) : \n\thour_angle = 0.5 * (hh * 60 + mm)\n\tminute_angle = 6 * mm\n\tangle = abs(hour_angle - minute_angle)\n\tangle = min(360 - angle, angle)\n\treturn angle'"
write a python function to count number of times a function is called,"'\ndef counter(fn) : \n\tcount = 0\n\tdef inner(*args, **kwargs) : \n\t\tnonlocal count\n\t\tcount += 1\n\t\tprint(f\'Function {fn.__name__} was called {count} times.\')\n\t\treturn fn(*""args, **kwargs)    \n\treturn inner'"
write a python function to remove duplicate items from the list,'\ndef remove_duplicatesinlist(lst) : \n\treturn len(lst) == len(set(lst))'
write a python function to convert list of strings to list of integers,"'\ndef stringlist_to_intlist(sList) :  \n\treturn(list(map(int, sList)))'"
write a python function to map multiple lists using zip,'\ndef map_values(*args) : \n\treturn set(zip(*args))'
write a generator function in python to generate infinite square of numbers using yield,'\ndef nextSquare() :  \n\ti = 1;  '
An Infinite loop to generate squares,'\n\twhile True :  \n\t\tyield i*i\t\t\t\t \n\t\ti += 1'
write a python generator function for generating Fibonacci Numbers,"'\ndef fib(limit) :  \n\t# Initialize first two Fibonacci Numbers  \n\ta, b = 0, 1  \n\t# One by one yield next Fibonacci Number \n\twhile a < limit :  \n\t\tyield a \n\t\ta, b = b, a + b'"
write a python program which takes user input tuple and prints length of each tuple element,"'\nuserInput = input(""Enter a tuple : "")\nx = map(lambda x : len(x), tuple(x.strip() for x in userInput.split(\',\')))\nprint(list(x))'"
write a python function using list comprehension to find even numbers in a list,'\ndef find_evennumbers(input_list) : \n\tlist_using_comp = [var for var in input_list if var % 2 == 0] \n\treturn list_using_comp'
write a python function to return dictionary of two lists using zip,"'\ndef dict_using_comp(list1, list2) : \n\tdict_using_comp = {key : value for (key, value) in zip(list1, list2)} \n\treturn dict_using_comp'"
write a python program to find the biggest character in a string,"'\nbigChar = lambda word :  reduce(lambda x,y :  x if ord(x) > ord(y) else y, word)'"
write a python function to sort list using heapq,"'\ndef heapsort(iterable) : \n\tfrom heapq import heappush, heappop\n\th = []\n\tfor value in iterable : \n\t\theappush(h, value)\n\treturn [heappop(h) for i in range(len(h))]'"
write a python function to return first n items of the iterable as a list,"'\ndef take(n, iterable) :     \n\timport itertools\n\treturn list(itertools.islice(iterable, n))'"
write a python function to prepend a single value in front of an iterator,"'\ndef prepend(value, iterator) :     \n\timport itertools\n\treturn itertools.chain([value], iterator)'"
write a python function to return an iterator over the last n items,"'\ndef tail(n, iterable) :     \n\tfrom collections import deque\n\treturn iter(deque(iterable, maxlen=n))'"
write a python function to advance the iterator n-steps ahead,"'\ndef consume(iterator, n=None) : \n\timport itertools\n\tfrom collections import deque\n\t""Advance the iterator n-steps ahead. If n is None, consume entirely.""'"
Use functions that consume iterators at C speed.,"'\n\tif n is None : \n\t\t# feed the entire iterator into a zero-length deque\n\t\tdeque(iterator, maxlen=0)\n\telse : \n\t\t# advance to the empty slice starting at position n\n\t\tnext(itertools.islice(iterator, n, n), None)'"
write a python function to return nth item or a default value,"'\ndef nth(iterable, n, default=None) : \n\tfrom itertools import islice\n\treturn next(islice(iterable, n, None), default)'"
write a python function to check whether all elements are equal to each other,"'\ndef all_equal(iterable) : \n\tfrom itertools import groupby\n\tg = groupby(iterable)\n\treturn next(g, True) and not next(g, False)'"
write a python function to count how many times the predicate is true,"'\ndef quantify(iterable, pred=bool) : \n\treturn sum(map(pred, iterable))'"
write a python function to return the sequence elements n times,"'\ndef ncycles(iterable, n) : \n\tfrom itertools import chain, repeat\n\treturn chain.from_iterable(repeat(tuple(iterable), n))'"
write a python function to return the dot product of two vectors,"'\ndef dotproduct(vec1, vec2) : \n\treturn sum(map(operator.mul, vec1, vec2))'"
write a python function to flatten one level of nesting,'\ndef flatten(list_of_lists) : \n\tfrom itertools import chain\n\treturn chain.from_iterable(list_of_lists)'
write a python function to repeat calls to function with specified arguments,"'\ndef repeatfunc(func, times=None, *args) : \n\tfrom itertools import starmap, repeat\n\tif times is None : \n\t\treturn starmap(func, repeat(args))\n\treturn starmap(func, repeat(args, times))'"
write a python function to convert iterable to pairwise iterable,"'\ndef pairwise(iterable) : \n\tfrom itertools import tee\n\ta, b = tee(iterable)\n\tnext(b, None)\n\treturn zip(a, b)'"
write a python function to collect data into fixed-length chunks or blocks,"'\ndef grouper(iterable, n, fillvalue=None) : \n\tfrom itertools import zip_longest\n\t# grouper(\'ABCDEFG\', 3, \'x\') --> ABC DEF Gxx""\n\targs = [iter(iterable)] * n\n\treturn zip_longest(*args, fillvalue=fillvalue)'"
write a python function to use a predicate and return entries particition into false entries and true entries,"'\ndef partition(pred, iterable) : \n\tfrom itertools import filterfalse, tee\n\t# partition(is_odd, range(10)) --> 0 2 4 6 8   and  1 3 5 7 9\n\tt1, t2 = tee(iterable)\n\treturn filterfalse(pred, t1), filter(pred, t2)'"
"write a python function to return random selection from itertools.product(*args, **kwds)","'\ndef random_product(*args, repeat=1) : \n\timport random\n\tpools = [tuple(pool) for pool in args] * repeat\n\treturn tuple(map(random.choice, pools))'"
"write a python function to return random selection from itertools.permutations(iterable, r)","'\ndef random_permutation(iterable, r=None) : \n\timport random\n\tpool = tuple(iterable)\n\tr = len(pool) if r is None else r\n\treturn tuple(random.sample(pool, r))'"
"write a python function to random select from itertools.combinations(iterable, r)","'\ndef random_combination(iterable, r) : \n\timport random\n\tpool = tuple(iterable)\n\tn = len(pool)\n\tindices = sorted(random.sample(range(n), r))\n\treturn tuple(pool[i] for i in indices)'"
"write a python function to perform random selection from itertools.combinations_with_replacement(iterable, r)","'\ndef random_combination_with_replacement(iterable, r) : \n\timport random\n\tpool = tuple(iterable)\n\tn = len(pool)\n\tindices = sorted(random.choices(range(n), k=r))\n\treturn tuple(pool[i] for i in indices)'"
write a python function to locate the leftmost value exactly equal to x,"'\ndef index(a, x) : \n\tfrom bisect import bisect_left\t\n\ti = bisect_left(a, x)\n\tif i != len(a) and a[i] == x : \n\t\treturn i\n\traise ValueError'"
write a python function to locate the rightmost value less than x,"'\ndef find_lt(a, x) : \n\tfrom bisect import bisect_left  \n\ti = bisect_left(a, x)\n\tif i : \n\t\treturn a[i-1]\n\traise ValueError'"
write a python function to find rightmost value less than or equal to x,"'\ndef find_le(a, x) : \n\tfrom bisect import bisect_right  \n\ti = bisect_right(a, x)\n\tif i : \n\t\treturn a[i-1]\n\traise ValueError'"
write a python function to find leftmost value greater than x,"'\ndef find_gt(a, x) : \n\tfrom bisect import bisect_right \n\ti = bisect_right(a, x)\n\tif i != len(a) : \n\t\treturn a[i]\n\traise ValueError'"
write a python function to find leftmost item greater than or equal to x,"'\ndef find_ge(a, x) : \n\tfrom bisect import bisect_left \n\ti = bisect_left(a, x)\n\tif i != len(a) : \n\t\treturn a[i]\n\traise ValueError'"
write a python function to map a numeric lookup using bisect,"""\ndef grade(score, breakpoints=[60, 70, 80, 90], grades='FDCBA') : \n\tfrom bisect import bisect\n\ti = bisect(breakpoints, score)\n\treturn grades[i]"""
write a regex pattern in python to print all adverbs and their positions in user input text,"'\nimport re\ntext = input(""Enter a string :  "")\nfor m in re.finditer(r""\\w+ly"", text) : \n\tprint(\'%02d-%02d :  %s\' % (m.start(), m.end(), m.group(0)))'"
write a python function to read a CSV file and print its content,"""\ndef read_csv(filename) : \n\timport csv\n\twith open(filename, newline='') as f : \n\t\treader = csv.reader(f)\n\t\tfor row in reader : \n\t\t\tprint(row)"""
write a python snippet to convert list into indexed tuple,"'\ntest_list = [4, 5, 8, 9, 10] \nlist(zip(range(len(test_list)), test_list))'"
write a python function to split word into chars,'\ndef split(word) :  \n\treturn [char for char in word]'
write a python function to pickle data to a file,"""\ndef pickle_data(data, pickle_file) : \n\timport pickle\n\twith open(pickle_file, 'wb') as f : \n\t\t pickle.dump(data, f, pickle.HIGHEST_PROTOCOL)\n\treturn None"""
write a python function to load pickle data from a file,"""\ndef load_pickle_data(pickle_file) : \n\timport pickle\n\twith open(pickle_file, 'rb') as f : \n\t\t data = pickle.load(f)\n\treturn data"""
Write a function that adds 2 iterables a and b such that a is even and b is odd,"'\ndef add_even_odd_list(l1 : list,l2 : list)-> list : \n\treturn [a+b for a,b in zip(l1,l2) if a%2==0 and b%2!=0]'"
Write a function that strips every vowel from a string provided,"""\ndef strip_vowels(input_str : str)->str : \n\tvowels = ['a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U' ]\n\treturn ''.join(list(filter(lambda x :  x not in vowels, input_str)))"""
write a function that acts like a ReLU function for a 1D array,'\ndef relu_list(input_list : list)->list : \n\treturn [(lambda x :  x if x >= 0 else 0)(x) for x in input_list]'
Write a function that generates Factorial of number,'\ndef factorial(n) : \n\tif n == 0 or n ==1 : \n\t\treturn 1\n\telse : \n\t\treturn n*factorial(n-1)'
Write a function that returns length of the list,'\ndef list_length(l) : \n\treturn len(l)'
Write a function that sorts list of numbers and returns top element,'\ndef biggest_no(l : list)->int : \n\tsorted(l)'
Write a function to print a string by repeating it n times,"'\ndef print_repeatnstring(text : str, n : int)-> str : \n\treturn text*n'"
Write a function to merge two lists element wise,"'\ndef merge_lists(l1 : list, l2 : list) : \n\treturn list(zip(l1,l2))'"
Write a function to merge two lists element wise,"'\ndef merge_lists(l1 : list, l2 : list) : \n\treturn list(zip(l1,l2))'"
Write a function to append two lists,"'\ndef append_lists(l1 : list, l2 : list)->list : \n\treturn l1.extend(l2)'"
Write a function to return reverse of a list,'\ndef reverse_list(l1 : list)->list : \n\treturn l1[ :  : -1]'
Write a function to adds two lists element wise,"'\ndef adds_listelements(l1 : list, l2 : list) : \n\treturn [i+j for i, j in zip(l1,l2)]'"
Write a function to Subtracts two lists element wise,"'\ndef sub_listelements(l1 : list, l2 : list) : \n\treturn [i-j for i, j in zip(l1,l2)]'"
Write a function to adds two lists element wise only if numbers are even,"'\ndef adds_listevenelements(l1 : list, l2 : list) : \n\treturn [i+j for i, j in zip(l1,l2) if i*j%2 == 0]'"
Write a function to multiplies two lists element wise only if numbers are odd,"'\ndef adds_listoddelements(l1 : list, l2 : list) : \n\treturn [i*j for i, j in zip(l1,l2) if i*j%2 == 1]'"
Write a function that returns list of elements with n power to elements of list,"'\ndef n_power(l1 : list, power : int)->list : \n\treturn [i**power for i in l1]'"
Write a function that generates fibbonacci series,'\ndef Fibonacci(n : int)-> int : \n\tif n==1 : \n\t\tfibonacci = 0\n\telif n==2 : \n\t\tfibonacci = 1\n\telse : \n\t\tfibonacci = Fibonacci(n-1) + Fibonacci(n-2)\n\treturn fibonacci'
Write a function that returns sine value of the input,'\ndef sin(x : float) -> float : \n\timport math\n\treturn math.sin(x)'
Write a function that returns derivative of sine value of the input,'\ndef derivative_sin(x : float)-> float : \n\timport math\n\treturn math.cos(x)'
Write a function that returns tan value of the input,'\ndef tan(x : float) -> float : \n\timport math\n\treturn math.tan(x)'
Write a function that returns derivative of tan value of the input,'\ndef derivative_tan(x : float)-> float : \n\timport math\n\treturn (1/math.cos(x))**2'
Write a function that returns cosine value of the input,'\ndef cos(x : float) -> float : \n\timport math\n\treturn math.cos(x)'
Write a function that returns cosine value of the input,'\ndef derivative_cos(x : float)-> float : \n\timport math\n\treturn -(math.sin(x))'
Write a function that returns the exponential value of the input,'\ndef exp(x) -> float : \n\timport math\n\treturn math.exp(x)'
Write a function that returns Gets the derivative of exponential of x,'\ndef derivative_exp(x : float) -> float : \n\timport math\n\treturn math.exp(x)'
Write a function that returns log of a function,'\ndef log(x : float)->float : \n\timport math\n\treturn math.log(x)'
Write a function that returns derivative of log of a function,'\ndef derivative_log(x : float)->float : \n\treturn (1/x)'
Write a function that returns relu value of the input,'\ndef relu(x : float) -> float : \n\tx = 0 if x < 0 else x\n\treturn x'
Write a function that returns derivative derivative relu value of the input,'\ndef derivative_relu(x : float) -> float : \n\tx = 1 if x > 0 else 0\n\treturn x'
Write a function that returns runs a garbage collector,'\ndef clear_memory() : \n\timport gc\n\tgc.collect()'
Write a function to identify if value is present inside a dictionary or not,"'\ndef check_value(d : dict, value)->bool : \n\treturn any(v == value for v in dict.values())'"
Write a function to identify to count no of instances of a value  inside a dictionary,"'\ndef count_value(d : dict, value)->bool : \n\treturn list(v == value for v in dict.values()).count(True)'"
Write a function to identify if value is present inside a list or not,"'\ndef check_listvalue(l : list, value)->bool : \n\treturn value in l'"
Write a function to identify if value is present inside a tuple or not,"'\ndef check_tuplevalue(l : tuple, value)->bool : \n\treturn value in l'"
Write a function that returns lowercase string,'\ndef str_lowercase(s : str) : \n\treturn s.lower()'
Write a function that returns uppercase string,'\ndef str_uppercase(s : str) : \n\treturn s.upper()'
Write a function that removes all special characters,"""\ndef clean_str(s) : \n\timport re\n\treturn re.sub('[^A-Za-z0-9]+', '', s)"""
Write a function that returns a list sorted ascending,"'\ndef ascending_sort(l : list) : \n\tsorted(l, reverse=False)'"
Write a function that returns a list sorted descending,"'\ndef descending_sort(l : list) : \n\tsorted(l, reverse=True)'"
Write a function that returns a dictionary sorted descending by its values,"'\ndef descending_dict_valuesort(d : dict) : \n\treturn {key :  val for key, val in sorted(d.items(), reverse=True, key = lambda ele :  ele[1])}'"
Write a function that returns a dictionary sorted ascending by its values,"'\ndef ascending_dict_valuesort(d : dict) : \n\treturn {key :  val for key, val in sorted(d.items(), key = lambda ele :  ele[1])}'"
Write a function that returns a dictionary sorted descending by its keys,"'\ndef descending_dict_keysort(d : dict) : \n\treturn {key :  val for key, val in sorted(d.items(), reverse=True, key = lambda ele :  ele[0])}'"
Write a function that returns a dictionary sorted ascending by its keys,"'\ndef ascending_dict_keysort(d : dict) : \n\treturn {key :  val for key, val in sorted(d.items(), key = lambda ele :  ele[0])}'"
Write a function that returns a replace values in string with values provided,"'\ndef replace_values(s : str, old, new)->str : \n\ts.replace(old, new)'"
Write a function that joins elements of list,"""\ndef join_elements(l : list)-> str : \n\treturn (''.join(str(l)))"""
Write a function that splits the elements of string,"'\ndef split_elements(s : str, seperator)-> list : \n\treturn s.split(seperator)'"
Write a function that returns sum of all elements in the list,'\ndef sum_elements(l : list) : \n\treturn sum(l)'
Write a function that returns sum of all odd elements in the list,'\ndef sum_even_elements(l : list) : \n\treturn sum([i for i in l if i%2==0])'
Write a function that returns sum of all odd elements in the list,'\ndef sum_odd_elements(l : list) : \n\treturn sum([i for i in l if i%2==1])'
1 write a program to reverse a list,"'\nlst = [11, 5, 17, 18, 23]\ndef reverse(lst) :  \n\tnew_lst = lst[ :  : -1] \n\treturn new_lst'"
2 write a program to find sum of elements in list,"'\nlist1 = [11, 5, 17, 18, 23]\ntotal = sum(list1)\nprint(""Sum of all elements in given list :  "", total)'"
3 write a program to find the largest number in a list,"'\nlist1 = [10, 20, 4, 45, 99] \nlist1.sort() \nprint(""Largest element is : "", list1[-1]) '"
4 write a program to print Even Numbers in a List,"'\nlist1 = [10, 21, 4, 45, 66, 93] \nfor num in list1 :  \n\tif num % 2 == 0 :  \n\t\tprint(num, end = "" "") '"
5 write a program to print negative Numbers in given range,"'\nstart, end = -4, 19\nfor num in range(start, end + 1) :  \n\tif num < 0 :  \n\t\tprint(num, end = "" "") '"
6 write a program to remove empty List from List using list comprehension,"'\ntest_list = [5, 6, [], 3, [], [], 9] \nprint(""The original list is  :  "" + str(test_list)) \nres = [ele for ele in test_list if ele != []] \nprint (""List after empty list removal  :  "" + str(res)) '"
7 write a  program to remove empty tuples from a list of tuples,"""\ndef Remove(tuples) :  \n\ttuples = filter(None, tuples) \n\treturn tuples \n# Driver Code \ntuples = [(), ('ram','15','8'), (), ('laxman', 'sita'),  \n\t\t\t('krishna', 'akbar', '45'), ('',''),()] \nprint Remove(tuples)"""
8 write a program to break a list into chunks of size N,"'\nl = [1, 2, 3, 4, 5, 6, 7, 8, 9]  \nn = 4 \nx = [l[i : i + n] for i in range(0, len(l), n)]  \nprint(x)'"
9 write a program to find the frequency of words present in a string,"'\ntest_str = \'times of india times new india express\'\nprint(""The original string is  :  "" + str(test_str)) \nres = {key :  test_str.count(key) for key in test_str.split()} \nprint(""The words frequency  :  "" + str(res))'"
10 write a program to accept a string if it contains all vowels,"'\ndef check(string) :  \n\tif len(set(string).intersection(""AEIOUaeiou""))>=5 :  \n\treturn (\'accepted\') \n\telse :  \n\treturn (""not accepted"") \nif __name__==""__main__"" :  \n\tstring=""helloworld""\n\tprint(check(string)) '"
write a program to remove the duplicate words,"'\ns = ""Hello world Hello""\nl = s.split() \nk = [] \nfor i in l :  \n\tif (s.count(i)>1 and (i not in k)or s.count(i)==1) :  \n\t\tk.append(i) \nprint(\' \'.join(k)) '"
13 write a program to convert into dictionary,"'\ndef Convert(tup, di) :  \n\tfor a, b in tup :  \n\t\tdi.setdefault(a, []).append(b) \n\treturn di \ntups = [(""A"", 10), (""B"", 20), (""C"", 30),  \n\t\t(""D"", 40), (""E"", 50), (""F"", 60)] \ndictionary = {} \nprint (Convert(tups, dictionary)) '"
15 write a program to Remove Tuples of Length K Using list comprehension,"'\ntest_list = [(4, 5), (4, ), (8, 6, 7), (1, ), (3, 4, 6, 7)] \nprint(""The original list  :  "" + str(test_list)) \nK = 1\nres = [ele for ele in test_list if len(ele) != K] \nprint(""Filtered list  :  "" + str(res)) '"
16 write a program to find Maximum and Minimum K elements in Tuple,"'\ntest_tup = (5, 20, 3, 7, 6, 8) \nprint(""The original tuple is  :  "" + str(test_tup)) \nK = 2\ntest_tup = list(test_tup) \ntemp = sorted(test_tup) \nres = tuple(temp[ : K] + temp[-K : ]) \nprint(""The extracted values  :  "" + str(res))  '"
17 write a program to get current date and time,"'\nimport datetime  \ncurrent_time = datetime.datetime.now()  \nprint (""Time now at greenwich meridian is  :  "" , end = """")  \nprint (current_time)'"
19 write a program to find the difference between two times,"""\nfrom datetime import datetime\ns1 = '10 : 33 : 26'\ns2 = '11 : 15 : 49' # for example\nFMT = '%H : %M : %S'\ntdelta = datetime.strptime(s2, FMT) - datetime.strptime(s1, FMT)\nprint(tdelta)"""
function to obtain the time in minutes form,"'\ndef difference(h1, m1, h2, m2) :  '"
convert h1 : m1 into minutes,'\n\tt1 = h1 * 60 + m1 '
the need by converting them to string,"'\nprint(""Yesterday = "", yesterday.strftime(\'%d-%m-%Y\')) \nprint(""Today = "", presentday.strftime(\'%d-%m-%Y\')) \nprint(""Tomorrow = "", tomorrow.strftime(\'%d-%m-%Y\')) '"
22 write a program to merge dict using update() method,"""\ndef Merge(dict1, dict2) : \n\treturn(dict2.update(dict1))\n# Driver code\ndict1 = {'a' :  10, 'b' :  8}\ndict2 = {'d' :  6, 'c' :  4}\nprint(Merge(dict1, dict2))\nprint(dict2)"""
23 write a program to print even length words in a string,"'\ndef printWords(s) :  \n\ts = s.split(\' \')  \n\tfor word in s :   \n\t\tif len(word)%2==0 :  \n\t\t\tprint(word)  \n# Driver Code  \ns = ""hello world"" \nprintWords(s)'"
calling run function,'\n\trun(string) '
28 write a program to check whether a given string is Heterogram or not,"""\ndef heterogram(input) :  \n\t\talphabets = [ ch for ch in input if ( ord(ch) >= ord('a') and ord(ch) <= ord('z') )] \n\t\tif len(set(alphabets))==len(alphabets) :  \n\t\t\tprint ('Yes') \n\t\telse :  \n\t\t\tprint ('No') """
Driver program,"'\nif __name__ == ""__main__"" :  \n\tinput = \'Hello World\'\n\theterogram(input) '"
30 write a program to check whether the string is a palindrome or not,"'\ndef isPalindrome(s) : \n\treturn s == s[ :  : -1]\ns = ""malayalam""\nans = isPalindrome(s)\nif ans : \n\tprint(""Yes"")\nelse : \n\tprint(""No"")'"
33 write a program to reverse words of string,"'\ndef rev_sentence(sentence) :   \n\twords = sentence.split(\' \')  \n\treverse_sentence = \' \'.join(reversed(words))  \n\treturn reverse_sentence  \nif __name__ == ""__main__"" :   \n\tinput = \'have a good day\'\n\tprint (rev_sentence(input)) '"
36 write a program insert character after every character pair    initializing string,"'\ntest_str = ""HellowWorld""\nprint(""The original string is  :  "" + test_str) \nres = \', \'.join(test_str[i : i + 2] for i in range(0, len(test_str), 2)) \nprint(""The string after inserting comma after every character pair  :  "" + res) '"
42 write a program to swap two variables,"""\nx = input('Enter value of x :  ')  \ny = input('Enter value of y :  ')  \ntemp = x  \nx = y  \ny = temp  \nprint('The value of x after swapping :  {}'.format(x))  \nprint('The value of y after swapping :  {}'.format(y)) """
43 write a program to convert kilometers to miles,"""\nkilometers = float(input('How many kilometers? :  '))  \nconv_fac = 0.621371  \nmiles = kilometers * conv_fac  \nprint('%0.3f kilometers is equal to %0.3f miles' %(kilometers,miles))  """
44 write a program to convert Celsius to Fahrenheit,"""\ncelsius = float(input('Enter temperature in Celsius :  '))  \nfahrenheit = (celsius * 1.8) + 32  \nprint('%0.1f  Celsius is equal to %0.1f degree Fahrenheit'%(celsius,fahrenheit))  """
45 write a program to display the calender,"'\nimport calendar  \nyy = int(input(""Enter year :  ""))  \nmm = int(input(""Enter month :  ""))  \nprint(calendar.month(yy,mm))  '"
50 write a program to display the multiplication table of a number,"'\nnum = int(input(""Show the multiplication table of? ""))  \n# using for loop to iterate multiplication 10 times   \nfor i in range(1,11) :   \n\tprint(num,\'x\',i,\'=\',num*i)  '"
"57 write a  program to convert decimal to binary, octal and hexadecimal","'\ndec = int(input(""Enter a decimal number :  ""))  \nprint(bin(dec),""in binary."")  \nprint(oct(dec),""in octal."")  \nprint(hex(dec),""in hexadecimal.""  '"
58 python program to find ascii value of a character,"'\nc = input(""Enter a character :  "")  \nprint(""The ASCII value of \'"" + c + ""\' is"",ord(c))'"
60 write a  program to sort words in alphabetic order,"'\nmy_str = input(""Enter a string :  "")  \n# breakdown the string into a list of words  \nwords = my_str.split()  \n# sort the list  \nwords.sort()  \n# display the sorted words  \nfor word in words :   \n\tprint(word)  '"
61 write a program to print the elements of an array present on even position,"'\narr = [1, 2, 3, 4, 5];     \nprint(""Elements of given array present on even position :  "");    \nfor i in range(1, len(arr), 2) :     \n\tprint(arr[i]);   '"
66 write a program to transpose a matrix using a nested loop,"'\nX = [[12,7],\n\t[4 ,5],\n\t[3 ,8]]\nresult = [[0,0,0],\n\t\t\t[0,0,0]]\n# iterate through rows\nfor i in range(len(X)) : \n\t# iterate through columns\n\tfor j in range(len(X[0])) : \n\t\tresult[j][i] = X[i][j]\nfor r in result : \n\tprint(r)  '"
68 write a program to remove punctuation from a string,"'\npunctuations = \'\'\'!()-[]{}; : \'""\\,<>./?@#$%^&*_~\'\'\'\nmy_str = ""Hello!!!, he said ---and went.""\nno_punct = """"\nfor char in my_str : \n\tif char not in punctuations : \n\t\tno_punct = no_punct + char\nprint(no_punct)'"
69 write a program to shuffle a deck of card,"'\nimport itertools, random\ndeck = list(itertools.product(range(1,14),[\'Spade\',\'Heart\',\'Diamond\',\'Club\']))\nrandom.shuffle(deck)\nprint(""You got : "")\nfor i in range(5) : \n\tprint(deck[i][0], ""of"", deck[i][1])'"
70 write a program to display the powers of 2 using anonymous function,"'\nterms = 10\nresult = list(map(lambda x :  2 ** x, range(terms)))\nprint(""The total terms are : "",terms)\nfor i in range(terms) : \n\tprint(""2 raised to power"",i,""is"",result[i])'"
71 write a program to add 2 binary numbers,"""\nnum1 = '00001'\nnum2 = '10001'\nsum = bin(int(num1,2) + int(num2,2))\nprint(sum)"""
73 write a program to print a pattern of stars (*),"'\nfor row in range (0,5) : \n\tfor column in range (0, row+1) : \n\t\tprint (""*"", end="""")\n\t# ending row\n\tprint(\'\\r\')'"
74 write a program to return the absolute value in Python,'\ndef get_absolute_value(n) : \n\tif n >= 0 : \n\t\treturn n\n\telse : \n\t\treturn -n\nprint(get_absolute_value(101))'
75 write a program to find the power of a number,"'\na = 10\nb = 3\nresult = a**b\nprint (a, "" to the power of "", b, "" is = "", result)'"
76 write a program to print the binary value of the numbers from 1 to N,"'\nn = int(input(""Enter the value of N :  ""))\nfor i in range(1, n+1) : \n\tprint(""Binary value of "", i, "" is :  "", bin(i))'"
77 write a program to find number of bits necessary to represent an integer in binary,"'\nnum = int(input(""Enter an integer number :  ""))\nbits = num.bit_length()\nprint(""bits required to store "", num, "" = "", bits)\nprint(""binary value of "", num, "" is = "", bin(num))'"
78 write a program to find the difference between 2 lists,"'\nlist1 = [10, 20, 30, 40, 50]\nlist2 = [10, 20, 30, 60, 70]\nprint ""list1 : "", list1\nprint ""list2 : "", list2\nprint ""Difference elements : ""\nprint (list (set(list1) - set (list2)))'"
79 write a program to add an element at specified index in a list,"'\nlist = [10, 20, 30]\nprint (list)\nlist.insert (1, ""ABC"")\nprint (list)\nlist.insert (3, ""PQR"")\nprint (list)'"
80 write a program to print EVEN length words of a string,"'\nstr = ""Python is a programming language""\nwords = list(str.split(\' \'))\nprint ""str :  "", str\nprint ""list converted string :  "", words\nprint ""EVEN length words : ""\nfor W in words : \n\tif(len(W)%2==0 ) : \n\t\tprint W'"
81 write a program to create N copies of a given string,"'\nstr1 = ""Hello""\nn = 3\nstr2 = str1 * 3 \nprint ""str1 :  "", str1 \nprint ""str2 :  "", str2'"
84 write a program to design a dice throw function,"'\nimport random\ndef dice() : \n\treturn random.choice([1,2,3,4,5,6])'"
86 write a program to convert meters into yards,"'\nnum = float(input(""Enter the distance measured in centimeter  :  ""))\ninc = num/2.54 \nprint(""Distance in inch  :  "", inc)'"
87 write a program Tower of Hanoi,"'\ndef hanoi(x) : \n\tglobal repN\n\trepN += 1\n\tif x == 1 : \n\t\treturn 2\n\telse : \n\t\treturn 3*hanoi(x-1) + 2\nx = int(input(""ENTER THE NUMBER OF DISKS :  ""))\nglobal repN\nrepN =0\nprint(\'NUMBER OF STEPS :  \', hanoi(x), \'  : \', repN)'"
88 write a program to find variance of a dataset,"'\ndef variance(X) : \n\tmean = sum(X)/len(X)\n\ttot = 0.0\n\tfor x in X : \n\t\ttot = tot + (x - mean)**2\n\treturn tot/len(X)\n# main code\n#  a simple data-set \nsample = [1, 2, 3, 4, 5] \nprint(""variance of the sample is :  "", variance(sample))'"
90 write a program for swapping the value of two integers without third variable,"'\nx = int(input(""Enter the value of x  : ""))\ny = int(input(""Enter the value of y  : ""))\n(x,y) = (y,x)\nprint(\'Value of x :  \', x, \'\\nValue of y :  \', y, \'\\nWOO!! Values SWAPPEDDD\')'"
91 write a program to check eligibility for voting   input age,"'\nage = int(input(""Enter Age  :  ""))\nif age>=18 : \n\t\tstatus=""Eligible""\nelse : \n\tstatus=""Not Eligible""\nprint(""You are "",status,"" for Vote."")'"
92 write a program to print the version information,"'\nimport sys\nprint(""Python version :  "", sys.version)\nprint(""Python version info :  "", sys.version_info)'"
93 write a program to find sum of all digits of a number,"'\ndef sumDigits(num) : \n\tif num == 0 : \n\treturn 0\n\telse : \n\treturn num % 10 + sumDigits(int(num / 10))\nx = 0\nprint(""Number :  "", x)\nprint(""Sum of digits :  "", sumDigits(x))\nprint()'"
94 write a program to print double quotes with the string variable,"'\nstr1 = ""Hello world"";\nprint(""\\""%s\\"""" % str1)\nprint(\'""%s""\' % str1)\nprint(\'""{}""\'.format(str1))'"
95 write a program to Remove leading zeros from an IP address,"'\nimport re\ndef removeLeadingZeros(ip) : \n\tmodified_ip = re.sub(regex, \'.\', ip)\n\tprint(modified_ip)\nif __name__ == \'__main__\'  :  \n\tip = ""216.08.094.196""\n\tremoveLeadingZeros(ip)'"
98 write a program to reverse a string that contains digits in Python,"""\ndef reverse(n) : \n\ts=str(n) \n\tp=s[ :  : -1]\n\treturn p \nnum = int(input('Enter a positive value :  '))\nprint('The reverse integer : ',reverse(num))"""
Write a python Class to calculate area of a rectangle and print the area,"'\nclass rectangle() : \n\tdef __init__(self,breadth,length) : \n\t\tself.breadth=breadth\n\t\tself.length=length\n\tdef area(self) : \n\t\treturn self.breadth*self.length\na=6\nb=4\nobj=rectangle(a,b)\nprint(""Area of rectangle : "",obj.area())'"
Write a python Class to calculate area of a circle and print the vale for a radius,"'\nclass CircleArea() : \n\tdef __init__(self,radius) : \n\t\tself.radius=radius\n\tdef area(self) : \n\t\treturn 3.14 * self.radius * self.radius\na=6\nobj=CircleArea(a)\nprint(""Area of rectangle : "",obj.area())'"
Write a python Class to calculate Perimeter of a circle and print the vale for a radius,"'\nclass CirclePerimeter() : \n\tdef __init__(self,radius) : \n\t\tself.radius=radius\n\tdef perimeter(self) : \n\t\treturn 2 * 3.14 * self.radius\na=6\nobj=CirclePerimeter(a)\nprint(""Perimeter of rectangle : "",obj.perimeter())'"
Write a python program to Read and print the Contents of a File,"'\na=str(input(""Enter file name .txt extension : ""))\nfile2=open(a,\'r\')\nline=file2.readline()\nwhile(line!="""") : \n\tprint(line)\n\tline=file2.readline()\nfile2.close()'"
Write a python program to Count and print the Number of Words in a Text File,"'\nfname = input(""Enter file name :  "")\nnum_words = 0\nwith open(fname, \'r\') as f : \n\tfor line in f : \n\t\twords = line.split()\n\t\tnum_words += len(words)\nprint(""Number of words : "")\nprint(num_words)'"
Write a python program to Count the Number of Lines in a Text File,"'\nfname = input(""Enter file name :  "")\nnum_lines = 0\nwith open(fname, \'r\') as f : \n\tfor line in f : \n\t\tnum_lines += 1\nprint(""Number of lines : "")\nprint(num_lines)'"
Write a python function to Copy the Contents of One File into Another,"'\ndef copy(from_file, to_file) : \n\twith open(from_file) as f : \n\t\twith open(to_file, ""w"") as f1 : \n\t\t\tfor line in f : \n\t\t\t\tf1.write(line)'"
Write a python function that Counts the Number of Times a Certain Letter Appears in the Text File,"""\ndef count_letter(fname, l) : \n\tk = 0\n\twith open(fname, 'r') as f : \n\t\tfor line in f : \n\t\t\twords = line.split()\n\t\t\tfor i in words : \n\t\t\t\tfor letter in i : \n\t\t\t\t\tif(letter==l) : \n\t\t\t\t\t\tk=k+1\n\treturn k"""
Write a python function that Print all the Numbers Present in the Text File,"""\ndef print_number(fname) : \n\twith open(fname, 'r') as f : \n\t\tfor line in f : \n\t\t\twords = line.split()\n\t\t\tfor i in words : \n\t\t\t\tfor letter in i : \n\t\t\t\t\tif(letter.isdigit()) : \n\t\t\t\t\t\tprint(letter)"""
Write a python function that Counts the Number of Blank Spaces in a Text File,"""\ndef count_blank_space(fname) : \n\tk = 0\n\twith open(fname, 'r') as f : \n\t\tfor line in f : \n\t\t\twords = line.split()\n\t\t\tfor i in words : \n\t\t\t\tfor letter in i : \n\t\t\t\t\tif(letter.isspace) : \n\t\t\t\t\t\tk=k+1\n\treturn k"""
Write a python function that Capitalize the First Letter of Every Word in the File,"""\ndef capitalize(fname) : \n\twith open(fname, 'r') as f : \n\t\tfor line in f : \n\t\t\tl=line.title()\n\t\t\tprint(l)"""
Write a python function that prints the Contents of a File in Reverse Order,'\ndef reverse_content(filename) : \n\tfor line in reversed(list(open(filename))) : \n\t\tprint(line.rstrip())'
Write a python Program to Flatten and print a List,"'\na=[[1,[[2]],[[[3]]]],[[4],5]]\nflatten=lambda l :  sum(map(flatten,l),[]) if isinstance(l,list) else [l]\nprint(flatten(a))'"
Write a Python function to print the GSD of Two Numbers,"'\ndef gcd(a,b) : \n\tif(b==0) : \n\t\treturn a\n\telse : \n\t\treturn gcd(b,a%b)'"
Write a Python function to Find the Power of a Number Using Recursion,"'\ndef power(base,exp) : \n\tif(exp==1) : \n\t\treturn(base)\n\tif(exp!=1) : \n\t\treturn(base*power(base,exp-1))'"
Write a Python function to Find the Total Sum of a Nested List Using Recursion,'\ndef sum1(lst) : \n\ttotal = 0\n\tfor element in lst : \n\t\tif (type(element) == type([])) : \n\t\t\ttotal = total + sum1(element)\n\t\telse : \n\t\t\ttotal = total + element\n\treturn total'
Write a Python function to Count and print the Number of Vowels Present in a String using Sets,"'\ndef count_vowels(s) : \n\tcount = 0\n\tvowels = set(""aeiou"")\n\tfor letter in s : \n\t\tif letter in vowels : \n\t\t\tcount += 1\n\treturn count'"
Write a Python Program to prints Common Letters in Two Input Strings,"'\ns1=\'python\'\ns2=\'schoolofai\'\na=list(set(s1)&set(s2))\nprint(""The common letters are : "")\nfor i in a : \n\tprint(i)'"
Write a Python Program that Prints which Letters are in the First String but not in the Second,"'\ns1=\'python\'\ns2=\'schoolofai\'\na=list(set(s1)-set(s2))\nprint(""The letters are : "")\nfor i in a : \n\tprint(i)'"
Write a Python Program to Concatenate Two Dictionaries Into One,"'\ndef concat_dic(d1, d2) : \n\treturn d1.update(d2)'"
Write a Python Program to Multiply All the Items in a Dictionary,'\ndef mul_dict(d) : \n\ttot=1\n\tfor i in d : \t\n\t\ttot=tot*d[i]\n\treturn tot'
Write a Python Program to Remove the Given Key from a Dictionary,"'\ndef remove_item_dict(d, key) : \n\tif key in d :  \n\t\tdel d[key]\n\telse : \n\t\tprint(""Key not found!"")\n\t\texit(0)'"
Write a Python Program to Map Two Lists into a Dictionary,"'\ndef map_dict(keys, values) : \n\treturn dict(zip(keys,values))'"
Write a Python Program to Remove the nth Index Character from a Non-Empty String,"'\ndef remove(string, n) :   \n\t\t first = string[ : n]   \n\t\t last = string[n+1 : ]  \n\t\t return first + last'"
Write a Python Program to Detect if Two Strings are Anagrams,"'\ndef anagram_check(s1, s2) : \n\tif(sorted(s1)==sorted(s2)) : \n\t\treturn True\n\telse : \n\t\treturn False'"
Write a Python Program to Form a New String where the First Character and the Last Character have been Exchanged,'\ndef change(string) : \n\t\t return string[-1 : ] + string[1 : -1] + string[ : 1]'
Write a Python Program to Remove the Characters of Odd Index Values in a String,"'\ndef modify(string) :   \n\tfinal = """"   \n\tfor i in range(len(string)) :   \n\t\tif i % 2 == 0 :   \n\t\t\tfinal = final + string[i]  \n\treturn final'"
Write a Python Program to Count and print Number of Lowercase Characters in a String,"'\nstring=\'This is an Assignment\'\ncount=0\nfor i in string : \n\t\t if(i.islower()) : \n\t\t\tcount=count+1\nprint(""The number of lowercase characters is : "")\nprint(count)'"
Write a Python Program to Put Even and Odd elements in a List into Two Different Lists,"'\na=[2, 3, 8, 9, 2, 4, 6]\neven=[]\nodd=[]\nfor j in a : \n\tif(j%2==0) : \n\t\teven.append(j)\n\telse : \n\t\todd.append(j)\nprint(""The even list"",even)\nprint(""The odd list"",odd)'"
Write a Python Program to Sort the List According to the Second Element in Sublist,"""\na=[['A',34],['B',21],['C',26]]\nfor i in range(0,len(a)) : \n\tfor j in range(0,len(a)-i-1) : \n\t\tif(a[j][1]>a[j+1][1]) : \n\t\t\ttemp=a[j]\n\t\t\ta[j]=a[j+1]\n\t\t\ta[j+1]=temp"""
Write a Python Program to Find the Second Largest Number in a List Using Bubble Sort,"'\na=[2, 3, 8, 9, 2, 4, 6]\nfor i in range(0,len(a)) : \n\tfor j in range(0,len(a)-i-1) : \n\t\tif(a[j]>a[j+1]) : \n\t\t\ttemp=a[j]\n\t\t\ta[j]=a[j+1]\n\t\t\ta[j+1]=temp '"
Write a Python Program to Find the Intersection of Two Lists,"'\ndef main(alist, blist) : \n\tdef intersection(a, b) : \n\t\treturn list(set(a) & set(b))\n\treturn intersection(alist, blist)'"
Write a Python Program to Create a List of Tuples with the First Element as the Number and Second Element as the Square of the Number using list comprehension,"'\nl_range=2\nu_range=5\na=[(x,x**2) for x in range(l_range,u_range+1)]'"
Write a Python Program to print all Numbers in a Range which are Perfect Squares and Sum of all Digits in the Number is Less than 10,"'\nl=6\nu=9\na=[x for x in range(l,u+1) if (int(x**0.5))**2==x and sum(list(map(int,str(x))))<10]\nprint(a)'"
Write a Python Program to Swap the First and Last Value of a List,"'\na=[2, 3, 8, 9, 2, 4, 6]\nn = len(a)\ntemp=a[0]\na[0]=a[n-1]\na[n-1]=temp\nprint(""New list is : "")\nprint(a)'"
Write a Python Program to Remove and print the Duplicate Items from a List,"'\na=[2, 3, 8, 9, 2, 4, 6]\nb = set()\nunique = []\nfor x in a : \n\tif x not in b : \n\t\tunique.append(x)\n\t\tb.add(x)\nprint(""Non-duplicate items : "")\nprint(unique)'"
Write a Python Program to Read a List of Words and Return the Length of the Longest One,"'\na=[\'the\', \'tsai\', \'python\']\nmax1=len(a[0])\ntemp=a[0]\nfor i in a : \n\tif(len(i)>max1) : \n\t\tmax1=len(i)\n\t\ttemp=i\nprint(""The word with the longest length is : "")\nprint(temp)'"
Write a Python function to Check Whether a Given Year is a Leap Year,'\ndef leapyear_check(year) : \n\tif(year%4==0 and year%100!=0 or year%400==0) : \n\t\treturn True\n\telse : \n\t\treturn False'
Write a Python Program to print Prime Factors of an Integer,"'\nn=24\nprint(""Factors are : "")\ni=1\nwhile(i<=n) : \n\tk=0\n\tif(n%i==0) : \n\t\tj=1\n\t\twhile(j<=i) : \n\t\t\tif(i%j==0) : \n\t\t\t\tk=k+1\n\t\t\tj=j+1\n\t\tif(k==2) : \n\t\t\tprint(i)\n\ti=i+1'"
Write a Python Program to print all the Divisors of an Integer,"'\nn=60\nprint(""The divisors of the number are : "")\nfor i in range(1,n+1) : \n\tif(n%i==0) : \n\t\tprint(i)'"
Write a Python Program to Check if a Number is an Armstrong Number,"'\ndef amstrong_check(n) : \n\ta=list(map(int,str(n)))\n\tb=list(map(lambda x : x**3,a))\n\tif(sum(b)==n) : \n\t\treturn True\n\telse : \n\t\treturn False'"
Write a Python Program to Check if a Number is a Perfect Number,"'\ndef perfect_no_check(n) : \n\tsum1 = 0\n\tfor i in range(1, n) : \n\t\tif(n % i == 0) : \n\t\t\tsum1 = sum1 + i\n\tif (sum1 == n) : \n\t\treturn True\n\telse : \n\t\treturn False'"
Write a Python Program to Check if a Number is a Strong Number,'\ndef strong_no_check(num) : \n\tsum1=0\n\ttemp=num\n\twhile(num) : \n\t\ti=1\n\t\tf=1\n\t\tr=num%10\n\t\twhile(i<=r) : \n\t\t\tf=f*i\n\t\t\ti=i+1\n\t\tsum1=sum1+f\n\t\tnum=num//10\n\tif(sum1==temp) : \n\t\treturn True\n\telse : \n\t\treturn False'
Write a Python Program to Check If Two Numbers are Amicable Numbers,"'\ndef amicable_no_check(x, y) : \n\tsum1=0\n\tsum2=0\n\tfor i in range(1,x) : \n\t\tif x%i==0 : \n\t\t\tsum1+=i\n\tfor j in range(1,y) : \n\t\tif y%j==0 : \n\t\t\tsum2+=j\n\tif(sum1==y and sum2==x) : \n\t\treturn True\n\telse : \n\t\treturn False'"
Write a Python Program to Check if a Number is a Prime Number,"'\ndef prime_no_check(a) : \n\tk=0\n\tfor i in range(2,a//2+1) : \n\t\tif(a%i==0) : \n\t\t\tk=k+1\n\tif(k<=0) : \n\t\treturn True\n\telse : \n\t\treturn False'"
Write a Python Program to print the Sum of First N Natural Numbers,"'\nn=7\nsum1 = 0\nwhile(n > 0) : \n\tsum1=sum1+n\n\tn=n-1\nprint(""The sum of first n natural numbers is"",sum1)'"
Write a Python Program to Print all Pythagorean Triplets in the Range,"'\nlimit=10\nc=0\nm=2\nwhile(c<limit) : \n\tfor n in range(1,m+1) : \n\t\ta=m*m-n*n\n\t\tb=2*m*n\n\t\tc=m*m+n*n\n\t\tif(c>limit) : \n\t\t\tbreak\n\t\tif(a==0 or b==0 or c==0) : \n\t\t\tbreak\n\t\tprint(a,b,c)\n\tm=m+1'"
Write a Python Program to print the Number of Times a Particular Number Occurs in a List,"'\na=[2, 3, 8, 9, 2, 4, 6]\nk=0\nnum=int(input(""Enter the number to be counted : ""))\nfor j in a : \n\tif(j==num) : \n\t\tk=k+1\nprint(""Number of times"",num,""appears is"",k)'"
Write a Python Program to test and print Collatz Conjecture for a Given Number,"""\ndef collatz(n) : \n\twhile n > 1 : \n\t\tprint(n, end=' ')\n\t\tif (n % 2) : \n\t\t\t# n is odd\n\t\t\tn = 3*n + 1\n\t\telse : \n\t\t\t# n is even\n\t\t\tn = n//2\n\tprint(1, end='')"""
Write a Python function to Count Set Bits in a Number,'\ndef count_set_bits(n) : \n\tcount = 0\n\twhile n : \n\t\tn &= n - 1\n\t\tcount += 1\n\treturn count'
Write a Python Program to Convert Gray Code to Binary,"'\ndef gray_to_binary(n) : \n\t""""""Convert Gray codeword to binary and return it.""""""\n\tn = int(n, 2)\n\tmask = n\n\twhile mask != 0 : \n\t\tmask >>= 1\n\t\tn ^= mask\n\treturn bin(n)[2 : ]'"
Write a Python Program to Convert Binary to Gray Code,"'\ndef binary_to_gray(n) : \n\t""""""Convert Binary to Gray codeword and return it.""""""\n\tn = int(n, 2)\n\tn ^= (n >> 1)\n\treturn bin(n)[2 : ]'"
Write a Python Program to print the Reverse a Given Number,"'\nn=1023\nrev=0\nwhile(n>0) : \n\tdig=n%10\n\trev=rev*10+dig\n\tn=n//10\nprint(""Reverse of the number : "",rev)'"
Write a Python Program to Accept Three Digits and Print all Possible Combinations from the Digits,"'\na=2\nb=9\nc=5\nd=[]\nd.append(a)\nd.append(b)\nd.append(c)\nfor i in range(0,3) : \n\tfor j in range(0,3) : \n\t\tfor k in range(0,3) : \n\t\t\tif(i!=j&j!=k&k!=i) : \n\t\t\t\tprint(d[i],d[j],d[k])'"
Write a Python function to Print an Identity Matrix,"'\ndef print_identity_matrix(n) : \n\tfor i in range(0,n) : \n\t\tfor j in range(0,n) : \n\t\t\tif(i==j) : \n\t\t\t\tprint(""1"",sep="" "",end="" "")\n\t\t\telse : \n\t\t\t\tprint(""0"",sep="" "",end="" "")\n\t\tprint()'"
Write a Python Program to print a list of fibonacci series for a given no using closer,"""\ndef fib() : \n\tcache = {1 : 1, 2 : 1}\n\tdef calc_fib(n) : \n\t\tif n not in cache : \n\t\t\tprint(f'Calculating fib({n})')\n\t\t\tcache[n] = calc_fib(n - 1) + calc_fib(n - 2)\n\t\treturn cache[n]\n\treturn calc_fib"""
Write a Python Program to print a list of fibonacci series for a given no using class,"""\nclass Fib : \n\tdef __init__(self) : \n\t\tself.cache = {1 : 1, 2 : 1}\n\tdef fib(self, n) : \n\t\tif n not in self.cache : \n\t\t\tprint(f'Calculating fib({n})')\n\t\t\tself.cache[n] = self.fib(n-1) + self.fib(n-2)\n\t\treturn self.cache[n]"""
Write a Python function to calculate factorial of a given no using closer,"""\ndef fact() : \n\tcache = {0 : 1, 1 : 1}\n\tdef calc_fib(n) : \n\t\tif n not in cache : \n\t\t\tprint(f'Calculating fact({n})')\n\t\t\tcache[n] = calc_fib(n - 1) * n\n\t\treturn cache[n]\n\treturn calc_fib"""
Write a Python function to calculate factorial of a given no using class,"'\nclass Fact : \n\tdef __init__(self) : \n\t\tself.cache = {0 : 1, 1 : 1}\n\tdef fact(self, n) : \n\t\tif n not in self.cache : \n\t\t\tself.cache[n] = self.fact(n-1) * n\n\t\treturn self.cache[n]'"
Write a Python function to calculate dot product of two given sequence,"'\ndef dot_product(a, b) : \n\treturn sum( e[0]*e[1] for e in zip(a, b))'"
Write a Python function to Find the Sum of Sine Series,"'\nimport math\ndef sin(x,n) : \n\tsine = 0\n\tfor i in range(n) : \n\t\tsign = (-1)**i\n\t\tpi=22/7\n\t\ty=x*(pi/180)\n\t\tsine = sine + ((y**(2.0*i+1))/math.factorial(2*i+1))*sign\n\treturn sine'"
Write a Python function to Find the Sum of Cosine Series,"'\ndef cosine(x,n) : \n\tcosx = 1\n\tsign = -1\n\tfor i in range(2, n, 2) : \n\t\tpi=22/7\n\t\ty=x*(pi/180)\n\t\tcosx = cosx + (sign*(y**i))/math.factorial(i)\n\t\tsign = -sign\n\treturn cosx'"
Write a Python function to strip vowels from a string,"'\ndef vowel_stripping(string) : \n\t\'\'\'This function takes a string as an input strips out vowels and returns stripted out string\'\'\'\n\treturn """".join([x for x in string if x not in(\'a\',\'e\',\'i\',\'o\',\'u\')])'"
Write a Python function that calculate interior angle of a equilateral polygon,'\ndef interior_angle(no_of_sides) : \n\treturn (no_of_sides - 2) * 180 / no_of_sides'
Write a Python function that calculate side length of a equilateral polygon,"'\nimport math\ndef side_length(no_of_sides, circumradius) : \n\treturn 2 * circumradius * math.sin(math.pi / no_of_sides)'"
1 Write a function to print given interger to binary,"'\ndef int_to_binary(num :  int) : \n\t""""""\n\tfunction to print number to binary\n\t""""""\n\tif isinstance(num, int) : \n\t\tprint(f\'The binary of {num} is {bin(num).replace(""0b"","""")}\')\n\telse : \n\t\traise ValueError(\'Invalid Input\')'"
6 write a function to print merger of two dictionary,"'\ndef merge_dict(dict1 :  dict, dict2 :  dict) : \n\t""""""\n\tfunction to print merger of two dictionary\n\t""""""\n\tfinal_dict = {**dict1, **dict2}\n\tprint(final_dict)'"
7 write a function to print second largest number in a list.,"""\ndef second_large_num(num :  list) : \n\tif isinstance(num, list) : \n\t\tnum.sort()\n\t\tprint (num[-2])\n\telse : \n\t\traise ValueError('Invalid Input')"""
8 write a function to remove empty list from a list and print.,"'\ndef remove_empty_list(num1 :  list) : \n\tif isinstance(num1, list) : \n\t\tmodified = list(filter(None, num1))\n\t\tprint(modified)'"
9 write a function to remove empty tuples from a list and print,"'\ndef remove_empty_tuple(num1 :  list) : \n\tif isinstance(num1, list) : \n\t\tmodified = list(filter(None, num1))\n\t\tprint(modified)'"
10 write a python function to remove duplicate from a list.,'\ndef remove_duplicates(dup_list :  list) : \n\tprint(list(set(dup_list)))'
11 write a function to reverse every word in a string,"""\ndef reverse_word(sen :  str) : \n\twords = sen.split(' ')\n\trever_word = [ i[ :  : -1] for i in words ]\n\tfinal_sen = ' '.join(rever_word)\n\tprint(final_sen)"""
12 function to check leap year,"""\ndef check_leap_year(year :  int) : \n\tif not year%4 : \n\t\tprint('Leap Year')\n\telse : \n\t\tprint('Not a leap year')"""
13 function to print the multiplication table,"""\ndef maths_tables( no_  :  int) : \n\t\tfor i in range(1, 11) : \n\t\t\tprint(f'{no_}x{i}={no_*i}')"""
17 function to print the lcm of two number,"'\ndef ret_lcm(x :  int, y :  int) : \n\tif x > y : \n\t\tgreater = x\n\telse : \n\t\tgreater = y\n\twhile(True) : \n\t\tif((greater % x == 0) and (greater % y == 0)) : \n\t\t\tlcm = greater\n\t\t\tbreak\n\t\tgreater += 1\n\treturn lcm'"
18 function to print the hcf of two number,"'\ndef ret_hcf(x :  int, y :  int) : \n\tif x > y : \n\t\tgreater = x\n\telse : \n\t\tgreater = y\n\twhile(True) : \n\t\tif((greater % x == 0) and (greater % y == 0)) : \n\t\t\tlcm = greater  \n\t\t\tbreak\n\t\tgreater += 1\n\treturn int(x*y/lcm)'"
19 function to print ascii value of a character.,'\ndef show_ascii(a :  str) : \n\tprint(ord(a))'
20 function to print calendar,"'\ndef show_mm_calendar(mm :  int, yyyy :  int) : \n\timport calendar\n\tprint(calendar.month(yyyy, mm)'"
21 Create a function that takes a list of numbers between 1 and 10 (excluding one number) and returns the missing number.,"""\ndef print_miss_num(l :  list) : \n\t\tprint(f'Missing number is {55-sum(l)}')"""
23 function to intern a sentence.,"""\ndef check_intern(a , b) : \n\tif a is b : \n\t\tprint(f'{a} and {b} is interned by Python')\n\telse : \n\t\tprint(f'{a} and {b} is not interned by Python')"""
24 convert string to intern string,"""\ndef str_to_intern_str(a) : \n\timport sys\n\tb = sys.intern(a)\n\tif a is b : \n\t\tprint('Sentence is interned')\n\telse : \n\t\traise ValueError('This should not happen')"""
25 write a function to print the time taken by a calc function to ferform a simple multiplication 10 Million time,'\ndef time_calc(n :  int) : \n\timport time\n\tstart = time.perf_counter()\n\tfor i in range(10000000) : \n\t\tn*2\n\tend = time.perf_counter()\n\treturn end-start'
26 write a function to print other value with given base to int.,"'\ndef other_int(value, b) : \n\treturn int(value, b)'"
27 write a function to convert any number to its equivalent fractions.,'\ndef no_to_fraction(no_) : \n\tfrom fractions import Fractions\n\treturn Fractions(no_)'
28 function to check two number ( floating also )  are close or not,"'\ndef check_isclose(x, y)\n\tfrom math import isclose\n\treturn isclose(x, y)'"
32 function to remove values from dictionary,"'\ndef remove_dic_value(a :  dict, key)\n\ta.pop(key)\n\treturn a'"
33 function insert at the begining of dictionary,"'\ndef dict_in_at_begin(orgin :  dict, new_ :  dict) : \n\tfinal = {**new_, **origin}\n\treturn final'"
"34 function to convert a list of tuples into dictionary   Input  : [ ('a',1), ('b', 2), ('c', 3)]   Output : { 'a':1, 'b':2, 'c':3 }",'\ndef list_to_dict(l :  list) : \n\tfinal_dict = {}\n\tfor i in l : \n\t\tfinal_dict[i[0]] = i[1]\n\treturn final_dict'
35 function to sort the  dictionary with respect to key.,'\ndef dict_sort_with_key(test_dict :  dict) : \n\tfinal dict = {}\n\ttemp = sorted(test_dict)\n\tfor i in temp : \n\t\tfinal_dict[i] = test_dict[a]\n\treturn final_dict'
37 function to add two tuple,"'\ndef add_tuple(tup1, tup2) : \n\treturn tup1+tup2'"
"38 function to create a list of tuples from a given list having number and its cube in each tuple   Input  : [1,2,3]   Output : [(1,1),(2,8),(3,9)]","'\ndef list_of_tuple( l :  list) : \n\tfinal = [ (i, pow(i,3)) for i in l]\n\treturn final'"
39 function to create a dictionary of mirror of letter.,"'\ndef letter_mirror() : \n\timport string\n\tletter = string.ascii_lowercase\n\trvr_letter = letter[ :  : -1]\n\tdict_char = dict(zip(letter, rvr_letter))\n\treturn dict_char'"
40 function to print the ascii value of letter,"'\ndef show_ascii() : \n\timport string\n\tletter = string.ascii_letters\n\tfor i in letter : \n\t\tprint(i+"" : ""+str(ord(i)))'"
41 function to get the current time at GMT,'\ndef current_time() : \n\timport datetime\n\tprint(datetime.datetime.now())'
42 function to print the India Time,"""\ndef get_India_time() : \n\timport datetime, pytz\n\tprint(datetime.datetime.now( pytz.timezone('Asia/kolkata') ))"""
43 function to print yesterday and tomorrow date,"'\ndef tmrw_yest_time()\n\timport datetime\n\tyesterday = datetime.datetime.now() - datetime.timedelta(1)\n\ttmrw = datetime.datetime.now() + datetime.timedelta(1)\n\tprint( yesterday, tmrw )'"
47 first class function,"'\ndef call_func(x, func) : \n\treturn fn(x)'"
48 function to show documentation,"'\ndef doc_func(*args, **kwargs) : \n\t""""""\n\tfunction to show how to do do documentation of function\n\tFirst line after function wriiten inside triple quotes.\n\tDon\'t forget to close when job is done.\n\t""""""\n\tpass'"
50 function to check whether a given name is function or method,"""\ndef inspect_func(fn) : \n\tfrom inspect import isfunction, ismethod\n\tprint(f'{fn} is method {ismethod(func)}')\n\tprint(f'{fn} is function {isfunction(func)}')"""
53 factorial using pythonish,'\ndef fact_one_line(n) : \n\treturn 1 if n < 2 else n*fact_one_line(n-1)\n#54 str to list\ndef str_to_list(sen) : \n\treturn list(sen)\n#55 string to tuple\ndef sen_to_tuple(sen) : \n\treturn tuple(sen)'
56 function to all implementation,'\ndef all_imp(a) : \n\treturn all(a)'
57 function to any implementation,'\ndef any_imp(a) : \n\treturn any(a)'
58 function to show boolean true / false is a number,'\ndef bool_show(a=5) : \n\treturn True*a'
59 function to show boolean true / false is a number,'\ndef bool_show(a=5) : \n\treturn False*a '
64 function to build a time elapsed closures,'\ndef time_elsaped()\n\tstart = perf_counter()\n\tdef inner()\n\t\tnonlocal perf_counter\n\t\treturn perf_counter() - start\n\treturn inner'
65 function to attach counter to function,"'\ndef attach_counter(fn :  ""Function"") : \n\tcount = 0\n\tdef inner(*args, **kwargs) : \n\t\tnonlocal count\n\t\tcount += 1\n\t\treturn fn(*args, **kwargs)\n\treturn inner'"
66 attach function closure with logs details to another function,"'\ndef attach_log(fn :  ""function"") : \n\tdef inner(*args, **kwargs) : \n\t\tdt = datetime.now()\n\t\tprint(f\'{fn.__name__} is called at {dt} with {args} {kwargs} \')\n\t\treturn fn(*args, **kwargs)\n\treturn inner'"
67 function counter to store the number of times multiples function called in a dictionary,"'\ndef count_func_dict(fn :  ""Function Name"") : \n\tcount = 0\n\tdef inner(*args, **kwargs) : \n\t\tnonlocal count\n\t\tcount =+= 1\n\t\tcounter_67[fn.__name__] = count\n\t\treturn fn(*args, **kwargs)\n\treturn inner'"
68 write a function to unpack tuple of minimum 2 value to unlimited length int first two and rest,"'\ndef unpack_tuple(tup) : \n\ta, b , *c = tup\n\treturn a , b, c'"
73 function to store the data of IPL match in Namedtuple,"""\ndef store_ipl_date(tuple1) : \n\tfrom collections import namedtuple\n\tIplData = namedtuple('IplData', 'match toss choice session1 session2 winner')\n\treturn IplData(*tuple1)"""
81 generate intereger random number between user choice,"'\ndef gen_ran_int_number(lower, upper) : \n\timport random\n\tfinal = [ random.randint(lower, upper) for _ in range(10) ]\n\treturn final'"
82 function to show how to use f string,"'\ndef f_string(msg :  ""user message"") : \n\tprint(f\'This is an f string with user paramter {msg}\')'"
Convert generator to a list,"""\ngen = (i for i in range(5))\na_list = list(gen)\n# Usage of bool class\nprint('isinstance(True, int) : ', isinstance(True, int))"""
A naive recursive Python implementation,"'\ndef binomialCoeff(n , k) :  \n\tif k > n  :  \n\t\treturn 0\n\tif k==0 or k ==n  :  \n\t\treturn 1\n\t# Recursive Call \n\treturn binomialCoeff(n-1 , k-1) + binomialCoeff(n-1 , k) '"
Driver Program to test ht above function,"'\nn = 5\nk = 2\nprint (""Value of C(%d,%d) is (%d)"" %(n , k , binomialCoeff(n , k)) )'"
The function _lis() stores its result in maximum,"'\n\t_lis(arr , n) \n\treturn maximum '"
Driver program to test the above function,"'\narr = [10 , 22 , 9 , 33 , 21 , 50 , 41 , 60] \nn = len(arr) \nprint (""Length of lis is "", lis(arr) )'"
Driver Program,'\nprint(Fibonacci(9)) '
write a python program to add two list of same length.,"""\ndef add_two_list_items() : \n\tnum1 = [1,2,3]\n\tnum2 = [4,5,6]\n\tsum = num1 + num2\n\tprint(f'Sum :  {sum}')"""
write a python program to add numbers from two list if first list item is even and second list item is odd.,"'\ndef add_two_lists_even_odd(l1, l2) : \n\tnew = []\n\tfor x, y in zip(l1, l2) : \n\t\tif l1%2 == 0 and l2%2 != 0 : \n\t\t\tnew.append(x+y)\n\treturn new'"
write a python program Convert KM/H to MPH,"'\nkmh = 50\nmph =  0.6214 * kmh\nprint(""Speed : "", kmh, ""KM/H = "", mph, ""MPH"")'"
write a program to find and print the smallest among three numbers,"""\nnum1 = 100\nnum2 = 200\nnum3 = 300\nif (num1 <= num2) and (num1 <= num3) : \n\tsmallest = num1\nelif (num2 <= num1) and (num2 <= num3) : \n\tsmallest = num2\nelse : \n\tsmallest = num3\nprint(f'smallest : {smallest}')"""
write a python function to calculate simple Interest,"'\ndef simple_interest(p,t,r) :  \n\tsi = (p * t * r)/100\n\treturn si '"
write a python program to print all Prime numbers in an Interval,"'\nstart = 11\nend = 25\nfor i in range(start,end) : \n\tif i>1 : \n\tfor j in range(2,i) : \n\t\tif(i % j==0) : \n\t\t\tbreak\n\telse : \n\t\tprint(i)'"
write a python funtion to implement a counter to record how many time the word has been repeated using closure concept,"'\ndef word_counter() : \n\tcounter = {}\n\tdef count(word) : \n\t\tcounter[word] = counter.get(word, 0) + 1\n\t\treturn counter[word]\n\treturn count'"
write a  python program to check and print if a string is palindrome or not,"'\nst = \'malayalam\'\nj = -1\nflag = 0\nfor i in st : \n\tif i != st[j] : \n\t\t j = j - 1\n\t\t flag = 1\n\t\t break\n\tj = j - 1\nif flag == 1 : \n\tprint(""Not a palindrome"")\nelse : \n\tprint(""It is a palindrome"")'"
write a python program to find N largest elements from a list,"'\nl = [1000,298,3579,100,200,-45,900] \nn = 4\nl.sort() \nprint(l[-n : ])'"
write a python program to add two lists using map and lambda,"'\nnums1 = [1, 2, 3]\nnums2 = [4, 5, 6]\nresult = map(lambda x, y :  x + y, nums1, nums2)\nprint(list(result))'"
write a python functionto test the equality of the float numbers,"'\ndef float_equality_testing(a, b) : \n\trel_tol = 1e-12\n\tabs_tol = 1e-05\n\treturn abs(a-b) <= max(rel_tol * max(abs(a), abs(b)), abs_tol)'"
write a python program to get positive elements from given list of lists,"'\nInput = [[10, -11, 222], [42, -222, -412, 99, -87]] \ntemp = map(lambda elem :  filter(lambda a :  a>0, elem), Input) \nOutput = [[a for a in elem if a>0] for elem in temp] '"
write the program to remove empty tuples from a list,"'\ndef Remove(tuples) :  \n\ttuples = filter(None, tuples) \n\treturn tuples '"
write  a python program to find Cumulative sum of a list,"'\nlist=[10,20,30,40,50]\nnew_list=[] \nj=0\nfor i in range(0,len(list)) : \n\tj+=list[i]\n\tnew_list.append(j) \nprint(new_list) '"
write a python function to convert a list to string,"""\ns = ['I', 'want', 4, 'apples', 'and', 18, 'bananas'] \nlistToStr = ' '.join(map(str, s)) \nprint(listToStr)"""
write a python program to merge 2 dictionaries,"""\nx = {'a'  :  1, 'b'  :  2, 'c'  :  3}\ny = {'x'  :  10, 'y'  :  20, 'z'  :  30 }\nz = {**x , **y}"""
write a python code to implement Sigmoid function,'\nimport math\ndef sigmoid(x) : \n\treturn 1 / (1 + math.exp(-x))'
write a python code to implement RELU function,"'\ndef relu(array) : \n\treturn [max(0,i) for i in array if(isinstance(i, int) or isinstance(i, float))]'"
write a python program to strip all the vowels in a string,"'\nstring = ""Remove Vowel""\nvowel = [\'a\', \'e\', \'i\', \'o\', \'u\']\n"""".join([i for i in string if i not in vowel]'"
write a python function to calculate factorial of a given number,"'\ndef factorial(n) : \n\tfact = 1\n\tfor num in range(2, n + 1) : \n\t\tfact = fact * num\n\treturn(fact)'"
write a python program which will find all such numbers which are divisible by 7 but are not a multiple of 5 ;between 2000 and 3200 (both included),"""\nl=[]\nfor i in range(2000, 3201) : \n\tif (i%7==0) and (i%5!=0) : \n\t\tl.append(str(i))\nprint(','.join(l))"""
write the python program to generate a random number between 0 and 9,"""\nimport csv\ndef read_csv(input_file) : \n\twith open(input_file) as csv_file : \n\t\tcsv_reader = csv.reader(csv_file, delimiter=',')\n\t\tfor row in csv_reader : \n\t\t\t\tprint(f'{row}')\n\t\t\t\tbreak"""
write a python program to Generate a Random Number,"'\nimport random\nprint(random.randint(0,9))'"
write a python function to Compute LCM,"'\ndef compute_lcm(x, y) : \n\tif x > y : \n\t\tgreater = x\n\telse : \n\t\tgreater = y\n\twhile(True) : \n\t\tif((greater % x == 0) and (greater % y == 0)) : \n\t\t\tlcm = greater\n\t\t\tbreak\n\t\tgreater += 1\n\treturn lcm'"
write a python function to compute gcd,"'\ndef compute_gcd(x, y) : \n\twhile(y) : \n\t\tx, y = y, x % y\n\treturn x'"
write a python program to Remove Punctuations From a String,"'\npunctuations = \'\'\'!()-[]{}; : \'""\\,<>./?@#$%^&*_~\'\'\'\nmy_str = ""Hello!!!, he said ---and went.""\nno_punct = """"\nfor char in my_str : \n\tif char not in punctuations : \n\t\tno_punct = no_punct + char\nprint(no_punct)'"
write a python function to Find Hash of File,"""\nimport hashlib\ndef hash_file(filename) : \n\th = hashlib.sha1()\n\twith open(filename,'rb') as file : \n\t\tchunk = 0\n\t\twhile chunk != b'' : \n\t\t\tchunk = file.read(1024)\n\t\t\th.update(chunk)\n\treturn h.hexdigest()"""
write a python program to count the number of each vowels,"""\nip_str = 'Hello, have you tried our tutorial section yet?'\nip_str = ip_str.casefold()\ncount = {x : sum([1 for char in ip_str if char == x]) for x in 'aeiou'}\nprint(count)"""
write a python Program to Find ASCII Value of Character,"'\nc = \'p\'\nprint(""The ASCII value of \'"" + c + ""\' is"", ord(c))'"
write a python Program to Solve Quadratic Equation,"""\nimport cmath\na = 1\nb = 5\nc = 6\nd = (b**2) - (4*a*c)\nsol1 = (-b-cmath.sqrt(d))/(2*a)\nsol2 = (-b+cmath.sqrt(d))/(2*a)\nprint('The solution are {0} and {1}'.format(sol1,sol2))"""
write a python program to Convert Celsius To Fahrenheit,"""\ncelsius = 37.5\nfahrenheit = (celsius * 1.8) + 32\nprint(f'{celsius} degree Celsius is equal to {fahrenheit} degree Fahrenheit')"""
write a python program to check Armstrong number of n digits,"'\nnum = 1634\norder = len(str(num))\nsum = 0\ntemp = num\nwhile temp > 0 : \n\tdigit = temp % 10\n\tsum += digit ** order\n\ttemp //= 10\nif num == sum : \n\tprint(num,""is an Armstrong number"")\nelse : \n\tprint(num,""is not an Armstrong number"")'"
write a Python Program to Find the Sum of Natural Numbers,"'\nnum = 16\nif num < 0 : \n\tprint(""Enter a positive number"")\nelse : \n\tsum = 0\n\twhile(num > 0) : \n\t\tsum += num\n\t\tnum -= 1\n\tprint(""The sum is"", sum)'"
write a python program  to Shuffle Deck of Cards,"""\nimport itertools, random\ndeck = list(itertools.product(range(1,14),['Spade','Heart','Diamond','Club']))\nrandom.shuffle(deck)\nprint(deck)"""
write a Python function to Convert Decimal to Binary,"""\ndef convertToBinary(n) : \n\tif n > 1 : \n\t\tconvertToBinary(n//2)\n\tprint(n % 2,end = '')"""
write a python Program to Determine all Pythagorean Triplets in the Range,"'\nlimit= 50\nc=0\nm=2\nwhile(c<limit) : \n\tfor n in range(1,m+1) : \n\t\ta=m*m-n*n\n\t\tb=2*m*n\n\t\tc=m*m+n*n\n\t\tif(c>limit) : \n\t\t\tbreak\n\t\tif(a==0 or b==0 or c==0) : \n\t\t\tbreak\n\t\tprint(a,b,c)\n\tm=m+1'"
function to Convert Binary to Gray Code,"'\ndef binary_to_gray(n) : \n\tn = int(n, 2) \n\tn ^= (n >> 1)\n\treturn bin(n)[2 : ]'"
write a Python function to Find the Intersection of Two Lists,"'\ndef intersection(a, b) : \n\treturn list(set(a) & set(b))'"
write a python program to Remove the Given Key from a Dictionary,"'\nd = {\'a\' : 1,\'b\' : 2,\'c\' : 3,\'d\' : 4}\nkey= \'d\'\nif key in d :  \n\tdel d[key]\nelse : \n\tprint(""Key not found!"")\n\texit(0)'"
write a python function to Count the Number of Words in a Text File and print it,"""\ndef word_count(fname)  :  \n\tnum_words = 0\n\twith open(fname, 'r') as f : \n\t\tfor line in f : \n\t\t\twords = line.split()\n\t\t\tnum_words += len(words)\n\tprint(num_words)"""
write a python function to Count Set Bits in a Number,'\ndef count_set_bits(n) : \n\tcount = 0\n\twhile n : \n\t\tn &= n - 1\n\t\tcount += 1\n\treturn count'
write a python function to print pyramid pattern,"""\ndef pyramid_pattern(symbol='*', count=4) : \n\tfor i in range(1, count + 1) : \n\t\tprint(' ' * (count - i) + symbol * i, end='')\n\t\tprint(symbol * (i - 1) + ' ' * (count - i))"""
write a python function to make permutations from a list with given length,"'\ndef get_permutations(data_list, l=2) : \n\treturn list(permutations(data_list, r=l))'"
write a python program to get all possible permutations of size of the string in lexicographic sorted order.,"""\ndef get_ordered_permutations(word, k) : \n\t[print(''.join(x)) for x in sorted(list(permutations(word, int(k))))]"""
"write a python program to get all possible combinations, up to size of the string in lexicographic sorted order.","""\ndef get_ordered_combinations(string, k) : \n\t[print(''.join(x)) for i in range(1, int(k) + 1) for x in combinations(sorted(string), i)]"""
write a python function to get all possible size replacement combinations of the string in lexicographic sorted order.,"""\ndef get_ordered_combinations_with_replacement(string, k) : \n\t[print(''.join(x)) for x in combinations_with_replacement(sorted(string), int(k))]"""
"write a python function for Caesar Cipher, with given shift value and return the modified text","'\ndef caesar_cipher(text, shift=1) : \n\talphabet = string.ascii_lowercase\n\tshifted_alphabet = alphabet[shift : ] + alphabet[ : shift]\n\ttable = str.maketrans(alphabet, shifted_alphabet)\n\treturn text.translate(table)'"
write a python function for a string to swap the case of all letters.,"""\ndef swap_case(s) : \n\treturn ''.join(x for x in (i.lower() if i.isupper() else i.upper() for i in s))"""
write a python function to get symmetric difference between two sets from user.,"'\ndef symmetric_diff_sets() : \n\tM, m = input(), set(list(map(int, input().split())))\n\tN, n = input(), set(list(map(int, input().split())))\n\ts = sorted(list(m.difference(n)) + list(n.difference(m)))\n\tfor i in s : \n\t\tprint(i)'"
write a python function to check if given set is subset or not,"'\ndef check_subset() : \n\tfor _ in range(int(input())) : \n\t\tx, a, z, b = input(), set(input().split()), input(), set(input().split())\n\tprint(a.issubset(b))'"
"write a function to compress a given string. Suppose a character 'c' occurs consecutively X times in the string. Replace these consecutive occurrences of the character 'c' with  (X, c) in the string.","'\ndef compress(text) : \n\tfrom itertools import groupby\n\tfor k, g in groupby(text) : \n\t\tprint(""({}, {})"".format(len(list(g)), k), end="" "")'"
write a python function to count 'a's in the repetition of a given string 'n' times.,"""\ndef repeated_string(s, n) : \n\treturn s.count('a') * (n // len(s)) + s[ : n % len(s)].count('a')"""
"write a python function to find all the substrings of given string that contains 2 or more vowels. Also, these substrings must lie in between 2 consonants and should contain vowels only.","'\ndef find_substr() : \n\timport re\n\tv = ""aeiou""\n\tc = ""qwrtypsdfghjklzxcvbnm""\n\tm = re.findall(r""(?<=[%s])([%s]{2,})[%s]"" % (c, v, c), input(), flags=re.I)\n\tprint(\'\\n\'.join(m or [\'-1\']))'"
write a python function that given five positive integers and find the minimum and maximum values that can be calculated by summing exactly four of the five integers.,"""\ndef min_max() : \n\tnums = [int(x) for x in input().strip().split(' ')]\n\tprint(sum(nums) - max(nums), sum(nums) - min(nums))"""
"write a python function to find the number of (i, j) pairs where i<j and ar[i]+ar[j] is divisible by k in a data list","'\ndef divisible_sum_pairs(arr, k) : \n\tcount = 0\n\tn = len(arr)\n\tfor i in range(n - 1) : \n\t\tj = i + 1\n\t\twhile j < n : \n\t\t\tif ((arr[i] + arr[j]) % k) == 0 : \n\t\t\t\tcount += 1\n\t\t\tj += 1\n\treturn count\nimport math'"
Write a python Class to calculate area of a circle and print the vale for a radius,"'\nclass CircleArea : \n\tdef __init__(self, radius) : \n\t\tself.radius = radius\n\tdef area(self) : \n\t\treturn math.pi * self.radius * self.radius\nr = 2\nobj = CircleArea(r)\nprint(""Area of circle : "", obj.area())'"
Write a python function to count the number of Words in a Text File,"'\ndef check_words() : \n\tfname = input(""file name :  "")\n\tnum_words = 0\n\twith open(fname, \'r\') as f : \n\t\tfor line in f : \n\t\t\twords = line.split()\n\t\t\tnum_words += len(words)\n\tprint(""Number of words = "", num_words)'"
Write a python function to Count the Number of Lines in a Text File,"'\ndef check_lines() : \n\tfname = input(""file name :  "")\n\tnum_lines = 0\n\twith open(fname, \'r\') as f : \n\t\tfor line in f : \n\t\t\tnum_lines += 1\n\tprint(""Number of lines = "", num_lines)'"
Write a python function that Counts the Number of Blank Spaces in a Text File,"'\ndef count_blank_space() : \n\tfname = input(""file name : "")\n\tcount = 0\n\twith open(fname, \'r\') as f : \n\t\tfor line in f : \n\t\t\tcount += line.count(\' \')\n\treturn count'"
Write a python function to check if 2 strings are anagrams or not,"'\ndef anagram(s1, s2) : \n\tif sorted(s1) == sorted(s2) : \n\t\treturn True\n\telse : \n\t\treturn False'"
Write a python function to remove the duplicate items from a List and return the modified data list,'\ndef remove_duplicates(data) : \n\tc = Counter(data)\n\ts = set(data)\n\tfor item in s : \n\t\tcount = c.get(item)\n\t\twhile count > 1 : \n\t\t\tdata.pop(item)\n\t\t\tcount -= 1\n\treturn data'
write a python function to get the most common word in text,'\ndef most_common(text) : \n\tc = Counter(text)\n\treturn c.most_common(1)'
write a python function to do bitwise multiplication on a given bin number by given shifts,"'\ndef bit_mul(n, shift) : \n\treturn n << shift'"
write a python function for bitwise division with given number of shifts,"'\ndef bit_div(n, shift) : \n\treturn n >> shift'"
write a python function to get dot product between two lists of numbers,"'\ndef dot_product(a, b) : \n\treturn sum(e[0] * e[1] for e in zip(a, b))'"
write a python function to strip punctuations from a given string,"""\ndef strip_punctuations(s) : \n\treturn s.translate(str.maketrans('', '', string.punctuation))"""
write a python function that returns biggest character in a string,"'\nfrom functools import reduce\ndef biggest_char(string) : \n\tif not isinstance(string, str) : \n\t\traise TypeError\n\treturn reduce(lambda x, y :  x if ord(x) > ord(y) else y, string)'"
write a python function to Count the Number of Digits in a Number,"'\ndef count_digits() : \n\tn = int(input(""Enter number : ""))\n\tcount = 0\n\twhile n > 0 : \n\t\tcount = count + 1\n\t\tn = n // 10\n\treturn count'"
write a python function to count number of vowels in a string,"""\ndef count_vowels(text) : \n\tv = set('aeiou')\n\tfor i in v : \n\t\tprint(f'\\n {i} occurs {text.count(i)} times')"""
write a python function to generate SHA256 for given text,'\ndef get_sha256(text) : \n\timport hashlib\n\treturn hashlib.sha256(text).hexdigest()'
write a python function to check if SHA256 hashed value is valid for given data or not,"'\ndef check_sha256_hash(hashed, data) : \n\timport hashlib\n\treturn True if hashed == hashlib.sha256(data.encode()).hexdigest() else False'"
write a python function to get HTML code for a given URL,"'\ndef get_html(url=""http : //www.python.org"") : \n\timport urllib.request\n\tfp = urllib.request.urlopen(url)\n\tmybytes = fp.read()\n\tmystr = mybytes.decode(""utf8"")\n\tfp.close()\n\tprint(mystr)'"
write a python function with generator for an infinite sequence,'\ndef infinite_sequence() : \n\tn = 0\n\twhile True : \n\t\tyield n\n\t\tn += 1\nimport uuid'
write a python function to generate a Unique identifier across space and time in this cosmos.,'\ndef get_uuid() : \n\treturn uuid.uuid4()\nimport secrets'
write a python function to generate cryptographically strong pseudo-random data,"'\ndef get_cryptographically_secure_data(n=101) : \n\treturn secrets.token_bytes(n), secrets.token_hex(n)'"
write a python function to convert byte to UTF-8,"'\ndef byte_to_utf8(data) : \n\treturn data.decode(""utf-8"")\nprint(byte_to_utf8(data=b\'r\\xc3\\xa9sum\\xc3\\xa9\'))'"
"write a python function which takes length , breadth as user input and returns the area of rectangle.","'\ndef rectangle_area(length, breadth) : \n\tarea = length * breadth\t\n\treturn area'"
"write a python function which takes a number as user input and print square, and cube of the number",'\ndef square_cube(number) : \n\tprint(number ** 2)  \n\tprint(number ** 3)  '
write a python program that takes height in centimeters as user input and return height in feet and inches,"'\ncm=int(input(""Enter the height in centimeters : ""))\ninches=0.394*cm\nfeet=0.0328*cm\nprint(""The length in inches"",round(inches,2))\nprint(""The length in feet"",round(feet,2))'"
write a python program to remove duplicates from the list and print the result,"'\nl = [1,2,3,4,5,5,5,5,5,5,5,7,8,8,0]\nresult = set(l)\nprint(""Result  :  "",result)'"
write a python function which takes length of sides as user input to calculate and return the area of a triangle,"'\ndef triangle_area(a,b,c) : \n\ts = (a+b+c)/2\n\tarea = (s(s-a)*(s-b)*(s-c)) ** 0.5\n\treturn(area)'"
write a python program to swap two numbers,"'\nnum1 = 130\nnum2 = 34\nnum1,num2 = num2,num1'"
"Write a python program to obtain principal amount, rate of interest and time from user to print simple interest.","'\nprincipal = float(input(""Enter principal  :  ""))\nrate= float(input(""Enter rate  :  ""))\ntime = float(input(""Enter time  :  ""))\nsimple_interest = print(f""Simple Interest  :  {(principal*rate*time/100)}"")'"
write a python program to input a number to test and print if it is a prime number,"'\nnum = int(input(""Enter number  : ""))\nlim = int(num/2) + 1\nfor i in range(2,lim) : \n\trem = num % i\n\tif rem == 0  : \n\t\tprint(num,""is not a prime number"")\n\t\tbreak\nelse : \n\tprint(num,""is a prime number"")'"
write a python program to input a string from user and convert input string into all upper case and print the result,"'\nstring = input(""Please Enter your Own String  :  "")\nstring1 = string.upper()\nprint(""\\nOriginal String in Lowercase  =  "", string)\nprint(""The Given String in Uppercase =  "", string1)'"
write a python program to input a Number N from user and print Odd Numbers from 1 to N,"'\nmaximum = int(input("" Please Enter any Maximum Value  :  ""))\nfor number in range(1, maximum + 1) : \n\tif(number % 2 != 0) : \n\t\tprint(""{0}"".format(number))'"
write a python program to input a Number N from user and print Even Numbers from 1 to N,"'\nmaximum = int(input("" Please Enter the Maximum Value  :  ""))\nfor number in range(1, maximum+1) : \n\tif(number % 2 == 0) : \n\t\tprint(""{0}"".format(number))'"
write a python program to input two numbers from user and add two Numbers and print the result,"'\nnumber1 = input("" Please Enter the First Number :  "")\nnumber2 = input("" Please Enter the second number :  "")\nsum = float(number1) + float(number2)\nprint(\'The sum of {0} and {1} is {2}\'.format(number1, number2, sum))'"
write a python program that takes two integers as input and check if the first number is divisible by other,"'\nnum1 = int(input(""Enter first number  : ""))\nnum2 = int(input(""Enter second number  : ""))\nremainder  = num1 % num2\nif remainder == 0 : \n\tprint(num1 ,"" is divisible by "",num2)\nelse  : \n\tprint(num1 ,"" is not divisible by "",num2)'"
write a python program to print the table of input integer,"'\nnum = int(input(""Please enter a number ""))\nfor a in range(1,11) : \n\tprint(num , \'x\' , a , \'=\' ,num*a)'"
write a python program to print the factorial of number,"'\nnum = int(input(""Please enter a number ""))\nfact = 1\na = 1\nwhile a <= num  : \n\tfact *= a\n\ta += 1\nprint(""The factorial of "",num, "" is "",fact)'"
write a python program which takes input a number N and print first N elements of fibonacci series,"'\nN = int(input(""Please enter a number ""))\nfirst = 0\nsecond = 1\nprint(first)\nprint(second)\nfor a in range(1,N-1) : \n\tthird = first + second\n\tprint(third)\n\tfirst,second = second , third'"
write a python program to print the divisors of a integer,"'\nnum = int(input(""Please enter a integer ""))\nmid = int(num / 2)\nprint(""The divisiors of "",num,"" are  : "" )\nfor a in range(2,mid + 1) : \n\tif num % a == 0 : \n\t\tprint(a, end = \' \')\nelse  : \n\tprint()\n\tprint(""-End-"")'"
write a python program to find the average of list of numbers provided as input by user,"'\nn=int(input(""Enter the number of elements to be inserted :  ""))\na=[]\nfor i in range(0,n) : \n\telem=int(input(""Enter element :  ""))\n\ta.append(elem)\navg=sum(a)/n\nprint(""Average of elements in the list"",round(avg,2))'"
write a python program which takes an integer N as input and add the odd numbers up to N and print the result,"'\nN = int(input(""Enter Number  :  ""))\nsum = 0\ni = 1\nwhile i <= N : \n\tsum = sum + i\n\ti = i + 2\nprint(sum)'"
write a python function which takes input a string and returns whether is is a palindrome or not,'\ndef isPalindrome(s) : \n\treturn s == s[ :  : -1]'
write a python program which takes list as an input and calculate mean of given list of numbers,"'\nlst = eval(input(""Enter list  :  ""))\nmean = 0\nsum = 0\nfor i in lst : \n\tsum  = sum + i\nmean = sum / len(lst)\nprint("" The mean of given list is  : "", mean)'"
write a python program which takes list as an input and calculate sum of given list of numbers,"'\nlst = eval(input(""Enter list  :  ""))\nmean = 0\nsum = 0\nfor i in lst : \n\tsum  = sum + i\nprint("" The mean of given list is  : "", sum)'"
write a python program which takes list as an input and find frequency of all elements in list,"'\nlst = eval(input(""Enter list  :  ""))\nmean = 0\nsum = 0\nfor i in lst : \n\tsum  = sum + i\nprint("" The mean of given list is  : "", sum)'"
write a python function that takes two lists as an input an print out common elements in two lists,"'\ndef common_member(a, b) :  \n\ta_set = set(a) \n\tb_set = set(b) \n\tif (a_set & b_set) :  \n\t\tprint(a_set & b_set) \n\telse :  \n\t\tprint(""No common elements"")  '"
write a python function that takes two lists and append second list after the first list,"'\nlst1 = eval(input(""Enter list  :  ""))\nlst2 = eval(input(""Enter list  :  ""))\nprint(lst1 + lst2)'"
write a python program to calculate and print square root of numbers 0 to 100,"'\ni = 0\nwhile i<= 100 : \n\tprint(i,\t""\\t\\t""\t,\ti**0.5)\n\ti\t=\ti\t+\t1'"
"write a python program greets the user with ""Hello"", after user inputs his name:","'\nname = input (""Input your name :  "")\nprint(""HELLO "", name)'"
write a python program which takes input a string and print reverse string,"'\nname = input(""Enter String"")\nprint(name[ :  : -1]) '"
write a python program which takes input a list and print reverse output,"'\nlst = eval(input(""Enter list""))\nprint(lst[ :  : -1]) '"
write a python function which takes sentence as input and remove vowels from a sentence,"'\nsentence = input(""Enter a sentence  :  "")\ndef fn(sentence) : \n\tvowels = \'aeiou\'\n\treturn \'\'.join([ l for l in sentence if l not in vowels])'"
write a python function which takes two list of same length as input and return a dictionary with one as keys and other as values.,"'\nkeys = eval(input(""Enter key list  :  ""))\nvalues = eval(input(""Enter value list  :  ""))\ndef fn(keys, values) : \n\treturn { keys[i]  :  values[i] for i in range(len(keys)) }'"
write a python function that takes an integer as input and returns the factorial of that number,'\ndef factorial(n) :  \n\t# single line to find factorial \n\treturn 1 if (n==1 or n==0) else n * factorial(n - 1); '
write a python function that takes input radius and return area of circle,'\ndef findArea(r) :  \n\tPI = 3.142\n\treturn PI * (r*r);'
"write a python funtion that takes input principle, rate, time and calculate compound intrest","'\ndef compound_interest(principle, rate, time) : \n\t# Calculates compound interest  \n\tAmount = principle * (pow((1 + rate / 100), time)) \n\tCI = Amount - principle \n\tprint(""Compound interest is"", CI) '"
write a python program to print the ascii value of input character,"'\ncharacter = input("" Enter Character  : "")\nprint(f""Ascii value of character {character} is  :  "" , ord(character))'"
write a python program that takes input an integer and find sum of series with cubes of first n natural numbers using list comprehension which ta,"'\nN = int(input(""Enter Integer ""))\nlst = [i**3 for i in range(1, N + 1)]\nprint(sum(lst)) '"
write a python function that takes list as an input and converts it into tuple,'\ndef convert(list) :  \n\treturn tuple(list)'
"Write a Python program to get a list, sorted in increasing order by the last element in each tuple from a given list of non-empty tuples.","'\ndef last(n) :  return n[-1]\ndef sort_list_last(tuples) : \n\treturn sorted(tuples, key=last)\nprint(sort_list_last([(2, 5), (1, 2), (4, 4), (2, 3), (2, 1)]))'"
write a python program to concatenate two dictionaries,"""\nd1 = {'a'  :  1 ,'b'  :  2}\nd2 = {'c'  :  1 ,'d'  :  2}\nd3 = {**d1,**d2}\nprint(d3)"""
Write a Python program to print the length of a set.  Create a set,"'\nseta = set([5, 10, 3, 15, 2, 20])\n#Find the length use len()\nprint(len(seta))'"
write a python program that takes two sets as input and print the common elements,"'\ns1 = eval(input(""Enter set 1 ""))\ns2 = eval(input(""Enter set 2 ""))\nprint(s1.intersection(s2))'"
write a python program which takes input a list and prints the mean of elements within the list,"'\ns1 = eval(input(""Enter list ""))\nmean = sum(s1) / len(s1) \nprint(""Mean of sample is  :  "" + str(mean)) '"
write a python program which takes input a list and prints the standard deviation of elements within the list,"'\nmean = sum(s1) / len(s1) \nvariance = sum([((x - mean) ** 2) for x in s1]) / len(s1) \nres = variance ** 0.5\nprint(""Standard deviation of sample is  :  "" + str(res)) '"
write a python program which prints a random number,'\nimport random\nn = random.random()\nprint(n) '
write a python function that takes input a string and removes duplicates from the same,"'\nfoo = input(""Enter String  :  "")\nprint(""Duplicates Removed"","""".join(set(foo)))'"
"Write a Python program to add 'ing' at the end of a given string (length should be at least 3). If the given string already ends with 'ing' then add 'ly' instead. If the string length of the given string is less than 3, leave it unchanged.","""\ndef add_string(str1) : \n\tlength = len(str1)\n\tif length > 2 : \n\tif str1[-3 : ] == 'ing' : \n\t\t str1 += 'ly'\n\telse : \n\t\t str1 += 'ing'\n\treturn str1"""
"Write a Python program to find the first appearance of the substring 'not' and 'poor' from a given string, if 'not' follows the 'poor', replace the whole 'not'...'poor' substring with 'good'. Return the resulting string.","""\ndef not_poor(str1) : \n\tsnot = str1.find('not')\n\tspoor = str1.find('poor')\n\tif spoor > snot and snot>0 and spoor>0 : \n\tstr1 = str1.replace(str1[snot : (spoor+4)], 'good')\n\treturn str1\n\telse : \n\treturn str1"""
Write a Python program to count the occurrences of each word in a given sentence.,'\ndef word_count(str) : \n\tcounts = dict()\n\twords = str.split()\n\tfor word in words : \n\t\tif word in counts : \n\t\t\tcounts[word] += 1\n\t\telse : \n\t\t\tcounts[word] = 1\n\treturn counts'
Write a Python function to create the HTML string with tags around the word(s).,"'\ndef add_tags(tag, word) : \n\treturn ""<%s>%s</%s>"" % (tag, word, tag)'"
Write a Python program to count the number of even and odd numbers from a series of numbers.,"'\nnumbers = (1, 2, 3, 4, 5, 6, 7, 8, 9) # Declaring the tuple\ncount_odd = 0\ncount_even = 0\nfor x in numbers : \n\t\tif not x % 2 : \n\t\t\t count_even+=1\n\t\telse : \n\t\t\t count_odd+=1'"
Write a Python program that prints each item and its corresponding type from the following list.,"'\ndatalist = [1452, 11.23, 1+2j, True, \'w3resource\', (0, -1), [5, 12],\n{""class"" : \'V\', ""section"" : \'A\'}]\nfor item in datalist : \n\tprint (""Type of "",item, "" is "", type(item))'"
Write a Python program to sort (ascending) a dictionary by value.,"'\nd = {1 :  2, 3 :  4, 4 :  3, 2 :  1, 0 :  0}\nprint({k  : v for k,v in sorted(d.items(),key = lambda x  :  x[1])})'"
Write a Python program to sort (Descending) a dictionary by value.,"'\nd = {1 :  2, 3 :  4, 4 :  3, 2 :  1, 0 :  0}\nprint({k  : v for k,v in sorted(d.items(),key = lambda x  :  x[1],reverse = True)})'"
Write a Python program to sort list.,"'\nnumbers = [1, 3, 4, 2] \nnumbers.sort()  \nprint(numbers) '"
Write a Python program to sort a list of tuples by second Item,"""\ndef Sort_Tuple(tup) :   \n\treturn(sorted(tup, key = lambda x :  x[1]))   \ntup = [('rishav', 10), ('akash', 5), ('ram', 20), ('gaurav', 15)]  \nprint(Sort_Tuple(tup)) """
write a python program that tke two inputs from user and check whether they are equal or not.,"'\nprint(""Enter first number"")\nfirst = input()\nprint(""Enter second number"")\nsecond = input()\nprint(first == second)'"
write a python program that takes input a list and squares every term using list comprehension,"'\ns1 = eval(input(""Enter list ""))\nprint([i**2 for i in s1])'"
write a python program that takes input a list and cube every term using list comprehension,"'\ns1 = eval(input(""Enter list ""))\nprint([i**3 for i in s1])'"
write a python program that takes input a list and square root every term using list comprehension,"'\ns1 = eval(input(""Enter list ""))\nprint([i**0.5 for i in s1])'"
write a python function that takes input a list of string and print the largest string,"'\ndef find_longest_word(words_list) : \n\tword_len = []\n\tfor n in words_list : \n\t\tword_len.append((len(n), n))\n\tword_len.sort()\n\treturn word_len[-1][0], word_len[-1][1]'"
write a python program that takes input a string and prints the count of words,"'\ns1 = input(""Enter string "")\nprint(""Count of words"",len(s1.split()))'"
write a Python function that takes list of tuples as input and sort those alphabetically,"'\ndef SortTuple(tup) :  \n\tn = len(tup) \n\tfor i in range(n) :  \n\t\tfor j in range(n-i-1) :  \n\t\t\tif tup[j][0] > tup[j + 1][0] :  \n\t\t\t\ttup[j], tup[j + 1] = tup[j + 1], tup[j] \n\treturn tup '"
write a python program which takes a list and swaps the first and last value of the list.,"'\na=[]\nn= int(input(""Enter the number of elements in list : ""))\nfor x in range(0,n) : \n\telement=int(input(""Enter element"" + str(x+1) + "" : ""))\n\ta.append(element)\ntemp=a[0]\na[0]=a[n-1]\na[n-1]=temp\nprint(""New list is : "")\nprint(a)'"
write a python program that print today's date,'\nfrom datetime import date\nprint(date.today()) '
write a python program that takes input number of lines and finds the possible number of intersection,'\ndef countMaxIntersect(n) :  \n\treturn int(n*(n - 1)/2) '
write a python program to input a number n and print an inverted star pattern of the desired size.,"'\nn=int(input(""Enter number of rows :  ""))\nfor i in range (n,0,-1) : \n\tprint((n-i) * \' \' + i * \'*\')'"
write a python program to input a number and check whether a given number is a palindrome.,"'\nn=int(input(""Enter number : ""))\ntemp=n\nrev=0\nwhile(n>0) : \n\tdig=n%10\n\trev=rev*10+dig\n\tn=n//10\nif(temp==rev) : \n\tprint(""The number is a palindrome!"")\nelse : \n\tprint(""The number isn\'t a palindrome!"")'"
write a python program to input a number and find the smallest divisor of an integer.,"'\nn=int(input(""Enter an integer : ""))\na=[]\nfor i in range(2,n+1) : \n\tif(n%i==0) : \n\t\ta.append(i)\na.sort()\nprint(""Smallest divisor is : "",a[0])'"
write a python function to insert an element into sorted python list,"'\ndef insert(list, n) :  \n\tfor i in range(len(list)) :  \n\t\tif list[i] > n :  \n\t\t\tindex = i \n\t\t\tbreak\n\tlist = list[ : i] + [n] + list[i : ] \n\treturn list'"
write a python program to add two numbers,"""\nnum1 = 1.5\nnum2 = 6.3\nsum = num1 + num2\nprint(f'Sum :  {sum}')"""
write a python function to add two user provided numbers and return the sum,"'\ndef add_two_numbers(num1, num2) : \n\tsum = num1 + num2\n\treturn sum'"
write a program to find and print the largest among three number,"""\nsnum1 = 10\nnum2 = 12\nnum3 = 14 \nif (num1 >= num2) and (num1 >= num3) :  \n\tlargest = num1\nelif (num2 >= num1) and (num2 >= num3) :    \n\tlargest = num2\nelse :    largest = num3\nprint(f'largest : {largest}')"""
write a python function to subtract two user provided numbers and return the result,"'\ndef sub_two_numbers(num1, num2) : \n\tsub = num1 - num2\n\treturn sub'"
write a python function to multiply two user provided numbers and return the result,"'\ndef mul_two_numbers(num1, num2) : \n\tmul = num1 * num2\n\treturn mul'"
write a python program to pop element form dictionary,"'\nsquares = {1 :  1, 2 :  4, 3 :  9, 4 :  16, 5 :  25}\nprint(squares.pop(4))'"
write a python program that prints the length of tuple,"'\nthistuple = (""apple"", ""banana"", ""cherry"")\nprint(len(thistuple))'"
"1 write a program to get numbers = 1,3,11,42,12,4001",'\nfrom collections import Iterable\nhighestnumber = -999\nfor i in numbers : \n\tif i > highestnumber : \n\thighestnumber = i\nprint(numbers.index(highestnumber))'
"2 write a program to get numbers = 1,3,11,42,12,4001",'\nhighestnumber = -999\nfor i in numbers : \n\tif i > highestnumber : \n\thighestnumber = i\nprint(numbers.index(highestnumber))'
3 add 1 to all elements in list python,"'\nlst = [1,2,3]\nlist(map(lambda x : x+1, lst))'"
4 add a string to each element of a list python,"""\nmy_list = ['foo', 'fob', 'faz', 'funk']\nstring = 'bar'\nlist2 = list(map(lambda orig_string :  orig_string + string, my_list))"""
5 add a third dimension matrix dataset python,'\nx = [2D_matrix] # To convert from a 2-D to 3-D\n# or \nx = [[[value1]]] # To convert from a 1-D to 3-D'
6 python add all values of another list,"'\na = [1, 2, 3]\nb = [4, 5, 6]\na += b'"
7 add a value to the start of a list python,"'\nvar=7\narray = [1,2,3,4,5,6]\narray.insert(0,var)'"
8 print into lowersase an uppercase sentence in python,"'\ns = ""Kilometer""\nprint(s.lower())\n#9 sort a dictionary\nmydictionary  :  {1 :  1, 7 :  2, 4 :  2, 3 :  1, 8 :  1}\nsortedDictionary = sorted(mydictionary.keys())'"
10 limit decimals to only two decimals in python,"'\nanswer = str(round(answer, 2))'"
11 print how many keys are in a dictionary python,"""\na = {'foo' : 42, 'bar' : 69}\nprint(len(a))"""
11 access index of a character in a string python,"""\nfoo = 'Hello'\nfoo.find('lo')"""
12 python print last element of list,"'\nmylist = [0, 1, 2]\nprint(myList[-1]) '"
13 how to add a blank line in python,"'\nprint("""")'"
14 how to add element at first position in array python,"'\nx = [1,3,4]\na = 2\nx.insert(1,a)'"
15 how to add extra zeros after decimal in python,"""\nformat(2.0, '.6f')\n'2.000000'"""
16 how to add list numbers in python,"'\nnumbers = [1,2,3,4,5,1,4,5] \nSum = sum(numbers) '"
17 split list into lists of equal length python,"'\n[lst[i : i + n] for i in range(0, len(lst), n)]'"
18 how to break out of nested loops python,"'\nx_loop_must_break = False\nfor x in [1, 2, 3] : \n\tprint(f""x is {x}"")\n\tfor y in [1, 2, 3] : \n\t\tprint(f""y is {y}"")\n\t\tif y == 2 : \n\t\t\tx_loop_must_break = True\n\t\t\tbreak\n\tif x_loop_must_break :  break'"
19 capitalize first letter in python in list,"""\nmy_list = ['apple pie', 'orange jam']\nmy_list[0].capitalize()\n#20 how to check if a list is a subset of another list\nif(all(x in test_list for x in sub_list)) :  \n\tflag = True"""
21 write a function to check if string is camelcase pythonpython by Breakable Buffalo on Aug 09 2020 Donate,"'\ndef is_camel_case(s) : \n\treturn s != s.lower() and s != s.upper() and ""_"" not in s\n#22 how to check if string is in byte formate pythin\nisinstance(string, bytes)'"
23 how to check nth prime in python,"'\nx=int(input())\nn,c=1,0\nwhile(c<x) : \n\tn+=1\n\tfor i in range(2,n+1) : \n\t\tif(n%i==0) : \n\t\t\tbreak\n\tif(i==n) : \n\t\tc=c+1'"
24 how to convert fahrenheit to celsius in python,'\nCelsius = (Fahrenheit - 32) * 5.0/9.0\n#25 print binary of a decimal number\na=6\nprint(bin(a))'
26 write a python function to convert from base 2 to base 10 in pythonpython by TheRubberDucky on Nov 06 2020 Donate,"'\ndef getBaseTen(binaryVal) : \n\tcount = 0\n\tbinaryVal = binaryVal[ :  : -1]\n\tfor i in range(0, len(binaryVal)) : \n\t\tif(binaryVal[i] == ""1"") : \n\t\t\tcount += 2**i\n\treturn count'"
27 write a python funtion to execute bash commands,"'\nimport subprocess\nsubprocess.call([""sudo"", ""apt"", ""update""])'"
27 write a function to generate and print a random number between 0 and 22,"'\nimport random\nn = random.randint(0,22)\nprint(n)'"
28 to get a random element from an array in python,"'\nimport random\nlist_ = [1,2,3,4]\nrandom.choice(list_)'"
29 print current day in python,"'\nfrom datetime import date\ntoday = date.today()\nprint(""Today\'s date : "", today)'"
30 program to count number of cpu cores available,'\nimport os\nos.cpu_count()'
30 get rid of all null values in array python,"""\nmylist = [1, 2, 3, '', 4]\nmylist = [i for i in mylist if i]"""
31 get the most common number in python,"'\nfrom statistics import mode\nmode((1, 2, 4, 4, 5, 4, 4, 2, 3, 8, 4, 4, 4))'"
32 print current version of python,'\nimport sys\nprint(sys.version)'
33 write a python function to flatten nested lists,"'\nfrom collections import Iterable\ndef flatten(lis) : \n\tfor item in lis : \n\t\tif isinstance(item, Iterable) and not isinstance(item, str) : \n\t\t\tfor x in flatten(item) : \n\t\t\t\tyield x\n\t\telse : \n\t\t\tyield item'"
34 write a python function to convert a string  into xml,"""\nimport xml.etree.ElementTree as ET\nroot = ET.fromstring(country_data_as_string)\n#35 how to open xml file element tree\nimport xml.etree.ElementTree as ET\ntree = ET.parse('filename.xml') \ntree_root = tree.getroot() """
36 python parse datetime from string,"""\nfrom datetime import datetime\ndatetime_object = datetime.strptime('Jun 1 2005  1 : 33PM', '%b %d %Y %I : %M%p')"""
37 print list as matrix in python without bracketspython by Bright Butterfly on Jun 14 2020 Donate,"""\ndata = [7, 7, 7, 7]\nprint(*data, sep='')"""
38 how to read a specific line from a text file in python,"'\nline = open(""file.txt"", ""r"").readlines()[7]'"
39 how to remove integer from string in python,"""\ns = '12abcd405'\nresult = ''.join([i for i in s if not i.isdigit()])"""
40 write a function to return the nth fibonacci in python,"'\ndef Fibonacci(n) :  \n\tif n<0 :  \n\t\tprint(""Incorrect input"")\n\telif n==1 :  \n\t\treturn 0\n\telif n==2 :  \n\t\treturn 1\n\telse :  \n\t\treturn Fibonacci(n-1)+Fibonacci(n-2) '"
41 how to sort a list in python using lambda,"'\ndata = [(""Apples"", 5, ""20""), (""Pears"", 1, ""5""), (""Oranges"", 6, ""10"")]\ndata.sort(key=lambda x : x[0])'"
43 write a to time a python script,'\nfrom datetime import datetime\nstart = datetime.now()\ndo_something() : ...\nprint(datetime.now() - start)'
46 write Python Function to print leaders in array,"'\ndef printLeaders(arr,size) : \n\tfor i in range(0, size) : \n\t\tfor j in range(i+1, size) : \n\t\t\tif arr[i]<arr[j] : \n\t\t\t\tbreak\n\t\tif j == size-1 :   \n\t\t\tprint(arr[i])\narr=[16, 17, 4, 3, 5, 2] \nprintLeaders(arr, len(arr))'"
47 write a python function to print lcm of n numbers python,"'\nimport math\ndef LCMofArray(a) : \n\tlcm = a[0]\n\tfor i in range(1,len(a)) : \n\tlcm = lcm*a[i]//math.gcd(lcm, a[i])\n\treturn lcm\narr1 = [1,2,3]\nprint(""LCM of arr1 elements : "", LCMofArray(arr1))'"
48 write a python program to merge a list of dictionaires,'\nresult = {}\nfor d in L : \n\tresult.update(d)'
51 write a python function to find a missing number in a list of consecutive natural numbers,'\ndef getMissingNo(A) :  \n\tn = len(A) \n\ttotal = (n + 1)*(n + 2)/2\n\tsum_of_A = sum(A) \n\treturn total - sum_of_A '
52 write a python program to normalize a list of numbers and print the result,"'\na = [2,4,10,6,8,4]\namin, amax = min(a), max(a)\nfor i, val in enumerate(a) : \n\ta[i] = (val-amin) / (amax-amin)\nprint(a)'"
53  write a python program to permutations of a given string in python and print the result,"'\nfrom itertools import permutations \nimport string \ns = ""GEEK""\na = string.ascii_letters \np = permutations(s) \nd = [] \nfor i in list(p) :  \n\tif (i not in d) :  \n\t\td.append(i) \n\t\tprint(\'\'.join(i)) '"
54 Write a Python function to check if a number is a perfect square,'\ndef is_perfect_square(n) : \n\tx = n // 2\n\ty = set([x])\n\twhile x * x != n : \n\t\tx = (x + (n // x)) // 2\n\t\tif x in y :  return False\n\t\ty.add(x)\n\treturn True'
57 Write a Python function to find the single number in a list that doesn't occur twice.,'\ndef single_number(arr) : \n\tresult = 0\n\tfor i in arr : \n\t\tresult ^= i\n\treturn result'
58 Write a Python function to find the single element in a list where every element appears three times except for one.,"'\ndef single_number(arr) : \n\tones, twos = 0, 0\n\tfor x in arr : \n\t\tones, twos = (ones ^ x) & ~twos, (ones & x) | (twos & ~x)\n\tassert twos == 0\n\treturn ones'"
59 Write a function program to add the digits of a positive integer repeatedly until the result has a single digit.,'\ndef add_digits(num) : \n\t\treturn (num - 1) % 9 + 1 if num > 0 else 0'
61 Write a Python function to reverse the bits of an integer (32 bits unsigned).,'\ndef reverse_Bits(n) : \n\t\tresult = 0\n\t\tfor i in range(32) : \n\t\t\tresult <<= 1\n\t\t\tresult |= n & 1\n\t\t\tn >>= 1\n\t\treturn result'
62 Write a Python function to check a sequence of numbers is an arithmetic progression or not.,'\ndef is_arithmetic(l) : \n\tdelta = l[1] - l[0]\n\tfor index in range(len(l) - 1) : \n\t\tif not (l[index + 1] - l[index] == delta) : \n\t\t\t\treturn False\n\treturn True'
64 Write a Python function to compute the sum of the two reversed numbers and display the sum in reversed form.,"'\ndef reverse_sum(n1, n2) : \n\treturn int(str(int(str(n1)[ :  : -1]) + int(str(n2)[ :  : -1]))[ :  : -1])'"
"65 Write a Python function where you take any positive integer n, if n is even, divide it by 2 to get n / 2. If n is odd, multiply it by 3 and add 1 to obtain 3n + 1. Repeat the process until you reach 1.",'\ndef collatz_sequence(x) : \n\tnum_seq = [x]\n\tif x < 1 : \n\t\treturn []\n\twhile x > 1 : \n\t\tif x % 2 == 0 : \n\t\t\tx = x / 2\n\t\telse : \n\t\t\tx = 3 * x + 1\n\t\tnum_seq.append(x)    \n\treturn num_seq'
65 Write a Python function to check if a given string is an anagram of another given string.,"'\ndef is_anagram(str1, str2) : \n\tlist_str1 = list(str1)\n\tlist_str1.sort()\n\tlist_str2 = list(str2)\n\tlist_str2.sort()\n\treturn (list_str1 == list_str2)'"
66 Write a Python function to push all zeros to the end of a list.,'\ndef move_zero(num_list) : \n\ta = [0 for i in range(num_list.count(0))]\n\tx = [ i for i in num_list if i != 0]\n\tx.extend(a)\n\treturn(x)'
67 Write a Python function to the push the first number to the end of a list.,'\ndef move_last(num_list) : \n\ta = [num_list[0] for i in range(num_list.count(num_list[0]))]\n\tx = [ i for i in num_list if i != num_list[0]]\n\tx.extend(a)\n\treturn(x)'
68 Write a Python function to find the length of the last word.,'\ndef length_of_last_word(s) : \n\t\twords = s.split()\n\t\tif len(words) == 0 : \n\t\t\treturn 0\n\t\treturn len(words[-1])'
70 Write a Python function to find the single number which occurs odd numbers and other numbers occur even number.,'\ndef odd_occurrence(arr) : \n\t# Initialize result\n\tresult = 0\n\t# Traverse the array\n\tfor element in arr : \n\t\t# XOR\n\t\tresult = result ^ element\n\treturn result'
72 Write a Python function to create a new array such that each element at index i of the new array is the product of all the numbers of a given array of integers except the one at i.,'\ndef product(nums) : \n\tnew_nums = []\n\tfor i in nums : \n\t\tnums_product = 1\n\t\tfor j in nums :      \n\t\t\tif j != i : \n\t\t\t\tnums_product = nums_product * j\n\t\tnew_nums.append(nums_product)\n\treturn new_nums'
73 Write a python function to find the difference between the sum of the squares of the first two hundred natural numbers and the square of the sum.,"'\nr = range(1, 201)\na = sum(r)\nprint (a * a - sum(i*i for i in r))'"
74 Write a Python function to compute s the sum of the digits of the number 2 to the power 20.,'\ndef digits_sum() : \n\tn = 2**20\n\tans = sum(int(c) for c in str(n))\n\treturn str(ans)'
75 Write a Python program to compute the sum of all the multiples of 3 or 5 below 500.,"'\nn = 0\nfor i in range(1,500) : \n\t\tif not i % 5 or not i % 3 : \n\t\t\tn = n + i\nprint(n)'"
76 Write a Python function to converting an integer to a string in any base.,"'\ndef to_string(n,base) : \n\tconver_tString = ""0123456789ABCDEF""\n\tif n < base : \n\t\t return conver_tString[n]\n\telse : \n\t\t return to_string(n//base,base) + conver_tString[n % base'"
77 Write a Python function to calculate the geometric sum of n-1.,"'\ndef geometric_sum(n) : \n\tif n < 0 : \n\treturn 0\n\telse : \n\treturn 1 / (pow(2, n)) + geometric_sum(n - 1)'"
78 Write a Python function to find the greatest common divisor (gcd) of two integers.,"'\ndef Recurgcd(a, b) : \n\tlow = min(a, b)\n\thigh = max(a, b)\n\tif low == 0 : \n\t\treturn high\n\telif low == 1 : \n\t\treturn 1\n\telse : \n\t\treturn Recurgcd(low, high%low)'"
"79 Write a program to print which will find all such numbers which are divisible by 7 but are not a multiple of 5,","""\nbetween 2000 and 3200 (both included).  \nl=[]\nfor i in range(2000, 3201) : \n\tif (i%7==0) and (i%5!=0) : \n\t\tl.append(str(i))\nprint ','.join(l)"""
81 Write a Python program to convert a given Bytearray to Hexadecimal string.,"""\ndef bytearray_to_hexadecimal(list_val) : \n\t\tresult = ''.join('{ : 02x}'.format(x) for x in list_val)  \n\t\treturn(result)"""
82 Write a Python program to count number of substrings with same first and last characters of a given string.,"'\ndef no_of_substring_with_equalEnds(str1) :  \n\tresult = 0; \n\tn = len(str1); \n\tfor i in range(n) :  \n\t\tfor j in range(i, n) :  \n\t\t\tif (str1[i] == str1[j]) :  \n\t\t\t\tresult = result + 1\n\treturn result'"
83 Write a Python program to move all spaces to the front of a given string in single traversal.,"""\ndef moveSpaces(str1) :  \n\tno_spaces = [char for char in str1 if char!=' ']   \n\tspace= len(str1) - len(no_spaces)\n\tresult = ' '*space\t\n\treturn result + ''.join(no_spaces)"""
84 Write a Python program to find maximum length of consecutive 0’s in a given binary string.,"'\ndef max_consecutive_0(input_str) :  \n\t\treturn  max(map(len,input_str.split(\'1\')))\nstr1 = \'111000010000110\'\nprint(""Original string : "" + str1)\nprint(""Maximum length of consecutive 0’s : "")'"
85 Write a Python program that iterate over elements repeating each as many times as its count.,"'\nfrom collections import Counter\nc = Counter(p=4, q=2, r=0, s=-2)\nprint(list(c.elements()))'"
86 Write a Python program to generate groups of five consecutive numbers in a list,"'\nl = [[5*i + j for j in range(1,6)] for i in range(5)]\nprint(l)'"
87 Write a Python program to print the list in a list of lists whose sum of elements is the highest.,"'\nprint(max(num, key=sum))'"
88 Write a Python fuction to print the depth of a dictionary.,"""\ndef dict_depth(d) : \n\tif isinstance(d, dict) : \n\t\treturn 1 + (max(map(dict_depth, d.values())) if d else 0)\n\treturn 0\ndic = {'a' : 1, 'b' :  {'c' :  {'d' :  {}}}}\nprint(dict_depth(dic))"""
91 Write a Python function to create a multidimensional list (lists of lists) with zeros and print the output.,"'\nnums = []\nfor i in range(3) : \n\tnums.append([])\n\tfor j in range(2) : \n\t\tnums[i].append(0)\nprint(""Multidimensional list : "")\nprint(nums)'"
94 Write a Python function to print all permutations with given repetition number of characters of a given string and print the output.,"""\nfrom itertools import product\ndef all_repeat(str1, rno) : \n\tchars = list(str1)\n\tresults = []\n\tfor c in product(chars, repeat = rno) : \n\tresults.append(c)\n\treturn results\nprint(all_repeat('xyz', 3))"""
98 Write a Python program to multiply two integers without using the '*' operator in python.,"'\ndef multiply(x, y) : \n\tif y < 0 : \n\t\treturn -multiply(x, -y)\n\telif y == 0 : \n\t\treturn 0\n\telif y == 1 : \n\t\treturn x\n\telse : \n\t\treturn x + multiply(x, y - 1)'"
Write a program to merge two python dictionaries and print merged dictionary,"""\nd1 = {'a' :  100, 'b' :  200}\nd2 = {'x' :  300, 'y' :  200}\nd = d1.copy()\nd.update(d2)\nprint(d)"""
write a python function to concatenate two integers like string concatenation and return concatenated number as integer,"'\ndef concat_two_numbers(num1, num2) : \n\tcombined_num = str(num1) + str(num2)\n\treturn int(combined_num)'"
"With a given integral number n, write a program to generate a dictionary that contains (i, i*i*i) such that is an integral number between 1 and n (both included). and then the program should print the dictionary.","'\nn = 8\nd = dict()\nfor i in range(1,n+1) : \n\td[i] = i*i*i\nprint(d)'"
Write a program which accepts a sequence of comma-separated numbers from console and generate a list and a tuple which contains every number.,"'\nvalues=input()\nl=values.split("","")\nt=tuple(l)\nprint(l)\nprint(t)'"
Write a Python function that takes a sequence of numbers and determines whether all the numbers are different from each other,'\ndef test_distinct(data) : \n\tif len(data) == len(set(data)) : \n\treturn True\n\telse : \n\treturn False'
"Write a Python function to find the number of notes (Sample of notes: 10, 20, 50, 100, 200 and 500 ) against a given amount.","'\ndef no_notes(a) : \n\tQ = [500, 200, 100, 50, 20, 10, 5, 2, 1]\n\tx = 0\n\tfor i in range(9) : \n\tq = Q[i]\n\tx += int(a / q)\n\ta = int(a % q)\n\tif a > 0 : \n\tx = -1\n\treturn x'"
Write a Python function to find the number of zeros at the end of a factorial of a given positive number.,'\ndef factendzero(n) : \n\tx = n // 5\n\ty = x \n\twhile x > 0 : \n\tx /= 5\n\ty += int(x)\n\treturn y'
Write a Python function to remove leading zeros from an IP address,"""\nimport re\nregex = '\\.[0]*'\ndef remove_leading_zeros(ip) : \n\tmodified_ip = re.sub(regex, '.', ip)\n\treturn modified_ip"""
Write a Python function to return binary value of a given integer,'\ndef int_to_bin(a) : \n\treturn bin(a)'
Write a Python function to return octal value of a given integer,'\ndef int_to_oct(a) : \n\treturn oct(a)'
Write a Python function to return hexadecimal value of a given integer,'\ndef int_to_hex(a) : \n\treturn hex(a)'
Write a Python program to typecast given input to integer,"'\nnum = int(input(""Input a value :  ""))\nprint(num)'"
Write a Python program to typecast given input to float,"'\nnum = float(input(""Input a value :  ""))\nprint(num)'"
Write a Python program to check/test multiple variables against a value,"'\na = 10\nb = 20\nc = 30\nif 10 in {a, b, c} : \n\tprint(""True"")\nelse : \n\tprint(""False"")\t'"
"Write a Python class that will initiate a number, input a number and print the number","'\nclass Number : \n\tdef __init__(self, num) : \n\t\tself.num = num\n\tdef inputNum(self) : \n\t\tself.num = int(input(""Enter an integer number :  ""))\n\tdef printNum(self) : \n\t\tprint(self.num)'"
"Write a Python function to find the simple interest in Python when principle amount, rate of interest and time is given","'\ndef simple_interest(p,r,t) : \n\tsi = (p*r*t)/100\n\treturn si'"
"Write a Python function to find the compound interest in Python when principle amount, rate of interest and time is given","'\ndef compound_interest(p,r,t) : \n\tci = p * (pow((1 + r / 100), t)) \n\treturn ci'"
Write a Python function to check whether a person is eligible for voting or not based on their age,"'\ndef vote_eligibility(age) : \n\tif age>=18 : \n\t    status=""Eligible""\n\telse : \n\t    status=""Not Eligible""\n\treturn status'"
Write a Python function to find the BMI for given weight and height of a person,"'\ndef bmi_calculator(height, weight) : \n\tbmi = weight/(height**2)\n\treturn bmi'"
Write a Python function to find the maximum ODD number from a given list,'\ndef odd_max_checker(list1) : \n\tmaxnum = 0\n\tfor num in list1 : \n\t    if num%2 != 0 : \n\t        if num > maxnum : \n\t            maxnum = num\n\treturn maxnum'
Write a Python function to find the maximum EVEN number from a given list,'\ndef even_max_checker(list1) : \n\tmaxnum = 0\n\tfor num in list1 : \n\t    if num%2 == 0 : \n\t        if num > maxnum : \n\t            maxnum = num\n\treturn maxnum'
Write a Python function to print the root of the quadratic equation,"""\ndef quadratic_root(A,B,C) : \n\timport math\n\td=((B**2)-4*A*C)\n\tif d>=0 : \n\t    s=(-B+(d)**0.5)/(2*A)\n\t    p=(-B-(d)**0.5)/(2*A)\n\t    print(math.floor(s),math.floor(p))\n\telse : \n\t    print('The roots are imaginary')"""
Write a Python program to print the calendar of any given year,'\nimport calendar\nyear=2020\nprint(calendar.calendar(year))'
Write a Python function to print whether the given Date is valid or not,"'\ndef date_validator(d,m,y) : \n\timport datetime \n\ttry : \n\t\ts=datetime.date(y,m,d)\n\t\tprint(""Date is valid."")\n\texcept ValueError :  \n\t\tprint(""Date is invalid."")'"
Write a Python function to find the N-th number which is both square and cube,'\ndef nth_sq_and_cube(N) : \n\tR = N**6\n\treturn R'
Write a Python function to check whether a number is a power of another number or not,"""\ndef power_checker(a,b) : \n\timport math\n\ts=math.log(a,b)\n\tp=round(s)\n\tif (b**p)==a : \n\t    return f'{a} is the power of {b}.'\n\telse : \n\t    return f'{a} is NOT the power of {b}.'"""
Write a Python program to print the list of all keywords,"'\nimport keyword\nprint(""Python keywords are..."")\nprint(keyword.kwlist)'"
Write a Python function to find the intersection of two arrays,"'\ndef array_intersection(A,B) : \n\tinter=list(set(A)&set(B))\n\treturn inter'"
Write a Python function to find the union of two arrays,"'\ndef array_union(A,B) : \n\tunion=list(set(A)|set(B))\n\treturn union'"
Write a Python program that prints a new set with all items from both sets by removing duplicates   ---------------------------------------------------------,"'\nset1 = {10, 20, 30, 40, 50}\nset2 = {30, 40, 50, 60, 70}\nprint(set1.union(set2))'"
"Write a Python program that Given two Python sets, update first set with items that exist only in the first set and not in the second set   ---------------------------------------------------------","'\nset1 = {10, 20, 30}\nset2 = {20, 40, 50}\nprint(set1.difference_update(set2))'"
"Write a Python program that prints a set of all elements in either A or B, but not both   ---------------------------------------------------------","'\nset1 = {10, 20, 30, 40, 50}\nset2 = {30, 40, 50, 60, 70}\nprint(set1.symmetric_difference(set2))'"
Write a Python program that determines whether or not the following two sets have any elements in common. If yes display the common elements   ---------------------------------------------------------,"'\nset1 = {10, 20, 30, 40, 50}\nset2 = {60, 70, 80, 90, 10}\nif set1.isdisjoint(set2) : \n\tprint(""Two sets have no items in common"")\nelse : \n\tprint(""Two sets have items in common"")\n\tprint(set1.intersection(set2))'"
Write a Python function to print number with commas as thousands separators,"'\ndef formattedNumber(n) : \n\treturn (""{ : ,}"".format(n))'"
Write a Python program to find the total number of uppercase and lowercase letters in a given string,"""\nstr1='TestStringInCamelCase'\nno_of_ucase, no_of_lcase = 0,0\nfor c in str1 : \n\tif c>='A' and c<='Z' : \n\t\tno_of_ucase += 1\n\tif c>='a' and c<='z' : \n\t\tno_of_lcase += 1\nprint(no_of_lcase)\nprint(no_of_ucase)"""
Write a Python program to find the total number of letters and digits in a given string,"""\nstr1='TestStringwith123456789'\nno_of_letters, no_of_digits = 0,0\nfor c in str1 : \n\tno_of_letters += c.isalpha()\n\tno_of_digits += c.isnumeric()\nprint(no_of_letters)\nprint(no_of_digits)"""
Write a Python function to count occurrence of a word in the given text,"'\ndef text_searcher(text, word) : \n\tcount = 0\n\tfor w in text.split() : \n\t\tif w == word : \n\t\t\tcount = count + 1\n\treturn count'"
Write a Python function to capitalizes the first letter of each word in a string,'\ndef capitalize(text) : \n\treturn text.title()'
Write a Python function to remove falsy values from a list,"'\ndef newlist(lst) : \n\treturn list(filter(None, lst))'"
Write a Python function to to find the sum of all digits of a given integer,'\ndef sum_of_digits(num) : \n\tif num == 0 : \n\treturn 0\n\telse : \n\treturn num % 10 + sum_of_digits(int(num / 10))'
Write a Python function to check all elements of a list are the same or not,'\ndef check_equal(a) : \n\treturn a[1 : ] == a[ : -1]'
Write a Python program to convert string into a datetime object,"'\nfrom datetime import datetime\ndate_string = ""Mar 26 2021  4 : 20PM""\ndatetime_object = datetime.strptime(date_string, \'%b %d %Y %I : %M%p\')\nprint(datetime_object)'"
Write a Python function that returns the integer obtained by reversing the digits of the given integer,'\ndef reverse(n) : \n\ts=str(n) \n\tp=s[ :  : -1]\n\treturn p '
"Write a Python program that updates set1 by adding items from set2, except common items","'\nset1 = {10, 20, 30, 40, 50}\nset2 = {30, 40, 50, 60, 70}\nset1.symmetric_difference_update(set2)\nprint(set1)'"
Write a Python program that removes items from set1 that are not common to both set1 and set2,"'\nset1 = {10, 20, 30, 40, 50}\nset2 = {30, 40, 50, 60, 70}\nset1.intersection_update(set2)\nprint(set1)'"
Write a Python program to reverse a tuple,"'\naTuple = (10, 20, 30, 40, 50)\naTuple = aTuple[ :  : -1]\nprint(aTuple)'"
Write a Python program to swap two tuples,"'\ntuple1 = (11, 22)\ntuple2 = (99, 88)\ntuple1, tuple2 = tuple2, tuple1\nprint(tuple2)\nprint(tuple1)'"
Write a Python program to modify the second item (33) of a list inside a following tuple to 333,"'\ntuple1 = (11, [22, 33], 44, 55)\ntuple1[1][1] = 333\nprint(tuple1)'"
Write a Python program to sort a tuple of tuples by 2nd item,"""\ntuple1 = (('a', 23),('b', 37),('c', 11), ('d',29))\ntuple1 = tuple(sorted(list(tuple1), key=lambda x :  x[1]))\nprint(tuple1)"""
Write a Python function to check if all items in the following tuple are the same,'\ndef check_tuple_same(sampleTuple) : \n\treturn all(i == sampleTuple[0] for i in sampleTuple)'
Write a Python program to print current time in milliseconds,'\nimport time\nmilliseconds = int(round(time.time() * 1000))\nprint(milliseconds)'
Write a Python function func1() such that it can accept a variable length of  argument and print all arguments value,'\ndef func1(*args) : \n\tfor i in args : \n\t\tprint(i)'
Write a Python program that Given a two Python list. Iterate both lists simultaneously such that list1 should display item in original order and list2 in reverse order,"'\nlist1 = [10, 20, 30, 40]\nlist2 = [100, 200, 300, 400]\nfor x, y in zip(list1, list2[ :  : -1]) : \n\tprint(x, y)'"
"Write a Python function that Given a string, display only those characters which are present at an even index number","'\ndef printEveIndexChar(str) : \n\tfor i in range(0, len(str)-1, 2) : \n\tprint(""index["",i,""]"", str[i] )'"
"Write a Python function that Given a string and an integer number n, remove characters from a string starting from zero up to n and return a new string","'\ndef removeChars(str, n) : \n\treturn str[n : ]'"
"Write a Python function that Given a list of numbers, return True if first and last number of a list is same",'\ndef isFirst_And_Last_Same(numberList) : \n\tfirstElement = numberList[0]\n\tlastElement = numberList[-1]\n\tif (firstElement == lastElement) : \n\t\treturn True\n\telse : \n\t\treturn False'
"Write a Python function that Given a list of numbers, Iterate it and print only those numbers which are divisible of 5",'\ndef findDivisible(numberList) : \n\tfor num in numberList : \n\t\tif (num % 5 == 0) : \n\t\t\tprint(num)'
Write a Python function that Given a two list of numbers create a new list such that new list should contain only odd numbers from the first list and even numbers from the second list,"'\ndef mergeList(list1, list2) : \n\tthirdList = []\n\tfor num in list1 : \n\t\tif (num % 2 != 0) : \n\t\t\tthirdList.append(num)\n\tfor num in list2 : \n\t\tif (num % 2 == 0) : \n\t\t\tthirdList.append(num)\n\treturn thirdList'"
"Write a Python program to return a set of all elements in either A or B, but not both","'\nset1 = {10, 20, 30, 40, 50}\nset2 = {30, 40, 50, 60, 70}\nprint(set1.symmetric_difference(set2))'"
Write a Python program to Subtract a week ( 7 days) from a given date in Python,"'\nfrom datetime import datetime, timedelta\ngiven_date = datetime(2020, 2, 25)\ndays_to_subtract = 7\nres_date = given_date - timedelta(days=days_to_subtract)\nprint(res_date)'"
Write a Python program to Find the day of week of a given date,"""\nfrom datetime import datetime\ngiven_date = datetime(2020, 7, 26)\nprint(given_date.strftime('%A'))"""
Write a Python program to Convert following datetime instance into string format,"'\nfrom datetime import datetime\ngiven_date = datetime(2020, 2, 25)\nstring_date = given_date.strftime(""%Y-%m-%d %H : %M : %S"")\nprint(string_date)'"
Write a Python program to convert two equal length sets to dictionary,"""\nkeys = {'Ten', 'Twenty', 'Thirty'}\nvalues = {10, 20, 30}\nsampleDict = dict(zip(keys, values))\nprint(sampleDict)"""
Write a program which will find all such numbers which are divisible by 7 but are not a multiple of 5 between 2000 and 3200 (both included).,"'\nl=[]\nfor i in range(2000, 3201) : \n\tif (i%7==0) and (i%5!=0) : \n\t\tl.append(str(i))'"
Write a program that will determine the object type,"""\ndef typeIdentifier(object) : \n\treturn f'object type  :  {type(object)}'"""
Write a Python class which has at least two methods: getString: to get a string from console input printString: to print the string in upper case.,"'\nclass IOString(object) : \n\tdef __init__(self) : \n\t\tself.s = """"\n\tdef getString(self) : \n\t\tself.s = input()\n\tdef printString(self) : \n\t\tprint(self.s.upper())\nstrObj = IOString()\nstrObj.getString()\nstrObj.printString()'"
Write a program that will determine the memory usage by python process,"'\nimport os, psutil\nprint(psutil.Process(os.getpid()).memory_info().rss / 1024 ** 2)'"
Write a function that will provide the ascii value of a character,"""\ndef charToASCII(chr) : \n\treturn f'ASCII value of {chr} is :  {ord(chr)}'"""
Write a function to reverse a string,'\ndef revStr(inp) : \n\tinp = inp[ :  : -1]\n\treturn inp'
Write a function to determine the bits used by any number,"""\ndef totalBits(n) : \n\treturn f'total number of bits used in {n} is  :  {len(bin(n)[2 :  ])}'"""
write a function to find the sum of Sine series,"'\nimport math\ndef sin(x,n) : \n\tsine = 0\n\tfor i in range(n) : \n\t\tsign = (-1)**i\n\t\tpi=22/7\n\t\ty=x*(pi/180)\n\t\tsine = sine + ((y**(2.0*i+1))/math.factorial(2*i+1))*sign\n\treturn sine'"
Write a function to determine whether a given number is even or odd recursively,"'\ndef check(n) : \n\tif (n < 2) : \n\t\treturn (n % 2 == 0)\n\treturn (check(n - 2))\nn=int(input(""Enter number : ""))\nif(check(n)==True) : \n\t\t print(""Number is even!"")\nelse : \n\t\t print(""Number is odd!"")'"
Write a program to swap two variables inplace,"'\na,b = b,a'"
Write a program that prints the words in a comma-separated sequence after sorting them alphabetically.,"""\nitems=[x for x in input().split(',')]\nitems.sort()\nprint(','.join(items))"""
Write a function that takes a base and a power and finds the power of the base using recursion.,"'\ndef power(base,exp) : \n\tif(exp==1) : \n\t\treturn(base)\n\tif(exp!=1) : \n\t\treturn(base*power(base,exp-1))\nbase=int(input(""Enter base :  ""))\nexp=int(input(""Enter exponential value :  ""))\nprint(""Result : "",power(base,exp))'"
Write a function that will convert a string into camelCase,"'\nfrom re import sub\ndef camelCase(string) : \n\tstring = sub(r""(_|-)+"", "" "", string).title().replace("" "", """")\n\treturn string[0].lower() + string[1 : ]'"
Write a function to remove empty list from a list using list comprehension,'\ndef removeEmptyList(li) : \n\tres = [ele for ele in li if ele != []] \n\treturn res'
Write a function to Find the size of a Tuple in Python without garbage values,"""\nTuple = (10,20)\ndef sizeOfTuple(tup) : \n\treturn f'Size of Tuple :  {str(Tuple.__sizeof__())} bytes' """
"Write a function, which will find all such numbers between 1000 to 9999 that each digit of the number is an even number.","'\nvalues = []\nfor i in range(1000, 9999) : \n\ts = str(i)\n\tif (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0) : \n\t\t values.append(s)'"
Write a function that finds a list is homogeneous,"'\ndef homoList(li) : \n\tres = True\n\tfor i in li :  \n\t\t if not isinstance(i, type(li[0])) :  \n\t\t\tres = False \n\t\t\tbreak\n\treturn res'"
Write a function to remove a given date type elements from a list.,"'\ndef removeDataType(li,dType) : \n\tres = []\n\tfor i in li : \n\t\tif not isinstance(i, dType) : \n\t\t\tres.append(i)\n\treturn res'"
"Write a python function to find out the occurence of ""i"" element before first ""j"" in the list","'\ndef firstOccurence(arr, i,j) : \n\tres = 0\n\tfor k in arr : \t\t\t\t \n\t\t if k == j :  \n\t\t\tbreak\n\t\t if k == i :  \n\t\t\tres += 1\n\treturn res'"
Write a program to check whether a file/path/direcory exists or not,"'\nfile_path = ""path/here""\nimport os.path\nos.path.exists(file_path)'"
Write a program to merge two python dictionaries,"""\nx={'key1' : 'val1','key2' : 'val2'}\ny={'key3' : 'val3','key4' : 'val4'}\nz = {**x, **y} # z = x | y  """
Write a program to convert dictionary into JSON,"'\nimport json\ndata = {""key1""  :  ""value1"", ""key2""  :  ""value2""}\njsonData = json.dumps(data)\nprint(jsonData)'"
Write a function to Check whether following json is valid or invalid,'\nimport json\ndef validateJSON(jsonData) : \n\ttry : \n\t\tjson.loads(jsonData)\n\texcept ValueError as err : \n\t\treturn False\n\treturn True'
Write a function to remove and print every third number from a list of numbers until the list becomes empty,'\ndef remove_nums(int_list) : \n\tposition = 3 - 1 \n\tidx = 0\n\tlen_list = (len(int_list))\n\twhile len_list>0 : \n\tidx = (position+idx)%len_list\n\tprint(int_list.pop(idx))\n\tlen_list -= 1'
Write a program to get a list of locally installed Python modules,"'\nimport pkg_resources\ninstalled_packages = pkg_resources.working_set\ninstalled_packages_list = sorted([""%s==%s"" % (i.key, i.version)\n\t\tfor i in installed_packages])\nfor m in installed_packages_list : \n\tprint(m)'"
Write a function to add two positive integers without using the '+' operator,"'\ndef add_without_plus_operator(a, b) : \n\twhile b != 0 : \n\t\tdata = a & b\n\t\ta = a ^ b\n\t\tb = data << 1\n\treturn a'"
Write a program to find the median among three given number,'\nx=10\ny=20\nz=30\nif y < x and x < z : \n\tprint(x)\nelif z < x and x < y : \n\tprint(x)\nelif z < y and y < x : \n\tprint(y)\nelif x < y and y < z : \n\tprint(y)\nelif y < z and z < x : \n\tprint(z)\t\nelif x < z and z < y : \n\tprint(z)'
Write a program to compute the number of digits in multiplication of two given integers,"'\na,b = 312, 410\nprint(len(str(a*b)))'"
Write a function to return the area of a rhombus,"'\ndef area(d1, a) :  \n\td2 = (4*(a**2) - d1**2)**0.5\n\tarea = 0.5 * d1 * d2 \n\treturn(area) '"
"Write a function that Given a number, find the most significant bit number which is set bit and which is in power of two",'\ndef setBitNumber(n) :  \n\tif (n == 0) :  \n\t\treturn 0\n\tmsb = 0 \n\tn = int(n / 2) \n\twhile (n > 0) :  \n\t\tn = int(n / 2) \n\t\tmsb += 1\n\treturn (1 << msb) '
Write a function to calculate volume of Triangular Pyramid,"'\ndef volumeTriangular(a, b, h) :  \n\treturn (0.1666) * a * b * h '"
Write a function to calculate volume of Square Pyramid,"'\ndef volumeSquare(b, h) :  \n\treturn (0.33) * b * b * h '"
Write a function to calculate Volume of Pentagonal Pyramid,"'\ndef volumePentagonal(a, b, h) :  \n\treturn (0.83) * a * b * h '"
Write a function to calculate Volume of Hexagonal Pyramid,"'\ndef volumeHexagonal(a, b, h) :  \n\treturn a * b * h'"
Write a python program to find and print if a number given is disarium or not,"'\nnum = 135\nnum_len = len(str(num))\nn = num\nsum = 0\nexp = num_len\nwhile n != 0 : \n\ti = int(n % 10)\n\tn = int(n / 10)\n\tsum += i ** exp\n\texp -= 1\nif sum == num : \n\tprint(""disarium"")\nelse : \n\tprint(""not disarium"")'"
Write a python program to find and print volume of a sphere for which diameter d is given,"'\nimport math\ndiameter = 12.\nradius = diameter/2.\n# Calculate volume V\nV = 4./3. * math.pi * radius ** 3\nprint(f""Volume={V}"")'"
"Write a python program using list comprehension to produce and print the list ['x', 'xx', 'xxx', 'xxxx', 'y', 'yy', 'yyy', 'yyyy', 'z', 'zz', 'zzz', 'zzzz']","""\ninput_string_list = ['x', 'y', 'z']\nrepeat_count = 4\nlist2 = [input_string_list[i] * (j+1)  for i in range(len(input_string_list)) for j in range(repeat_count) ]\nprint(list2)"""
"Write a python program using list comprehension to produce and print the list ['x', 'y', 'z', 'xx', 'yy', 'zz', 'xxx', 'yyy', 'zzz', 'xxxx', 'yyyy', 'zzzz']","""\ninput_string_list = ['x', 'y', 'z']\nrepeat_count = 4\nlist3 = [input_string_list[i] * (j+1) for j in range(repeat_count)  for i in range(len(input_string_list)) ]\nprint(list3)"""
"Write a python program using list comprehension to produce and print the list  [[2],[3],[4],[3],[4],[5],[4],[5],[6]]",'\nstart_num = 2\nrepeat_count = 3\nmax_offset = 3\nlist4 = [[start_num + i + j ]  for j in range(max_offset) for i in range(repeat_count) ] \nprint(list4)'
"Write a python program using list comprehension to produce and print the list [[2, 3, 4, 5], [3, 4, 5, 6], [4, 5, 6, 7], [5, 6, 7, 8]]",'\nstart_num = 2\nrepeat_count = 4\nmax_offset =4\nlist5 = [[start_num + i + j  for j in range(max_offset)]  for i in range(repeat_count) ]\nprint(list5)'
"Write a python program using list comprehension to produce and print the list [(1, 1), (2, 1), (3, 1), (1, 2), (2, 2), (3, 2), (1, 3), (2, 3), (3, 3)]","'\nmax_count = 3\nlist6 = [(j+1,i+1)  for i in range(max_count)  for j in range(max_count) ]\nprint(list6)'"
Write a python program that maps list of words into a list of integers representing the lengths of the corresponding words,"'\nlst = [""ab"",""cde"",""erty""]\nlength_list = list(map((lambda element :  len(element)), lst))\nprint(str(length_list))'"
Write a python program which accepts users first name and last name and print in reverse order with a space,"'\nfirst_name = input(""Enter your first name :  "")\nlast_name = input(""Enter your last name :  "")\nprint(last_name.strip() + "" "" + first_name.strip())'"
Write a python function to check if a number given is a Armstrong number,'\ndef isArmstrong(x) : \n\tn = 0\n\twhile (x != 0) :  \n\t\tn = n + 1\n\t\tx = x // 10\n\ttemp = x \n\tsum1 = 0\n\twhile (temp != 0) :  \n\t\tr = temp % 10\n\t\tsum1 = sum1 + r ** n\n\t\ttemp = temp // 10\n\treturn (sum1 == x) '
Write a python program to find and print sum of series with cubes of first n natural numbers,"'\nn = 10\nsum = 0\nfor i in range(1, n+1) :  \n\tsum += i**3\nprint(f""{sum}"")'"
"Write a python  function which returns True elements in a given list is monotonically increasing or decreasing, return False otherwise",'\ndef isMonotonic(A) :   \n\treturn (all(A[i] <= A[i + 1] for i in range(len(A) - 1)) or\n\t\t\tall(A[i] >= A[i + 1] for i in range(len(A) - 1))) '
Write a python program to find and print  K th column of a matrix,"'\ntest_list = [[4, 5, 6], [8, 1, 10], [7, 12, 5]] \nK = 2\nres = [sub[K] for sub in test_list] \nprint(""The Kth column of matrix is  :  "" + str(res)) '"
Write a python program to Convert and print Snake case to Pascal case,"'\ntest_str = \'go_east_or_west_india_is_the_best\'\nres = test_str.replace(""_"", "" "").title().replace("" "", """")\nprint(res)'"
Write a python  program to print only even length words in a sentence,"""\ndef printEvenLengthWords(s) :        \n\ts = s.split(' ')  \n\tfor word in s : \n\t\tif len(word)%2==0 :  \n\t\t\tprint(word)  """
Write a python function to find uncommon words between two sentences given,"'\ndef UncommonWords(A, B) :  \n\tcount = {} \n\tfor word in A.split() :  \n\t\tcount[word] = count.get(word, 0) + 1\n\tfor word in B.split() :  \n\t\tcount[word] = count.get(word, 0) + 1\n\treturn [word for word in count if count[word] == 1]'"
Write a python function which determines if binary representation of a number is palindrome,'\ndef binaryPallindrome(num) :  \n\t\tbinary = bin(num) \n\t\tbinary = binary[2 : ] \n\t\treturn binary == binary[-1 :  : -1] '
Write a program to print inverted star pattern for the given number,"""\nn=11\nfor i in range (n, 0, -1) :  \n\tprint((n-i) * ' ' + i * '*') """
Write a python function to find and print if a email address given is valid or not,"'\nimport re \nregex = \'^[a-z0-9]+[\\._]?[a-z0-9]+[@]\\w+[.]\\w{2,3}$\'\ndef check(email) :    \n\tif(re.search(regex,email)) :   \n\t\tprint(""Valid Email"")  \n\telse :   \n\t\tprint(""Invalid Email"")\t'"
Write a python function to determine if a year is leap year or not,'\ndef is_leap(year) : \n\tleap = False'
Write your logic here,'\n\tif year % 4 == 0 : \n\t\tif year % 400 == 0 : \n\t\t\tleap = True\n\t\telif year % 100 == 0 : \n\t\t\tleap = False\n\t\telse : \n\t\t\tleap = True\n\treturn leap'
Write a python function to find gcd using eucliean algorithm,"'\ndef gcd(a, b) :   \n\tif a == 0  :  \n\t\treturn b  \n\treturn gcd(b%a, a)'"
Write a python function to check if number is divisible by all the digits,'\ndef allDigitsDivide( n)  : \n\ttemp = n\n\twhile (temp > 0)  : \n\t\tdigit = temp % 10\n\t\tif not (digit != 0 and n % digit == 0)  : \n\t\t\treturn False\n\t\ttemp = temp // 10\n\treturn True'
Write a python program to flatten  a multidimensional list,"'\nmy_list = [[10,20,30],[40,50,60],[70,80,90]]\nflattened = [x for temp in my_list for x in temp]\nprint(flattened)'"
Write Python Program to Print Table of a Given Number,"'\nn=int(input(""Enter the number to print the tables for : ""))\nfor i in range(1,11) : \n\tprint(n,""x"",i,""="",n*i)'"
Write a python program to check and print if the number is a perfect number,"'\nn = int(input(""Enter any number :  ""))\nsum1 = 0\nfor i in range(1, n) : \n\tif(n % i == 0) : \n\t\tsum1 = sum1 + i\nif (sum1 == n) : \n\tprint(""The number is a Perfect number!"")\nelse : \n\tprint(""The number is not a Perfect number!"")'"
Write a python function to return minimum sum of factors of a number,'\ndef findMinSum(num) :  \n\tsum = 0\n\ti = 2\n\twhile(i * i <= num) :  \n\t\twhile(num % i == 0) :  \n\t\t\tsum += i \n\t\t\tnum /= i \n\t\ti += 1\n\tsum += num\t\n\treturn sum'
Write a python program to solve and print the solution for the quadratic equation ax**2 + bx + c = 0,"""\nimport cmath\na = 1\nb = 5\nc = 6\nd = (b**2) - (4*a*c)\nsol1 = (-b-cmath.sqrt(d))/(2*a)\nsol2 = (-b+cmath.sqrt(d))/(2*a)\nprint('The solution are {0} and {1}'.format(sol1,sol2))"""
Write a program to print the powers of 2 using anonymous function,"'\nterms = 10\nresult = list(map(lambda x :  2 ** x, range(terms)))\nprint(""The total terms are : "",terms)\nfor i in range(terms) : \n\tprint(""2 raised to power"",i,""is"",result[i])'"
Write a Python program to shuffle and print a deck of card,"'\nimport itertools, random\ndeck = list(itertools.product(range(1,14),[\'Spade\',\'Heart\',\'Diamond\',\'Club\']))\nrandom.shuffle(deck)\nprint(""You got : "")\nfor i in range(5) : \n\tprint(deck[i][0], ""of"", deck[i][1])'"
Write a python program to sort alphabetically the words form a string provided by the user,"'\nmy_str = ""Hello this Is an Example With cased letters""\nwords = [word.lower() for word in my_str.split()]\nwords.sort()\nprint(""The sorted words are : "")\nfor word in words : \n\tprint(word)'"
Write a python program to remove punctuations from a sentence,"'\npunctuations = \'\'\'!()-[]{}; : \'""\\,<>./?@#$%^&*_~\'\'\'\nmy_str = ""Hello!!!, he said ---and went.""\nno_punct = """"\nfor char in my_str : \n\tif char not in punctuations : \n\t\tno_punct = no_punct + char\nprint(no_punct)'"
Write a python  program to check and print Yes/No if a triangle  of positive area is possible with the given angles,"'\ndef isTriangleExists(a, b, c) :  \n\tif(a != 0 and b != 0 and c != 0 and (a + b + c)== 180) :  \n\t\tif((a + b)>= c or (b + c)>= a or (a + c)>= b) :  \n\t\t\treturn ""YES""\n\t\telse :  \n\t\t\treturn ""NO""\n\telse :  \n\t\treturn ""NO""'"
Write a python function which accepts or discard only string ending with alphanumeric character,"'\nimport re \nregex = \'[a-zA-z0-9]$\'\ndef check(string) : \n\tif(re.search(regex, string)) :   \n\t\tprint(""Accept"")\t\t  \n\telse :   \n\t\tprint(""Discard"") '"
Write a python program to accept a number n and calculate n+nn+nn,"'\nn=int(input(""Enter a number n :  ""))\ntemp=str(n)\nt1=temp+temp\nt2=temp+temp+temp\ncomp=n+int(t1)+int(t2)\nprint(""The value is : "",comp)'"
Write a program to accept a number and print inverted star pattern,"'\nn=int(input(""Enter number of rows :  ""))\nfor i in range (n,0,-1) : \n\tprint((n-i) * \' \' + i * \'*\')'"
Write a program to print prime numbers in a range using Sieve of Eratosthenes.,"'\nn=int(input(""Enter upper limit of range :  ""))\nsieve=set(range(2,n+1))\nwhile sieve : \n\tprime=min(sieve)\n\tprint(prime,end=""\\t"")\n\tsieve-=set(range(prime,n+1,prime))\nprint()'"
"Write a function Given a list of daily temperatures T, return a list such that, for each day in the input, tells you how many days you would have to wait until a warmer temperature. If there is no future day for which this is possible, put 0 instead.","'\ndef dailyTemperatures(T) : \n\tstack = []\n\tres = [0 for _ in range(len(T))]\n\tfor i, t1 in enumerate(T) : \n\t\twhile stack and t1 > stack[-1][1] : \n\t\t\tj, t2 = stack.pop()\n\t\t\tres[j] = i - j\n\t\tstack.append((i, t1))\n\treturn res'"
Write a function to calculate median of a list of numbers given,'\ndef median(pool) : \n\tcopy = sorted(pool)\n\tsize = len(copy)\n\tif size % 2 == 1 : \n\t\treturn copy[int((size - 1) / 2)]\n\telse : \n\t\treturn (copy[int(size/2 - 1)] + copy[int(size/2)]) / 2'
Write a function to get the Cumulative sum of a list,"'\ndef Cumulative(lists) :  \n\tcu_list = [] \n\tlength = len(lists) \n\tcu_list = [sum(lists[0 : x : 1]) for x in range(0, length+1)] \n\treturn cu_list[1 : ]'"
Write a python program to convert complex number to polar coordinates,'\nimport cmath  \n# using cmath.polar() method  \nnum = cmath.polar(1)  \nprint(num) '
Write a python program to print calendar of a given year,'\nimport calendar \nyear = 2019\nprint(calendar.calendar(year))   '
write a python program to print even numbers in a list,"'\nlist1  = [2,7,5,64,14]\nfor i in list1 : \n\tif i%2==0 : \n\t\tprint(i,end="" "")'"
write a python program to print positive numbers in a list,"'\nlist1 = [2,4,-5,3,8,-10,-11]\nfor i in list1 : \n\tif i>0 : \n\t\tprint(i,end="" "")'"
write a python program to remove empty list from list and print it,"'\nlist1 = [2,5,6,[],8,[],[],0]\nlist2=[]\nfor i in list1 : \n\tif not isinstance(i,list) : \n\t\tlist2.append(i)\nprint(list2)'"
write a python program to print the list having sum of digits,"'\nlist1 = [12, 67, 98, 34]\nlist2=[]\nfor i in list1 : \n\tsum = 0\n\tfor digit in str(i) :  \n\t\tsum += int(digit) \n\tlist2.append(sum)\nprint(list2)'"
write a python program to find string in a list and print it,"""\nlist1 = [1, 2.0, 'have', 'a', 'nice', 'day'] \ns = 'nice'\nfor i in list1 : \n\tif i == s : \n\t\tprint(f'{s} is  present in the list')"""
write a python function to swap two numbers in a list and return the list,"'\ndef swapPositions(list, pos1, pos2) :  \n\tlist[pos1], list[pos2] = list[pos2], list[pos1] \n\treturn list'"
Driver function,"'\nList1 = [23, 65, 19, 90] \npos1, pos2  = 1, 3\nprint(swapPositions(List1, pos1-1, pos2-1)) '"
write a python function tp print the occurences of i before first j in list,"'\nlist1 = [4, 5, 6, 4, 1, 4, 8, 5, 4, 3, 4, 9] \n# initializing i, j  \ni, j = 4, 8\ncount=0\nfor k in list1 : \n\tif k==i and k!=j : \n\t\tcount=count+1\n\telif k==j : \n\t\t\tbreak;   \nprint(count)'"
9 write a python program to omit K length rows and print the list,"'\nlist1 = [[4, 7], \n\t\t\t\t[8, 10, 12, 8], \n\t\t\t\t[10, 11],  \n\t\t\t\t[6, 8, 10]] \n# initializing K  \nK = 2\nfor i in test_list : \n\tif len(i)==K : \n\t\tlist1.remove(i)\nprint(list1)       '"
14 Write a python program to find elements with the same index and print them,"'\nlist1 = [3, 1, 2, 5, 4, 10, 6, 9] \nlist2 = [] \nfor idx, ele in enumerate(list1) :  \n\tif idx == ele :  \n\t\tlist2.append(ele) \n# printing result  \nprint(""Filtered elements  :  "" + str(list2))'"
15 Write a python program to check if two list are reverse equal and print boolean value,"'\nlist1 = [5, 6, 7, 8] \nlist2 = [8, 7, 6, 5] \n# Check if two lists are reverse equal \n# Using reversed() + == operator \nres = list1 == list(reversed(list2)) \n# printing result  \nprint(""Are both list reverse of each other ?  :  "" + str(res))'"
20 Write a python program to move number to end of string and print them,"'\ntest_str = \'the2sun4rises5sinthe6east9\'\n# printing original string \nprint(""The original string is  :  "" + str(test_str))\ns=\'\'\nr=\'\'\nfor i in test_str : \n\tif i.isdigit() : \n\t\t s=s+i\n\telse : \n\t\t r=r+i \nprint(r+s)'"
21 Write a python program to count the number of spaces in a string and print it,"'\ncount=0\nstring = ""Welcome to schoolofAI""\nfor i in string : \n\tif i=="" "" : \n\t\tcount=count+1\nprint(f\'number of spaces {count}\')'"
22 Write a python program to Concatenate all elements of a list into a string and print it,"""\nl = ['hello', 'guys', 'have', \n\t'a', 'nice', 'day'] \n# this will join all the  \n# elements of the list with ' ' \nl = ' '.join(l)  \nprint(l) """
23 Write a python program to filter similar case strings and print it,'\nx=[]\nfor i in test_list : \n\tif i.islower() or i.isupper() : \n\t\tprint(x.append(i))\nprint(x) '
24 Write a python program to increment Suffix number in string and print it,"""\ntest_str = 'hello006'\nx=''\nr=''\nfor i in test_str : \n\tif i.isdigit() and int(i)>0 : \n\t\tx=x+str(int(i)+1)\n\telse : \n\t\t r=r+i\nprint(r+x)  """
25 Write a python program to add phrase in the middle of string and print it,"'\ntest_str = \'The sun in the east\'\nmid_str = ""rises""\ns=""""\nl=test_str.split("" "")\nfor i in range(0,len(l)) : \n\tif i==len(l)//2 : \n\t\tl.insert(i,mid_str)\n\t\tbreak\ns="" "".join(i for i in l)\nprint(s) '"
27 Write a python program to extract strings with successive alphabets in alphabetical order and print the list,"""\nlist1 = ['gfg', 'is', 'best', 'for', 'geeks'] \nres = [] \nfor i in range(0,len(list1)) : \n\tfor j in range(0,len(list1[i])-1) : \n\t\tif ord(list1[i][j+1])- ord(list1[i][j])==1 : \n\t\t\tres.append(list1[i])\nprint(res)"""
29 write a python  program to Extract string till first Non-Alphanumeric character and print it,"""\ntest_str = 'geeks4g!!!eeks'\ns=''\nfor i in test_str : \n\tif i.isalnum()==False : \n\t\tbreak\n\telse : \n\t\t s+=i  \nprint(s)   """
30 write a python program  to extract domain name from Email address and print it,"'\ntest_str = \'md.shakiluzzaman@gmail.com\'\n# printing original string \nprint(""The original string is  :  "" + str(test_str))\ns=test_str.split(\'@\')\nprint(s[1])'"
35 Write a python program to remove duplicate word from sentence and print it,"'\nstr1 = ""Good bye bye world world""\nl=str1.split("" "")\n#s=[]\ns=list(set(l))\nprint("" "".join(i for i in s))'"
38 write a python program to extract digits from Tuple list and print it,"'\ntest_list = [(15, 3), (3, 9), (1, 10), (99, 2)] \n# printing original list \nprint(""The original list is  :  "" + str(test_list))\ns=[]\nk=\'\'\nfor i in test_list : \n\tfor j in  i : \n\t\tk+=str(j)\nprint(list(set(k)))'"
46 write a python program to test if Values Sum is Greater than Keys Sum in dictionary and print it,"'\ntest_dict = {5 :  3, 1 :  3, 10 :  4, 7 :  3, 8 :  1, 9 :  5} \nres = sum(list(test_dict.keys())) < sum(list(test_dict.values())) \n# printing result \nprint(""The required result  :  "" + str(res))'"
47 write a program to  sort Dictionary by key-value Summation and print it,"'\ntest_dict = {3 :  5, 1 :  3, 4 :  6, 2 :  7, 8 :  1} \n# sorted() to sort, lambda provides key-value addition \nres = sorted(test_dict.items(), key=lambda sub :  sub[0] + sub[1]) '"
converting to dictionary,"'\nres = {sub[0] :  sub[1] for sub in res} \n# printing result \nprint(""The sorted result  :  "" + str(res)) '"
49 Write a  Python function to Sort a List of Dictionaries by the Sum of their Values and print it,"'\ntest_list = [{1  :  3, 4  :  5, 3  :  5}, {1  :  7, 10  :  1, 3  :  10}, {1  :  100}, {8  :  9, 7  :  3}]\ndef func(test_list) : \n\treturn sum(list(test_list.values()))\nfor i in test_list : \n\ttest_list.sort(key=func) \nprint(test_list)'"
51 write a python program to check whether the values of a dictionary are in same order as in a list,"'\ntest_dict = {""gfg""  :  4, ""is""  :  10, ""best""  :  11, ""for""  :  19, ""geeks""  :  1} \n# initializing list  \nsub_list = [4, 10, 11, 19, 1]\nl=list(test_dict.values())\nif l == sub_list : \n\tprint(True)\nelse : \n\tprint(False)\t'"
55 write a python program to extract  N largest dictionaries keys and print it,"'\ntest_dict = {6  :  2, 8 :  9, 3 :  9, 10 :  8} \n# initializing N  \nN = 4\nres = [] '"
write a python program to extract N largest dictionaries keys  and print it,"'\nfor key, val in sorted(test_dict.items(), key = lambda x :  x[0], reverse = True)[ : N] :  \n\tres.append(key) \n# printing result  \nprint(""Top N keys are :  "" + str(res))'"
57 write a python program  to add prefix to each key name in dictionary and print it,"'\ntest_dict = {\'Gfg\'  :  6, \'is\'  :  7, \'best\'  :  9, \'for\'  :  8, \'geeks\'  :  11}  \n# initializing prefix  \ntemp = ""Pro""\nd={}\nfor key,value in test_dict.items() : \n\td.update({temp+key : value})\nprint(d)'"
62 write a program to concatenate Ranged Values in String list and print it,"'\ntest_list = [""abGFGcs"", ""cdforef"", ""asalloi""] \n# initializing range \ni, j = 2, 5\nr=\'\'\nfor z in test_list : \n\tr += z[i : j] \nprint(r)'"
64 write a program  to convert string to dictionary and print it,"'\nstr = "" Jan = January; Feb = February; Mar = March""\ndictionary = dict(subString.split(""="") for subString in str.split("";"")) \nprint(dictionary) '"
67 write a python program to group Strings on Kth character and print it,"'\ntest_list = [""gfg"", ""is"", ""best"", ""for"", ""geeks""] \n# printing original list \nprint(""The original list is  :  "" + str(test_list)) \n# initializing K  \nK = 2\nd={}\nfor i in test_list : \n\td.update({i[K-1] : [i]})\nprint(d) '"
81 write a python program to print consecutive Kth column Difference in Tuple List,"'\ntest_list = [(5, 4, 2), (1, 3, 4), (5, 7, 8), (7, 4, 3)] \nprint(""The original list is  :  "" + str(test_list)) \nK = 1 \ns=[]\nfor i in range(0,len(test_list)-1) : \n\ts.append(abs(test_list[i][K]-test_list[i+1][K]))\nprint(s)'"
85 write a python program to print rear element extraction from list of tuples records,"'\ntest_list = [(1, \'Rash\', 21), (2, \'Varsha\', 20), (3, \'Kil\', 19)] \n# printing original list  \nprint (""The original list is  :  "" + str(test_list))\ns=[]\nfor i in test_list : \n\tl=len(i)\n\ts.append(i[l-1])\nprint(s)'"
90 write a python program to filter tuples according to list element presence and print it,"'\ntest_list = [(1, 4, 6), (5, 8), (2, 9), (1, 10)] \ns=[]  \n# initialize target list  \ntar_list = [6, 10] \nfor i in test_list : \n\tfor j in i : \n\t\t#print(j)\n\t\tif j in tar_list : \n\t\t\t#print(j)\n\t\t\ts.append(i)\nprint(s)         '"
91 write a python program to concatenate tuple and print it,"'\ntest_tup1 = (1, 3, 5) \ntest_tup2 = (4, 6) \n# printing original tuples \nprint(""The original tuple 1  :  "" + str(test_tup1)) \nprint(""The original tuple 2  :  "" + str(test_tup2)) \nc=test_tup1+test_tup2\nprint(c)'"
92 write a python program to sort list under tuples and print it,"'\ntest_tup = ([7, 5, 4], [8, 2, 4], [0, 7, 5]) \n# printing original tuple \nprint(""The original tuple is  :  "" + str(test_tup)) \ns=tuple(sorted([j for j in i],reverse=False ) for i in test_tup)\nprint(f\'the sorted list inside tuple is {s}\')'"
96 write a python program to convert  list of tuples into digits and print it,"""\nlst = [(11, 100), (22, 200), (33, 300), (44, 400), (88, 800)]\na=''\nfor i in lst : \n\tfor j in i : \n\t\ta+=str(j)\nprint(list(set(a)))"""
98 write a python program to  count the elements in a list until an element is a Tuple  and print it,"""\nli = [4, 5, 6, 10, (1, 2, 3), 11, 2, 4]\ncount=0\nfor i in li : \n\tif  isinstance(i,tuple) : \n\t\tbreak\n\tcount=count+1\nprint(f'count of element till tuple is encountered {count}')"""
write a python function to remove last element in the list,'\ndef remove_last_element_list(list1) : \n\tlist1.pop()\n\treturn list1\n# 2'
write a python function to find the add two numbers and then find the largest among sum and other two inputs,"'\ndef find_the_largest(num1, num2) : \n\tsum_ = num1+num2\n\tif num1 >= sum_ and num1 >= num2 : \n\t\treturn num1\n\telif num2 >= sum_ and num2 >= num1 : \n\t\treturn num2\n\telse : \n\t\treturn sum_\n# 3 '"
"write a function to calculate the area of polygon given the number of edges, circumradius","'\nimport math\ndef area_of_polygon(number_of_edges, circumradius) : \n\t\treturn number_of_edges * 2 * circumradius * math.sin(180/number_of_edges) * circumradius * math.cos(180/number_of_edges) * 0.5\n# 4'"
"write a function to calculate the apothem of polygon given the number of edges, circumradius","'\nimport math\ndef apothem_of_polygon(number_of_edges, circumradius) : \n\treturn circumradius * math.cos(180/number_of_edges)\n# 5'"
"write a function which creates a deck of cards, given the list of suits and values","'\ndef create_deck_of_cards(values :  list, suits :  list) : \n\tcard_deck = []\n\tfor i in range(52) : \n\t\ttup = (values[i], suits[i])\n\t\tcard_deck.append(tup)\n\treturn card_deck\n# 6'"
write a function which takes in a list and a number as an input and returns a list with each list element raised to power of that number,"'\ndef powered_list(a_list, a_number) : \n\ta_list = [math.pow(a_number) for i in a_list]  \n\treturn a_list\n# 8 '"
write a function to execute a string containing Python code,'\ndef execute_python_code(a_string) : \n\treturn exec(a_string)\n# 9 '
write a function to multiply all the numbers in a list,'\ndef multiply_all(a_list) : \n\tproduct = 1\n\tfor i in a_list : \n\t\tproduct *= i\n\treturn product\n# 10'
"write a function to slice a tuple, given an input tuple and start, stop, step=1","'\ndef slice_a_tuple(a_tuple, start, stop, step=1) : \n\treturn a_tuple[start : stop : step]\n# 11'"
write a function to check if a list is empty or not,'\ndef list_is_empty(a_list) : \n\tif not a_list : \n\t\treturn True\n\telse : \n\t\treturn False\n# 12'
Write a Python function to convert a string list to a normal list type,'\nimport ast\ndef convert_string_to_list(str_lst) : \n\treturn ast.literal_eval(str_lst)\n# 13'
Write a Python function to extend a list without append.,"'\ndef extend_list_without_append(list1, list2) : \n\treturn list1.extend(list2)\n# 14'"
Write a Python function to find the median among three given numbers,"'\ndef find_the_median(x,y,z) : \n\tlist_ = sorted([x,y,z])\n\treturn list_[1]\n# 15'"
Write a python function to remove a newline in Python,'\ndef remove_newline(string) : \n\treturn string.strip()\n# 16'
Write a python function to convert a string to a list,"""\ndef convert_str_to_list(string) : \n\treturn string.split(' ')\n# 17"""
Write a python function to remove spaces from a given string,"""\ndef remove_spaces_from_string(string) : \n\treturn string.replace(' ', '')\n# 18"""
Write a python function to capitalize first and last letters of each word of a given string,'\ncapitalize_both_ends = lambda x :  x[0].upper() + x[1 : -1] + x[-1].upper()\ndef capitalize_first_and_last(string) : \n\tstring = string.strip().split()\n\tnew_string = [capitalize_both_ends(word) for word in string]\n\treturn new_string\n# 19'
Write a python function to remove duplicate words from a given string,"""\ndef remove_duplicate_words(string) : \n\tstring = string.strip().split()\n\treturn ' '.join(set(string))\n# 20 """
Write a python function to calculate number of days between two dates using datetime module,"'\nfrom datetime import date\ndef day_diff(date1, date2) : \n\tdiff = date1 - date2\n\treturn diff.days\n# 21'"
Write a python function to get the volume of a sphere with radius as input,'\ndef sphere_volume(radius) : \n\tvolume =  4.0/3.0 * 3.14 * radius ** 3\n\treturn volume\t\n# 22'
Write a Python function to check whether the input letter is a vowel or not,"'\ndef check_vowel_or_not(letter) : \n\tresult =  str(letter) in ""aeiou""\n\treturn result\n# 23'"
Write a Python function to get OS name & platform using os & platform library,"""\nimport os\nimport platform\ndef get_info() : \n\treturn f'OS :  {os.name}\\n Platform :  {platform.system}'\n# 24"""
Write a Python program to print out the number of CPUs working behind the scenes using multiprocessing library,'\nimport multiprocessing\nprint(multiprocessing.cpu_count())\n# 25'
Write a Python program to calculate the hypotenuse of a right angled triangle using math library,"'\nfrom math import sqrt\nprint(""Input lengths of shorter triangle sides : "")\ndef hypotenuse(side1, side2) : \n\thyp = sqrt(side1**2 + side2**2)\n\treturn hyp\n# 26'"
Write a Python function to convert height (in feet and inches) to centimeters,"'\ndef height_converter(h_ft, h_inch) : \n\th_inch += h_ft * 12\n\th_cm = round(h_inch * 2.54, 1)\n\treturn h_cm\n# 27'"
"Write a Python function to convert the distance (in feet) to inches, yards, and miles.","'\ndef distance_converter(d_ft) : \n\td_inches = d_ft  * 12\n\td_yards = d_ft  / 3.0\n\td_miles = d_ft  / 5280.0\n\treturn f""Distance in Inches : {d_inches}\\nDistance in Yards  : {d_yards}\\nDistance in Miles  : {d_miles}""\n# 28'"
Write a Python program to get the copyright information using sys module,"'\nimport sys\nprint(""\\nPython Copyright Information"")\nprint(sys.copyright)\nprint()\n# 29'"
Write a Python program to find the available built-in modules using sys and textwrap modules,"""\nimport sys\nimport textwrap\nmodule_name = ', '.join(sorted(sys.builtin_module_names))\nprint(textwrap.fill(module_name, width=70))\n# 30"""
Write a Python program to get the current username using getpass library,'\nimport getpass\nprint(getpass.getuser())\n# 31'
Write a Python program to accept a filename from the user and print the extension of that,"'\ndef filename_extension(file) : \n\tf_extns = file.split(""."")\n\treturn f""The extension of the file is  : {repr(f_extns[-1])}""\n# 32'"
"Write a Python function that calculates the area of parallelogram and takes in base, height as input","""\ndef area_shape(base, height, shape) : \n\treturn {'triangle' :  0.5*base*height, 'parallelogram' :  base*height}[shape]\n# 33"""
Write a Python function to reverse a string if it's length is a multiple of 4.,"""\ndef reverse_string(str1) : \n\tif len(str1) % 4 == 0 : \n\t\treturn ''.join(reversed(str1))\n\treturn str1\n# 34"""
Write a Python function to reverse words in a string.,"""\ndef reverse_string_words(text) : \n\tfor line in text.split('\\n') : \n\t\treturn(' '.join(line.split()[ :  : -1]))\n# 35"""
Write a Python program to count and display the vowels of a given text.,"'\ndef vowel(text) : \n\tvowels = ""aeiuoAEIOU""\n\tmain_list = [letter for letter in text if letter in vowels]\n\treturn len(main_list), main_list\n# 36'"
Write a Python program to find the first repeated character in a given string,"'\ndef first_repeated_char(str1) : \n\tfor index,c in enumerate(str1) : \n\t\tif str1[ : index+1].count(c) > 1 : \n\t\t\treturn c \n\treturn ""None""\n# 37'"
Write a Python program to find the first repeated word in a given string.,"""\ndef first_repeated_word(str1) : \n\ttemp = set()\n\tfor word in str1.split() : \n\t\tif word in temp : \n\t\t\treturn word\n\t\telse : \n\t\t\ttemp.add(word)\n\treturn 'None'\n# 38"""
Write a Python program to remove spaces from a given string,"""\ndef remove_spaces(str1) : \n\tstr1 = str1.replace(' ','')\n\treturn str1\n# 39"""
Write a Python program to remove spaces from a given string using set,"'\ndef remove_duplicate(str1) : \n\tlist_str = str1.split()\n\treturn """".join(set(list_str))\n# 40'"
Write a Python function that will accept the base and height of a triangle and compute the area.,"'\ndef triangle_area(base, height) : \n\tarea = base*height/2\n\treturn area\n# 41'"
Write a Python program to print the calendar of a given month and year,"'\nimport calendar\ny = int(input(""Input the year  :  ""))\nm = int(input(""Input the month  :  ""))\nprint(calendar.month(y, m))\n# 43'"
Write a python function to get the volume of a cube with side as input,'\ndef cube_volume(side) : \n\tvolume = side ** 3\n\treturn volume \n# 44'
Write a python function to get the volume of a prism with base area & height as input,"'\ndef prism_volume(base_area, height) : \n\tvolume = base_area * height\n\treturn volume\n# 45'"
Write a python function to get the volume of a cylinder with radius & height as input,"'\ndef cylinder_volume(radius, height) : \n\tvolume = 3.14 * (radius ** 2) * height\n\treturn volume\n# 46'"
Write a python function to get the volume of a cone with radius & vertical height as input,"'\ndef cone_volume(radius, height) : \n\tvolume = 1/3 * 3.14 * (radius ** 2) * height\n\treturn volume\n# 47 '"
Write a python function to get the volume of a pyramid with base area & vertical height as input,"'\ndef pyramid_volume(base_area, height) : \n\tvolume = 1/3 * base_area * height\n\treturn volume\n# 48 '"
Write a python function to get the surface area of a cube with side as input,'\ndef cube_surface_area(side) : \n\tsurface_area = 6 * side ** 2\n\treturn surface_area \n# 49'
"Write a python function to get the volume of a rectangular prism with side as length, width and height as input","'\ndef rec_prism_volume(length, width, height) : \n\tvolume = length * width * height\n\treturn volume \n# 50'"
"Write a python function to get the surface_area of a rectangular prism with side as length, width and height as input","'\ndef rec_prism_surface_area(length, width, height) : \n\tsurface_area = 2*((length * width) + (width * height) + (height * length))\n\treturn surface_area \n# 51'"
"Write a python function to get the surface_area of a prism with base area, base perimeter & height as input","'\ndef prism_surface_area(base_area, base_perimeter, height) : \n\tsurface_area = 2*base_area + (base_perimeter*height)\n\treturn surface_area\n# 52'"
Write a python function to get the surface_area of a cylinder with radius & height as input,"'\ndef cylinder_surface_area(radius, height) : \n\tsurface_area = 3.14 * (radius ** 2) + (2 * 3.14 * radius * height)\n\treturn surface_area\n# 53'"
Write a python function to get the surface_area of a cone with radius & slant height as input,"'\ndef cone_surface_area(radius, slant_height) : \n\tsurface_area =  3.14 * (radius ** 2) + 3.14 * radius * slant_height\n\treturn surface_area\n# 54'"
Write a python function to get the surface_area of a pyramid with base area & vertical height as input,"'\ndef pyramid_surface_area(base_area, height) : \n\tsurface_area = 1/3 * base_area * height\n\treturn surface_area\n# 55'"
"Write a python function to get the volume of a cuboid with length, breadth & height as input","'\ndef cuboid_volume(length, breadth, height) : \n\tvolume = length * breadth * height\n\treturn volume\n# 56'"
"Write a python function to generate Lucas Numbers (2, 1, 3, 4, 7, 11, 18...)","'\ndef lucas_numbers(n) : \n\tfirst, second = 2,1\n\tfor _ in range(n) : \n\t\tfirst, second = second, first+second\n\treturn first\n# 58'"
"Write a python function to generate Square Numbers (1, 4, 9, 16, 25...)",'\ndef square_numbers(n) : \n\tfor i in range(n) : \n\t\tyield i ** 2\n# 59'
"Write a python function to generate Cube Numbers (1, 8, 27, 64, 125...)",'\ndef cube_numbers(n) : \n\tfor i in range(n) : \n\t\tyield i **  3\n# 60'
"Write a python function to generate Triangular Number Series (1, 3, 6, 10, 15...)",'\ndef triangle_numbers(n) : \n\tfor i in range(n) : \n\t\tyield int(i*(i+1)/2)\n# 61'
Write a Python program to append a list to the second list.,"""\nlist1 = [1, 2, 3, 0]\nlist2 = ['Red', 'Green', 'Black']\nfinal_list = list1 + list2\nprint(final_list)\n# 64"""
Write a Python program to create the colon of a tuple.,"'\nfrom copy import deepcopy\n#create a tuple\ntuplex = (""HELLO"", 5, [], True) \nprint(tuplex)'"
make a copy of a tuple using deepcopy() function,'\ntuplex_colon = deepcopy(tuplex)\ntuplex_colon[2].append(50)\n#65'
Write a Python program to find the repeated items of a tuple.,"'\ntuplex = 2, 4, 5, 6, 2, 3, 4, 4, 7 \nprint(tuplex)\n#return the number of times it appears in the tuple.\ncount = tuplex.count(4)\nprint(count)\n# 66'"
Write a Python program to slice a tuple  create a tuple,"'\ntuplex = (2, 4, 3, 5, 4, 6, 7, 8, 6, 1)\n#used tuple[start : stop] the start index is inclusive and the stop index\n_slice = tuplex[3 : 5]\n# 67'"
Write a Python program to reverse a tuple.  create a tuple,"'\nx = (""w3resource"")\n# Reversed the tuple\ny = reversed(x)\n# 68'"
Write a Python program to convert a list of tuples into a dictionary.  create a list,"'\nl = [(""x"", 1), (""x"", 2), (""x"", 3), (""y"", 1), (""y"", 2), (""z"", 1)]\nd = {}\nfor a, b in l : \n\td.setdefault(a, []).append(b)\nprint (d)\n# 69'"
Write a Python program to check whether an element exists within a tuple.,"'\ntuplex = (""w"", 3, ""r"", ""e"", ""s"", ""o"", ""u"", ""r"", ""c"", ""e"")\nprint(""e"" in tuplex)\n# 70'"
Write a Python function to convert a list to a tuple.,'\ndef convert_list_to_tuple(list_input) : \n\treturn tuple(list_input)\n# 71'
Write a Python function to unzip a list of tuples into individual lists,'\ndef unzip_list_of_tuples(list_tuple) : \n\treturn list(zip(*l))\n# 72'
Write a Python program to convert a list of tuples into a dictionary.,"'\nl = [(""x"", 1), (""x"", 2), (""x"", 3), (""y"", 1), (""y"", 2), (""z"", 1)]\nd = {}\nfor a, b in l : \n\td.setdefault(a, []).append(b)\nprint(d)\n# 73'"
Write a Python function to clear a set.,'\ndef clear_set(set_input) : \n\tsetp_copy = set_input.copy()\n\tsetp_copy.clear()\n\treturn setp_copy\n# 74'
Write a Python function that returns the ASCII value of the passed in character.,'\ndef ascii_value_of_character(char) : \n\treturn ord(char)\n# 75'
Write a Python function to create a union of sets.  Union,"'\ndef union_of_sets(Set1, Set2) : \n\tresult = Set1 | Set2\n\treturn result\n# 76'"
Write a Python program to add member in a set  A new empty set,"'\ncolor_set = set()\ncolor_set.add(""Red"")\nprint(color_set)\n# 77'"
Write a Python function to add two given lists using map and lambda.,"'\ndef add_two_lists(list_1, list_2) : \n\tresult = map(lambda x, y :  x + y, list_1, list_2)\n\treturn result\n# 78'"
Write a Python function to find numbers within a given range where every number is divisible by every digit it contains.,"'\ndef divisible_by_digits(start_num, end_num) : \n\treturn [n for n in range(start_num, end_num+1) \\\n\t\t\t\tif not any(map(lambda x :  int(x) == 0 or n%int(x) != 0, str(n)))]\n# 79'"
Write a Python function to find the maximum value in a given heterogeneous list using lambda,"'\ndef max_val(list_val) : \n\t\tmax_val = max(list_val, key = lambda i :  (isinstance(i, int), i))  \n\t\treturn(max_val)\n# 80'"
Write a Python function that takes a string and returns the concatenated first and last character,'\ndef first_last(name) : \n\treturn name[0] + name[-1]\n# 81'
Write a Python function to return Syslvester's Sequence   a(n) = a(n-1)**2 + a(n-1) + 1,'\ndef syslvester_seq(n) : \n\tif n == 1 : \n\t\treturn 2\n\tif n > 1 : \n\t\treturn syslvester_seq(n-1)**2 - syslvester_seq(n-1) + 1\n# 82'
"Write a Python function to return Tribonacci's Sequence   T(n) = T(n − 1) + T(n − 2) + T(n − 3) for n ≥ 3 [T(0) = 0, T(1) = 1, T(2) = 1]",'\ndef tribonacci_seq(n) : \n\tif n >= 0 : \n\t\tif n == 0 : \n\t\t\treturn 0\n\t\telif n == 1 : \n\t\t\treturn 1\n\t\telif n == 2  : \n\t\t\treturn 1\n\t\telse : \n\t\t\treturn tribonacci_seq(n-1) + tribonacci_seq(n-2) + tribonacci_seq(n-3)\n# 83'
"Write a Python function to return Pell's Sequence   a(n) = 2a(n − 1) + a(n − 2) for n ≥ 2, with a(0) = 0, a(1) = 1.",'\ndef pell_seq(n) : \n\tif n >= 0 : \n\t\tif n == 0 : \n\t\t\treturn 0\n\t\telif n == 1 : \n\t\t\treturn 1\n\t\telse : \n\t\t\treturn 2 * pell_seq(n-1) + pell_seq(n-2)\n# 84'
Write a Python function to return Fermat's Sequence   Fn = 2 ** 2n + 1 for n ≥ 0.,'\ndef fermat_seq(n) : \n\tif n >= 0 : \n\t\treturn 2 ** (2**n) + 1\n# 85'
"Write a Python function to return Padovan's Sequence   P(n) = P(n − 2) + P(n − 3) for n ≥ 3, with P(0) = P(1) = P(2) = 1.","'\ndef padovan_seq(n) : \n\tif n >= 0 : \n\t\tif n in {0,1,2} : \n\t\t\treturn 1\n\t\telse : \n\t\t\treturn padovan_seq(n-3) + padovan_seq(n-2)\n# 86'"
"Write a Python function to return Jacobsthal's number   a(n) = a(n − 1) + 2a(n − 2) for n ≥ 2, with a(0) = 0, a(1) = 1.",'\ndef jacobsthal_seq(n) : \n\t\tif n >= 0 : \n\t\tif n == 0 : \n\t\t\treturn 0\n\t\telif n == 1 : \n\t\t\treturn 1\n\t\telse : \n\t\t\treturn 2 * jacobsthal_seq(n-2) + jacobsthal_seq(n-1)\n# 87'
"Write a Python function to return perrin's number   P(n) = P(n−2) + P(n−3) for n ≥ 3, with P(0) = 3, P(1) = 0, P(2) = 2.",'\ndef perrins_number(n) : \n\tif n >= 0 : \n\t\tif n == 0 : \n\t\t\treturn 3\n\t\telif n == 1 : \n\t\t\treturn 0\n\t\telif n == 2 : \n\t\t\treturn 2\n\t\telse : \n\t\t\treturn perrins_number(n-3) + perrins_number(n-2)\n# 88'
"Write a Python function to return cullen number   Cn = n⋅2n + 1, with n ≥ 0.",'\ndef cullen_number(n) : \n\tif n >= 0 : \n\t\treturn n * 2 ** n + 1\n# 89'
"Write a Python function to return woodall numbers   n⋅2n − 1, with n ≥ 1.",'\ndef woodall_number(n) : \n\tif n >= 0 : \n\t\treturn n * 2 ** n - 1\n# 90'
"Write a Python function to return carol numbers   (2n − 1)**2 - 2, with n ≥ 1.",'\ndef carol_number(n) : \n\tif n >= 0 : \n\t\treturn (2**n - 1)**2 - 2\n# 91'
Write a Python function to return star numbers   The nth star number is Sn = 6n(n − 1) + 1.,'\ndef star_number(n) : \n\treturn 6*n*(n-1)+1\n# 92'
"Write a Python function to return stella octangula numbers   Stella octangula numbers: n (2n2 − 1), with n ≥ 0.",'\ndef stella_octangula_number(n) : \n\tif n >= 0 : \n\t\treturn n*(2**n - 1)\n# 93'
Write a Python function to convert Hours into Seconds,'\ndef hours_to_seconds(hours) : \n\treturn hours * 60 * 60\n# 94'
Write a Python function which returns the Modulo of the two given numbers.,"'\ndef mod(m, n) : \n\treturn m % n\n# 95'"
"Write a Python function that finds the maximum range of a triangle's third edge, where the side lengths are all integers.","'\ndef next_edge(side1, side2) : \n\treturn (side1+side2-1)\n# 96'"
Write a Python function that takes a list and returns the difference between the biggest and smallest numbers.,'\ndef difference_max_min(lst) : \n\treturn abs(min(lst) - max(lst))\n# 97'
Write a Python function that returns the number of frames shown in a given number of minutes for a certain FPS.,"'\ndef number_of_frames(minutes, fps) : \n\treturn (minutes * 60) * fps\n# 98'"
Write a Python function that returns True if a string is empty and False otherwise.,"'\ndef is_empty(s) : \n\tif s == """" : \n\t\treturn True\n\telse : \n\t\treturn False\n# 99'"
Write a Python function that accepts a measurement value in inches and returns the equivalent in feet,'\ndef inches_to_feet(inches) : \n\tif inches < 12 : \n\t\treturn 0\n\treturn inches/12\n# 100'
Write a Python function that takes the age and return the age in days.,'\ndef calc_age(age) : \n\tcalculation = age*365\n\treturn calculation'
write a Python function to remove empty tuples from a list of tuples function to remove empty tuples using filter,"""\ndef Remove(tuples) :  \n\ttuples = filter(None, tuples) \n\treturn tuples \ntuples = [(), ('ram','15','8'), (), ('laxman', 'sita'),  \n\t\t\t('krishna', 'akbar', '45'), ('',''),()] \nprint(Remove(tuples)) """
write a Python function to count the number of occurrences in list,"""\ndef countX(lst, x) :  \n\treturn lst.count(x) \nlst = [8, 6, 8, 10, 8, 20, 10, 8, 8] \nx = 8\nprint('{} has occurred {} times'.format(x, countX(lst, x))) """
write a Python function to clone or copy a list using the in-built function list(),"'\ndef Cloning(li1) :  \n\tli_copy = list(li1) \n\treturn li_copy \nli1 = [4, 8, 2, 10, 15, 18] \nli2 = Cloning(li1) \nprint(""Original List : "", li1) \nprint(""After Cloning : "", li2) '"
write a Python program to print odd Numbers in a List,"'\nlist1 = [10, 21, 4, 45, 66, 93] \nonly_odd = [num for num in list1 if num % 2 == 1] \nprint(""Odd numbers in the list :  "",only_odd) '"
write a Python program to print even Numbers in a List,"'\nlist1 = [10, 21, 4, 45, 66, 93]  \neven_nos = [num for num in list1 if num % 2 == 0] \nprint(""Even numbers in the list :  "", even_nos) '"
write a Python program to find N largest element from given list of integers,"'\nl = [1000,298,3579,100,200,-45,900] \nn = 4\nl.sort() \nprint(l[-n : ]) '"
write a Python program to find the second largest number in given list.,"'\nlist1 = [10, 20, 4, 45, 99]\nlist1.sort()\nprint(""Second largest element is : "", list1[-2])'"
write a python function to swap first and last element of a list,"'\ndef swapList(newList) :  \n\tnewList[0], newList[-1] = newList[-1], newList[0] \n\treturn newList \nnewList = [12, 35, 9, 56, 24] \nprint(swapList(newList)) '"
"write a python function to find simple interest for given principal amount, time and rate of interest.","""\ndef simple_interest(p,t,r) :  \n\tprint('The principal is', p) \n\tprint('The time period is', t) \n\tprint('The rate of interest is',r) \n\tsi = (p * t * r)/100\n\tprint('The Simple Interest is', si) \n\treturn si \nsimple_interest(8, 6, 8) """
write a python program for implementation of selection sort of list,"'\nA = [64, 25, 12, 22, 11] \nfor i in range(len(A)) :  \n\tmin_idx = i \n\tfor j in range(i+1, len(A)) :  \n\t\tif A[min_idx] > A[j] :  \n\t\t\tmin_idx = j \n\tA[i], A[min_idx] = A[min_idx], A[i] \nprint (f""Sorted array {A}"") '"
write a python program for adding two binary numbers,"""\nnum1 = '00001'\nnum2 = '10001'\nsum = bin(int(num1,2) + int(num2,2))\nprint(sum)"""
write a python program to count the number of each vowels,"""\nvowels = 'aeiou'\nip_str = 'Hello, have you tried our tutorial section yet?'\nip_str = ip_str.casefold()\ncount = {}.fromkeys(vowels,0)\nfor char in ip_str : \n\tif char in count : \n\t\tcount[char] += 1\nprint(count)"""
write a python program to print two sets union using operations like in mathematic,"'\nE = {0, 2, 4, 6, 8};\nN = {1, 2, 3, 4, 5};\nprint(""Union of E and N is"",E | N)'"
write a python program to print two sets intersection using operations like in mathematic,"'\nE = {0, 2, 4, 6, 8};\nN = {1, 2, 3, 4, 5};\nprint(""Intersection of E and N is"",E & N)'"
write a python program to print two sets differences using operations like in mathematic,"'\nE = {0, 2, 4, 6, 8};\nN = {1, 2, 3, 4, 5};\nprint(""Difference of E and N is"",E - N)'"
write a python program to print two sets symmetric differences using operations like in mathematic,"'\nE = {0, 2, 4, 6, 8};\nN = {1, 2, 3, 4, 5};\nprint(""Symmetric difference of E and N is"",E ^ N)'"
write a python program to sort alphabetically the words form a string provided by the user,"'\nmy_str = ""Hello this Is an Example With cased letters""\nwords = [word.lower() for word in my_str.split()]\nwords.sort()\nprint(""The sorted words are : "")\nfor word in words : \n\tprint(word)'"
write a python program to remove punctuations from a string,"'\npunctuations = \'\'\'!()-[]{}; : \'""\\,<>./?@#$%^&*_~\'\'\'\nmy_str = ""Hello!!!, he said ---and went.""\nno_punct = """"\nfor char in my_str : \n\tif char not in punctuations : \n\t\tno_punct = no_punct + char\nprint(no_punct)'"
write a python program to check if a string is palindrome or not,"'\nmy_str = \'aIbohPhoBiA\'\nmy_str = my_str.casefold()\nrev_str = reversed(my_str)\nif list(my_str) == list(rev_str) : \n\tprint(""The string is a palindrome."")\nelse : \n\tprint(""The string is not a palindrome."")'"
write a python program to transpose a matrix using a nested loop,"'\nX = [[12,7],\n\t[4 ,5],\n\t[3 ,8]]\nresult = [[0,0,0],\n\t\t\t[0,0,0]]\nfor i in range(len(X)) : \n\tfor j in range(len(X[0])) : \n\t\tresult[j][i] = X[i][j]\nfor r in result : \n\tprint(r)'"
write a python function to find the factors of a number,"'\ndef print_factors(x) : \n\tprint(""The factors of"",x,""are : "")\n\tfor i in range(1, x + 1) : \n\t\tif x % i == 0 : \n\t\t\tprint(i)\nnum = 63\nprint_factors(num)'"
write a python program to print anonymous function to find all the numbers divisible by 13 in the list.,"'\nmy_list = [12, 65, 54, 39, 102, 339, 221,]\nresult = list(filter(lambda x :  (x % 13 == 0), my_list))\nprint(""Numbers divisible by 13 are"",result)'"
write a python program to print display the powers of 2 using anonymous function,"'\nterms = 10\nresult = list(map(lambda x :  2 ** x, range(terms)))\nfor i in range(terms) : \n\tprint(""2 raised to power"",i,""is"",result[i])'"
write a python program to print sum of natural numbers up to num,"'\nnum = 16\nif num < 0 : \n\tprint(""Enter a positive number"")\nelse : \n\tsum = 0\n\twhile(num > 0) : \n\t\tsum += num\n\t\tnum -= 1\n\tprint(""The sum is"", sum)'"
write a python program to print Armstrong numbers in a certain interval,"'\nlower = 100\nupper = 2000\nfor num in range(lower, upper + 1) : \n\torder = len(str(num))\n\tsum = 0\n\ttemp = num\n\twhile temp > 0 : \n\t\tdigit = temp % 10\n\t\tsum += digit ** order\n\t\ttemp //= 10\n\tif num == sum : \n\t\tprint(num)'"
write a python program to check if the number is an Armstrong number or not,"'\nnum = 663\nsum = 0\ntemp = num\nwhile temp > 0 : \n\tdigit = temp % 10\n\tsum += digit ** 3\n\ttemp //= 10\nif num == sum : \n\tprint(num,""is an Armstrong number"")\nelse : \n\tprint(num,""is not an Armstrong number"")'"
write a python program to convert paragraph string into sentense case,"""\na = 'hello. i am a sentence.'\na = '. '.join(i.capitalize() for i in a.split('. '))\nprint(a)"""
write a python program to convert raw string integer inputs to integers,"'\nstr_input = ""1 2 3 4 5 6""\nint_input = map(int, str_input.split())\nprint(list(int_input))'"
write a python program to find index of min element,"'\nlst = [40, 10, 20, 30]\ndef minIndex(lst) : \n\treturn min(range(len(lst)), key=lst.__getitem__)\nprint(minIndex(lst))'"
write a python program to find index of max element,"'\nlst = [40, 10, 20, 30]\ndef maxIndex(lst) : \n\treturn max(range(len(lst)), key=lst.__getitem__)\nprint(maxIndex(lst))'"
write a python program to use maxsplit with arbitrary whitespace,"'\ns = ""foo    bar   foobar foo""\nprint(s.split(None, 2))'"
write a python program to loop over dictionaries that share (some) keys,"""\ndctA = {'a' :  1, 'b' :  2, 'c' :  3}\ndctB = {'b' :  4, 'c' :  3, 'd' :  6}\nfor ky in dctA.keys() & dctB.keys() : \n\tprint(ky)"""
write a python program to loop over dictionaries that share (some) keys and values,"""\ndctA = {'a' :  1, 'b' :  2, 'c' :  3}\ndctB = {'b' :  4, 'c' :  3, 'd' :  6}\nfor item in dctA.items() & dctB.items() : \n\tprint(item)"""
write a python program to converts list of mix data to comma separated string,"""\ndata = [2, 'hello', 3, 3.4]\nprint (','.join(map(str, data)))"""
write a python program to deep flattens a nested list,"'\nL = [1, 2, [3, 4], [5, 6, [7]]]\ndef flatten(L) : \n\tfor item in L : \n\t\tif isinstance(item, list) : \n\t\t\tyield from flatten(item)\n\t\telse : \n\t\t\tyield item\nprint(list(flatten(L)))'"
write a python program to swaps keys and values in a dict,"'\n_dict = {""one"" :  1, ""two"" :  2}\n# make sure all of dict\'s values are unique\nassert len(_dict) == len(set(_dict.values()))\nreversed_dict = {v :  k for k, v in _dict.items()}\nprint(reversed_dict)'"
write a python program to add whitespaces both sides of a string,"""\ns = 'The Little Price'\nwidth = 20\ns3 = s.center(width)\nprint(s3) """
write a python program to sort a dictionary by its values and print the sorted dictionary with 'key' argument.,"""\nd = {'apple' :  10, 'orange' :  20, 'banana' :  5, 'rotten tomato' :  1}\nprint(sorted(d.items(), key=lambda x :  x[1]))"""
write a python program to sort dict keys by value and print the keys,"""\nd = {'apple' :  10, 'orange' :  20, 'banana' :  5, 'rotten tomato' :  1}\nprint(sorted(d, key=d.get))"""
write a python program to call different functions based on condition with same arguments,"'\ndef product(a, b) : \n\treturn a * b\ndef subtract(a, b) : \n\treturn a - b\nb = True\nprint((product if b else subtract)(1, 1))'"
write a python program to do chained comparison,'\na = 10\nprint(1 < a < 50)\nprint(10 == a < 20)'
write a python program to merge two dictionary,"""\nx = {'a' :  1, 'b'  :  2}\ny = {'c' :  3, 'd'  :  4}\nz = {**x, **y}\nprint(z)"""
write a Python program to get the Cumulative sum of a list,"'\nlist1=[10,20,30,40,50]\nnew_list=[] \nj=0\nfor i in range(0,len(list1)) : \n\tj+=list1[i]\n\tnew_list.append(j) \nprint(new_list) '"
write a Python program to Break a list into chunks of size N in Python,"'\nl = [1, 2, 3, 4, 5, 6, 7, 8, 9] \nn = 4\nx = [l[i : i + n] for i in range(0, len(l), n)] \nprint(x) '"
write a Python function to check Check if a Substring is Present in a Given String,"'\ndef check(string, sub_str) :  \n\tif (string.find(sub_str) == -1) :  \n\t\tprint(""NO"") \n\telse :  \n\t\tprint(""YES"") \nstring = ""geeks for geeks""\nsub_str =""geek""\ncheck(string, sub_str) '"
write a Python program to demonstrate working of Words Frequency in String Shorthands,"'\ntest_str = \'Gfg is best . Geeks are good and Geeks like Gfg\'\nprint(""The original string is  :  "" + str(test_str)) \nres = {key :  test_str.count(key) for key in test_str.split()} \nprint(""The words frequency  :  "" + str(res)) '"
write a Python program to demonstrate working of Convert Snake case to Pascal case,"'\ntest_str = \'geeksforgeeks_is_best\'\nprint(""The original string is  :  "" + test_str) \nres = test_str.replace(""_"", "" "").title().replace("" "", """") \nprint(""The String after changing case  :  "" + str(res)) '"
write a Python function to print even length words in a string,"'\ndef printWords(s) :  \n\ts = s.split(\' \') \n\tfor word in s :  \n\t\tif len(word)%2==0 :  \n\t\t\tprint(word) \ns = ""i am muskan""\nprintWords(s) '"
write a Python function to find all string which are greater than given length k,"'\ndef string_k(k, str) :  \n\tstring = [] \n\ttext = str.split("" "") \n\tfor x in text :  \n\t\tif len(x) > k :  \n\t\t\tstring.append(x) \n\treturn string \nk = 3\nstr1 =""geek for geeks""\nprint(string_k(k, str1)) '"
write a Python program to demonstrate working of Swap Binary substring,"'\ntest_str = ""geeksforgeeks""\nprint(""The original string is  :  "" + test_str) \ntemp = str.maketrans(""geek"", ""abcd"") \ntest_str = test_str.translate(temp) \nprint(""The string after swap  :  "" + test_str) '"
write a Python function to find sum of all items in a Dictionary,"'\ndef returnSum(dict) :  \n\tsum = 0\n\tfor i in dict.values() :  \n\t\tsum = sum + i \n\treturn sum\ndict = {\'a\' :  100, \'b\' : 200, \'c\' : 300} \nprint(""Sum  : "", returnSum(dict)) '"
write a Python program to demonstrate removal of dictionary pair,"'\ntest_dict = {""Arushi""  :  22, ""Anuradha""  :  21, ""Mani""  :  21, ""Haritha""  :  21} \nprint (f""The dictionary before performing remove is  :  {test_dict}"") \ndel test_dict[\'Mani\'] \nprint (f""The dictionary after remove is  :  {test_dict}"") '"
write a Python program for Handling missing keys in dictionaries,"""\ncountry_code = {'India'  :  '0091', \n\t\t\t\t'Australia'  :  '0025', \n\t\t\t\t'Nepal'  :  '00977'} \nprint(country_code.get('India', 'Not Found')) \nprint(country_code.get('Japan', 'Not Found')) """
write a Python program to find the minute at which the minute hand and hour hand coincide,"'\ndef find_time(h1) :  \n\ttheta = 30 * h1 \n\tprint(""("", end = """") \n\tprint((theta * 2),""/ 11) minutes"") \nh1 = 3\nfind_time(h1) '"
write a Python function to print First n Digits of Pi,"'\ndef pi(n) : \n\ti = 1\n\tp = x = 3 * 10 ** (n + 10)\n\twhile x : \n\tx = x * i // ((i + 1) * 4)\n\ti += 2\n\tp += x // i\n\treturn \'3.\' + f""{p // 10 ** 10}""[1 : ]\nprint(pi(7))'"
write a Python function to Non-Repeating Integers,"'\ndef non_repeats(radix) : \n\tcount = 0\n\tfor num_digits in range(1, radix + 1) : \n\t\tproduct = radix - 1\n\t\tfor i in range(1, num_digits) : \n\t\t\tproduct *= (radix - i)\n\t\tcount += product\n\treturn count\nprint(non_repeats(6))'"
write a Python function to find area of an Ellipse.,"'\ndef findArea(a, b) :  \n\tArea = 3.142 * a * b ; \n\tprint(""Area : "", round(Area, 2)); \na = 5; \nb = 4; \nfindArea(a, b)'"
write a Python function to find the area of the triangle inscribed within the rectangle which in turn is inscribed in an ellipse,"'\ndef area(a, b) :  \n\tif (a < 0 or b < 0) :  \n\t\treturn -1\n\tA = a * b \n\treturn A \na = 5\nb = 2\nprint(area(a, b)) '"
write a Python function To Calculate Volume OF Cylinder,"'\npi = 22/7\ndef volume(r, h) :  \n\tvol = pi * r * r * h \n\treturn vol \nr = 5\nh = 8\nprint(""Volume Of Cylinder = "",volume(r, h)) '"
write a Python function To Calculate Total Surface Area of Cylinder,"'\ndef totalsurfacearea(r, h) :  \n\ttsurf_ar = (2 * pi * r * h) + (2 * pi * r * r) \n\treturn tsurf_ar \nr = 5\nh = 8\nprint(""Total Surface Area Of Cylinder = "",totalsurfacearea(r,h)) '"
write a Python function to Calculate Curved Surface Area of Cylinder,"'\ndef curvedsurfacearea(r, h) :  \n\tcursurf_ar = (2 * pi * r * h) \n\treturn cursurf_ar \nr = 5\nh = 8\nprint(""Curved Surface Area Of Cylinder = "",curvedsurfacearea(r,h)) '"
write a Python function to find the Area of Icosahedron,"'\ndef findArea(a) :  \n\tarea = 5 * 3 ** 0.5 * a * a \n\treturn area \na = 5\nprint(""Area :  "" , findArea(a)) '"
write a Python function to find the volume of Icosahedron,"'\ndef findVolume(a) :  \n\tvolume = ((5 / 12) * \n\t\t\t\t(3 + 5 ** 0.5) * \n\t\t\t\ta * a * a) \n\treturn volume \na = 5\nprint(""Volume :  "" , findVolume(a)) '"
write a Python function to find surface area of the Pentagonal Prism,"'\ndef surfaceArea(a, b, h) :  \n\treturn 5 * a * b + 5 * b * h \na = 5\nb = 3\nh = 7\nprint(""surface area ="", surfaceArea(a, b, h))'"
write a Python function to find volume of the Pentagonal Prism,"'\ndef volume(b, h) :  \n\treturn (5 * b * h) / 2\na = 5\nb = 3\nh = 7\nprint(""volume ="", volume(b, h)) '"
write a Python function to return the volume of the rectangular right wedge,"'\ndef volumeRec(a, b, e, h)  :  \n\treturn (((b * h) / 6) * (2 * a + e))\na = 2; b = 5; e = 5; h = 6; \nprint(""Volume = "",volumeRec(a, b, e, h))'"
write a Python program to calculate volume of Torus,"'\nr = 3\nR = 7\npi = 3.14159\nVolume = (float)(2 * pi * pi * R * r * r)\nprint(""Volume :  "", Volume)'"
write a Python program to calculate surface area of Torus,"'\nr = 3\nR = 7\nSurface = (float)(4 * pi * pi * R * r)\nprint(""Surface :  "", Surface)'"
write a Python program to demonstrate to convert list of string to list of list,"'\ntest_list = [ \'[1, 4, 5]\', \'[4, 6, 8]\' ] \nprint (f""The original list is  :  {test_list}"") \nres = [i.strip(""[]"").split("", "") for i in test_list] \nprint (f""The list after conversion is  :  {res}"") '"
write a Python program to demonstrate working of Convert List to Single valued Lists in Tuple,"'\ntest_list = [6, 8, 4, 9, 10, 2] \nprint(f""The original list is  :  {test_list}"") \nres = tuple([ele] for ele in test_list)  \nprint(f""Tuple after conversion  :  {res}"") '"
write Python program to find key with Maximum value in Dictionary,"""\nTv = {'BreakingBad' : 100, 'GameOfThrones' : 1292, 'TMKUC'  :  88} \nKeymax = max(Tv, key=Tv.get) \nprint(Keymax) """
Python program to get a string which is n (non-negative integer) copies of a given string.,"'\ndef larger_string(string1, n) : \n\tresult = """"\n\tfor i in range(n) : \n\t\tresult = result + string1\n\treturn result\nprint(larger_string(\'abc\', 2))\nprint(larger_string(\'.py\', 3))'"
Python program to compute the greatest common divisor (GCD) of two positive integers.,"'\ndef gcd(x, y) : \n\tgcd1 = 1\n\tif x % y == 0 : \n\t\treturn y\n\tfor k in range(int(y / 2), 0, -1) : \n\t\tif x % k == 0 and y % k == 0 : \n\t\t\tgcd1 = k\n\t\t\tbreak\n\treturn gcd1\nprint(gcd(12, 17))\nprint(gcd(4, 6))'"
Python program to calculate area of a circle,"'\ndef area(a) : \n\tfrom math import pi\n\tr = float(input(""Input the radius of the circle  :  ""))\n\treturn ""The area of the circle with radius "" + str(r) + "" is :  "" + str(pi * a ** 2)\nprint(area(5))'"
Python program that accepts an integer (n) and computes the value of n+nn+nnn.,"'\ndef custom(n) : \n\ta = n\n\tn1 = int(""%s"" % a)\n\tn2 = int(""%s%s"" % (a, a))\n\tn3 = int(""%s%s%s"" % (a, a, a))\n\treturn n1 + n2 + n3\nprint(custom(20))'"
Python program to count number 4 in the given list,"'\ndef list_count_4(nums) : \n\tcount = 0\n\tfor num in nums : \n\t\tif num == 4 : \n\t\t\tcount = count + 1\n\treturn count\nprint(list_count_4([1, 4, 6, 7, 4]))\nprint(list_count_4([1, 4, 6, 4, 7, 4]))'"
Python program to test whether passed letter is vowel or not,"""\ndef is_vowel(char) : \n\tall_vowels = 'aeiou'\n\treturn char in all_vowels\nprint(is_vowel('c'))\nprint(is_vowel('e'))"""
Python program to create histogram from given list,"""\ndef histogram(items) : \n\tfor n in items : \n\t\toutput = ''\n\t\ttimes = n\n\t\twhile times > 0 : \n\t\t\toutput += '*'\n\t\t\ttimes = times - 1\n\t\tprint(output)\nhistogram([2, 3, 6, 5])"""
Python program to add two objects if both objects are of type integer,"'\ndef add_numbers(a, b) : \n\tif not (isinstance(a, int) and isinstance(b, int)) : \n\t\traise TypeError(""Inputs must be integers"")\n\treturn a + b\nprint(add_numbers(10, 20))'"
Python program to compute distance between two points,"'\ndef points(x1, x2) : \n\timport math\n\tp1 = list(x1)\n\tp2 = list(x2)\n\tdistance = math.sqrt(((p1[0] - p2[0]) ** 2) + ((p1[1] - p2[1]) ** 2))\n\tprint(distance)\npoints((2, 3), (4, 5))'"
Python program to print sum of digits of a 4 digit number,"'\ndef sumofdigits(num) : \n\tx = num // 1000\n\tx1 = (num - x * 1000) // 100\n\tx2 = (num - x * 1000 - x1 * 100) // 10\n\tx3 = num - x * 1000 - x1 * 100 - x2 * 10\n\tprint(""The sum of digits in the number is"", x + x1 + x2 + x3)\nsumofdigits(3456)'"
python program to multiply all the numbers in given list,"'\ndef multiply(numbers) : \n\ttotal = 1\n\tfor x in numbers : \n\t\ttotal *= x\n\treturn total\nprint(multiply((8, 2, 3, -1, 7)))'"
Python program to reverse the string,"""\ndef string_reverse(str1) : \n\trstr1 = ''\n\tindex = len(str1)\n\twhile index > 0 : \n\t\trstr1 += str1[index - 1]\n\t\tindex = index - 1\n\treturn rstr1\nprint(string_reverse('1234abcd'))"""
Python program to calculate the factorial of a number,'\ndef factorial(n) : \n\tif n == 0 : \n\t\treturn 1\n\telse : \n\t\treturn n * factorial(n - 1)\nn = 45\nprint(factorial(n))'
python program to return unique element from a list,"'\ndef unique_list(l) : \n\tx1 = []\n\tfor a in l : \n\t\tif a not in x1 : \n\t\t\tx1.append(a)\n\treturn x1\nprint(unique_list([1, 2, 3, 3, 3, 3, 4, 5]))'"
Python program to execute a string containing Python code.,"'\nmycode = \'print(""hello world"")\'\ncode = """"""\ndef multiply(x,y) : \n\treturn x*y\nprint(\'Multiply of 2 and 3 is :  \',multiply(2,3))\n""""""\nexec(mycode)\nexec(code)'"
Python program to access function iside function,'\ndef test(a) : \n\tdef add(b) : \n\t\tnonlocal a\n\t\ta += 1\n\t\treturn a + b\n\treturn add\nfunc = test(4)\nprint(func(4))'
python program to detect number of local variables defined in a program,"'\ndef abc() : \n\tx = 1\n\ty = 2\n\tstr1 = ""w3resource""\n\tprint(""Python Exercises"")\nprint(abc.__code__.co_nlocals)'"
Python function that takes a positive integer and returns the sum of the cube of all the positive integers smaller   than the specified number.,"'\ndef sum_of_cubes(n) : \n\tn -= 1\n\ttotal = 0\n\twhile n > 0 : \n\t\ttotal += n * n * n\n\t\tn -= 1\n\treturn total\nprint(""Sum of cubes :  "", sum_of_cubes(3))'"
Python function to check whether a number is divisible by another number,"'\ndef multiple(m, n) : \n\treturn True if m % n == 0 else False\nprint(multiple(20, 5))\nprint(multiple(7, 2))'"
Python program to find the digits which are absent in a given mobile number.,"'\ndef absent_digits(n) : \n\tall_nums = set([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])\n\tn = set([int(i) for i in n])\n\tn = n.symmetric_difference(all_nums)\n\tn = sorted(n)\n\treturn n\nprint(absent_digits([9, 8, 3, 2, 2, 0, 9, 7, 6, 3]))'"
Write a python function to generate random number between 2 integers,"'\ndef random_number(a, b) : \n\timport random\n\treturn random.randint(a, b)'"
Write a function to get nth element of the fibonacci series,"'\ndef fibonacci_nth(n) : \n\ta = 0\n\tb = 1\n\tif n <= 0 :  \n\t\tprint(""Incorrect input"")\n\telif n==1 :  \n\t\treturn a\n\telif n==1 :  \n\t\treturn 1\n\telse :  \n\t\tfor i in range(2, n) : \n\t\t\tc = a + b\n\t\t\ta, b = b, c\n\t\treturn b'"
Write a function to count the number of digits in a number,'\ndef count_digits(n) : \n\treturn len(str(n))'
Write a function to return the nth prime number,'\ndef nth_prime_number(n) : \n\tprime_list = [2]\n\tnum = 3\n\twhile len(prime_list) < n : \n\t\tfor p in prime_list : \n\t\t\tif num % p == 0 : \n\t\t\t\tbreak\n\t\telse : \n\t\t\tprime_list.append(num)\n\t\t\tnum += 2\n\treturn prime_list[-1]'
1. write a python program to add two numbers,"""\nnum1 = 1.5\nnum2 = 6.3\nsum = num1 + num2\nprint(f'Sum :  {sum}')"""
2. write a python program to subtract two numbers,"""\nnum1 = 1.5\nnum2 = 6.3\nsum = num1 - num2\nprint(f'Sub :  {sum}')"""
3. write a python Program to calculate the square root,"""\nnum = 8 \nnum_sqrt = num ** 0.5\nprint('The square root of %0.3f is %0.3f'%(num ,num_sqrt))"""
4. write a python function to add two user provided numbers and return the sum,"'\ndef add_two_numbers(num1, num2) : \n\tsum = num1 + num2\n\treturn sum'"
5. write a program to find and print the largest among three numbers,"""\nnum1 = 10\nnum2 = 12\nnum3 = 14\nif (num1 >= num2) and (num1 >= num3) : \n\tlargest = num1\nelif (num2 >= num1) and (num2 >= num3) : \n\tlargest = num2\nelse : \n\tlargest = num3\nprint(f'largest : {largest}')"""
"6. Write a python program to swap two variables, Using a temporary variable","""\nx = 5\ny = 10\ntemp = x\nx = y\ny = temp\nprint('The value of x after swapping :  {}'.format(x))\nprint('The value of y after swapping :  {}'.format(y))"""
"7. Write a python program to swap two variables, Without Using Temporary Variable","'\nx = 5\ny = 10\nx, y = y, x\nprint(""x ="", x)\nprint(""y ="", y)'"
8. Python Program to Convert Kilometers to Miles,"""\nkilometers = 5.0\nconv_fac = 0.621371\nmiles = kilometers * conv_fac\nprint('%0.2f kilometers is equal to %0.2f miles' %(kilometers,miles))"""
9. Python Program to Convert Celsius To Fahrenheit,"""\ncelsius = 37.5\nfahrenheit = (celsius * 1.8) + 32\nprint('%0.1f degree Celsius is equal to %0.1f degree Fahrenheit' %(celsius,fahrenheit))"""
"10. Python Program to Check if a Number is Positive, Negative or 0","'\nnum = float(input(""Enter a number :  ""))\nif num > 0 : \n\tprint(""Positive number"")\nelif num == 0 : \n\tprint(""Zero"")\nelse : \n\tprint(""Negative number"")'"
11. Python Program to Check if a Number is Odd or Even,"'\n\tnum\t=\tint(input(""Enter\ta\tnumber : \t""))\nif (num % 2) == 0 : \n\tprint(""{0} is Even"".format(num))\nelse : \n\tprint(""{0} is Odd"".format(num))'"
13. Python Program to Find the Largest Among Three Numbers,"'\nnum1 = 10\nnum2 = 14\nnum3 = 12\nif (num1 >= num2) and (num1 >= num3) : \n\tlargest = num1\nelif (num2 >= num1) and (num2 >= num3) : \n\tlargest = num2\nelse : \n\tlargest = num3\nprint(""The largest number is"", largest)'"
17. Python Program to Display the multiplication Table,"""\nnum = 12\nfor i in range(1, 11) : \n\tprint(num, 'x', i, '=', num*i)"""
22.  Python Program to Find the Sum of Natural Numbers,"'\nnum = 16\nif num < 0 : \n\tprint(""Enter a positive number"")\nelse : \n\tsum = 0\n\t# use while loop to iterate until zero\n\twhile(num > 0) : \n\t\tsum += num\n\t\tnum -= 1\n\tprint(""The sum is"", sum)'"
23. Python Program To Display Powers of 2 Using Anonymous Function,"'\nterms = 10\nresult = list(map(lambda x :  2 ** x, range(terms)))\nprint(""The total terms are : "",terms)\nfor i in range(terms) : \n\tprint(""2 raised to power"",i,""is"",result[i])'"
24. Python Program to Find Numbers Divisible by Another Number,"'\nmy_list = [12, 65, 54, 39, 102, 339, 221,]\nresult = list(filter(lambda x :  (x % 13 == 0), my_list))\nprint(""Numbers divisible by 13 are"",result)'"
25. Python Program to Convert Decimal to Binary,"'\ndec = 344\nprint(""The decimal value of"", dec, ""is : "")\nprint(bin(dec), ""in binary."")'"
26. Python Program to Convert Decimal to Octal,"'\ndec = 344\nprint(""The decimal value of"", dec, ""is : "")\nprint(oct(dec), ""in octal."")'"
27. Python Program to Convert Decimal to Hexadecimal,"'\ndec = 344\nprint(""The decimal value of"", dec, ""is : "")\nprint(hex(dec), ""in hexadecimal."")'"
28. Python Program to Find ASCII Value of Character,"'\nc = \'p\'\nprint(""The ASCII value of \'"" + c + ""\' is"", ord(c))'"
30. Write a python function to find HCf or GCD and return the value,"'\ndef compute_hcf(x, y) : \n# choose the smaller number\n\tif x > y : \n\t\tsmaller = y\n\telse : \n\t\tsmaller = x\n\tfor i in range(1, smaller+1) : \n\t\tif((x % i == 0) and (y % i == 0)) : \n\t\t\thcf = i \n\treturn hcf'"
31. Write a python function to find HCf or GCD and return the value using euclidian Algorithm,"'\ndef compute_hcf(x, y) : \n\twhile(y) : \n\t\tx, y = y, x % y\n\treturn x'"
32. Write a python program to find HCf or GCD using euclidian Algorithm,"'\ndef compute_hcf(x, y) : \n\twhile(y) : \n\t\tx, y = y, x % y\n\treturn x'"
35. Python Program to Compute LCM Using GCD,"'\ndef compute_gcd(x, y) : \n\twhile(y) : \n\t\tx, y = y, x % y\n\treturn x\ndef compute_lcm(x, y) : \n\tlcm = (x*y)//compute_gcd(x,y)\n\treturn lcm\nnum1 = 54\nnum2 = 24 \nprint(""The L.C.M. is"", compute_lcm(num1, num2))'"
36. Python funcction to Find the Factors of a Number,"'\ndef print_factors(x) : \n\tprint(""The factors of"",x,""are : "")\n\tfor i in range(1, x + 1) : \n\t\tif x % i == 0 : \n\t\t\tprint(i)'"
38. Python Program to Find Sum of Natural Numbers Using Recursion,"'\ndef recur_sum(n) : \n\tif n <= 1 : \n\t\treturn n\n\telse : \n\t\treturn n + recur_sum(n-1)\n# change this value for a different result\nnum = 16\nif num < 0 : \n\tprint(""Enter a positive number"")\nelse : \n\tprint(""The sum is"",recur_sum(num))'"
41. Python Program to Add Two Matrices using Nested List Comprehension,"'\nX = [[12,7,3],\n\t[4 ,5,6],\n\t[7 ,8,9]]\nY = [[5,8,1],\n\t[6,7,3],\n\t[4,5,9]]\nresult = [[X[i][j] + Y[i][j]  for j in range(len(X[0]))] for i in range(len(X))]\nfor r in result : \n\tprint(r)'"
42. Python Program to Transpose a Matrix using Nested Loop,"'\nX = [[12,7],\n\t[4 ,5],\n\t[3 ,8]]\nresult = [[0,0,0],\n\t\t\t[0,0,0]]\n# iterate through rows\nfor i in range(len(X)) : \n\t# iterate through columns\n\tfor j in range(len(X[0])) : \n\t\tresult[j][i] = X[i][j]\nfor r in result : \n\tprint(r)'"
43. Python Program to Transpose a Matrix using Nested List Comprehension,"'\nX = [[12,7],\n\t[4 ,5],\n\t[3 ,8]]\nresult = [[X[j][i] for j in range(len(X))] for i in range(len(X[0]))]\nfor r in result : \n\tprint(r)'"
44. Python Program to Multiply Two Matrices using Nested List Comprehension,"'\nX = [[12,7,3],\n\t[4 ,5,6],\n\t[7 ,8,9]]\n# 3x4 matrix\nY = [[5,8,1,2],\n\t[6,7,3,0],\n\t[4,5,9,1]]\n# result is 3x4\nresult = [[sum(a*b for a,b in zip(X_row,Y_col)) for Y_col in zip(*Y)] for X_row in X]\nfor r in result : \n\tprint(r)'"
50. Python Program to Count the Number of Each Vowel Using a list and a dictionary comprehension,"""\nip_str = 'Hello, have you tried our tutorial section yet?'\n# make it suitable for caseless comparisions\nip_str = ip_str.casefold()\n# count the vowels\ncount = {x : sum([1 for char in ip_str if char == x]) for x in 'aeiou'}\nprint(count)"""
"Write a python function to derive slope given 2 points (x1,y1) and (x2, y2)","'\ndef get_slope(x1,y1, x2,y2) : \n\tif (x1 == x2 ) : \n\t\treturn ValueError\n\treturn -((y2-y1)/(x2-x1))'"
Write a python function to copy the sign bit from one variable to another,"'\ndef copysign(dst, src)  : \n\treturn math.copysign(dst, src)'"
Write a python function Split a given file path into filename and parent directory,"'\ndef split_filename(input_file_name) : \n\tif( isinstance(input_file_name,str) ==False ) : \n\t\traise TypeError\n\ttokens = input_file_name.split(""/"")\n\treturn ""/"".join(tokens[ : -1]),tokens[-1]'"
Write a python function to join directory names to create a path,"'\ndef join_filename(base_dir, *args) : \n\tfile_path_args = [base_dir ,*args]\n\tfor file_name in file_path_args : \n\t\tif( isinstance(file_name,str) ==False ) : \n\t\t\traise TypeError\n\treturn ""/"".join(file_path_args)'"
Write a python function to find linear interpolation between two points x and y given a variable t,"'\ndef linear_interpolate(x, y, t ) : \n\tif( t >=1 or t <= 0) : \n\t\traise ValueError\n\treturn t*x + (1-t)*y'"
Write a python function to raise error when an input is not a string type,"'\ndef check_string(new_str) : \n\treturn isinstance(new_str,str)'"
Write a python function to extract only alphabets from a given string and also exclude spaces,"'\ndef extract_alpha(my_string) : \n\treturn """".join([ c for c in my_string if c.isalpha()])'"
Write a python function to extract only alphabets from a given string and also include spaces,"'\ndef extract_alpha(my_string) : \n\treturn """".join([ c for c in my_string if (c.isalpha() or c.isspace())])'"
Write a python function to remove all non-alphabets except space from a given string using re library,"'\nimport re\ndef extract_not_alpha(my_string) : \n\t#result = re.findall(r\'[^a-zA-Z]+\',my_string)\n\treturn re.sub(\'[^a-zA-Z\\s]+\', """", my_string)\n\t#return """".join(result)'"
Write a python function to remove all digits and underscores from a Unicode strings,"""\nimport re\ndef extract_unicode(my_string) : \n\tregex = re.compile(r'[^\\W\\d_]+', re.UNICODE)\t\n\treturn regex.findall(my_string)"""
Write a python function to generate a random hexadecimal key of length n,"'\nimport random\ndef rand_run_name(n) : \n\tran = random.randrange(10**80)\n\tmyhex = ""%064x"" % ran\n\t#limit string to 64 characters\n\tmyhex = myhex[ : n]\n\treturn myhex'"
Write a python function to convert a list of strings to equivalent character array using itertools,'\nimport itertools\ndef extract_characters(input_list) : \n\treturn [ char_val for char_val in itertools.chain.from_iterable(input_list) ]'
Write a python function to simulate an exception and log the error using logger provided by the user.,"'\ndef exception_simulator(logger) : \n\ttry : \n\t\traise ValueError\n\texcept ValueError : \n\t\tlogger.exception(""ValueError occured in the function"")'"
Write a python function to call a user-input function with default exception handling and re-raise the exception again.,"'\ndef default_exception_simulator(user_func) : \n\ttry : \n\t\tif callable(user_func) : \n\t\t\tuser_func()\n\texcept : \n\t\tprint(""An exception occured"")\n\t\traise'"
1. write a python program to add two numbers,"""\nnum1 = 1.5\nnum2 = 6.3\nsum = num1 + num2\nprint(f'Sum :  {sum}')"""
2. write a python program to subtract two numbers,"""\nnum1 = 1.5\nnum2 = 6.3\nsum = num1 - num2\nprint(f'Sub :  {sum}')"""
3. write a python Program to calculate the square root,"""\nnum = 8 \nnum_sqrt = num ** 0.5\nprint('The square root of %0.3f is %0.3f'%(num ,num_sqrt))"""
4. write a python function to add two user provided numbers and return the sum,"'\ndef add_two_numbers(num1, num2) : \n\tsum = num1 + num2\n\treturn sum'"
5. write a program to find and print the largest among three numbers,"""\nnum1 = 10\nnum2 = 12\nnum3 = 14\nif (num1 >= num2) and (num1 >= num3) : \n\tlargest = num1\nelif (num2 >= num1) and (num2 >= num3) : \n\tlargest = num2\nelse : \n\tlargest = num3\nprint(f'largest : {largest}')"""
"6. Write a python program to swap two variables, Using a temporary variable","""\nx = 5\ny = 10\ntemp = x\nx = y\ny = temp\nprint('The value of x after swapping :  {}'.format(x))\nprint('The value of y after swapping :  {}'.format(y))"""
"7. Write a python program to swap two variables, Without Using Temporary Variable","'\nx = 5\ny = 10\nx, y = y, x\nprint(""x ="", x)\nprint(""y ="", y)'"
8. Python Program to Convert Kilometers to Miles,"""\nkilometers = 5.0\nconv_fac = 0.621371\nmiles = kilometers * conv_fac\nprint('%0.2f kilometers is equal to %0.2f miles' %(kilometers,miles))"""
9. Python Program to Convert Celsius To Fahrenheit,"""\ncelsius = 37.5\nfahrenheit = (celsius * 1.8) + 32\nprint('%0.1f degree Celsius is equal to %0.1f degree Fahrenheit' %(celsius,fahrenheit))"""
"10. Python Program to Check if a Number is Positive, Negative or 0","'\nnum = float(input(""Enter a number :  ""))\nif num > 0 : \n\tprint(""Positive number"")\nelif num == 0 : \n\tprint(""Zero"")\nelse : \n\tprint(""Negative number"")'"
11. Python Program to Check if a Number is Odd or Even,"'\n\tnum\t=\tint(input(""Enter\ta\tnumber : \t""))\nif (num % 2) == 0 : \n\tprint(""{0} is Even"".format(num))\nelse : \n\tprint(""{0} is Odd"".format(num))'"
13. Python Program to Find the Largest Among Three Numbers,"'\nnum1 = 10\nnum2 = 14\nnum3 = 12\nif (num1 >= num2) and (num1 >= num3) : \n\tlargest = num1\nelif (num2 >= num1) and (num2 >= num3) : \n\tlargest = num2\nelse : \n\tlargest = num3\nprint(""The largest number is"", largest)'"
17. Python Program to Display the multiplication Table,"""\nnum = 12\nfor i in range(1, 11) : \n\tprint(num, 'x', i, '=', num*i)"""
22.  Python Program to Find the Sum of Natural Numbers,"'\nnum = 16\nif num < 0 : \n\tprint(""Enter a positive number"")\nelse : \n\tsum = 0\n\t# use while loop to iterate until zero\n\twhile(num > 0) : \n\t\tsum += num\n\t\tnum -= 1\n\tprint(""The sum is"", sum)'"
23. Python Program To Display Powers of 2 Using Anonymous Function,"'\nterms = 10\nresult = list(map(lambda x :  2 ** x, range(terms)))\nprint(""The total terms are : "",terms)\nfor i in range(terms) : \n\tprint(""2 raised to power"",i,""is"",result[i])'"
24. Python Program to Find Numbers Divisible by Another Number   Take a list of numbers,"'\nmy_list = [12, 65, 54, 39, 102, 339, 221,]'"
use anonymous function to filter,"'\nresult = list(filter(lambda x :  (x % 13 == 0), my_list))\n# display the result\nprint(""Numbers divisible by 13 are"",result)'"
25. Python Program to Convert Decimal to Binary,"'\ndec = 344\nprint(""The decimal value of"", dec, ""is : "")\nprint(bin(dec), ""in binary."")'"
26. Python Program to Convert Decimal to Octal,"'\ndec = 344\nprint(""The decimal value of"", dec, ""is : "")\nprint(oct(dec), ""in octal."")'"
27. Python Program to Convert Decimal to Hexadecimal,"'\ndec = 344\nprint(""The decimal value of"", dec, ""is : "")\nprint(hex(dec), ""in hexadecimal."")'"
28. Python Program to Find ASCII Value of Character,"'\nc = \'p\'\nprint(""The ASCII value of \'"" + c + ""\' is"", ord(c))'"
30. Write a python function to find HCf or GCD and return the value,"'\ndef compute_hcf(x, y) : \n# choose the smaller number\n\tif x > y : \n\t\tsmaller = y\n\telse : \n\t\tsmaller = x\n\tfor i in range(1, smaller+1) : \n\t\tif((x % i == 0) and (y % i == 0)) : \n\t\t\thcf = i \n\treturn hcf'"
31. Write a python function to find HCf or GCD and return the value using euclidian Algorithm,"'\ndef compute_hcf(x, y) : \n\twhile(y) : \n\t\tx, y = y, x % y\n\treturn x'"
32. Write a python program to find HCf or GCD using euclidian Algorithm,"'\ndef compute_hcf(x, y) : \n\twhile(y) : \n\t\tx, y = y, x % y\n\treturn x'"
35. Python Program to Compute LCM Using GCD,"'\ndef compute_gcd(x, y) : \n\twhile(y) : \n\t\tx, y = y, x % y\n\treturn x\ndef compute_lcm(x, y) : \n\tlcm = (x*y)//compute_gcd(x,y)\n\treturn lcm\nnum1 = 54\nnum2 = 24 \nprint(""The L.C.M. is"", compute_lcm(num1, num2))'"
36. Python funcction to Find the Factors of a Number,"'\ndef print_factors(x) : \n\tprint(""The factors of"",x,""are : "")\n\tfor i in range(1, x + 1) : \n\t\tif x % i == 0 : \n\t\t\tprint(i)'"
38. Python Program to Find Sum of Natural Numbers Using Recursion,"'\ndef recur_sum(n) : \n\tif n <= 1 : \n\t\treturn n\n\telse : \n\t\treturn n + recur_sum(n-1)\n# change this value for a different result\nnum = 16\nif num < 0 : \n\tprint(""Enter a positive number"")\nelse : \n\tprint(""The sum is"",recur_sum(num))'"
41. Python Program to Add Two Matrices using Nested List Comprehension,"'\nX = [[12,7,3],\n\t[4 ,5,6],\n\t[7 ,8,9]]\nY = [[5,8,1],\n\t[6,7,3],\n\t[4,5,9]]\nresult = [[X[i][j] + Y[i][j]  for j in range(len(X[0]))] for i in range(len(X))]\nfor r in result : \n\tprint(r)'"
42. Python Program to Transpose a Matrix using Nested Loop,"'\nX = [[12,7],\n\t[4 ,5],\n\t[3 ,8]]\nresult = [[0,0,0],\n\t\t\t[0,0,0]]\n# iterate through rows\nfor i in range(len(X)) : \n\t# iterate through columns\n\tfor j in range(len(X[0])) : \n\t\tresult[j][i] = X[i][j]\nfor r in result : \n\tprint(r)'"
43. Python Program to Transpose a Matrix using Nested List Comprehension,"'\nX = [[12,7],\n\t[4 ,5],\n\t[3 ,8]]\nresult = [[X[j][i] for j in range(len(X))] for i in range(len(X[0]))]\nfor r in result : \n\tprint(r)'"
44. Python Program to Multiply Two Matrices using Nested List Comprehension,"'\nX = [[12,7,3],\n\t[4 ,5,6],\n\t[7 ,8,9]]\n# 3x4 matrix\nY = [[5,8,1,2],\n\t[6,7,3,0],\n\t[4,5,9,1]]\n# result is 3x4\nresult = [[sum(a*b for a,b in zip(X_row,Y_col)) for Y_col in zip(*Y)] for X_row in X]\nfor r in result : \n\tprint(r)'"
write a program to calculate exponents of an input,"""\ninput = 9\nexponent = 2\nfinal = pow(input, exponent)\nprint(f'Exponent Value is : {final}')"""
write a program to find and print the remainder of two number,"""\nnum1 = 12\nnum2 = 10\nratio = num1 % num2\nprint(f'remainder : {ratio}')"""
reverse a number in Python,"'\nnumber = 1367891\nrevs_number = 0  \nwhile (number > 0) : \n\tremainder = number % 10\n\trevs_number = (revs_number * 10) + remainder\n\tnumber = number // 10\nprint(""The reverse number is  :  {}"".format(revs_number))'"
Sort JSON keys in Python and write it into a file,"'\nimport json\nsampleJson = {""id""  :  1, ""name""  :  ""value2"", ""age""  :  29}\nwith open(""sampleJson.json"", ""w"") as write_file : \n\tjson.dump(sampleJson, write_file, indent=4, sort_keys=True)\nprint(""Done writing JSON data into a file"")'"
Given a Python list. Turn every item of a list into its square,"'\naList = [1, 2, 3, 4, 5, 6, 7]\naList =  [x * x for x in aList]\nprint(aList)\n# Remove empty strings from the list of strings\nlist1 = [""Mike"", """", ""Emma"", ""Kelly"", """", ""Brad""]\nresList = [i for i in (filter(None, list1))]\nprint(resList)'"
"Write a program which will achieve given a Python list, remove all occurrence of an input from the list","'\nlist1 = [5, 20, 15, 20, 25, 50, 20]\ndef removeValue(sampleList, val) : \n\treturn [value for value in sampleList if value != val]\nresList = removeValue(list1, 20)\nprint(resList)'"
Convert decimal number to octal,"""\nprint('%o,' % (8))"""
Write a recursive function to calculate the sum of numbers from 0 to 10,'\ndef calculateSum(num) : \n\tif num : \n\t\treturn num + calculateSum(num-1)\n\telse : \n\t\treturn 0\nres = calculateSum(10)\nprint(res)'
Generate a Python list of all the even numbers between two given numbers,"'\nnum1 = 4\nnum2 = 30\nmyval = [i for i in range(num1, num2, 2)]\nprint(myval)\n# Return the largest item from the given list\naList = [4, 6, 8, 24, 12, 2]\nprint(max(aList))'"
"Write a program to extract each digit from an integer, in the reverse order","'\nnumber = 7536\nwhile (number > 0) : \n\tdigit = number % 10\n\tnumber = number // 10\n\tprint(digit, end="" "")'"
Generate a random n-dimensional array of float numbers,"'\nimport numpy\nrandom_float_array = numpy.random.rand(2, 2)\nprint(""2 X 2 random float array in [0.0, 1.0] \\n"", random_float_array,""\\n"")'"
Write a Python program to validate an Email,"'\nimport re \nregex = \'^[a-z0-9]+[\\._]?[a-z0-9]+[@]\\w+[.]\\w{2,3}$\'\ndef check(email) : \n\tif(re.search(regex,email)) : \n\tprint(""Valid Email"")\n\telse : \n\tprint(""Invalid Email"")\nemail = ""ishwarraja@gmail.com""\ncheck(email)'"
1. python function to return the nth fibonacci number,'\ndef fib(n) : \n\tif n <= 1 : \n\t\t return n\n\telse : \n\t\t return (fib(n-1) + fib(n-2))'
2. python function to return the factorial of a number,'\ndef fact(n) : \n\tif n == 1 : \n\t\t return n\n\telse : \n\t\t return n * fact(n-1)'
3. python function to return the squares of a list of numbers,'\ndef sq(n) : \n\treturn [i**2 for i in range(n)]'
3. python function to return the squareroot of a list of numbers,'\ndef sqrt(n) : \n\treturn [i**0.5 for i in range(n)]'
4. python function to add even number from 1st list and odd number from 2nd list,"'\ndef even_odd(l1, l2) : \n\treturn[x + y for x, y in zip(l1, l2) if x % 2 ==0 and y % 2 != 0]'"
5. python function to strip vowels from a string,"'\ndef strip_vowel_str(str) : \n\tvowels = [\'a\', \'e\', \'i\', \'o\', \'u\']\n\treturn """".join([x for x in str if x not in vowels])'"
6. python ReLu function,'\ndef relu_like_activation(l) : \n\treturn[0 if x < 0 else x for x in l]'
7. python sigmoid function,"'\ndef sigmoid_activation(l) : \n\treturn[round(1/(1+math.exp(-x)),2) for x in l]'"
9. python function to add even mubers in a list,"'\ndef add_even_num(l) : \n\tsum = reduce(lambda a, b :  a + b, filter(lambda a :  (a % 2 == 0), l))\n\treturn sum'"
10. python function to find the area of a circle,'\ndef circle_area(r) : \n\treturn 22/7 * r**2'
11. python program to find whether a number is prime,"'\ndef test_prime(n) : \n\tif (n==1) : \n\t\treturn False\n\telif (n==2) : \n\t\treturn True;\n\telse : \n\t\tfor x in range(2,n) : \n\t\t\tif(n % x==0) : \n\t\t\t\treturn False\n\t\treturn True\t\t     '"
12. python function to return the cubes of a list of numbers,'\ndef cube(n) : \n\treturn [i*i*i for i in range(n)]'
13. python function to find the average of given numbers,'\ndef average() : \n\tnumbers = []\n\tdef add(number) : \n\t\tnumbers.append(number)\n\t\ttotal = sum(numbers)\n\t\tcount = len(numbers)\n\t\treturn total/count\n\treturn add\na = average()\na(10)\na(20)\na(45)'
14. python function to create adders,"'\ndef create_adders() : \n\tadders = []\n\tfor n in range(1, 4) : \n\t\tadders.append(lambda x, y=n :  x + y)\n\treturn adders\nadders = create_adders()'"
15. python function for datetime,"""\nfrom datetime import datetime\ndatetime.utcnow()\ndef log(msg, *, dt = datetime.utcnow()) : \n\tprint(f'Message at {dt} was {msg}')"""
16. python function for count of address reference,'\nimport ctypes\ndef ref_count(address  :  int) :  #what is int doing here? Annotations\n\treturn ctypes.c_long.from_address(address).value'
17. python function to modify a tuple,"""\ndef modify_tuple(t) : \n\tprint(f'Initial t mem-add = {id(t)}')\n\tt[0].append(100)\n\tprint(f'Final t mem-add = {id(t)}')"""
18. python program to compare strings,"""\ndef compare_using_equals(n) : \n\ta = 'a long string that is not intered' * 200\n\tb = 'a long string that is not intered' * 200\n\tfor i in range(n) : \n\t\tif a == b : \n\t\t\tpass"""
19. python program to compare strings using interning,"""\nimport sys\ndef compare_using_interning(n) : \n\ta = sys.intern('a long string that is not intered' * 200)\n\tb = sys.intern('a long string that is not intered' * 200)\n\tfor i in range(n) : \n\t\tif a is b : \n\t\t\tpass"""
21. python function for factorial using reduce,"'\ndef fact(n) : \n\tfrom operator import mul\n\tfrom functools import reduce\n\treturn reduce(mul, range(1, n+1))\nfact(10)'"
23. python function to find the area of a circle,'\ndef square_area(x) : \n\treturn x ** 2'
24. python program for the sum of first n numbers.,'\ndef sum_n_num(n) : \n\treturn n * (n + 1)/2'
32. Python Program to Convert String to Uppercase,"'\nstring = input(""Please Enter your Own String  :  "")\nstring1 = string.upper()\nprint(""\\nOriginal String in Lowercase  =  "", string)\nprint(""The Given String in Uppercase =  "", string1)'"
34. Python Program to Map two lists into a Dictionary,"'\nkeys = [\'name\', \'age\', \'job\']\nvalues = [\'John\', 25, \'Developer\']\nmyDict = {k :  v for k, v in zip(keys, values)}\nprint(""Dictionary Items   :   "",  myDict)'"
35. write a Python function To Calculate Volume OF Cylinder,"'\ndef volume(r, h) :  \n\tvol = 22/7 * r * r * h \n\treturn vol'"
38. python function to print all time when angle between hour hand and minute    hand is theta,"'\ndef printTime(theta) :  \n\tfor hh in range(0, 12) :  \n\t\tfor mm in range(0, 60) :  \n\t\t\tif (calcAngle(hh, mm)==theta) :  \n\t\t\t\tprint(hh, "" : "", mm, sep = """") \n\t\t\t\treturn\n\tprint(""Input angle not valid."") \n\treturn'"
41. python function for finding cosine angle,"'\ndef cosine(angle) : \n\t"""""" returns the cosine value for an angle mentioned in radians""""""\n\treturn math.cos(angle)'"
42. python function for finding the derivative of cosine angle,"'\ndef dcosine(angle) : \n\t"""""" returns the cosine value for an angle mentioned in radians""""""\n\treturn -math.sin(angle)'"
43. python function for finding sine angle,"'\ndef sine(angle) : \n\t"""""" returns the sine value for an angle mentioned in radians""""""\n\treturn math.sin(angle)'"
44. python function for finding the derivative of sine angle,"'\ndef dsine(angle) : \n\t"""""" returns the sine value for an angle mentioned in radians""""""\n\treturn math.cos(angle)'"
45. python function for finding tangent angle,"'\ndef tangent(angle) : \n\t"""""" returns the tangent value for an angle mentioned in radians""""""\n\treturn math.tan(angle)'"
46. python function for finding the derivative of tangent angle,"'\ndef dtangent(angle) : \n\t"""""" returns the tangent value for an angle mentioned in radians""""""\n\treturn 1/(math.cos(angle)**2)'"
47. python function for finding the exponent of a number,"'\ndef exp(x) : \n\t""""""returns e^x of a number""""""\n\treturn math.exp(x)'"
48. python function for finding the derivative of exponent of a number,'\ndef dexp(x) : \n\treturn math.exp(x)'
49. python function for finding the logarithmic value of a number,"'\ndef log(x) : \n\t""""""returns the logarithmic value of a number""""""\n\treturn math.log(x)'"
50. python function for finding the derivative of logarithmic value of a number,'\ndef dlog(x) : \n\treturn 1/x'
52. python function for finding the hyperbolic tangent value of a number,"'\ndef tanh(x) : \n\t"""""" returns the hyperbolic tangent value of a number""""""\n\treturn math.tanh(x)'"
53. python function for finding the derivative of hyperbolic tangent value of a number,"'\ndef dtanh(x) : \n\t"""""" returns the hyperbolic tangent value of a number""""""\n\treturn 1 - (math.tanh(x)**2)'"
write a python function to check if a given string is a palindrome,'\ndef isPalindrome(s) : \n\treturn s == s[ :  : -1]'
write a function to reverse words of string,"""\ndef rev_sentence(sentence) :   \n\twords = sentence.split(' ')  \n\treverse_sentence = ' '.join(reversed(words))  \n\treturn reverse_sentence """
write a program to check if a substring is present in a given string,"'\nstring = ""how are you?""\nsubstring = ""are""\nif (string.find(substring) == -1) :  \n\tprint(""NO"") \nelse :  \n\tprint(""YES"")  '"
write a program to print length of a string,"'\nstr1 = ""great way to learn!""\nprint(len(str1))'"
write a program to print words frequncy in a given string,"'\ntest_str = ""It is a great meal at a great restaurant on a great day""\nprint(""Original String :  "" + str(test_str))\nres = {key :  test_str.count(key) for key in test_str.split()} \nprint(""The words frequency :  "" + str(res))'"
write a program to print even length words in a string,"'\nstr1 = ""I am doing fine""\ns = str1.split(\' \')\nfor word in s :   \n\tif len(word)%2==0 :  \n\t\tprint(word)  '"
write a program to accept the strings which contains all vowels,"'\nstr1 = ""__main__""\nif len(set(str1).intersection(""AEIOUaeiou""))>=5 :  \n\tprint(\'accepted\') \nelse :  \n\tprint(""not accepted"") '"
write a program to print count of number of unique matching characters in a pair of strings,"'\nstr1=""ababccd12@""\nstr2=""bb123cca1@""\nmatched_chars = set(str1) & set(str2) \nprint(""No. of matching characters are  :  "" + str(len(matched_chars)) )'"
write a program to remove all duplicate characters from a string,"'\nstr1 = ""what a great day!""\nprint("""".join(set(str1)))'"
write a program to print least frequent character in a string,"'\nstr1=""watch the match""\nall_freq = {} \nfor i in str1 :  \n\tif i in all_freq :  \n\t\tall_freq[i] += 1\n\telse :  \n\t\tall_freq[i] = 1\nres = min(all_freq, key = all_freq.get)\nprint(""Minimum of all characters is :  "" + str(res))'"
write a program to print maximum frequency character in a string,"'\nstr1 = ""watch the match""\nall_freq = {} \nfor i in str1 :  \n\tif i in all_freq :  \n\t\tall_freq[i] += 1\n\telse :  \n\t\tall_freq[i] = 1\nres = max(all_freq, key = all_freq.get)\nprint(""Maximum of all characters is :  "" + str(res))'"
write a program to split and join a string with a hyphen delimiter,"'\nstr1 = ""part of speech""\ndelimiter = ""-""\nlist_str = str1.split("" "")\nnew_str = delimiter.join(list_str)\nprint(""Delimited String is :  "" + new_str)'"
write a program to check if a string is binary or not,"'\nstr1=""01110011 a""\nset1 = set(str1)\nif set1 == {\'0\',\'1\'} or set1 == {\'0\'} or set1 == {\'1\'} : \n\tprint(""string is binary"")\nelse : \n\tprint(""string is not binary"")'"
write a function to remove i-th indexed character in a given string,"'\ndef remove_char(string, i) : \n\tstr1 = string[  :  i]  \n\tstr2 = string[i + 1 :  ] \n\treturn str1 + str2 '"
write a function to rotate string left by a given length,"'\ndef rotate_left(input,d) :   \n\tLfirst = input[0  :  d]  \n\tLsecond = input[d  : ]  \n\treturn (Lsecond + Lfirst) '"
write a function to rotate string right by a given length,"'\ndef rotate_right(input,d) :   \n\tRfirst = input[0  :  len(input)-d]  \n\tRsecond = input[len(input)-d  :  ]  \n\treturn (Rsecond + Rfirst) '"
write a function to replace all occurances of a substring in a string,"'\nstr1 = ""Hello! It is a Good thing""\nsubstr1 = ""Good""\nsubstr2 = ""bad""\nreplaced_str = str1.replace(substr1, substr2)\nprint(""String after replace  : "" + str(replaced_str))'"
write a function that return space count,"'\ndef count_space(str1) :  \n\tcount = 0\n\tfor i in range(0, len(str1)) :  \n\t\tif str1[i] == "" "" :  \n\t\t\tcount += 1\n\treturn count'"
write a program to break up string into individual elements,"'\nstr1 = ""whatisthis""\nsplit_string = list(\'\'.join(str1)) \nprint(split_string) '"
write a program to extract string of N size and having K distict characters,"'\nstr1 = \'GoodisalwaysGoood\'\nN = 3\nK = 2\nres = [] \nfor idx in range(0, len(str1) - N + 1) :  \n\tif (len(set(str1[idx :  idx + N])) == K) :  \n\t\tres.append(str1[idx :  idx + N]) \nprint(""Extracted Strings  :  "" + str(res)) '"
write a program to increment number which is at end of string,"'\nimport re \nstr1 = \'count001\'\nres = re.sub(r\'[0-9]+$\', \n\t\t\t\tlambda x :  f""{str(int(x.group())+1).zfill(len(x.group()))}"",  \n\t\t\t\tstr1) \nprint(""Incremented numeric String  :  "" + str(res))'"
write a function to check if a lower case letter exists in a given string,'\ndef check_lower(str1) : \n\tfor char in str1 :  \n\t\tk = char.islower()   \n\t\tif k == True :  \n\t\t\treturn True \n\tif(k != 1) :  \n\t\treturn False'
write a function to check if a upper case letter exists in a given string,'\ndef check_upper(str1) : \n\tfor char in str1 :  \n\t\tk = char.isupper()   \n\t\tif k == True :  \n\t\t\treturn True\n\tif(k != 1) :  \n\t\treturn False'
write a program to print number of words in a string,"'\nstr1 = \'It is a glorious day\'\nres = len(str1.split()) \nprint(""The number of words in string are  :  "" + str(res)) '"
write a program to print number of characters in a string,"'\nstr1 = \'It is a glorious day\'\nres = len(str1) \nprint(""The number of characters in string are  :  "", str(res)) '"
write a funtion that accepts two lists of equal length and converts them into a dictioinary,"'\ndef list_to_dict(list1, list2) : \n\treturn dict(zip(list1, list2))'"
write a python function that accepts a list of dictionaries and sorts it by a specified key,"'\ndef sort_dict_list(dict_list, sort_key) : \n\tdict_list.sort(key=lambda item :  item.get(sort_key))'"
write a program to print the longest key in a dictioinary,"'\ndict_1 = {""key1"" :  10, ""keeeey2"" :  2, ""ky3"" :  30}\nmax_key=\'\'\nfor key in dict_1 : \n\tif len(key)>len(max_key) : \n\tmax_key=key\nprint(max_key)'"
write a program to capitalize the first and last character of each key in a dictionary,"""\ninput_dict = {'key_a' :  10, 'kEy' :  2, 'Key_B' :  13}\nfor key in list(input_dict.keys()) : \n\tnew_key = key[0].upper() + key[1 : -1] + key[-1].upper()\n\tinput_dict[new_key] = input_dict[key]\n\tif key != new_key : \n\tdel input_dict[key]"""
"write a program that iterates over a dictionary and prints ""Bingo!"" if length of value is greater than the length of key. Otherwise print ""no bingo""","'\nkey_val_map = {""key1"" :  ""length1"", ""key2"" :  ""len2"", ""Hello"" :  ""hi"", ""bingo"" :  ""print bingo""}\nfor key, val in key_val_map.items() : \n\tif len(val) > len(key) : \n\tprint(""Bingo!"")\n\telse : \n\tprint(""no bingo"")'"
write a python function that accepts a dictionary that has unique values and returns its inversion,"'\ndef invert_dict(input_dict) : \n\tmy_inverted_dict = {value :  key for key, value in input_dict.items()}\n\treturn my_inverted_dict'"
write a function that inverts a dictionary with non-unique values. Keys that map to the same values should be appended to a list in the inverted dictionary,"'\ndef invert_dict_non_unique(my_dict) : \n\tmy_inverted_dict = dict()\n\tfor key, value in my_dict.items() : \n\t\t my_inverted_dict.setdefault(value, list()).append(key)\n\treturn my_inverted_dict'"
write a program to merge a list of dictionaries into a single dictionary using dictionary comprehension,"'\ninput = [{""foo"" :  ""bar"", ""Hello"" :  ""World""},\n\t\t\t{""key1"" :  ""val1"", ""key2"" :  ""val2""},\n\t\t\t{""sample_key"" :  ""sample_val""}]\nmerged_dict = {key :  value for d in input for key, value in d.items()}'"
write a function to return the mean difference in the length of keys and values of dictionary comprising of strings only.,"'\ndef mean_key_val_diff(input_dict) : \n\tsum_diff = 0\n\tfor key, val in input_dict.items() : \n\tsum_diff += abs(len(val) - len(key))\n\treturn sum_diff/len(input_dict)'"
write a program that categorizes tuple values based on second element and prints a dictionary value list where each key is a category.,"'\ntest_list = [(1, 3), (1, 4), (2, 3), (3, 2), (5, 3), (6, 4)] \nres = {} \nfor i, j in test_list :  \n\t\tres.setdefault(j, []).append(i) \nprint(""The dictionary converted from tuple list  :  "" + str(res))'"
write a python function to combine three lists of equal lengths into a nested dictionary and return it,"'\ndef lists_to_dict(test_list1, test_list2, test_list3) : \n\tres = [{a :  {b :  c}} for (a, b, c) in zip(test_list1, test_list2, test_list3)] \n\treturn res'"
write a program to print keys in a dictionary whose values are greater than a given input.,"'\ntest_dict = {\'tsai\'  :  4, \'random_key\'  :  2, \'foo\'  :  3, \'bar\'  :  \'END\'} \nK = 3\nres = {key  :  val for key, val in test_dict.items() \n\t\t\t\t\tif type(val) != int or val > K} \nprint(""Values greater than K  :  "", res.keys())'"
write a function that converts a integer dictionary into a list of tuples.,"'\ndef dict_to_tuple(input_dict) : \n\tout_tuple = [(a, b) for a,b in input_dict.items()]\n\treturn out_tuple'"
write a Python program to combine two dictionary by adding values for common keys,"""\ndict1 = {'a' :  12, 'for' :  25, 'c' :  9} \ndict2 = {'Geeks' :  100, 'geek' :  200, 'for' :  300} \nfor key in dict2 :  \n\tif key in dict1 :  \n\t\tdict2[key] = dict2[key] + dict1[key] \n\telse :  \n\t\tpass"""
write a Python program that sorts dictionary keys to a list using their values and prints this list.,"'\ntest_dict = {\'Geeks\'  :  2, \'for\'  :  1, \'CS\'  :  3} \nres = list(sum(sorted(test_dict.items(), key = lambda x : x[1]), ())) \nprint(""List after conversion from dictionary  :  "", res)'"
write a python program to print the top N largest keys in an integer dictionary.,"'\ntest_dict = {6  :  2, 8 :  9, 3 :  9, 10 :  8}  \nN = 4\nres = []   \nfor key, val in sorted(test_dict.items(), key = lambda x :  x[0], reverse = True)[ : N] :  \n\tres.append(key) \nprint(""Top N keys are :  "" + str(res))'"
write a program to print the values of a given extraction key from a list of dictionaries.,"'\ntest_list = [{""Gfg""  :  3, ""b""  :  7},  \n\t\t\t\t{""is""  :  5, \'a\'  :  10},  \n\t\t\t\t{""Best""  :  9, \'c\'  :  11}]  \nK = \'Best\'\nres = [sub[K] for sub in test_list if K in sub][0]   \nprint(""The extracted value  :  "" + str(res))'"
write a program to convert date to timestamp and print the result,"'\nimport time \nimport datetime \nstr1 = ""20/01/2020""\nelement = datetime.datetime.strptime(str1,""%d/%m/%Y"") \ntimestamp = datetime.datetime.timestamp(element) \nprint(timestamp)'"
write a program to print the product of integers in a mixed list of string and numbers,"'\ntest_list = [5, 8, ""gfg"", 8, (5, 7), \'is\', 2] \nres = 1\nfor ele in test_list :  \n\ttry :  \n\t\tres *= int(ele) \n\texcept  :  \n\t\tpass\nprint(""Product of integers in list  :  "" + str(res))'"
write a python program to add an element to a list. Print the final list.,"'\nlst = [""Jon"", ""Kelly"", ""Jessa""]\nlst.append(""Scott"")\nprint(lst)'"
write a python function to append all elements of one list to another,"'\ndef extend_list(list1, list2) : \n\tlist1 = [1, 2]\n\tlist2 = [3, 4]\n\treturn list1.extend(list2)'"
write a python function to add elements of two lists,"'\ndef add_two_lists(list1, list2) : \n\tlist1 = [1, 2, 3]\n\tlist2 = [4, 5, 6]\n\tsum_list = []\n\tfor (item1, item2) in zip(list1, list2) : \n\t\t sum_list.append(item1+item2)\n\treturn sum_list'"
Write a  python program to print the last element of a list,"""\nlist1 = ['p','r','o','b','e']\nprint(list1[-1])"""
Write a python program to print positive Numbers in a List,"'\nlist1 = [11, -21, 0, 45, 66, -93] \nfor num in list1 :  \n\tif num >= 0 :  \n\t\tprint(num, end = "" "") '"
Write a python function to multiply all values in a list,'\ndef multiplyList(myList)  : \n\tresult = 1\n\tfor x in myList : \n\t\t\tresult = result * x \n\treturn result '
Write a python program to print the smallest number in a list,"'\nlist1 = [10, 20, 1, 45, 99] \nprint(""Smallest element is : "", min(list1)) '"
Write a python program to remove even numbers from a list. Print the final list.,"'\nlist1 = [11, 5, 17, 18, 23, 50]  \nfor ele in list1 :  \n\tif ele % 2 == 0 :  \n\t\tlist1.remove(ele) \nprint(""New list after removing all even numbers :  "", list1) '"
Write a python program to print a list after removing elements from index 1 to 4,"'\nlist1 = [11, 5, 17, 18, 23, 50]  \ndel list1[1 : 5] \nprint(*list1)'"
Write a python program to remove 11 and 18 from a list. Print the final list.,"'\nlist1 = [11, 5, 17, 18, 23, 50]  \nunwanted_num = {11, 18} \nlist1 = [ele for ele in list1 if ele not in unwanted_num] \nprint(""New list after removing unwanted numbers :  "", list1)'"
Write a python program to Remove multiple empty spaces from  List of strings. Print the original and final lists.,"'\ntest_list = [\'gfg\', \'   \', \' \', \'is\', \'            \', \'best\'] \nprint(""The original list is  :  "" + str(test_list)) \nres = [ele for ele in test_list if ele.strip()] \nprint(""List after filtering non-empty strings  :  "" + str(res)) '"
Write a python function to get the Cumulative sum of a list,"'\ndef Cumulative(lists) :  \n\tcu_list = [] \n\tlength = len(lists) \n\tcu_list = [sum(lists[0 : x : 1]) for x in range(0, length+1)] \n\treturn cu_list[1 : ]'"
"Write a python program to print if a string ""hello"" is present in the list","""\nl = [1, 2.0, 'hello','have', 'a', 'good', 'day'] \ns = 'hello'  \nif s in l :  \n\tprint(f'{s} is present in the list') \nelse :  \n\tprint(f'{s} is not present in the list') """
Write a python program to print the distance between first and last occurrence of even element.,"'\ntest_list = [1, 3, 7, 4, 7, 2, 9, 1, 10, 11] \nindices_list = [idx for idx in range( \n\tlen(test_list)) if test_list[idx] % 2 == 0] \nres = indices_list[-1] - indices_list[0] \nprint(""Even elements distance  :  "" + str(res)) '"
Write a python fuction to create an empty list,'\ndef emptylist() : \n\treturn list()  '
Write a python program to print a list with all elements as 5 and of length 10,'\nlist1 = [5] * 10\nprint(list1)'
Write a python program to reverse a list and print it.,"'\ndef Reverse(lst) :  \n\treturn [ele for ele in reversed(lst)] \nlst = [10, 11, 12, 13, 14, 15] \nprint(Reverse(lst)) '"
Write a python program to print odd numbers in a List,"'\nlist1 = [10, 21, 4, 45, 66, 93, 11]  \nodd_nos = list(filter(lambda x :  (x % 2 != 0), list1)) \nprint(""Odd numbers in the list :  "", odd_nos)'"
Write a python program to print negative Numbers in a List,"'\nlist1 = [11, -21, 0, 45, 66, -93] \nfor num in list1 :  \n\tif num < 0 :  \n\t\tprint(num, end = "" "")'"
Write a python program print the the number of occurrences of 8 in a list,"""\ndef countX(lst, x) :  \n\tcount = 0\n\tfor ele in lst :  \n\t\tif (ele == x) :  \n\t\t\tcount = count + 1\n\treturn count \nlst = [8, 6, 8, 10, 8, 20, 10, 8, 8] \nx = 8\nprint('{} has occurred {} times'.format(x, countX(lst, x))) """
Write a python program to swap first and last element of a list . Print the final list,"'\ndef swapList(newList) :  \n\tsize = len(newList) \n\t# Swapping  \n\ttemp = newList[0] \n\tnewList[0] = newList[size - 1] \n\tnewList[size - 1] = temp \n\treturn newList \nnewList = [12, 35, 9, 56, 24] \nprint(swapList(newList)) '"
Write a python program for print all elements with digit 7.,"'\ntest_list = [56, 72, 875, 9, 173]  \nK = 7\nres = [ele for ele in test_list if str(K) in str(ele)] \nprint(""Elements with digit K  :  "" + str(res))'"
Write a python program for printing number of unique elements in a list,"'\ninput_list = [1, 2, 2, 5, 8, 4, 4, 8] \nl1 = [] \ncount = 0\nfor item in input_list :  \n\tif item not in l1 :  \n\t\tcount += 1\n\t\tl1.append(item) \nprint(""No of unique items are : "", count) '"
Write a python program to find the sum and average of the list. Print the sum and average,"'\nL = [4, 5, 1, 2, 9, 7, 10, 8] \ncount = 0\nfor i in L :  \n\tcount += i \navg = count/len(L) \nprint(""sum = "", count) \nprint(""average = "", avg)'"
Write a python program to Remove Tuples of Length 1 from a list of tuples. Print the final list.,"'\ntest_list = [(4, 5), (4, ), (8, 6, 7), (1, ), (3, 4, 6, 7)] \nK = 1\nres = [ele for ele in test_list if len(ele) != K] \nprint(""Filtered list  :  "" + str(res))'"
Write a python program to print a list of tuples from given list having number and its cube in each tuple,"'\nlist1 = [1, 2, 5, 6] \nres = [(val, pow(val, 3)) for val in list1] \nprint(res) '"
Write a python program to print the combination of tuples in list of tuples,"'\ntest_list = [([1, 2, 3], \'gfg\'), ([5, 4, 3], \'cs\')]\nres = [ (tup1, tup2) for i, tup2 in test_list for tup1 in i ] \nprint(""The list tuple combination  :  "" + str(res)) '"
Write a python program to swap tuple elements in list of tuples. Print the output.,"'\ntest_list = [(3, 4), (6, 5), (7, 8)] \nres = [(sub[1], sub[0]) for sub in test_list] \nprint(""The swapped tuple list is  :  "" + str(res)) '"
Write a python program to print all pair combinations of 2 tuples.,"'\ntest_tuple1 = (4, 5) \ntest_tuple2 = (7, 8) \nres =  [(a, b) for a in test_tuple1 for b in test_tuple2] \nres = res +  [(a, b) for a in test_tuple2 for b in test_tuple1] \nprint(""The filtered tuple  :  "" + str(res))'"
Write a python program to print positive Tuples in List.,"'\ntest_list = [(4, 5, 9), (-3, 2, 3), (-3, 5, 6), (4, 6)] \nprint(""The original list is  :  "" + str(test_list)) \nres = [sub for sub in test_list if all(ele >= 0 for ele in sub)] \nprint(""Positive elements Tuples  :  "" + str(res))'"
write a python program to multiply three numbers,"""\nnum1 = 1.5\nnum2 = 6.3\nnum3 = -2.3\nproduct = num1 * num2 * num3\nprint(f'Product :  {product}')"""
"write a python function that when given two numbers, would divide the first number by second number and return the quotient and remainder","'\ndef divide_first_number_by_second(num1, num2) : \n\treturn (num1 // num2), (num1 % num2)'"
write a python function to return the largest and smallest numbers in the given list and return None if the list is empty,"'\ndef largest_and_smallest(list_of_nums) : \n\tif list_of_nums : \n\t\treturn max(list_of_nums), min(list_of_nums)\n\telse : \n\t\treturn'"
write a python function that would read the given input file path and print its contents,"'\ndef read_and_print_file(filepath) : \n\twith open(filepath, ""r"") as infile : \n\t\tprint( infile.read() )'"
write a python program that would print the first n positive integers using a for loop,'\nn = 62\nfor num in range(n) : \n\tprint(num)'
write a python function that returns the input list sorted in ascending order,'\ndef sort_ascending(list_to_be_sorted) : \n\treturn sorted(list_to_be_sorted)'
write a python function that returns the input list sorted in descending order,"'\ndef sort_descending(list_to_be_sorted) : \n\treturn sorted(list_to_be_sorted, reverse=True)'"
"write a python function that would return the sum of first n natural numbers, where n is the input",'\ndef sum_first_n(n) : \n\treturn ( n * (n+1) ) // 2'
"write a recursive python function that would return the sum of first n natural numbers, where n is the input",'\ndef sum_first_n_recursive(n) : \n\tif n == 0 : \n\t\treturn 0\n\treturn sum_first_n_recursive(n-1) + n'
"write a python function that would filter a list of dictionaries where a specified key equals given value, list_of_dictionaries, key and value are inputs to this function.","'\ndef filter_with_key_value(list_of_dicts, key, value) : \n\treturn list( filter( lambda x :  x.get(key) == value, list_of_dicts ) )'"
write a recursive python function that takes either a list or tuple as input and reverses the order of its elements,'\ndef reverse(seq) : \n\tSeqType = type(seq)\n\temptySeq = SeqType()\n\tif seq == emptySeq : \n\t\treturn emptySeq\n\trestrev = reverse(seq[1 : ])\n\tfirst = seq[0 : 1]\n\tresult = restrev + first\n\treturn result'
write a python function that returns the square of a given input number,'\ndef square(x) : \n\treturn x**2'
write a python program that asks for user input and prints the given input,"'\na = input(""User Input"")\nprint(a)'"
write a python function shifts and scales all numbers in the given list by the given mean and standard deviation,"'\ndef shift_and_scale(list_of_nums, mean, std) : \n\treturn [ (x-mean) / std for x in list_of_nums ]'"
write a python function that takes in a list of sequences and zips each corresponding element from the list into a tuple and returns the list of such tuples,'\ndef zip_(list_of_seq) : \n\treturn list(zip(*list_of_seq))'
write python program that would merge two dictionaries by adding the second one into the first,"'\na = {""a"" :  1, ""b"" :  3}\nb = {""c"" :  1, ""d"" :  3}\na.update(b)'"
write a python function that would reverse the given string,'\ndef reverse_string(str_to_be_reversed) : \n\treturn str_to_be_reversed[ :  : -1]'
"write a python program that would print ""Hello World""","'\nprint(""Hello World"")'"
write a python program that would swap variable values,"'\na = 10\nb = 15\na, b = b, a'"
write a python program that iterates over a dictionary and prints its keys and values,"'\na = {""a"" : 1, ""b"" : 2, ""c"" : 3, ""d"" : 4}\nfor k, v in a.items() : \n\tprint(k, v)'"
write a python function that would print the ASCII value of a given character,'\ndef print_ascii(char) : \n\tprint(ord(char))'
write a python function that takes in two numbers and returns their HCF,"'\ndef hcf(num1, num2) : \n\tsmaller = num1 if num1 < num2 else num2\n\tfor i in range(1, smaller+1) : \n\t\tif (num1 % i == 0) and (num2 % i == 0) : \n\t\t\thcf = i\n\treturn hcf'"
write a python function that takes in two numbers and returns their LCM,"'\ndef lcm(num1, num2) : \n\tbigger = num1 if num1 > num2 else num2\n\twhile True : \n\t\tif (bigger % num1 == 0) and (bigger % num2 == 0) : \n\t\t\tbreak\n\t\tbigger += 1\n\treturn bigger'"
"write a recursive python function to calculate sum of natural numbers upto n, where n is an argument",'\ndef recursive_sum(n) : \n\tif n <= 1 : \n\t\treturn n\n\telse : \n\t\treturn n + recursive_sum(n-1)'
write a python function that deletes the last element of a list and returns the list and the deleted element,"'\ndef delete_last_element(list_to_be_processed) : \n\tdeleted_element = list_to_be_processed.pop()\n\treturn list_to_be_processed, deleted_element'"
write a python function that takes in a list and returns a list containing the squares of the elements of the input list,"'\ndef square_list_elements(list_to_be_squared) : \n\treturn list( map(lambda x :  x**2, list_to_be_squared) )'"
"write a python function that finds square roots of a given number, if the square root is an integer, else returns the message ""Error - the square root is not an integer""","'\ndef find_integer_square_roots(num) : \n\tfound = False\n\tfor k in range(1, (num//2)+1) : \n\t\tif ((k**2)==num) : \n\t\t\tfound = True\n\t\t\tbreak\n\tif not found : \n\t\treturn ""Error - the square root is not an integer""\n\treturn -k, k'"
write a python program that prints out natural numbers less than or equal to the given number using a while loop,'\ninput_num = 27\nwhile input_num : \n\tprint(input_num)\n\tinput_num -= 1'
"write a python function that takes two numbers. The function divides the first number by the second and returns the answer. The function returns None, if the second number is 0","'\ndef divide(num1, num2) : \n\tif num2 == 0 : \n\t\treturn\n\telse : \n\t\treturn num1 / num2'"
write a python program uses else with for loop,"'\nseq = ""abcde""\nfor k in seq : \n\tif k == ""f"" : \n\t\tbreak\nelse : \n\tprint(""f Not Found!"")'"
Write a function to return the mean of numbers in a list,'\ndef cal_mean(num_list : list)->float : \n\tif num_list : \n\t\treturn sum(num_list)/len(num_list)\n\telse : \n\t\treturn None'
Write a function to return the area of a equilateral triangle,'\ndef cal_eq_triangle_area(a : float)->float : \n\tif a : \n\t\treturn (3**(1/2))*(a**2)/4\n\telse : \n\t\treturn None'
Write a function to return the area of a right angle triangle,"'\ndef cal_rt_triangle_area(base : float,height : float)->float : \n\tif base and height : \n\t\treturn (base*height)/2\n\telse : \n\t\treturn None'"
Write a function to return the cartisian distance of a point from origin,"'\ndef cal_dist_from_orign(x : float,y : float)->float : \n\treturn (x**2+y**2)**(1/2)'"
Write a function to return the cartisian distance between two points,"'\ndef cal_cart_distance(x1 : float,y1 : float,x2 : float,y2 : float)->float : \n\treturn ((x1-x2)**2+(y1-y2)**2)**(1/2)'"
Write a function to return the type roots of a quadratic equation ax**2 + bx + c = 0,"""\ndef root_type(a : float,b : float,c : float) : \n\tif b**2-4*a*c >= 0 : \n\t\treturn 'real'\n\telse : \n\t\treturn 'imaginary'"""
Write a function to return the sum of the roots of a quadratic equation ax**2 + bx + c = 0,"'\ndef sum_of_roots(a : float,c : float) : \n\tif a : \n\t\treturn c/a\n\telse : \n\t\treturn None'"
Write a function to return the product of the roots of a quadratic equation ax**2 + bx + c = 0,"'\ndef prod_of_roots(a : float,b : float) : \n\tif a : \n\t\treturn -b/a\n\telse : \n\t\treturn None'"
Write a function to return the real of the roots of a quadratic equation else return None ax**2 + bx + c = 0,"'\ndef roots_of_qad_eq(a : float,b : float,c : float) : \n\td = b**2-4*a*c\n\tif d >= 0 : \n\t\treturn (-b+(d)**(1/2))/2*a,(-b-(d)**(1/2))/2*a\n\telse : \n\t\treturn None'"
Write a function to return the profit or loss based on cost price and selling price,"""\ndef find_profit_or_loss(cp,sp) : \n\tif cp > sp : \n\t\treturn 'loss', cp-sp\n\telif cp < sp : \n\t\treturn 'profit', sp-cp\n\telse : \n\t\treturn 'no profit or loss', 0"""
Write a function to return the area of a rectangle,"'\ndef cal_area_rect(length, breadth) : \n\treturn length*breadth'"
Write a function to return the area of a square,'\ndef cal_area_square(side) : \n\treturn side**2'
Write a function to return the area of a rhombus with diagonals q1 and q2,"'\ndef cal_area_rhombus(q1,q2) : \n\treturn (q1*q2)/2'"
Write a function to return the area of a trapezium with base a base b and height h between parallel sides,"'\ndef cal_area_trapezium(a,b,h) : \n\treturn h*(a+b)/2'"
Write a function to return the area of a circle of raidus r,'\ndef cal_area_circle(r) : \n\tpi = 3.14\n\treturn pi*r**2'
Write a function to return the circumference of a circle,'\ndef cal_circumference(r) : \n\tpi = 3.14\n\treturn 2*pi*r'
Write a function to return the perimeter of a rectangle,"'\ndef cal_perimeter_rect(length, bredth) : \n\treturn 2*(length+bredth)'"
Write a function to return the perimeter of a triangle,"'\ndef cal_perimeter_triangle(s1,s2,s3) : \n\treturn s1+s2+s3'"
Write a function to return the perimeter of a square,'\ndef cal_perimeter_square(side) : \n\treturn 4*side'
Write a function to return the perimeter of an equilateral triangle,'\ndef cal_perimeter_eq_triangle(a) : \n\treturn 3*a'
Write a function to return the perimeter of a isoscales triangle,"'\ndef cal_perimeter_iso_triangle(s1,s2) : \n\treturn 2*s1+s2'"
Write a function to return the area of an ellipse,"'\ndef cal_area_ellipse(minor, major) : \n\tpi = 3.14\n\treturn pi*(minor*major)'"
Write a function to return the lateral surface area of a cylinder,"'\ndef cal_cylinder_lat_surf_area(height,radius) : \n\tpi=3.14\n\treturn 2*pi*radius*height'"
Write a function to return the curved surface area of a cone,"'\ndef cal_cone_curved_surf_area(slant_height,radius) : \n\tpi=3.14\n\treturn pi*radius*slant_height'"
Write a function to return the total surface area of a cube of side a,'\ndef cal_surface_area_cube(a) : \n\treturn 6*(a**2)'
"Write a function to return the total surface area of a cuboid of length l, bredth b and height h","'\ndef cal_surface_area_cuboid(l,b,h) : \n\treturn 2*(l*b+b*h+h*l)'"
Write a function to return the surface area of a sphere,'\ndef cal_area_sphere(radius) : \n\tpi = 3.14\n\treturn 4*pi*(radius**2)'
Write a function to return the surface area of a hemi-sphere,'\ndef cal_area_hemisphere(radius) : \n\tpi = 3.14\n\treturn 2*pi*(radius**2)'
Write a function to return the total surface area of a cylinder,"'\ndef cal_cylinder_surf_area(height,radius) : \n\tpi=3.14\n\treturn 2*pi*radius**2*+2*pi*radius*height'"
Write a function to return the lateral surface area of a cone,"'\ndef cal_cone_lateral_surf_area(height,radius) : \n\tpi=3.14\n\treturn pi*radius*(((height**2)+(radius**2))**(1/2))'"
Write a function to return the volume of a cylinder,"'\ndef cal_cylinder_volume(height, radius) : \n\tpi=3.14\n\treturn pi*(radius**2)*height'"
Write a function to return the volume of a cone,"'\ndef cal_cone_volume(height,radius) : \n\tpi=3.14\n\treturn pi*(radius**2)*height/3'"
Write a function to return the volume of a hemi sphere,'\ndef cal_hemisphere_volume(radius : float)->float : \n\tpi=3.14\n\treturn (2/3)*pi*(radius**3)'
Write a function to return the volume of a sphere,'\ndef cal_sphere_volume(radius : float)->float : \n\tpi=3.14\n\treturn (4/3)*pi*(radius**3)'
Write a function to return the volume of a cuboid,"'\ndef cal_cuboid_volume(length : float, breadth : float, height : float)->float : \n\treturn length*breadth*height'"
Write a function to return the volume of a cube,'\ndef cal_cube_volume(side : float)->float : \n\treturn side**3'
Write a function to return the speed of moving object based of distance travelled in given time,"'\ndef cal_speed(distance : float,time : float)->float : \n\treturn distance/time'"
Write a function to return the distance covered by a moving object based on speend and given time,"'\ndef cal_distance(time : float,speed : float)->float : \n\treturn time*speed'"
Write a function to return the time taken by a given of moving object based of distance travelled in given time,"'\ndef cal_time(distance : float,speed : float)->float : \n\treturn distance/speed'"
Write a function to return the torque when a force f is applied at angle thea and distance for axis of rotation to place force applied is r,"'\ndef cal_torque(force : float,theta : float,r : float)->float : \n\timport math\n\treturn force*r*math.sin(theta)'"
Write a function to return the angualr veolcity based on augualr distance travelled in radian unit and time taken,"'\ndef cal_angular_velocity(angular_dist : float,time : float)->float : \n\treturn angular_dist/time'"
Write a function to calculate the focal length of a lense buy the distance of object and distance of image from lense,"'\ndef cal_focal_length_of_lense(u : float,v : float)->float : \n\treturn (u*v)/(u+v)'"
Write a function to calculate the gravitational force between two objects of mass m1 and m2 and distance of r between them,"'\ndef cal_gforce(mass1 : float,mass2 : float, distance : float)->float : \n\tg = 6.674*(10)**(-11)\n\treturn (g*mass1*mass2)/(distance**2)'"
Write a function to calculate the current in the curcit where the resistance is R and voltage is V,"'\ndef cal_current(resistance : float, voltage : float)->float : \n\treturn voltage/resistance'"
Write a function to calculate the total capacitance of capacitors in parallel in a given list,'\ndef cal_total_cap_in_parallel(cap_list : list)->float : \n\treturn sum(cap_list)'
Write a function to calculate the total resistance of resistances in parallel in a given list,'\ndef cal_total_res_in_parallel(res_list : list)->float : \n\treturn sum([1/r for r in res_list])'
Write a function to calculate the total resistance of resistances in series in a given list,'\ndef cal_total_res_in_series(res_list : list)->float : \n\treturn sum(res_list)'
Write a function to calculate the moment of inertia of a ring of mass M and radius R,"'\ndef cal_mi_ring(mass : float,radius : float)->float : \n\treturn mass*(radius**2)'"
Write a function to calculate the moment of inertia of a sphere of mass M and radius R,"'\ndef cal_mi_sphere(mass : float,radius : float)->float : \n\treturn (7/5)*mass*(radius**2)'"
"Write a function to calculate the pressure P of ideal gas based on ideal gas equation - Volume V, and Temperatue T are given","'\ndef find_pressure_of_ideal_gas(volume : float, temp : float,n : float)->float : \n\tr = 8.3145 # gas constant R\n\treturn (n*r*temp)/volume'"
Write a function to calculate the volume V of ideal gas based on ideal gas equation Pressure P and Tempreature T given,"'\ndef find_volume_of_ideal_gas(pressure : float, temp : float,n : float)->float : \n\tr = 8.3145 # gas constant R\n\treturn (n*r*temp)/pressure'"
Write a function to calculate the Temprature T of ideal gas based on ideal gas equation Pressure P and Volume V given,"'\ndef find_temp_of_ideal_gas(pressure : float, volume : float,n : float)->float : \n\tr = 8.3145 # gas constant R\n\treturn (pressure*volume)/n*r'"
"Write a function to calculate the velocity of an object with initial velocity u, time t and acceleration a","'\ndef cal_final_velocity(initial_velocity : float,accelration : float,time : float)->float : \n\treturn initial_velocity + accelration*time'"
"Write a function to calculate the displacement of an object with initial velocity u, time t and acceleration a","'\ndef cal_displacement(initial_velocity : float,accelration : float,time : float)->float : \n\treturn initial_velocity*time + .5*accelration*(time)**2'"
Write a function to calculate amount of radioactive element left based on initial amount and half life,"'\ndef cal_half_life(initail_quatity : float, time_elapsed : float, half_life : float)->float : \n\treturn initail_quatity*((1/2)**(time_elapsed/half_life))'"
Write a function to calculate the new selling price based on discount percentage,"'\ndef cal_sp_after_discount(sp : float,discount : float)->float : \n\treturn sp*(1 - discount/100)'"
"Write a function to calculate the simple interest for principal p, rate r and time in years y","'\ndef get_si(p : float, r : float, t : float)->float : \n\treturn (p*r*t)/100'"
"Write a function to calculate the compound interest for principal p, rate r and time in years y","'\ndef get_ci(p : float, r : float, t : float, n : float)->float : \n\treturn round(p*((1+(r/(n*100)))**(n*t)) - p,2)'"
Write a function to calculate the energy released by converting mass m in kg to energy,'\ndef cal_energy_by_mass(mass : float)->float : \n\tc = 300000\n\treturn mass * (c**2)'
Write a function to calculate the kinetic energy of an object of mass m and velocity v,"'\ndef cal_ke(mass : float,velocity : float)->float : \n\treturn (mass*(velocity)**2)/2'"
Write a function to calculate the potential energy of an object of mass m at height h,"'\ndef cal_pe(mass : float,height : float)->float : \n\tg = 9.8\n\treturn (mass*g*height)'"
Write a function to calculate the electrostatic force between two charged particles with charge q1 and q2 at a distance d apart,"'\ndef cal_electrostatic_force(q1,q2,d) : \n\tk = 9*(10**9)\n\treturn (k*q1*q2)/(d**2)'"
Write a function to calculate the density given mass and volume,"'\ndef cal_density(mass,volume) : \n\treturn (mass/volume)'"
Write a function to convert the temprature celsius 'c' to fahrenheit 'f' or fahrenheit to celsius,"""\ndef temp_converter(temp,temp_given_in = 'f') : """
Return the converted temprature,"""\n\tif temp_given_in.lower() == 'f' :  # Convert to C\n\t\treturn (temp - 32) * (5/9)\n\telse :  # Convert to F\n\t\treturn (temp * 9/5) + 32"""
Write a function to Get Kth Column of Matrix,"'\ndef kth_column(test_list=[[4, 5, 6], [8, 1, 10], [7, 12, 5]],k=2) : \n\tprint(""The original list is  :  "" + str(test_list))\n\tK =k\n\tres = list(zip(*test_list))[K]\n\tprint(""The Kth column of matrix is  :  "" + str(res))'"
Write a function to find sum of nested list using Recursion,"'\ntotal = 0\ndef sum_nestedlist(l) : \n\tglobal total\n\tfor j in range(len(l)) : \n\t\tif type(l[j]) == list : \n\t\t\tsum_nestedlist(l[j])\n\t\telse : \n\t\t\ttotal += l[j]\nsum_nestedlist([[1, 2, 3], [4, [5, 6]], 7])\nprint(total)'"
Write a function to find power of number using recursion,"'\ndef power(N, P) : \n\tif (P == 0 or P == 1) : \n\t\treturn N\n\telse : \n\t\treturn (N * power(N, P - 1))\nprint(power(5, 2))'"
Write a function to find time for a given angle.,"'\ndef calcAngle(hh, mm) : \n\thour_angle = 0.5 * (hh * 60 + mm)\n\tminute_angle = 6 * mm\n\tangle = abs(hour_angle - minute_angle)\n\tangle = min(360 - angle, angle)\n\treturn angle'"
write a python program to read and print contents of a file,"""\nfilepath = 'data.txt'\nwith open(filepath, 'r') as file : \n\tdata = file.read()\n\tprint(f'Data :  {data}')"""
write a python function to add numbers in a list,"'\ndef add(list) : \n\tsum = 0\n\tfor i in range(0, len(list)) : \n\t\tsum += list[i]\n\treturn sum'"
write a function to check if a number is positive or not,'\ndef check(num) : \n\tif num > 0 : \n\t\treturn True\n\treturn False'
write a python function to that performs as ReLU,'\ndef ReLU(num) : \n\tif num > 0 : \n\t\treturn num\n\treturn 0'
write a boolean python function to check if a given string matches a given pattern,"'\nimport re\ndef match(pattern, string) : \n\tif re.match(pattern, string) : \n\t\treturn True\n\treturn False'"
write a python program to swap two numbers and print them,"'\nnum1 = 2\nnum2 = 4\nnum1, num2 = num2, num1\nprint(num1, num2)'"
write a python function to get the maximum element in a list,'\ndef max(list) : \n\treturn max(list)'
write a python program list comprehension to make a list of size n of random integers in ranges a and b,"""\nimport random\nn = 10\na = 1\nb = 100\nrand = [random.randint(a, b) for i in range(n)]\nprint(f'list  :  {rand}')"""
write a python program to tokenise a string into words and print them,"""\nstring = 'the sun is shining'\nwords = string.split()\nprint(words)"""
write a python program to print the command line arguements given to a file,'\nimport sys\nargs = sys.argv \nprint(args)'
write a python program to print a string in lowercase,"""\nstring = 'SFG';\nprint(string.lower())"""
write a python function to return the absolute difference between two numbers,"'\ndef abs_diff(num1, num2) : \n\treturn abs(num1 - num2)'"
write a program to terminate the program execution,'\nimport sys\nsys.exit()'
write a python program to print the datatype of a variable,'\nx = 2\nprint(type(x))'
write a python program to sort a list in descending order and print it,"'\nlist = [3, 1, 5, 6]\nresult = sorted(list, reverse = True)\nprint(result)'"
write a python function to check if a string contains a vowel or not,"""\ndef check_vowel(string) : \n\tvowels = ['a', 'e', 'i', 'o', 'u']\n\tfor vowel in vowels : \n\t\tif vowel in string : \n\t\t\treturn True\n\treturn False"""
write a python program to filter a list and return words with alphabets only and print it,"""\nlist = ['sadgas1', 'sasg.as3$', 'hsd', '^atg', 'gaf']\nresult = [item for item in list if item.isalpha()]\nprint(result)"""
write a python program to trim whitespace characters from a string and print it,"""\nstring = ' asdga \\t\\r'\nprint(string.strip())"""
write a python program to typecast an integer to string and print it,'\nx = 2\ny = str(x)\nprint(y)'
write a python program to round up a number and print it,'\nimport math\nx = 2.3\ny = math.ceil(x)\nprint(y)'
write a function to accept a simple iterable and print the elements,'\ndef print_iter(iter) : \n\tfor item in iter : \n\t\tprint(item)'
write a function to reverse a string,'\ndef reverse_string(string) : \n\treturn string[ :  : -1]'
write a function to check if a string is a palindrome or not,'\ndef reverse_string(string) : \n\treturn string[ :  : -1]\ndef ispalin(string) : \n\tif string == reverse_string(string) : \n\t\treturn True\n\treturn False'
write a python function to return the largest value in a dictionary,'\ndef dic_largest(dic) : \n\treturn max(dic.values())'
write a python print to return the first n fibonacci numbers,"'\ndef fibonacci(n) : \n\ta, b = 0, 1\n\tprint(a)\n\tprint(b)\n\tfor i in range(n - 2) : \n\t\tprint(a + b)\n\t\ta, b = b, a + b'"
write a python function to return the number of whitespace separated tokens,'\ndef tokenise(string) : \n\treturn len(string.split())'
write a python function to return the cube of a number,'\ndef cube(num)\n\treturn num * num * num'
write a python function to return the area of a circle with given radius,'\nimport math\ndef area_circle(radius) : \n\treturn math.pi * radius * radius'
write a python function to calculate age given date of birth,"'\nfrom datetime import date \ndef calculateAge(birthDate) :  \n\ttoday = date.today() \n\tage = today.year - birthDate.year - \n\t\t\t((today.month, today.day) < \n\t\t\t(birthDate.month, birthDate.day)) \n\treturn age'"
"write a python function to calculate simple interest given principal , rate and time","'\ndef simpleIntereset(principal, rate, time) : \n\treturn principal * rate * time / 100'"
write a function to calculate the frequency of a number in a list,"'\ndef frequency(list, num) : \n\tcount = 0\n\tfor item in list : \n\t\tif item == num : \n\t\t\tcount = count + 1\n\treturn count'"
write a program to print ascii code of a character,"""\nx = '5'\nprint(ord(x))"""
write a function to calculate factorial of number,'\ndef factorial(num) : \n\tif num == 0 : \n\t\treturn 1\n\treturn num * factorial(num - 1)'
write a function to print if a number is even or odd,"""\ndef oddeven(num) : \n\tif num % 2 == 0 : \n\t\tprint('even')\n\telse : \n\t\tprint('odd')"""
write a python program to accept username and print hello along with the username,"""\nname = input()\nprint('Hello ' + name)"""
write a python program to print current datetime,'\nfrom datetime import datetime\nnow = datetime.now()\nprint(now)'
write a python function to convert from Celcius to fahrenhiet,'\ndef cel_to_fah(celcius) : \n\treturn 9 * celcius / 5 + 32'
write a python program to delete an element from a list,"""\nlist = ['a', 'bc', 'd', 'e']\nelement = 'bc'\nlist.remove(element)"""
Write a program to print the union of two sets,"'\nSet1 = {""1"",""2"",""3""}\nSet2 = {""a"",""b"",""c""}\nSet = Set1.union(Set2)\nprint(Set)'"
write a program to remove common element between two sets,"'\ns1 = {""apple"", ""banana"", ""cherry""}\ns2 = {""google"", ""microsoft"", ""apple""}\ns1.difference_update(s2)\nprint(s1)'"
write a program to find a given character in a string and print its position,"'\na= ""Hello World""\nx= a.find(""r"")\nprint(x)'"
write a program to print logrithmic values of any number,"'\nimport math\nx = 100\nbase = 5\nprint(math.log(x,base))'"
write a program to join two lists,"'\nlist1 = [""a"", ""b"", ""c""]\nlist2 = [1, 2, 3]\nlist3 = list1 + list2\nprint(list3)'"
write a function to check a valid email id,"'\nimport re \ndef check(email) :     \n\tregex = \'^[a-z0-9]+[\\._]?[a-z0-9]+[@]\\w+[.]\\w{2,3}$\'\n\tif(re.search(regex,email)) :   \n\t\tprint(""Valid Email"")\t\t    \n\telse :   \n\t\tprint(""Invalid Email"")'"
write a program to print difference in between today and given date,"'\nimport datetime\ndd = int(input(""date :  ""))\nmm = int(input(""month :  ""))\nyy = int(input(""year :  ""))\na = datetime.date(yy,mm,dd)\nx = date.today()\nprint(x-a)'"
write a function to replace vowels with a specific character K,"""\ndef replacewith_K(test_str, K) :  \n\tvowels = 'AEIOUaeiou'\n\tfor ele in vowels :  \n\t\ttest_str = test_str.replace(ele, K) \n\treturn test_str"""
write a python function to return mean of a list of numbers,'\ndef mean(list) : \n\tsum = 0\n\tfor num in list : \n\t\tsum += num\n\treturn sum / len(list)'
write a python class named complex with constructor accepting real and imaginary parts,"'\nclass Complex : \n\tdef __init__(self, realpart, imagpart) : \n\t\tself.r = realpart\n\t\tself.i = imagpart'"
write a program to remove duplicate elements in a list and print the list,"'\ntest_list = [1, 3, 5, 6, 3, 5, 6, 1] \nprint (""The original list is  :  "" +  str(test_list)) \nres = [] \nfor i in test_list :  \n\tif i not in res :  \n\t\tres.append(i) \nprint (""The list after removing duplicates  :  "" + str(res))'"
write a program to print sum of all even numbers in a list,"'\nls = [1,2,3,4,5,6,7,8,10,22]\nsum = 0\nfor i in ls : \n\tif i % 2 == 0 : \n\t\tsum += i\nprint(sum)'"
write a program to write a string in a file,"'\nfilename = \'file1.txt\'\nstring = ""programming in \\n python""\nf1 = open(filename,\'w\')\nf1.write(string)\nf1.close()'"
write a function to check weather a number is prime or not,"'\ndef isprime(num) : \n\tfor i in range(2, num) : \n\t\tif num % i == 0 : \n\t\t\treturn False\n\treturn True'"
write a program to print binary of a decimal number n,"'\nbinaryNum = [0] * n; \ni = 0; \nwhile (n > 0) :   \n\tbinaryNum[i] = n % 2; \n\tn = int(n / 2); \n\ti += 1; \nfor j in range(i - 1, -1, -1) :  \n\tprint(binaryNum[j], end = """")'"
write a function to check if a number is perfect square or not,'\nimport math\ndef checksquare(num) : \n\tx = int(math.sqrt(num))\n\tif x * x == num : \n\t\treturn True\n\treturn False'
write a program to print the sine value of a number,'\nimport math\nnum = 3\nprint(math.sin(num))'
write a function to calculate the hypotenuse of a triangle give base and height,"'\nimport math\ndef calc_hypotenuse(base, height) : \n\treturn math.sqrt(base * base + height * height)'"
write a function to calculate the sum of digits of a number,'\ndef sum_of_digits(num) : \n\tsum = 0\n\twhile(num > 0) : \n\t\tsum += num % 10\n\t\tnum = num // 10\n\treturn sum'
write a python function to calculate the dot product of two lists,"'\ndef dot(l1, l2) : \n\treturn sum(x*y for x,y in zip(l1, l2))'"
write a function to accept input as feet and inches into centimeters,"'\ndef height_into_cms(feet, inches) : \n\tininches = feet * 12 + inches\n\treturn ininches * 2.54'"
write a python function to convert temperature from celcius to kelvin,'\ndef cel_to_kel(celcius) : \n\treturn celcius + 273'
write a python program to find difference between elements of two lists and print it,"'\nl1 = [1, 2, 3, 4]\nl2 = [5, 8, 7, 0]\nres = []\nfor i in range(len(l1)) : \n\tres.append(l1[i] - l2[i])\nprint(res)'"
write a function to calculate BMI given height in meters and weights in kgs,"'\ndef bmi(height, weight) : \n\treturn weight / (height * height)'"
write a function to calculate area of a triangle given height and base,"'\ndef area_triangle(base, height) : \n\treturn 0.5 * base * height'"
write a program to print the bitwise OR of two numbers,'\nnum1 = 5\nnum2 = 10\nprint(num1 | num2)'
write a function to convert weight from kgs to pounds,'\ndef kgs_to_pounds(weight_kg) : \n\treturn weight_kg * 2.2'
write a function to convert miles to kilometers,'\ndef miles_to_kms(dist) : \n\treturn dist * 1.609'
write a function to calculate speed given distance covered and time taken,"'\ndef calspeed(dist, time) : \n\treturn dist / time'"
write a python function to return count of number of vowels in a sentence,"'\ndef count_vowels(sentence) : \n\tcount = 0\n\tfor letter in sentence : \n\t\t if letter in ""aeiouAEIOU"" : \n\t\t\tcount += 1\n\treturn count'"
write a python function to check if a given string is a palindrome,'\ndef is_palindrome(string) : \n\treturn string == string[ :  : -1]'
write a program to print the nth fibonacci number,"'\nn1 = 1\nn2 = 1\nn = 5\nfor _ in range(n) : \n\tn1, n2 = n2, n1 + n2\nprint(n2)'"
write a function to return the square of first N numbers,'\ndef get_squares(n) : \n\treturn [i*i for i in range(n)]'
write a python function to return only even numbers in a list,"'\ndef filter_even(nums) : \n\treturn list(filter(lambda num :  num % 2 == 0, nums))'"
write a python function to return only odd numbers in a list,"'\ndef filter_odd(nums) : \n\treturn list(filter(lambda num :  num % 2 == 1, nums))'"
write a python program to calculate the sum of numbers using reduce and print it,"""\nfrom functools import reduce\nnums = [1, 2, 3, 4, 5, 10, 20, 30, 40, 50]\ntotal_sum = reduce(lambda a, b :  a + b, nums)\nprint(f'Sum :  {total_sum}')"""
write a python program to print unique numbers in a list,"""\nnumbers = [1, 2, 2, 3, 4, 4, 5, 6]\nunique = set(numbers)\nprint(f'Unique numbers :  {list(unique)}')"""
write a python program to count how many times each letter occurs in a string,"""\nstring = 'The quick brown fox jumps over the lazy dog'\ncountmap = {}\nfor letter in string : \n\tif letter in countmap : \n\t\t countmap[letter] += 1\n\telse : \n\t\t countmap[letter] = 1\nprint(f'Count of letters :  {countmap}')"""
write a python function to repeat a given string n times,"'\ndef repeat_string(string, frequency) : \n\treturn string * frequency'"
write a program to capitalize the first letter of every word in a string and print it,"""\nstring = 'The quick brown fox jumps over the lazy dog'\nprint(string.title())"""
write a function that merges two dictionaries,"'\ndef merge_dictionaries(dict1, dict2) : \n\treturn {**dict1, **dict2}'"
write a program to merge two lists into a dictionary,"""\nkeys = [1, 2, 3]\nvalues = ['aye', 'bee', 'sea']\ndictionary = dict(zip(keys, values))"""
write a python function that inverts the key and values in a dict and returns it,"'\ndef invert_dict(dictionary) : \n\tinverted_dict = {value :  key for key, value in dictionary.items()}\n\treturn inverted_dict'"
write a python program to print the difference in days between two dates,"""\nfrom datetime import date\ndate1 = date(2020, 10, 25)\ndate2 = date(2020, 12, 25)\nprint(f'Difference between dates :  {(date2 - date1).days}')"""
write a python function that returns the weighted average of numbers,"'\ndef get_weighted_average(numbers, weightage) : \n\treturn sum(x * y for x, y in zip(numbers, weightage)) / sum(weightage)'"
write a python program to check and print if a number is prime,"'\nnum = 407\nif num > 1 : \n\tfor i in range(2,num) : \n\t\t if (num % i) == 0 : \n\t\t\tprint(num,""is not a prime number"")\n\t\t\tbreak\n\telse : \n\t\t print(num,""is a prime number"")\nelse : \n\tprint(num,""is not a prime number"")'"
write a python program to print all prime numbers in a given interval,"'\nlower = 900\nupper = 1000\nfor num in range(lower, upper + 1) : \n\tif num > 1 : \n\t\t for i in range(2, num) : \n\t\t\tif (num % i) == 0 : \n\t\t\t\tbreak\n\t\t else : \n\t\t\tprint(num)'"
write a python function to return words in a sentence in sorted order,'\ndef get_sorted_words(sentence) : \n\twords = [word for word in sentence.split()]\n\twords.sort()\n\treturn words'
write a python function to remove all punctuation from a string,"'\ndef remove_punctuations(sentence) : \n\tpunctuations = \'\'\'!()-[]{}; : \'""\\,<>./?@#$%^&*_~\'\'\'\n\tno_punct = \'\'\n\tfor char in sentence : \n\t\t if char not in punctuations : \n\t\t\tno_punct = no_punct + char\n\treturn no_punct'"
write a python function to return the nth fibonacci number,'\ndef fib(n) : \n\tif n <= 1 : \n\t\t return n\n\telse : \n\t\t return (fib(n-1) + fib(n-2))'
write a python function to return the sum of first n numbers,'\ndef sum_of_nums(n) : \n\tif n <= 1 : \n\t\t return n\n\telse : \n\t\t return n + sum_of_nums(n-1)'
write a python function to return the factorial of a number,'\ndef fact(n) : \n\tif n == 1 : \n\t\t return n\n\telse : \n\t\t return n * fact(n-1)'
write a python program to print the factors of a number,"'\nnum = 320\nfor i in range(1, num + 1) : \n\tif num % i == 0 : \n\t\t print(i)'"
write a python function that returns the lcm of two numbers,"'\ndef lcm(x, y) : \n\tif x > y : \n\t\t greater = x\n\telse : \n\t\t greater = y\n\twhile(True) : \n\t\t if((greater % x == 0) and (greater % y == 0)) : \n\t\t\tlcm = greater\n\t\t\tbreak\n\t\t greater += 1\n\treturn lcm'"
write a python function that returns the gcd of two numbers,"'\ndef gcd(x, y) : \n\tif x > y : \n\t\t smaller = y\n\telse : \n\t\t smaller = x\n\tfor i in range(1, smaller + 1) : \n\t\t if((x % i == 0) and (y % i == 0)) : \n\t\t\tgcd = i\n\treturn gcd'"
write a python program to print the ASCII value of a character,"""\ncharacter = 'x'\nprint(f'The ASCII value of {character} is {ord(character)}')"""
write a python program to print the character of an ASCII value,"""\nvalue = 65\nprint(f'The ASCII value {value} is of the character {chr(value)}')"""
write a python function to print the binary value of a decimal number,'\ndef print_binary(dec) : \n\tprint(bin(dec))'
write a python function to print the octal value of a decimal number,'\ndef print_octal(dec) : \n\tprint(oct(dec))'
write a python function to print the hexadecimal value of a decimal number,'\ndef print_hexadecimal(dec) : \n\tprint(hex(dec))'
write a python program that prints the sum of natural numbers up to a given number,"""\nnum = 16\nsum = 0\nwhile (num > 0) : \n\tsum += num\n\tnum -= 1\nprint(f'The sum is {sum}')"""
write a python function to return the number of lines in a file,"""\ndef count_lines(filename) : \n\twith open(filename, 'r') as f : \n\t\t contents = f.read().split('\\n')\n\t\t return len(contents)"""
write a program to print the current date and time,'\nfrom datetime import datetime\nnow = datetime.now()\nprint(now)'
write a python program to extract the file name and extension of a file,"""\nimport os\nfilename, extension = os.path.splitext('/path/to/some/file.ext')"""
write a python program to merge two lists,"'\nodd = [1, 3, 5, 7, 9]\neven = [2, 4, 6, 8, 10]\nodd.extend(even)'"
write a python program to print a random vowel,"""\nimport random\nvowels = ['a', 'e', 'i', 'o', 'u']\nprint(random.choice(vowels))"""
write a python program to flip a coin 100 times and print number of heads and tails,"""\nimport random\nheads = 0\ntails = 0\nfor i in range(100) : \n\tif(random.choice([True, False])) : \n\t\t heads += 1\n\telse : \n\t\t tails += 1\nprint(f'{heads} heads, {tails} tails')"""
write a python program to print common elements in two lists,"""\nlist_a = [1, 2, 3, 4, 5, 6, 7]\nlist_b = [2, 4, 6, 8, 10]\nprint(f'Common elements :  { set(list_a).intersection(set(list_b)) }')"""
write a python program to print squares of numbers until 20,'\nfor i in range(20) : \n\tprint(i*i)'
write a python program to print the number of letters and digits in sentence,"""\nsentence = 'The Quick 123 Fox'\ndigits = 0\nletters = 0\nfor c in sentence : \n\tif c.isdigit() : \n\t\t digits += 1\n\telif c.isalpha() : \n\t\t letters += 1\n\telse : \n\t\t pass\nprint(f'Digits :  {digits}, Letters :  {letters}')"""
write a python function to print a given string n times,"'\ndef printn(string, n) : \n\tprint(string * n)'"
write a python program that creates a dictionary whose keys are numbers from 1 to 10 and values are squares of the key,"'\nsquare_dict = {}\nfor i in range(1, 11) : \n\tsquare_dict[i] = i*i'"
write a python class called Person that has a name property,"'\nclass Person : \n\tdef __init__(self, name) : \n\t\t self.name = name'"
write a python function that takes two strings as a parameter and prints the shorter one,"'\ndef print_shorter(str1, str2) : \n\tif (len(str1) > len(str2)) : \n\t\t print(str2)\n\telse : \n\t\t print(str1)'"
write a program to compute the count of each word in a sentence and print it,"""\nword_freq = {}\nline = 'how many how words does this many have'\nfor word in line.split() : \n\tword_freq[word] = word_freq.get(word, 0) + 1\nprint(word_freq)"""
write a python function that squares every number in a list using a list comprehension and returns the result,'\ndef square_numbers(nums) : \n\treturn [i*i for i in nums]'
write a python program that converts a binary number to decimal and prints it,"""\nbinary_num = '1010101'\ndecimal_num = int(binary_num, 2)\nprint(decimal_num)"""
write a python program that converts a octal number to octal and prints it,"""\noctal_num = '17'\ndecimal_num = int(octal_num, 8)\nprint(decimal_num)"""
write a python program that converts a hexadecimal number to hexadecimal and prints it,"""\nhexadecimal_num = 'FF'\ndecimal_num = int(hexadecimal_num, 16)\nprint(decimal_num)"""
write a python program that alphabetically sorts the words in a sentence and prints it,"""\nsentence = 'the quick brown fox jumps'\nsorted_words = sentence.split(' ')\nsorted_words.sort()\nprint(' '.join(sorted_words))"""
write a python program that prints the area of a circle,"""\nimport math\nradius = 5\nprint(f'Area :  {math.pi * radius * radius}')"""
write a python function that returns a dictionary with the area and perimeter of a rectangle,"""\ndef calculate_rect_properties(width, height) : \n\treturn {\n\t\t 'perimeter' :  2 * (width + height),\n\t\t 'area' :  width * height\n\t}"""
write a python program that removes all blank spaces in a sentence and prints it,"""\nsentence = 'the quick brown fox'\nprint(sentence.replace(' ', ''))"""
write a python program that prints all characters at even indexes in a sentence,"""\nsentence = 'the quick brown fox'\nprint(sentence[ :  : 2])"""
write a python program that prints every third character in a sentence,"""\nsentence = 'the quick brown fox'\nprint(sentence[ :  : 3])"""
write a program to remove odd numbers from a list using list comprehensions,"'\nnums = [1, 2, 3, 4, 5, 6, 7, 8]\nno_odd_nums = [i for i in nums if i % 2 == 0]'"
write a program to remove even numbers from a list using list comprehensions,"'\nnums = [1, 2, 3, 4, 5, 6, 7, 8]\nno_even_nums = [i for i in nums if i % 2 == 1]'"
write a program to print 5 random numbers between 100 and 200,"'\nimport random\nprint(random.sample(range(100, 200), 5))'"
write a program to print 5 even random numbers between 10 and 100,"'\nimport random\nprint(random.sample([i for i in range(10, 100) if i%2 == 0], 5))'"
write a program to print 5 odd random numbers between 100 and 200,"'\nimport random\nprint(random.sample([i for i in range(10, 100) if i%2 == 1], 5))'"
write a program to print 5 random numbers divisible by 4 between 100 and 200,"'\nimport random\nprint(random.sample([i for i in range(10, 100) if i%4 == 0], 5))'"
write a program that adds corresponding elements in two lists and prints a new list,"'\nlist1 = [1, 2, 3, 4, 5]\nlist2 = [5, 4, 3, 2, 1]\nsum_list = [a+b for (a,b) in zip(list1, list2)]\nprint(sum_list)'"
write a program that subtracts corresponding elements in two lists and prints a new list,"'\nlist1 = [1, 2, 3, 4, 5]\nlist2 = [5, 4, 3, 2, 1]\ndiff_list = [a-b for (a,b) in zip(list1, list2)]\nprint(diff_list)'"
write a program that multiplies corresponding elements in two lists and prints a new list,"'\nlist1 = [1, 2, 3, 4, 5]\nlist2 = [5, 4, 3, 2, 1]\nprod_list = [a*b for (a,b) in zip(list1, list2)]\nprint(prod_list)'"
write a program that divides corresponding elements in two lists and prints a new list,"'\nlist1 = [1, 2, 3, 4, 5]\nlist2 = [5, 4, 3, 2, 1]\nquot_list = [a/b for (a,b) in zip(list1, list2)]\nprint(quot_list)'"
write a python program to print 5 random vowels,"""\nimport random\nvowels = ['a', 'e', 'i', 'o', 'u']\nprint([random.choice(vowels) for _ in range(5)])"""
write a python program that creates a dictionary whose keys are numbers from 1 to 10 and values are cubes of the key,"'\ncube_dict = {}\nfor i in range(1, 11) : \n\tcube_dict[i] = i ** 3'"
write a program to create a string variable and print the amount of memory it consumes,"""\nimport sys\nstring_var = 'string variable'\nprint(sys.getsizeof(string_var))"""
write a python function that joins strings in a list and returns the result,"'\ndef join_string_parts(str_list) : \n\treturn "" "".join(str_list)'"
write a python program that reverses an integer and prints it,'\nnum = 12345\nreversed = int(str(num)[ :  : -1])\nprint(reversed)'
write a python program that sorts and prints a comma separated list of values,"""\nvalues = 'one,two,three,four,five'\nitems = values.split(',')\nitems.sort()\nprint(','.join(items))"""
write a python program to print unique words in a sentence,"""\nsentence = 'the king is the one'\nunique = set(sentence.split(' '))\nprint(unique)"""
write a python program that multiplies a tuple n times and print the result,"'\nmy_tuple = (1, 2, 3)\nn = 3\nprint(my_tuple * 3)'"
write a python program to multiply three numbers and print the result,'\nnum1 = 2\nnum2 = 4\nnum3 = 6\nprint(num1 * num2 * num3)'
write a python program to print the sum of first n numbers,'\nn = 10\nsum = 0\nwhile n > 0 : \n\tsum += n\n\tn -= 1\nprint(sum)'
write a python program to print the factorial of a number,'\nnum = 5\nfact = 1\nwhile num > 0 : \n\tfact *= num\n\tnum -= 1\nprint(fact)'
write a python function to return the factors of a number,"'\ndef get_factors(num) : \n\tfactors = []\n\tfor i in range(1, num + 1) : \n\t\t if num % i == 0 : \n\t\t\tfactors.append(i)\n\treturn factors'"
write a python function that returns True if the product of two provided numbers is even,"'\ndef is_prod_even(num1, num2) : \n\tprod = num1 * num2\n\treturn not prod % 2'"
write a python function that returns True if the sum of two provided numbers is even,"'\ndef is_prod_even(num1, num2) : \n\tsum = num1 + num2\n\treturn not sum % 2'"
write a python program to print the first 5 items in a list,"'\nmy_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\nprint(my_list[ : 5])'"
write a python program to print the last 3 items in a list,"'\nmy_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\nprint(my_list[-3 : ])'"
write a python program to print the items in a list apart from the first 4,"'\nmy_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\nprint(my_list[4 : ])'"
write a python function that makes all negative values in a list zero and returns it,'\ndef make_negative_zero(items) : \n\treturn [0 if item < 0 else item for item in items]'
write a python program to shuffle the items in a list and print it,"'\nfrom random import shuffle\nmylist = [1, 2, 3, 4, 5]\nshuffle(mylist)\nprint(mylist)'"
write a python program that adds the elements of a list to a set and prints the set,"'\nmy_set = {1, 2, 3}\nmy_list = [4, 5, 6]\nmy_set.update(my_list)\nprint(my_set)'"
write a python program that prints the circumference of a circle,"""\nimport math\nradius = 10\nprint(f'Area :  {2 * math.pi * radius}')"""
write a python program that prints the area of a rectangle,"""\nlength = 10\nwidth = 5\nprint(f'Area :  {length * width}')"""
write a python program that prints the area of a square,"""\nside = 5\nprint(f'Area :  {side * side}')"""
write a python program to create a dictionary with numbers 1 to 5 as keys and the numbers in english as values,"""\nnumber_dict = {\n\t1 :  'one',\n\t2 :  'two',\n\t3 :  'three',\n\t4 :  'four',\n\t5 :  'five'\n}"""
write a python program to remove words less than a specified length from a sentence,"""\nsentence = 'this is my sentence and i will write it my way'\nminlength = 3\nresult = [word for word in sentence.split(' ') if len(word) >= minlength]"""
write a python program to keep words less than a specified length in a sentence,"""\nsentence = 'this is my sentence and i will write it my way'\nmaxlength = 3\nresult = [word for word in sentence.split(' ') if len(word) <= minlength]\n#### 93"""
write a python function that takes a list as an input and converts all numbers to positive numbers and returns the new list,'\ndef make_all_positive(nums) : \n\treturn [num if num > 0 else -num for num in nums]'
write a python function that takes a list as an input and converts all numbers to negative numbers and returns the new list,'\ndef make_all_negative(nums) : \n\treturn [num if num < 0 else -num for num in nums]'
write a python function to return a set of all punctuation used in a string,"'\ndef get_punctuations(sentence) : \n\tpunctuations = \'\'\'!()-[]{}; : \'""\\,<>./?@#$%^&*_~\'\'\'\n\tused_punctuation = set()\n\tfor char in sentence : \n\t\t if char in punctuations : \n\t\t\tused_punctuation.add(char)\n\treturn used_punctuation'"
write a python program to print the words in a sentence in reverse order,"""\nsentence = 'the quick brown fox'\nwords = sentence.split(' ')\nwords.reverse()\nprint(' '.join(words))"""
write a python program to replace each word in a sentence with the length of the word and print it,"""\nsentence = 'the quick brown fox jumps over the lazy dog'\nwords = sentence.split(' ')\nlengths = [str(len(word)) for word in words]\nprint(' '.join(lengths))"""
write a python program to convert a set to a list,"'\nmyset = {1, 2, 4, 7}\nmylist = list(myset)'"
write a python program to convert a list to a dictionary where the key is the index and the value is the item in the list,"'\nmy_list = [1, 8, 1, 2, 2, 9]\nmy_dict = {key :  value for key, value in enumerate(my_list)}'"
Write a function that adds 2 iterables a and b such that a is even and b is odd,"'\ndef add_even_odd_list(l1 : list,l2 : list)-> list : \n\treturn [a+b for a,b in zip(l1,l2) if a%2==0 and b%2!=0]'"
Write a function that strips every vowel from a string provided,"""\ndef strip_vowels(input_str : str)->str : \n\tvowels = ['a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U' ]\n\treturn ''.join(list(filter(lambda x :  x not in vowels, input_str)))"""
write a function that acts like a ReLU function for a 1D array,'\ndef relu_list(input_list : list)->list : \n\treturn [(lambda x :  x if x >= 0 else 0)(x) for x in input_list]'
Write a function that generates Factorial of number,'\ndef factorial(n) : \n\tif n == 0 or n ==1 : \n\t\treturn 1\n\telse : \n\t\treturn n*factorial(n-1)'
Write a function that returns length of the list,'\ndef list_length(l) : \n\treturn len(l)'
Write a function that sorts list of numbers and returns top element,'\ndef biggest_no(l : list)->int : \n\tsorted(l)'
Write a function to print a string by repeating it n times,"'\ndef print_repeatnstring(text : str, n : int)-> str : \n\treturn text*n'"
Write a function to merge two lists element wise,"'\ndef merge_lists(l1 : list, l2 : list) : \n\treturn list(zip(l1,l2))'"
Write a function to merge two lists element wise,"'\ndef merge_lists(l1 : list, l2 : list) : \n\treturn list(zip(l1,l2))'"
Write a function to append two lists,"'\ndef append_lists(l1 : list, l2 : list)->list : \n\treturn l1.extend(l2)'"
Write a function to return reverse of a list,'\ndef reverse_list(l1 : list)->list : \n\treturn l1[ :  : -1]'
Write a function to adds two lists element wise,"'\ndef adds_listelements(l1 : list, l2 : list) : \n\treturn [i+j for i, j in zip(l1,l2)]'"
Write a function to Subtracts two lists element wise,"'\ndef sub_listelements(l1 : list, l2 : list) : \n\treturn [i-j for i, j in zip(l1,l2)]'"
Write a function to adds two lists element wise only if numbers are even,"'\ndef adds_listevenelements(l1 : list, l2 : list) : \n\treturn [i+j for i, j in zip(l1,l2) if i*j%2 == 0]'"
Write a function to multiplies two lists element wise only if numbers are odd,"'\ndef adds_listoddelements(l1 : list, l2 : list) : \n\treturn [i*j for i, j in zip(l1,l2) if i*j%2 == 1]'"
Write a function that returns list of elements with n power to elements of list,"'\ndef n_power(l1 : list, power : int)->list : \n\treturn [i**power for i in l1]'"
Write a function that generates fibbonacci series,'\ndef Fibonacci(n : int)-> int : \n\tif n==1 : \n\t\tfibonacci = 0\n\telif n==2 : \n\t\tfibonacci = 1\n\telse : \n\t\tfibonacci = Fibonacci(n-1) + Fibonacci(n-2)\n\treturn fibonacci'
Write a function that returns sine value of the input,'\ndef sin(x : float) -> float : \n\timport math\n\treturn math.sin(x)'
Write a function that returns derivative of sine value of the input,'\ndef derivative_sin(x : float)-> float : \n\timport math\n\treturn math.cos(x)'
Write a function that returns tan value of the input,'\ndef tan(x : float) -> float : \n\timport math\n\treturn math.tan(x)'
Write a function that returns derivative of tan value of the input,'\ndef derivative_tan(x : float)-> float : \n\timport math\n\treturn (1/math.cos(x))**2'
Write a function that returns cosine value of the input,'\ndef cos(x : float) -> float : \n\timport math\n\treturn math.cos(x)'
Write a function that returns cosine value of the input,'\ndef derivative_cos(x : float)-> float : \n\timport math\n\treturn -(math.sin(x))'
Write a function that returns the exponential value of the input,'\ndef exp(x) -> float : \n\timport math\n\treturn math.exp(x)'
Write a function that returns Gets the derivative of exponential of x,'\ndef derivative_exp(x : float) -> float : \n\timport math\n\treturn math.exp(x)'
Write a function that returns log of a function,'\ndef log(x : float)->float : \n\timport math\n\treturn math.log(x)'
Write a function that returns derivative of log of a function,'\ndef derivative_log(x : float)->float : \n\treturn (1/x)'
Write a function that returns relu value of the input,'\ndef relu(x : float) -> float : \n\tx = 0 if x < 0 else x\n\treturn x'
Write a function that returns derivative derivative relu value of the input,'\ndef derivative_relu(x : float) -> float : \n\tx = 1 if x > 0 else 0\n\treturn x'
Write a function that returns runs a garbage collector,'\ndef clear_memory() : \n\timport gc\n\tgc.collect()'
Write a function to identify if value is present inside a dictionary or not,"'\ndef check_value(d : dict, value)->bool : \n\treturn any(v == value for v in dict.values())'"
Write a function to identify to count no of instances of a value  inside a dictionary,"'\ndef count_value(d : dict, value)->bool : \n\treturn list(v == value for v in dict.values()).count(True)'"
Write a function to identify if value is present inside a list or not,"'\ndef check_listvalue(l : list, value)->bool : \n\treturn value in l'"
Write a function to identify if value is present inside a tuple or not,"'\ndef check_tuplevalue(l : tuple, value)->bool : \n\treturn value in l'"
Write a function that returns lowercase string,'\ndef str_lowercase(s : str) : \n\treturn s.lower()'
Write a function that returns uppercase string,'\ndef str_uppercase(s : str) : \n\treturn s.upper()'
Write a function that removes all special characters,"""\ndef clean_str(s) : \n\timport re\n\treturn re.sub('[^A-Za-z0-9]+', '', s)"""
Write a function that returns a list sorted ascending,"'\ndef ascending_sort(l : list) : \n\tsorted(l, reverse=False)'"
Write a function that returns a list sorted descending,"'\ndef descending_sort(l : list) : \n\tsorted(l, reverse=True)'"
Write a function that returns a dictionary sorted descending by its values,"'\ndef descending_dict_valuesort(d : dict) : \n\treturn {key :  val for key, val in sorted(d.items(), reverse=True, key = lambda ele :  ele[1])}'"
Write a function that returns a dictionary sorted ascending by its values,"'\ndef ascending_dict_valuesort(d : dict) : \n\treturn {key :  val for key, val in sorted(d.items(), key = lambda ele :  ele[1])}'"
Write a function that returns a dictionary sorted descending by its keys,"'\ndef descending_dict_keysort(d : dict) : \n\treturn {key :  val for key, val in sorted(d.items(), reverse=True, key = lambda ele :  ele[0])}'"
Write a function that returns a dictionary sorted ascending by its keys,"'\ndef ascending_dict_keysort(d : dict) : \n\treturn {key :  val for key, val in sorted(d.items(), key = lambda ele :  ele[0])}'"
Write a function that returns a replace values in string with values provided,"'\ndef replace_values(s : str, old, new)->str : \n\ts.replace(old, new)'"
Write a function that joins elements of list,"""\ndef join_elements(l : list)-> str : \n\treturn (''.join(str(l)))"""
Write a function that splits the elements of string,"'\ndef split_elements(s : str, seperator)-> list : \n\treturn s.split(seperator)'"
Write a function that returns sum of all elements in the list,'\ndef sum_elements(l : list) : \n\treturn sum(l)'
Write a function that returns sum of all odd elements in the list,'\ndef sum_even_elements(l : list) : \n\treturn sum([i for i in l if i%2==0])'
Write a function that returns sum of all odd elements in the list,'\ndef sum_odd_elements(l : list) : \n\treturn sum([i for i in l if i%2==1])'
write a python function to count number of times a function is called,"'\ndef counter(fn) : \n\tcount = 0\n\tdef inner(*args, **kwargs) : \n\t\tnonlocal count\n\t\tcount += 1\n\t\tprint(f\'Function {fn.__name__} was called {count} times.\')\n\t\treturn fn(*""args, **kwargs)    \n\treturn inner'"
write a python function to remove duplicate items from the list,'\ndef remove_duplicatesinlist(lst) : \n\treturn len(lst) == len(set(lst))'
write a python function to convert list of strings to list of integers,"'\ndef stringlist_to_intlist(sList) :  \n\treturn(list(map(int, sList)))'"
write a python function to map multiple lists using zip,'\ndef map_values(*args) : \n\treturn set(zip(*args))'
write a generator function in python to generate infinite square of numbers using yield,'\ndef nextSquare() :  \n\ti = 1;  '
An Infinite loop to generate squares,'\n\twhile True :  \n\t\tyield i*i\t\t\t\t \n\t\ti += 1'
write a python generator function for generating Fibonacci Numbers,"'\ndef fib(limit) :  \n\t# Initialize first two Fibonacci Numbers  \n\ta, b = 0, 1  \n\t# One by one yield next Fibonacci Number \n\twhile a < limit :  \n\t\tyield a \n\t\ta, b = b, a + b'"
write a python program which takes user input tuple and prints length of each tuple element,"'\nuserInput = input(""Enter a tuple : "")\nx = map(lambda x : len(x), tuple(x.strip() for x in userInput.split(\',\')))\nprint(list(x))'"
write a python function using list comprehension to find even numbers in a list,'\ndef find_evennumbers(input_list) : \n\tlist_using_comp = [var for var in input_list if var % 2 == 0] \n\treturn list_using_comp'
write a python function to return dictionary of two lists using zip,"'\ndef dict_using_comp(list1, list2) : \n\tdict_using_comp = {key : value for (key, value) in zip(list1, list2)} \n\treturn dict_using_comp'"
write a python program to find the biggest character in a string,"'\nbigChar = lambda word :  reduce(lambda x,y :  x if ord(x) > ord(y) else y, word)'"
write a python function to sort list using heapq,"'\ndef heapsort(iterable) : \n\tfrom heapq import heappush, heappop\n\th = []\n\tfor value in iterable : \n\t\theappush(h, value)\n\treturn [heappop(h) for i in range(len(h))]'"
write a python function to return first n items of the iterable as a list,"'\ndef take(n, iterable) :     \n\timport itertools\n\treturn list(itertools.islice(iterable, n))'"
write a python function to prepend a single value in front of an iterator,"'\ndef prepend(value, iterator) :     \n\timport itertools\n\treturn itertools.chain([value], iterator)'"
write a python function to return an iterator over the last n items,"'\ndef tail(n, iterable) :     \n\tfrom collections import deque\n\treturn iter(deque(iterable, maxlen=n))'"
write a python function to advance the iterator n-steps ahead,"'\ndef consume(iterator, n=None) : \n\timport itertools\n\tfrom collections import deque\n\t""Advance the iterator n-steps ahead. If n is None, consume entirely.""'"
Use functions that consume iterators at C speed.,"'\n\tif n is None : \n\t\t# feed the entire iterator into a zero-length deque\n\t\tdeque(iterator, maxlen=0)\n\telse : \n\t\t# advance to the empty slice starting at position n\n\t\tnext(itertools.islice(iterator, n, n), None)'"
write a python function to return nth item or a default value,"'\ndef nth(iterable, n, default=None) : \n\tfrom itertools import islice\n\treturn next(islice(iterable, n, None), default)'"
write a python function to check whether all elements are equal to each other,"'\ndef all_equal(iterable) : \n\tfrom itertools import groupby\n\tg = groupby(iterable)\n\treturn next(g, True) and not next(g, False)'"
write a python function to count how many times the predicate is true,"'\ndef quantify(iterable, pred=bool) : \n\treturn sum(map(pred, iterable))'"
write a python function to return the sequence elements n times,"'\ndef ncycles(iterable, n) : \n\tfrom itertools import chain, repeat\n\treturn chain.from_iterable(repeat(tuple(iterable), n))'"
write a python function to return the dot product of two vectors,"'\ndef dotproduct(vec1, vec2) : \n\treturn sum(map(operator.mul, vec1, vec2))'"
write a python function to flatten one level of nesting,'\ndef flatten(list_of_lists) : \n\tfrom itertools import chain\n\treturn chain.from_iterable(list_of_lists)'
write a python function to repeat calls to function with specified arguments,"'\ndef repeatfunc(func, times=None, *args) : \n\tfrom itertools import starmap, repeat\n\tif times is None : \n\t\treturn starmap(func, repeat(args))\n\treturn starmap(func, repeat(args, times))'"
write a python function to convert iterable to pairwise iterable,"'\ndef pairwise(iterable) : \n\tfrom itertools import tee\n\ta, b = tee(iterable)\n\tnext(b, None)\n\treturn zip(a, b)'"
write a python function to collect data into fixed-length chunks or blocks,"'\ndef grouper(iterable, n, fillvalue=None) : \n\tfrom itertools import zip_longest\n\t# grouper(\'ABCDEFG\', 3, \'x\') --> ABC DEF Gxx""\n\targs = [iter(iterable)] * n\n\treturn zip_longest(*args, fillvalue=fillvalue)'"
write a python function to use a predicate and return entries particition into false entries and true entries,"'\ndef partition(pred, iterable) : \n\tfrom itertools import filterfalse, tee\n\t# partition(is_odd, range(10)) --> 0 2 4 6 8   and  1 3 5 7 9\n\tt1, t2 = tee(iterable)\n\treturn filterfalse(pred, t1), filter(pred, t2)'"
"write a python function to return random selection from itertools.product(*args, **kwds)","'\ndef random_product(*args, repeat=1) : \n\timport random\n\tpools = [tuple(pool) for pool in args] * repeat\n\treturn tuple(map(random.choice, pools))'"
"write a python function to return random selection from itertools.permutations(iterable, r)","'\ndef random_permutation(iterable, r=None) : \n\timport random\n\tpool = tuple(iterable)\n\tr = len(pool) if r is None else r\n\treturn tuple(random.sample(pool, r))'"
"write a python function to random select from itertools.combinations(iterable, r)","'\ndef random_combination(iterable, r) : \n\timport random\n\tpool = tuple(iterable)\n\tn = len(pool)\n\tindices = sorted(random.sample(range(n), r))\n\treturn tuple(pool[i] for i in indices)'"
"write a python function to perform random selection from itertools.combinations_with_replacement(iterable, r)","'\ndef random_combination_with_replacement(iterable, r) : \n\timport random\n\tpool = tuple(iterable)\n\tn = len(pool)\n\tindices = sorted(random.choices(range(n), k=r))\n\treturn tuple(pool[i] for i in indices)'"
write a python function to locate the leftmost value exactly equal to x,"'\ndef index(a, x) : \n\tfrom bisect import bisect_left\t\n\ti = bisect_left(a, x)\n\tif i != len(a) and a[i] == x : \n\t\treturn i\n\traise ValueError'"
write a python function to locate the rightmost value less than x,"'\ndef find_lt(a, x) : \n\tfrom bisect import bisect_left  \n\ti = bisect_left(a, x)\n\tif i : \n\t\treturn a[i-1]\n\traise ValueError'"
write a python function to find rightmost value less than or equal to x,"'\ndef find_le(a, x) : \n\tfrom bisect import bisect_right  \n\ti = bisect_right(a, x)\n\tif i : \n\t\treturn a[i-1]\n\traise ValueError'"
write a python function to find leftmost value greater than x,"'\ndef find_gt(a, x) : \n\tfrom bisect import bisect_right \n\ti = bisect_right(a, x)\n\tif i != len(a) : \n\t\treturn a[i]\n\traise ValueError'"
write a python function to find leftmost item greater than or equal to x,"'\ndef find_ge(a, x) : \n\tfrom bisect import bisect_left \n\ti = bisect_left(a, x)\n\tif i != len(a) : \n\t\treturn a[i]\n\traise ValueError'"
write a python function to map a numeric lookup using bisect,"""\ndef grade(score, breakpoints=[60, 70, 80, 90], grades='FDCBA') : \n\tfrom bisect import bisect\n\ti = bisect(breakpoints, score)\n\treturn grades[i]"""
write a regex pattern in python to print all adverbs and their positions in user input text,"'\nimport re\ntext = input(""Enter a string :  "")\nfor m in re.finditer(r""\\w+ly"", text) : \n\tprint(\'%02d-%02d :  %s\' % (m.start(), m.end(), m.group(0)))'"
write a python function to read a CSV file and print its content,"""\ndef read_csv(filename) : \n\timport csv\n\twith open(filename, newline='') as f : \n\t\treader = csv.reader(f)\n\t\tfor row in reader : \n\t\t\tprint(row)"""
write a python snippet to convert list into indexed tuple,"'\ntest_list = [4, 5, 8, 9, 10] \nlist(zip(range(len(test_list)), test_list))'"
write a python function to split word into chars,'\ndef split(word) :  \n\treturn [char for char in word]'
write a python function to pickle data to a file,"""\ndef pickle_data(data, pickle_file) : \n\timport pickle\n\twith open(pickle_file, 'wb') as f : \n\t\t pickle.dump(data, f, pickle.HIGHEST_PROTOCOL)\n\treturn None"""
write a python function to load pickle data from a file,"""\ndef load_pickle_data(pickle_file) : \n\timport pickle\n\twith open(pickle_file, 'rb') as f : \n\t\t data = pickle.load(f)\n\treturn data"""
write a python function to check if a given string is a palindrome,'\ndef isPalindrome(s) : \n\treturn s == s[ :  : -1]'
write a function to reverse words of string,"""\ndef rev_sentence(sentence) :   \n\twords = sentence.split(' ')  \n\treverse_sentence = ' '.join(reversed(words))  \n\treturn reverse_sentence """
write a program to check if a substring is present in a given string,"'\nstring = ""how are you?""\nsubstring = ""are""\nif (string.find(substring) == -1) :  \n\tprint(""NO"") \nelse :  \n\tprint(""YES"")  '"
write a program to print length of a string,"'\nstr1 = ""great way to learn!""\nprint(len(str1))'"
write a program to print words frequncy in a given string,"'\ntest_str = ""It is a great meal at a great restaurant on a great day""\nprint(""Original String :  "" + str(test_str))\nres = {key :  test_str.count(key) for key in test_str.split()} \nprint(""The words frequency :  "" + str(res))'"
write a program to print even length words in a string,"'\nstr1 = ""I am doing fine""\ns = str1.split(\' \')\nfor word in s :   \n\tif len(word)%2==0 :  \n\t\tprint(word)  '"
write a program to accept the strings which contains all vowels,"'\nstr1 = ""__main__""\nif len(set(str1).intersection(""AEIOUaeiou""))>=5 :  \n\tprint(\'accepted\') \nelse :  \n\tprint(""not accepted"") '"
write a program to print count of number of unique matching characters in a pair of strings,"'\nstr1=""ababccd12@""\nstr2=""bb123cca1@""\nmatched_chars = set(str1) & set(str2) \nprint(""No. of matching characters are  :  "" + str(len(matched_chars)) )'"
write a program to remove all duplicate characters from a string,"'\nstr1 = ""what a great day!""\nprint("""".join(set(str1)))'"
write a program to print least frequent character in a string,"'\nstr1=""watch the match""\nall_freq = {} \nfor i in str1 :  \n\tif i in all_freq :  \n\t\tall_freq[i] += 1\n\telse :  \n\t\tall_freq[i] = 1\nres = min(all_freq, key = all_freq.get)\nprint(""Minimum of all characters is :  "" + str(res))'"
write a program to print maximum frequency character in a string,"'\nstr1 = ""watch the match""\nall_freq = {} \nfor i in str1 :  \n\tif i in all_freq :  \n\t\tall_freq[i] += 1\n\telse :  \n\t\tall_freq[i] = 1\nres = max(all_freq, key = all_freq.get)\nprint(""Maximum of all characters is :  "" + str(res))'"
write a program to split and join a string with a hyphen delimiter,"'\nstr1 = ""part of speech""\ndelimiter = ""-""\nlist_str = str1.split("" "")\nnew_str = delimiter.join(list_str)\nprint(""Delimited String is :  "" + new_str)'"
write a program to check if a string is binary or not,"'\nstr1=""01110011 a""\nset1 = set(str1)\nif set1 == {\'0\',\'1\'} or set1 == {\'0\'} or set1 == {\'1\'} : \n\tprint(""string is binary"")\nelse : \n\tprint(""string is not binary"")'"
write a function to remove i-th indexed character in a given string,"'\ndef remove_char(string, i) : \n\tstr1 = string[  :  i]  \n\tstr2 = string[i + 1 :  ] \n\treturn str1 + str2 '"
write a function to rotate string left by a given length,"'\ndef rotate_left(input,d) :   \n\tLfirst = input[0  :  d]  \n\tLsecond = input[d  : ]  \n\treturn (Lsecond + Lfirst) '"
write a function to rotate string right by a given length,"'\ndef rotate_right(input,d) :   \n\tRfirst = input[0  :  len(input)-d]  \n\tRsecond = input[len(input)-d  :  ]  \n\treturn (Rsecond + Rfirst) '"
write a function to replace all occurances of a substring in a string,"'\nstr1 = ""Hello! It is a Good thing""\nsubstr1 = ""Good""\nsubstr2 = ""bad""\nreplaced_str = str1.replace(substr1, substr2)\nprint(""String after replace  : "" + str(replaced_str))'"
write a function that return space count,"'\ndef count_space(str1) :  \n\tcount = 0\n\tfor i in range(0, len(str1)) :  \n\t\tif str1[i] == "" "" :  \n\t\t\tcount += 1\n\treturn count'"
write a program to break up string into individual elements,"'\nstr1 = ""whatisthis""\nsplit_string = list(\'\'.join(str1)) \nprint(split_string) '"
write a program to extract string of N size and having K distict characters,"'\nstr1 = \'GoodisalwaysGoood\'\nN = 3\nK = 2\nres = [] \nfor idx in range(0, len(str1) - N + 1) :  \n\tif (len(set(str1[idx :  idx + N])) == K) :  \n\t\tres.append(str1[idx :  idx + N]) \nprint(""Extracted Strings  :  "" + str(res)) '"
write a program to increment number which is at end of string,"'\nimport re \nstr1 = \'count001\'\nres = re.sub(r\'[0-9]+$\', \n\t\t\t\tlambda x :  f""{str(int(x.group())+1).zfill(len(x.group()))}"",  \n\t\t\t\tstr1) \nprint(""Incremented numeric String  :  "" + str(res))'"
write a function to check if a lower case letter exists in a given string,'\ndef check_lower(str1) : \n\tfor char in str1 :  \n\t\tk = char.islower()   \n\t\tif k == True :  \n\t\t\treturn True \n\tif(k != 1) :  \n\t\treturn False'
write a function to check if a upper case letter exists in a given string,'\ndef check_upper(str1) : \n\tfor char in str1 :  \n\t\tk = char.isupper()   \n\t\tif k == True :  \n\t\t\treturn True\n\tif(k != 1) :  \n\t\treturn False'
write a program to print number of words in a string,"'\nstr1 = \'It is a glorious day\'\nres = len(str1.split()) \nprint(""The number of words in string are  :  "" + str(res)) '"
write a program to print number of characters in a string,"'\nstr1 = \'It is a glorious day\'\nres = len(str1) \nprint(""The number of characters in string are  :  "", str(res)) '"
write a funtion that accepts two lists of equal length and converts them into a dictioinary,"'\ndef list_to_dict(list1, list2) : \n\treturn dict(zip(list1, list2))'"
write a python function that accepts a list of dictionaries and sorts it by a specified key,"'\ndef sort_dict_list(dict_list, sort_key) : \n\tdict_list.sort(key=lambda item :  item.get(sort_key))'"
write a program to print the longest key in a dictioinary,"'\ndict_1 = {""key1"" :  10, ""keeeey2"" :  2, ""ky3"" :  30}\nmax_key=\'\'\nfor key in dict_1 : \n\tif len(key)>len(max_key) : \n\tmax_key=key\nprint(max_key)'"
write a program to capitalize the first and last character of each key in a dictionary,"""\ninput_dict = {'key_a' :  10, 'kEy' :  2, 'Key_B' :  13}\nfor key in list(input_dict.keys()) : \n\tnew_key = key[0].upper() + key[1 : -1] + key[-1].upper()\n\tinput_dict[new_key] = input_dict[key]\n\tif key != new_key : \n\tdel input_dict[key]"""
"write a program that iterates over a dictionary and prints ""Bingo!"" if length of value is greater than the length of key. Otherwise print ""no bingo""","'\nkey_val_map = {""key1"" :  ""length1"", ""key2"" :  ""len2"", ""Hello"" :  ""hi"", ""bingo"" :  ""print bingo""}\nfor key, val in key_val_map.items() : \n\tif len(val) > len(key) : \n\tprint(""Bingo!"")\n\telse : \n\tprint(""no bingo"")'"
write a python function that accepts a dictionary that has unique values and returns its inversion,"'\ndef invert_dict(input_dict) : \n\tmy_inverted_dict = {value :  key for key, value in input_dict.items()}\n\treturn my_inverted_dict'"
write a function that inverts a dictionary with non-unique values. Keys that map to the same values should be appended to a list in the inverted dictionary,"'\ndef invert_dict_non_unique(my_dict) : \n\tmy_inverted_dict = dict()\n\tfor key, value in my_dict.items() : \n\t\t my_inverted_dict.setdefault(value, list()).append(key)\n\treturn my_inverted_dict'"
write a program to merge a list of dictionaries into a single dictionary using dictionary comprehension,"'\ninput = [{""foo"" :  ""bar"", ""Hello"" :  ""World""},\n\t\t\t{""key1"" :  ""val1"", ""key2"" :  ""val2""},\n\t\t\t{""sample_key"" :  ""sample_val""}]\nmerged_dict = {key :  value for d in input for key, value in d.items()}'"
write a function to return the mean difference in the length of keys and values of dictionary comprising of strings only.,"'\ndef mean_key_val_diff(input_dict) : \n\tsum_diff = 0\n\tfor key, val in input_dict.items() : \n\tsum_diff += abs(len(val) - len(key))\n\treturn sum_diff/len(input_dict)'"
write a program that categorizes tuple values based on second element and prints a dictionary value list where each key is a category.,"'\ntest_list = [(1, 3), (1, 4), (2, 3), (3, 2), (5, 3), (6, 4)] \nres = {} \nfor i, j in test_list :  \n\t\tres.setdefault(j, []).append(i) \nprint(""The dictionary converted from tuple list  :  "" + str(res))'"
write a python function to combine three lists of equal lengths into a nested dictionary and return it,"'\ndef lists_to_dict(test_list1, test_list2, test_list3) : \n\tres = [{a :  {b :  c}} for (a, b, c) in zip(test_list1, test_list2, test_list3)] \n\treturn res'"
write a program to print keys in a dictionary whose values are greater than a given input.,"'\ntest_dict = {\'tsai\'  :  4, \'random_key\'  :  2, \'foo\'  :  3, \'bar\'  :  \'END\'} \nK = 3\nres = {key  :  val for key, val in test_dict.items() \n\t\t\t\t\tif type(val) != int or val > K} \nprint(""Values greater than K  :  "", res.keys())'"
write a function that converts a integer dictionary into a list of tuples.,"'\ndef dict_to_tuple(input_dict) : \n\tout_tuple = [(a, b) for a,b in input_dict.items()]\n\treturn out_tuple'"
write a Python program to combine two dictionary by adding values for common keys,"""\ndict1 = {'a' :  12, 'for' :  25, 'c' :  9} \ndict2 = {'Geeks' :  100, 'geek' :  200, 'for' :  300} \nfor key in dict2 :  \n\tif key in dict1 :  \n\t\tdict2[key] = dict2[key] + dict1[key] \n\telse :  \n\t\tpass"""
write a Python program that sorts dictionary keys to a list using their values and prints this list.,"'\ntest_dict = {\'Geeks\'  :  2, \'for\'  :  1, \'CS\'  :  3} \nres = list(sum(sorted(test_dict.items(), key = lambda x : x[1]), ())) \nprint(""List after conversion from dictionary  :  "", res)'"
write a python program to print the top N largest keys in an integer dictionary.,"'\ntest_dict = {6  :  2, 8 :  9, 3 :  9, 10 :  8}  \nN = 4\nres = []   \nfor key, val in sorted(test_dict.items(), key = lambda x :  x[0], reverse = True)[ : N] :  \n\tres.append(key) \nprint(""Top N keys are :  "" + str(res))'"
write a program to print the values of a given extraction key from a list of dictionaries.,"'\ntest_list = [{""Gfg""  :  3, ""b""  :  7},  \n\t\t\t\t{""is""  :  5, \'a\'  :  10},  \n\t\t\t\t{""Best""  :  9, \'c\'  :  11}]  \nK = \'Best\'\nres = [sub[K] for sub in test_list if K in sub][0]   \nprint(""The extracted value  :  "" + str(res))'"
write a program to convert date to timestamp and print the result,"'\nimport time \nimport datetime \nstr1 = ""20/01/2020""\nelement = datetime.datetime.strptime(str1,""%d/%m/%Y"") \ntimestamp = datetime.datetime.timestamp(element) \nprint(timestamp)'"
write a program to print the product of integers in a mixed list of string and numbers,"'\ntest_list = [5, 8, ""gfg"", 8, (5, 7), \'is\', 2] \nres = 1\nfor ele in test_list :  \n\ttry :  \n\t\tres *= int(ele) \n\texcept  :  \n\t\tpass\nprint(""Product of integers in list  :  "" + str(res))'"
write a python program to add an element to a list. Print the final list.,"'\nlst = [""Jon"", ""Kelly"", ""Jessa""]\nlst.append(""Scott"")\nprint(lst)'"
write a python function to append all elements of one list to another,"'\ndef extend_list(list1, list2) : \n\tlist1 = [1, 2]\n\tlist2 = [3, 4]\n\treturn list1.extend(list2)'"
write a python function to add elements of two lists,"'\ndef add_two_lists(list1, list2) : \n\tlist1 = [1, 2, 3]\n\tlist2 = [4, 5, 6]\n\tsum_list = []\n\tfor (item1, item2) in zip(list1, list2) : \n\t\t sum_list.append(item1+item2)\n\treturn sum_list'"
Write a  python program to print the last element of a list,"""\nlist1 = ['p','r','o','b','e']\nprint(list1[-1])"""
Write a python program to print positive Numbers in a List,"'\nlist1 = [11, -21, 0, 45, 66, -93] \nfor num in list1 :  \n\tif num >= 0 :  \n\t\tprint(num, end = "" "") '"
Write a python function to multiply all values in a list,'\ndef multiplyList(myList)  : \n\tresult = 1\n\tfor x in myList : \n\t\t\tresult = result * x \n\treturn result '
Write a python program to print the smallest number in a list,"'\nlist1 = [10, 20, 1, 45, 99] \nprint(""Smallest element is : "", min(list1)) '"
Write a python program to remove even numbers from a list. Print the final list.,"'\nlist1 = [11, 5, 17, 18, 23, 50]  \nfor ele in list1 :  \n\tif ele % 2 == 0 :  \n\t\tlist1.remove(ele) \nprint(""New list after removing all even numbers :  "", list1) '"
Write a python program to print a list after removing elements from index 1 to 4,"'\nlist1 = [11, 5, 17, 18, 23, 50]  \ndel list1[1 : 5] \nprint(*list1)'"
Write a python program to remove 11 and 18 from a list. Print the final list.,"'\nlist1 = [11, 5, 17, 18, 23, 50]  \nunwanted_num = {11, 18} \nlist1 = [ele for ele in list1 if ele not in unwanted_num] \nprint(""New list after removing unwanted numbers :  "", list1)'"
Write a python program to Remove multiple empty spaces from  List of strings. Print the original and final lists.,"'\ntest_list = [\'gfg\', \'   \', \' \', \'is\', \'            \', \'best\'] \nprint(""The original list is  :  "" + str(test_list)) \nres = [ele for ele in test_list if ele.strip()] \nprint(""List after filtering non-empty strings  :  "" + str(res)) '"
Write a python function to get the Cumulative sum of a list,"'\ndef Cumulative(lists) :  \n\tcu_list = [] \n\tlength = len(lists) \n\tcu_list = [sum(lists[0 : x : 1]) for x in range(0, length+1)] \n\treturn cu_list[1 : ]'"
"Write a python program to print if a string ""hello"" is present in the list","""\nl = [1, 2.0, 'hello','have', 'a', 'good', 'day'] \ns = 'hello'  \nif s in l :  \n\tprint(f'{s} is present in the list') \nelse :  \n\tprint(f'{s} is not present in the list') """
Write a python program to print the distance between first and last occurrence of even element.,"'\ntest_list = [1, 3, 7, 4, 7, 2, 9, 1, 10, 11] \nindices_list = [idx for idx in range( \n\tlen(test_list)) if test_list[idx] % 2 == 0] \nres = indices_list[-1] - indices_list[0] \nprint(""Even elements distance  :  "" + str(res)) '"
Write a python fuction to create an empty list,'\ndef emptylist() : \n\treturn list()  '
Write a python program to print a list with all elements as 5 and of length 10,'\nlist1 = [5] * 10\nprint(list1)'
Write a python program to reverse a list and print it.,"'\ndef Reverse(lst) :  \n\treturn [ele for ele in reversed(lst)] \nlst = [10, 11, 12, 13, 14, 15] \nprint(Reverse(lst)) '"
Write a python program to print odd numbers in a List,"'\nlist1 = [10, 21, 4, 45, 66, 93, 11]  \nodd_nos = list(filter(lambda x :  (x % 2 != 0), list1)) \nprint(""Odd numbers in the list :  "", odd_nos)'"
Write a python program to print negative Numbers in a List,"'\nlist1 = [11, -21, 0, 45, 66, -93] \nfor num in list1 :  \n\tif num < 0 :  \n\t\tprint(num, end = "" "")'"
Write a python program print the the number of occurrences of 8 in a list,"""\ndef countX(lst, x) :  \n\tcount = 0\n\tfor ele in lst :  \n\t\tif (ele == x) :  \n\t\t\tcount = count + 1\n\treturn count \nlst = [8, 6, 8, 10, 8, 20, 10, 8, 8] \nx = 8\nprint('{} has occurred {} times'.format(x, countX(lst, x))) """
Write a python program to swap first and last element of a list . Print the final list,"'\ndef swapList(newList) :  \n\tsize = len(newList) \n\t# Swapping  \n\ttemp = newList[0] \n\tnewList[0] = newList[size - 1] \n\tnewList[size - 1] = temp \n\treturn newList \nnewList = [12, 35, 9, 56, 24] \nprint(swapList(newList)) '"
Write a python program for print all elements with digit 7.,"'\ntest_list = [56, 72, 875, 9, 173]  \nK = 7\nres = [ele for ele in test_list if str(K) in str(ele)] \nprint(""Elements with digit K  :  "" + str(res))'"
Write a python program for printing number of unique elements in a list,"'\ninput_list = [1, 2, 2, 5, 8, 4, 4, 8] \nl1 = [] \ncount = 0\nfor item in input_list :  \n\tif item not in l1 :  \n\t\tcount += 1\n\t\tl1.append(item) \nprint(""No of unique items are : "", count) '"
Write a python program to find the sum and average of the list. Print the sum and average,"'\nL = [4, 5, 1, 2, 9, 7, 10, 8] \ncount = 0\nfor i in L :  \n\tcount += i \navg = count/len(L) \nprint(""sum = "", count) \nprint(""average = "", avg)'"
Write a python program to Remove Tuples of Length 1 from a list of tuples. Print the final list.,"'\ntest_list = [(4, 5), (4, ), (8, 6, 7), (1, ), (3, 4, 6, 7)] \nK = 1\nres = [ele for ele in test_list if len(ele) != K] \nprint(""Filtered list  :  "" + str(res))'"
Write a python program to print a list of tuples from given list having number and its cube in each tuple,"'\nlist1 = [1, 2, 5, 6] \nres = [(val, pow(val, 3)) for val in list1] \nprint(res) '"
Write a python program to print the combination of tuples in list of tuples,"'\ntest_list = [([1, 2, 3], \'gfg\'), ([5, 4, 3], \'cs\')]\nres = [ (tup1, tup2) for i, tup2 in test_list for tup1 in i ] \nprint(""The list tuple combination  :  "" + str(res)) '"
Write a python program to swap tuple elements in list of tuples. Print the output.,"'\ntest_list = [(3, 4), (6, 5), (7, 8)] \nres = [(sub[1], sub[0]) for sub in test_list] \nprint(""The swapped tuple list is  :  "" + str(res)) '"
Write a python program to print all pair combinations of 2 tuples.,"'\ntest_tuple1 = (4, 5) \ntest_tuple2 = (7, 8) \nres =  [(a, b) for a in test_tuple1 for b in test_tuple2] \nres = res +  [(a, b) for a in test_tuple2 for b in test_tuple1] \nprint(""The filtered tuple  :  "" + str(res))'"
Write a python program to print positive Tuples in List.,"'\ntest_list = [(4, 5, 9), (-3, 2, 3), (-3, 5, 6), (4, 6)] \nprint(""The original list is  :  "" + str(test_list)) \nres = [sub for sub in test_list if all(ele >= 0 for ele in sub)] \nprint(""Positive elements Tuples  :  "" + str(res))'"
write a python function that takes two path strings and return the combined path string,"'\nimport os\ndef path_join(PARENT_DIR, DIR) : \n\tjoined_path = os.path.join(PARENT_DIR, DIR)\n\treturn joined_path\npath_join(""C : /"", ""DATA"")\n# In[78] : '"
write a python function to read a text file and return the result,"""\ndef read_file(filepath='test.txt') : \n\twith open(filepath, 'r') as file_reader : \n\t\tf_read = file_reader.read()\n\treturn f_read\nread_file()\n# In[83] : """
"write a python function to read a text file, if no filepath is given raise Exception","'\ndef read_file(filepath=None) : \n\tif filepath : \n\t\twith open(filepath, \'r\') as file_reader : \n\t\t\tf_read = file_reader.read()\n\t\treturn f_read\n\telse : \n\t\traise Exception(""filepath not found"")\nread_file()\n# In[87] : '"
write a python program to handle exception when a given value is less than 10,"""\ndef check(x) : \n\tif x < 10 : \n\t\traise ValueError('x should not be less than 10!')\n\telse : \n\t\treturn x\ncheck(9)\n# In[104] : """
write a python function to check if the given structure is a instance of list or dictionary,"'\ndef check_insst(obj) : \n\tif isinstance(obj, list) : \n\t\treturn ""list""\n\telif isinstance(obj, dict) : \n\t\treturn ""dict""\n\telse : \n\t\treturn ""unknown""\ncheck_insst({})\n# In[102] : '"
write a python function to check if the given structure is a instance of tuple or string,"'\ndef check_inst_tup_str(obj) : \n\tif isinstance(obj, set) : \n\t\treturn ""set""\n\telif isinstance(obj, tuple) : \n\t\treturn ""tuple""\n\telse : \n\t\treturn ""unknown""\ncheck_inst_tup_str({1})\n# In[110] : '"
"write a python function that call another function and that function prints ""Inside B""","'\ndef A() : \n\tB()\ndef B() : \n\tprint(""Inside B"")\nA()\n# In[119] : '"
write a python program to return the biggest character in a string (printable ascii characters),"'\nfrom functools import reduce\ninput_str = \'tsai\'\nres = reduce(lambda x, y :  x if ord(x) > ord(y) else y, input_str)\nprint(f""{res}"")\n# In[120] : '"
write a python program to adds every 3rd number in a list,"'\nfrom functools import reduce\ninput_list = [x for x in range(10)]\nres = reduce(lambda x, y :  x+y, [i for idx, i in enumerate(input_list) if (idx+1)%3==0])\nprint(f""{res}"")\n# In[111] : '"
"write a python program which iterates two lists of numbers simultaneously and adds corresponding values, print the result","'\nf_list = [1,2,3,4]\ns_list = [2,3,4,5]\nres = [f_n +s_n for f_n, s_n in zip(f_list, s_list)]\nprint(f""{res}"")\n# In[19] : '"
write a python function that takes a list of numbers and calculate square of each number and return it in a list,"'\ndef square_num(mynumbers) : \n\treturn list(map(lambda num :  num**2,mynumbers))\nsquare_num([1,2,3])\n# In[21] : '"
write a python function that takes two lists and combines them without any duplicates and return the list,"'\ndef combine_lists(L1, L2) : \n\treturn L1 + [items for items in L2 if items not in L1]\nL1 = [1,2,3]\nL2 = [2,4,3]\ncombine_lists(L1,L2)\n# In[29] : '"
write a python program to print all the keys in the dictionary and store it in a list,"'\nsample_dict = {\'1\' : 1, \'2\' : 2, \'3\' : 3}\nkey_list = list(sample_dict.keys())\nprint(f""{key_list}"")\n# In[45] : '"
write a python program to remove duplicates from a list and print the result in list,"'\ninput_list = [1,2,3,4,4,33,2,5]\ndedup = list(set(input_list))\nprint(f""{dedup}"")\n# In[46] : '"
"write a python function that takes a list of elements and n as input, extract and append first n characters and last n characters of each string and return the resultant list","'\ndef nchar (list1,no) : \n\treturn [items[ : no]+items[-no : ] for items in list1]\nlist1 = [""ROHAN"", ""END""]\nnchar(list1, 3)\n# In[56] : '"
"write a python function that takes two parameters, first parameter is a list of dictionary and second is a list of tuples. Append the list of tuples to the list of dictionary","'\ndef addentry (listname, addlist) : \n\tfor names,ages in addlist : \n\t\t\tlistname.append(addlist)\n\treturn listname\naddentry([{\'1\' : ""A""}], [(""2"", ""B"")])\n# In[57] : '"
"write a python function that takes a dictionary and a string, appends the string to the list of values","'\ndef addnames_in_dict (dictname, name) : \n\tfor i in dictname : \n\t\tdictname[i].append(name)\n\treturn dictname\naddnames_in_dict({""1"" : [""A""]}, ""Arun"")\n# In[59] : '"
write a python program to iterate through the list and create a dictionary with integers as keys,"'\nlist_= [1,2,3,4]\ndict_comp = {idx : value for idx,value in enumerate(list_)}\nprint(f""{dict_comp}"")\n# In[60] : '"
write a python function to add all even numbers between minimum and maximum value,"'\ndef add_even_num(min, max) : \n\treturn sum([i for i in range(min, max) if i%2==0])\nadd_even_num(1, 6)\n# In[123] : '"
write a python program to iterate through a string using for loop,"'\nh_letters = []\nfor letter in \'human\' : \n\th_letters.append(letter)\nprint(f""{h_letters}"")\n# In[127] : '"
write a python program to iterate through a string using lambda and print the result,"""\nletters = list(map(lambda x :  x, 'human'))\nprint(letters)\n# In[129] : """
write a python function to calculate the price after tax for a list of transactions,"'\ntxns = [1.09, 23.56, 57.84, 4.56, 6.78]\nTAX_RATE = .08\ndef get_price_with_tax(txn) : \n\treturn txn * (1 + TAX_RATE)\nfinal_prices = list(map(get_price_with_tax, txns))\nprint(f""{final_prices}"")\n# In[138] : '"
write a python program to print python version using sys,"'\nimport sys\nprint(f""{sys.version}"")\n# In[144] : '"
write a python program to merge two sorted lists,"'\na = [3, 4, 6, 10, 11, 18]\nb = [1, 5, 7, 12, 13, 19, 21]\na.extend(b)\nc = sorted(a)\nprint(f""{c}"")\n# In[146] : '"
write a python program to index every 4th character from the below string,"""\ncode = 'varCjjlopaxntrrgnbXrOPraiiItUuUuzaQlliyaxx*t#rgiffFoce&ntPls87C!'\ncode[3 :  : 4]\n# In[149] : """
write a python program to split a string based on space,"'\nstrin = ""Hello how are you ?""\nres = strin.split()\nprint(f""{res}"")\n# In[151] : '"
write a python program to convert a dictionary to list of tuples,"""\ndict_new = {'1' : 'A', '2' : 'B'}\ntup = dict_new.items()\nprint(list(tup))\n# In[153] : """
write a python program to remove an element from a list,"'\nli = [1, 2, 3, 4]\nli.remove(1)\nli\n# In[140] : '"
write a python program to print system time,"'\nimport time\nprint(f""{time.time()}"")\n# In[143] : '"
write a python function to inherit a parent class person in a child class Student,"'\nclass Person : \n\tdef __init__(self, fname, lname) : \n\t\tself.firstname = fname\n\t\tself.lastname = lname\n\tdef printname(self) : \n\t\tprint(self.firstname, self.lastname)\nclass Student(Person) : \n\tpass\n# In[130] : '"
write a python program to replace all the negative values to zero and keep only positive values in the list,"'\noriginal_prices = [1.25, -9.45, 10.22, 3.78, -5.92, 1.16]\nprices = [i if i > 0 else 0 for i in original_prices]\nprint(f""{prices}"")\n# In[133] : '"
write a python function to generate random number between a  given range,"'\nimport random\ndef get_weather_data(min, max) : \n\treturn random.randrange(min, max)\nrand_num = get_weather_data(11, 20)\nprint(f""{rand_num}"")\n# In[135] : '"
write a python function which uses generator to sum all the numbers in a range,"'\nmin_value = 10\nmax_value = 10000\nsum_all = sum(i * i for i in range(min_value, max_value))\nprint(f""{sum_all}"")\n# In[126] : '"
write a python function which is decorated on another function,"""\ndef myDecorator(func) : \n\tdef new_func(n) : \n\t\treturn '$' + func(n)\t\t\n\treturn new_func\n@myDecorator\ndef myFunction(a) : \n\treturn(a)"""
write a python function to convert given variable to said datatype,"""\ndef type_conversion(typ,a) : \n\tif(typ)=='int' : \n\treturn(int(a))\n\telif(typ)=='float' : \n\treturn(float(a))\n\telse : \n\treturn(str(a))\ntype_conversion('str',1)"""
3. Write a program to reverse dictionary key order,"'\nsample_dict = {1 : \'Hi\',2 : \'Hello\',3 : \'Hey\'}\nprint(""The original dictionary  :  "" + str(sample_dict)) \nres = dict(reversed(list(sample_dict.items()))) \nprint(""The reversed order dictionary  :  "" + str(res))'"
Write a program to reverse the key and item mapping,"'\nsample_dict = {1 : \'Seeta\',2 : \'Geeta\',3 : \'Babita\'}\nprint(""The original dictionary  :  "" + str(sample_dict)) \nsample_dict = {v : k for k, v in sample_dict.items()}\nprint(""Inverse mapped dictionary  :  "", str(sample_dict))'"
Write a python function to add 2 iterables a and b such that a is even and b is odd,"'\nn=10\na = []\nb = []\n_ = [a.append(i) if i%2==0 else b.append(i) for i in range(n)]\ndef add(a,b) : \n\treturn [a+b for a,b in (zip(a,b))]\nadd(a,b)'"
6. Write a program to strips every vowel from a string provided,"'\nvowels = (\'a\', \'e\', \'i\', \'o\', \'u\')\ninput_string = ""hello""\nprint(\'Vowel in a string\',\' \'.join([x for x in input_string.lower() if x not in vowels]))'"
Write a python function to  add only even numbers in a list,"""\nfrom functools import reduce\ninput_list = [x for x in range(100)]\ndef sum_even(it) : \n\treturn reduce(lambda x, y :  x + y if (y % 2)==0 else x, it, 0)\nres=sum_even(input_list)\nprint('Sum of even numbers in the list is ', res)"""
write a program to  adds every 5th number in a list,"""\ninput_list = [x for x in range(20)]\nres=reduce((lambda x, y :  x + y), [val for idx, val in enumerate(input_list) if (idx+1)%5==0]) \nprint('Sum of every 5th element in the list is', res)"""
Write a python function to identify type of given data structure,"'\ndef ds_type(ds) : \n\treturn(type(ds))\nl=[1,2,3,4]\nds_type(l)'"
Write a python function get unique value from tuple,"'\ndef unique_values(v) : \n\treturn(list(set(v)))\nt=[(1,2),(3,4),(4,3),(1,2)]\nunique_values(t)'"
write a program to convert temperature from Celsius to Fahrenheit,"'\nCel = 90\nFar = 9.0/5.0 * Cel + 32\nprint(""Temperature : "", Cel, ""Celsius = "", Far, "" F"")'"
Write a program to convert kilometers per hour to mile per hour,"'\nkmh = 16\nmph =  0.6214 * kmh\nprint(""Speed : "", kmh, ""KM/H = "", mph, ""MPH"")'"
Write a program to check your external ip address,"'\nimport re\nimport requests\nurl = ""http : //checkip.dyndns.org""\nrequest = requests.get(url)\nclean = request.text.split(\' :  \', 1)[1]\nyour_ip = clean.split(\'</body></html>\', 1)[0]\nprint(""your IP Address is :  "",  your_ip)'"
Write a program to reverse a number,"'\nn=int(input(""Enter number :  ""))\nrev=0\nwhile(n>0) : \n\tdig=n%10\n\trev=rev*10+dig\n\tn=n//10\nprint(""Reverse of the number : "",rev)'"
Write a program to take an average of given scores,"""\ns1=50\ns2=77\ns3=87\nprint('Avg score is',(s1+s2+s3)/3)"""
Write a python program to print odd numbers in given range,"'\nlower=int(input(""Enter the lower limit for the range : ""))\nupper=int(input(""Enter the upper limit for the range : ""))\nfor i in range(lower,upper+1) : \n\tif(i%2!=0) : \n\t\tprint(i)'"
Write a python program print all the integers that aren’t divisible by either 2 or 3 and lies between 1 and 25.,"'\nfor i in range(0,25) : \n\tif(i%2!=0 and i%3!=0) : \n\t\tprint(i)'"
Write a program to concatinate two strings,"""\nstr1 = 'Good'\nstr2 ='Morning!'\nprint('str1 + str2 = ', str1 + str2)\nprint('str1 * 3 =', str1 * 3)"""
"Write python function to convert a given string to either lower, upper and capitalize","""\ndef string_opertaion(st,conversion) : \n\tif(conversion=='lower') : \n\treturn(st.lower())\n\telif(conversion=='upper') : \n\treturn(st.upper())\n\telse : \n\treturn(st.capitalize())\nstring_opertaion('AwesOME',None)"""
Write a program to get 3rd and last character of a given string,"'\nstring=""Good Night""\nprint(""\\nSlicing characters between "" +\n\t""3rd and last character :  "") \nprint(string[3 : -1])'"
Write a program to delete a 3rd character from a given string,"'\nString=\'welcome\'\nnew_str = """" \nfor i in range(len(String)) :  \n\tif i != 2 :  \n\t\tnew_str = new_str + String[i] \nprint(new_str)'"
Write a program to replace a string by a given string  in a sentence,"""\nstring = 'This is beautiful picture'\nstring.replace('beautiful','good')"""
Write a program to reverse a string,"""\nstring = 'Today is bad day'\nstring[ :  : -1]"""
Write a python function to append or extend two lists,"""\ndef list_op(l1,l2,op) : \n\tif(op=='append') : \n\treturn(l1.append(l2))\n\telse : \n\treturn(l1.extend(l2))\na = ['Hey', 'you', 'there!']\nb = [1,2,3]\nop='e'\nlist_op(a,b,op)\nprint(a)"""
write python function get the unique number of elements from the user given list,"""\nmylist = ['nowplaying', 'PBS', 'PBS', 'nowplaying', 'job', 'debate', 'thenandnow']\ndef get_unique_elements(list) : \n\tunique = [x for i, x in enumerate(mylist) if i == mylist.index(x)]\n\treturn unique\nget_unique_elements(mylist)\n# In[86] : """
write a python function get the maximum number in passed list,"""\ndef max_check(x) : \n\tmax_val = x[0] \n\tfor check in x :  \n\t\tif check > max_val :  \n\t\t\tmax_val = check \n\treturn max_val\nprint(f'{max_check([2,4,5,7,98])}')\n# In[88] : """
write a python function to get the minimum number in passed list,"""\ndef min_check(x) : \n\tmin_val = x[0] \n\tfor check in x :  \n\t\tif check < min_val :  \n\t\t\tmin_val = check \n\treturn min_val\nprint(f'{min_check([2,4,5,7,98])}')\n# In[1] : """
write a program to reverse the list elemnets,"""\nlist_ = [40,0,1,29,3]\nrev_list = list_[ :  : -1]\nprint(f'reversed list :  {rev_list}')\n# In[7] : """
write a program to insert elemnet in the list after every nth element,"""\nletters = ['a','b','c','d','e','f','g','h','i','j']\ni = 3\nwhile i < len(letters) : \n\tletters.insert(i, 'x')\n\ti += 4\nletters\n# In[22] : """
write a program to find sum of elements in list,"""\ntotal = 0\nprint(f'sum :  {sum([total + x for x in [1, 2, 3, 4, 5]])}')\n# In[23] : """
write a  program to get th ematched elemnets from two list,"'\na = [1, 2, 3, 4, 5]\nb = [9, 8, 7, 6, 5]\n[i for i, j in zip(a, b) if i == j]\n# In[24] : '"
write a  program to get the matched elements from two list,"'\na = [1, 2, 3, 4, 5]\nb = [9, 8, 7, 6, 5]\n[i for i, j in zip(a, b) if i != j]\n# In[31] : '"
write a python program to create dictionary from the lists,"""\nL1 = ['a','b','c','d']\nL2 = [1,2,3,4]\nd = dict(zip(L1,L2))\nprint(f'dictionary : {d}')\n# In[45] : """
write a program to convert given dictonary to list of list key value pairs,"""\nd = {'Food' : 'Fish&Chips','2012' : 'Olympics','Capital' : 'London'}\nlist_key_value = [ [k,v] for k, v in d.items() ]\nprint(f'lsit_key_value : {list_key_value}')\n# In[53] : """
"write program to Compare two dictionaries and check how many (key, value) pairs are equal","'\nx = {""a"" : 2,""b"" : 2,""c"" : 3,""d"" : 4}\ny = {""b"" : 2,""c"" : 3, ""d"" : 4}\nshared_items = {k :  x[k] for k in x if k in y and x[k] == y[k]}\nlength = len(shared_items)\nprint(f\'count : {length}\')\n# In[63] : '"
write a program to find the last position of a given substring in a given string,"'\nstr1 = ""Emma is a data scientist who knows Python. Emma works at google.""\nprint(f""Original String is :  {str1}"")\nindex = str1.rfind(""Emma"")\nprint(f""Last occurrence of Emma starts at {index}"")\n# In[82] : '"
write a program to remove the empty list from the given list,"'\nstr_list = [""Emma"", ""Jon"", """", ""Kelly"", None, ""Eric"", """"]\nprint(str_list)'"
use built-in function filter to filter empty value,"'\nnew_str_list = list(filter(None, str_list))\nprint(""After removing empty strings"")\nprint(new_str_list)\n# In[85] : '"
write a program to convert all the sentances present in the list to upper,"""\nmylis = ['this is test', 'another test']\nprint(f'{[item.upper() for item in mylis]}')\n# In[96] : """
write a progarm to adds every 3rd number in a list,"'\nfrom functools import reduce\ninput_list = [x for x in range(10)]\nreduce((lambda x, y :  x + y), [val for idx, val in enumerate(input_list) if (idx+1)%3==0])\n# In[97] : '"
write a program to calculate exponents of an input,"""\ninput = 9\nexponent = 2\nfinal = pow(input, exponent)\nprint(f'Exponent Value is : {final}')"""
write a program to find and print the remainder of two number,"""\nnum1 = 12\nnum2 = 10\nratio = num1 % num2\nprint(f'remainder : {ratio}')"""
reverse a number in Python,"'\nnumber = 1367891\nrevs_number = 0  \nwhile (number > 0) : \n\tremainder = number % 10\n\trevs_number = (revs_number * 10) + remainder\n\tnumber = number // 10\nprint(""The reverse number is  :  {}"".format(revs_number))'"
Sort JSON keys in Python and write it into a file,"'\nimport json\nsampleJson = {""id""  :  1, ""name""  :  ""value2"", ""age""  :  29}\nwith open(""sampleJson.json"", ""w"") as write_file : \n\tjson.dump(sampleJson, write_file, indent=4, sort_keys=True)\nprint(""Done writing JSON data into a file"")'"
Given a Python list. Turn every item of a list into its square,"'\naList = [1, 2, 3, 4, 5, 6, 7]\naList =  [x * x for x in aList]\nprint(aList)\n# Remove empty strings from the list of strings\nlist1 = [""Mike"", """", ""Emma"", ""Kelly"", """", ""Brad""]\nresList = [i for i in (filter(None, list1))]\nprint(resList)'"
"Write a program which will achieve given a Python list, remove all occurrence of an input from the list","'\nlist1 = [5, 20, 15, 20, 25, 50, 20]\ndef removeValue(sampleList, val) : \n\treturn [value for value in sampleList if value != val]\nresList = removeValue(list1, 20)\nprint(resList)'"
Convert decimal number to octal,"""\nprint('%o,' % (8))"""
Write a recursive function to calculate the sum of numbers from 0 to 10,'\ndef calculateSum(num) : \n\tif num : \n\t\treturn num + calculateSum(num-1)\n\telse : \n\t\treturn 0\nres = calculateSum(10)\nprint(res)'
Generate a Python list of all the even numbers between two given numbers,"'\nnum1 = 4\nnum2 = 30\nmyval = [i for i in range(num1, num2, 2)]\nprint(myval)\n# Return the largest item from the given list\naList = [4, 6, 8, 24, 12, 2]\nprint(max(aList))'"
"Write a program to extract each digit from an integer, in the reverse order","'\nnumber = 7536\nwhile (number > 0) : \n\tdigit = number % 10\n\tnumber = number // 10\n\tprint(digit, end="" "")'"
Generate a random n-dimensional array of float numbers,"'\nimport numpy\nrandom_float_array = numpy.random.rand(2, 2)\nprint(""2 X 2 random float array in [0.0, 1.0] \\n"", random_float_array,""\\n"")'"
write a python function to check if a given string is a palindrome,'\ndef isPalindrome(s) : \n\treturn s == s[ :  : -1]'
write a function to reverse words of string,"""\ndef rev_sentence(sentence) :   \n\twords = sentence.split(' ')  \n\treverse_sentence = ' '.join(reversed(words))  \n\treturn reverse_sentence """
write a program to check if a substring is present in a given string,"'\nstring = ""how are you?""\nsubstring = ""are""\nif (string.find(substring) == -1) :  \n\tprint(""NO"") \nelse :  \n\tprint(""YES"")  '"
write a program to print length of a string,"'\nstr1 = ""great way to learn!""\nprint(len(str1))'"
write a program to print words frequncy in a given string,"'\ntest_str = ""It is a great meal at a great restaurant on a great day""\nprint(""Original String :  "" + str(test_str))\nres = {key :  test_str.count(key) for key in test_str.split()} \nprint(""The words frequency :  "" + str(res))'"
write a program to print even length words in a string,"'\nstr1 = ""I am doing fine""\ns = str1.split(\' \')\nfor word in s :   \n\tif len(word)%2==0 :  \n\t\tprint(word)  '"
write a program to accept the strings which contains all vowels,"'\nstr1 = ""__main__""\nif len(set(str1).intersection(""AEIOUaeiou""))>=5 :  \n\tprint(\'accepted\') \nelse :  \n\tprint(""not accepted"") '"
write a program to print count of number of unique matching characters in a pair of strings,"'\nstr1=""ababccd12@""\nstr2=""bb123cca1@""\nmatched_chars = set(str1) & set(str2) \nprint(""No. of matching characters are  :  "" + str(len(matched_chars)) )'"
write a program to remove all duplicate characters from a string,"'\nstr1 = ""what a great day!""\nprint("""".join(set(str1)))'"
write a program to print least frequent character in a string,"'\nstr1=""watch the match""\nall_freq = {} \nfor i in str1 :  \n\tif i in all_freq :  \n\t\tall_freq[i] += 1\n\telse :  \n\t\tall_freq[i] = 1\nres = min(all_freq, key = all_freq.get)\nprint(""Minimum of all characters is :  "" + str(res))'"
write a program to print maximum frequency character in a string,"'\nstr1 = ""watch the match""\nall_freq = {} \nfor i in str1 :  \n\tif i in all_freq :  \n\t\tall_freq[i] += 1\n\telse :  \n\t\tall_freq[i] = 1\nres = max(all_freq, key = all_freq.get)\nprint(""Maximum of all characters is :  "" + str(res))'"
write a program to split and join a string with a hyphen delimiter,"'\nstr1 = ""part of speech""\ndelimiter = ""-""\nlist_str = str1.split("" "")\nnew_str = delimiter.join(list_str)\nprint(""Delimited String is :  "" + new_str)'"
write a program to check if a string is binary or not,"'\nstr1=""01110011 a""\nset1 = set(str1)\nif set1 == {\'0\',\'1\'} or set1 == {\'0\'} or set1 == {\'1\'} : \n\tprint(""string is binary"")\nelse : \n\tprint(""string is not binary"")'"
write a function to remove i-th indexed character in a given string,"'\ndef remove_char(string, i) : \n\tstr1 = string[  :  i]  \n\tstr2 = string[i + 1 :  ] \n\treturn str1 + str2 '"
write a function to rotate string left by a given length,"'\ndef rotate_left(input,d) :   \n\tLfirst = input[0  :  d]  \n\tLsecond = input[d  : ]  \n\treturn (Lsecond + Lfirst) '"
write a function to rotate string right by a given length,"'\ndef rotate_right(input,d) :   \n\tRfirst = input[0  :  len(input)-d]  \n\tRsecond = input[len(input)-d  :  ]  \n\treturn (Rsecond + Rfirst) '"
write a function to replace all occurances of a substring in a string,"'\nstr1 = ""Hello! It is a Good thing""\nsubstr1 = ""Good""\nsubstr2 = ""bad""\nreplaced_str = str1.replace(substr1, substr2)\nprint(""String after replace  : "" + str(replaced_str))'"
write a function that return space count,"'\ndef count_space(str1) :  \n\tcount = 0\n\tfor i in range(0, len(str1)) :  \n\t\tif str1[i] == "" "" :  \n\t\t\tcount += 1\n\treturn count'"
write a program to break up string into individual elements,"'\nstr1 = ""whatisthis""\nsplit_string = list(\'\'.join(str1)) \nprint(split_string) '"
write a program to extract string of N size and having K distict characters,"'\nstr1 = \'GoodisalwaysGoood\'\nN = 3\nK = 2\nres = [] \nfor idx in range(0, len(str1) - N + 1) :  \n\tif (len(set(str1[idx :  idx + N])) == K) :  \n\t\tres.append(str1[idx :  idx + N]) \nprint(""Extracted Strings  :  "" + str(res)) '"
write a program to increment number which is at end of string,"'\nimport re \nstr1 = \'count001\'\nres = re.sub(r\'[0-9]+$\', \n\t\t\t\tlambda x :  f""{str(int(x.group())+1).zfill(len(x.group()))}"",  \n\t\t\t\tstr1) \nprint(""Incremented numeric String  :  "" + str(res))'"
write a function to check if a lower case letter exists in a given string,'\ndef check_lower(str1) : \n\tfor char in str1 :  \n\t\tk = char.islower()   \n\t\tif k == True :  \n\t\t\treturn True \n\tif(k != 1) :  \n\t\treturn False'
write a function to check if a upper case letter exists in a given string,'\ndef check_upper(str1) : \n\tfor char in str1 :  \n\t\tk = char.isupper()   \n\t\tif k == True :  \n\t\t\treturn True\n\tif(k != 1) :  \n\t\treturn False'
write a program to print number of words in a string,"'\nstr1 = \'It is a glorious day\'\nres = len(str1.split()) \nprint(""The number of words in string are  :  "" + str(res)) '"
write a program to print number of characters in a string,"'\nstr1 = \'It is a glorious day\'\nres = len(str1) \nprint(""The number of characters in string are  :  "", str(res)) '"
write a funtion that accepts two lists of equal length and converts them into a dictioinary,"'\ndef list_to_dict(list1, list2) : \n\treturn dict(zip(list1, list2))'"
write a python function that accepts a list of dictionaries and sorts it by a specified key,"'\ndef sort_dict_list(dict_list, sort_key) : \n\tdict_list.sort(key=lambda item :  item.get(sort_key))'"
write a program to print the longest key in a dictioinary,"'\ndict_1 = {""key1"" :  10, ""keeeey2"" :  2, ""ky3"" :  30}\nmax_key=\'\'\nfor key in dict_1 : \n\tif len(key)>len(max_key) : \n\tmax_key=key\nprint(max_key)'"
write a program to capitalize the first and last character of each key in a dictionary,"""\ninput_dict = {'key_a' :  10, 'kEy' :  2, 'Key_B' :  13}\nfor key in list(input_dict.keys()) : \n\tnew_key = key[0].upper() + key[1 : -1] + key[-1].upper()\n\tinput_dict[new_key] = input_dict[key]\n\tif key != new_key : \n\tdel input_dict[key]"""
"write a program that iterates over a dictionary and prints ""Bingo!"" if length of value is greater than the length of key. Otherwise print ""no bingo""","'\nkey_val_map = {""key1"" :  ""length1"", ""key2"" :  ""len2"", ""Hello"" :  ""hi"", ""bingo"" :  ""print bingo""}\nfor key, val in key_val_map.items() : \n\tif len(val) > len(key) : \n\tprint(""Bingo!"")\n\telse : \n\tprint(""no bingo"")'"
write a python function that accepts a dictionary that has unique values and returns its inversion,"'\ndef invert_dict(input_dict) : \n\tmy_inverted_dict = {value :  key for key, value in input_dict.items()}\n\treturn my_inverted_dict'"
write a function that inverts a dictionary with non-unique values. Keys that map to the same values should be appended to a list in the inverted dictionary,"'\ndef invert_dict_non_unique(my_dict) : \n\tmy_inverted_dict = dict()\n\tfor key, value in my_dict.items() : \n\t\t my_inverted_dict.setdefault(value, list()).append(key)\n\treturn my_inverted_dict'"
write a program to merge a list of dictionaries into a single dictionary using dictionary comprehension,"'\ninput = [{""foo"" :  ""bar"", ""Hello"" :  ""World""},\n\t\t\t{""key1"" :  ""val1"", ""key2"" :  ""val2""},\n\t\t\t{""sample_key"" :  ""sample_val""}]\nmerged_dict = {key :  value for d in input for key, value in d.items()}'"
write a function to return the mean difference in the length of keys and values of dictionary comprising of strings only.,"'\ndef mean_key_val_diff(input_dict) : \n\tsum_diff = 0\n\tfor key, val in input_dict.items() : \n\tsum_diff += abs(len(val) - len(key))\n\treturn sum_diff/len(input_dict)'"
write a program that categorizes tuple values based on second element and prints a dictionary value list where each key is a category.,"'\ntest_list = [(1, 3), (1, 4), (2, 3), (3, 2), (5, 3), (6, 4)] \nres = {} \nfor i, j in test_list :  \n\t\tres.setdefault(j, []).append(i) \nprint(""The dictionary converted from tuple list  :  "" + str(res))'"
write a python function to combine three lists of equal lengths into a nested dictionary and return it,"'\ndef lists_to_dict(test_list1, test_list2, test_list3) : \n\tres = [{a :  {b :  c}} for (a, b, c) in zip(test_list1, test_list2, test_list3)] \n\treturn res'"
write a program to print keys in a dictionary whose values are greater than a given input.,"'\ntest_dict = {\'tsai\'  :  4, \'random_key\'  :  2, \'foo\'  :  3, \'bar\'  :  \'END\'} \nK = 3\nres = {key  :  val for key, val in test_dict.items() \n\t\t\t\t\tif type(val) != int or val > K} \nprint(""Values greater than K  :  "", res.keys())'"
write a function that converts a integer dictionary into a list of tuples.,"'\ndef dict_to_tuple(input_dict) : \n\tout_tuple = [(a, b) for a,b in input_dict.items()]\n\treturn out_tuple'"
write a Python program to combine two dictionary by adding values for common keys,"""\ndict1 = {'a' :  12, 'for' :  25, 'c' :  9} \ndict2 = {'Geeks' :  100, 'geek' :  200, 'for' :  300} \nfor key in dict2 :  \n\tif key in dict1 :  \n\t\tdict2[key] = dict2[key] + dict1[key] \n\telse :  \n\t\tpass"""
write a Python program that sorts dictionary keys to a list using their values and prints this list.,"'\ntest_dict = {\'Geeks\'  :  2, \'for\'  :  1, \'CS\'  :  3} \nres = list(sum(sorted(test_dict.items(), key = lambda x : x[1]), ())) \nprint(""List after conversion from dictionary  :  "", res)'"
write a python program to print the top N largest keys in an integer dictionary.,"'\ntest_dict = {6  :  2, 8 :  9, 3 :  9, 10 :  8}  \nN = 4\nres = []   \nfor key, val in sorted(test_dict.items(), key = lambda x :  x[0], reverse = True)[ : N] :  \n\tres.append(key) \nprint(""Top N keys are :  "" + str(res))'"
write a program to print the values of a given extraction key from a list of dictionaries.,"'\ntest_list = [{""Gfg""  :  3, ""b""  :  7},  \n\t\t\t\t{""is""  :  5, \'a\'  :  10},  \n\t\t\t\t{""Best""  :  9, \'c\'  :  11}]  \nK = \'Best\'\nres = [sub[K] for sub in test_list if K in sub][0]   \nprint(""The extracted value  :  "" + str(res))'"
write a program to convert date to timestamp and print the result,"'\nimport time \nimport datetime \nstr1 = ""20/01/2020""\nelement = datetime.datetime.strptime(str1,""%d/%m/%Y"") \ntimestamp = datetime.datetime.timestamp(element) \nprint(timestamp)'"
write a program to print the product of integers in a mixed list of string and numbers,"'\ntest_list = [5, 8, ""gfg"", 8, (5, 7), \'is\', 2] \nres = 1\nfor ele in test_list :  \n\ttry :  \n\t\tres *= int(ele) \n\texcept  :  \n\t\tpass\nprint(""Product of integers in list  :  "" + str(res))'"
write a python program to add an element to a list. Print the final list.,"'\nlst = [""Jon"", ""Kelly"", ""Jessa""]\nlst.append(""Scott"")\nprint(lst)'"
write a python function to append all elements of one list to another,"'\ndef extend_list(list1, list2) : \n\tlist1 = [1, 2]\n\tlist2 = [3, 4]\n\treturn list1.extend(list2)'"
write a python function to add elements of two lists,"'\ndef add_two_lists(list1, list2) : \n\tlist1 = [1, 2, 3]\n\tlist2 = [4, 5, 6]\n\tsum_list = []\n\tfor (item1, item2) in zip(list1, list2) : \n\t\t sum_list.append(item1+item2)\n\treturn sum_list'"
Write a  python program to print the last element of a list,"""\nlist1 = ['p','r','o','b','e']\nprint(list1[-1])"""
Write a python program to print positive Numbers in a List,"'\nlist1 = [11, -21, 0, 45, 66, -93] \nfor num in list1 :  \n\tif num >= 0 :  \n\t\tprint(num, end = "" "") '"
Write a python function to multiply all values in a list,'\ndef multiplyList(myList)  : \n\tresult = 1\n\tfor x in myList : \n\t\t\tresult = result * x \n\treturn result '
Write a python program to print the smallest number in a list,"'\nlist1 = [10, 20, 1, 45, 99] \nprint(""Smallest element is : "", min(list1)) '"
Write a python program to remove even numbers from a list. Print the final list.,"'\nlist1 = [11, 5, 17, 18, 23, 50]  \nfor ele in list1 :  \n\tif ele % 2 == 0 :  \n\t\tlist1.remove(ele) \nprint(""New list after removing all even numbers :  "", list1) '"
Write a python program to print a list after removing elements from index 1 to 4,"'\nlist1 = [11, 5, 17, 18, 23, 50]  \ndel list1[1 : 5] \nprint(*list1)'"
Write a python program to remove 11 and 18 from a list. Print the final list.,"'\nlist1 = [11, 5, 17, 18, 23, 50]  \nunwanted_num = {11, 18} \nlist1 = [ele for ele in list1 if ele not in unwanted_num] \nprint(""New list after removing unwanted numbers :  "", list1)'"
Write a python program to Remove multiple empty spaces from  List of strings. Print the original and final lists.,"'\ntest_list = [\'gfg\', \'   \', \' \', \'is\', \'            \', \'best\'] \nprint(""The original list is  :  "" + str(test_list)) \nres = [ele for ele in test_list if ele.strip()] \nprint(""List after filtering non-empty strings  :  "" + str(res)) '"
Write a python function to get the Cumulative sum of a list,"'\ndef Cumulative(lists) :  \n\tcu_list = [] \n\tlength = len(lists) \n\tcu_list = [sum(lists[0 : x : 1]) for x in range(0, length+1)] \n\treturn cu_list[1 : ]'"
"Write a python program to print if a string ""hello"" is present in the list","""\nl = [1, 2.0, 'hello','have', 'a', 'good', 'day'] \ns = 'hello'  \nif s in l :  \n\tprint(f'{s} is present in the list') \nelse :  \n\tprint(f'{s} is not present in the list') """
Write a python program to print the distance between first and last occurrence of even element.,"'\ntest_list = [1, 3, 7, 4, 7, 2, 9, 1, 10, 11] \nindices_list = [idx for idx in range( \n\tlen(test_list)) if test_list[idx] % 2 == 0] \nres = indices_list[-1] - indices_list[0] \nprint(""Even elements distance  :  "" + str(res)) '"
Write a python fuction to create an empty list,'\ndef emptylist() : \n\treturn list()  '
Write a python program to print a list with all elements as 5 and of length 10,'\nlist1 = [5] * 10\nprint(list1)'
Write a python program to reverse a list and print it.,"'\ndef Reverse(lst) :  \n\treturn [ele for ele in reversed(lst)] \nlst = [10, 11, 12, 13, 14, 15] \nprint(Reverse(lst)) '"
Write a python program to print odd numbers in a List,"'\nlist1 = [10, 21, 4, 45, 66, 93, 11]  \nodd_nos = list(filter(lambda x :  (x % 2 != 0), list1)) \nprint(""Odd numbers in the list :  "", odd_nos)'"
Write a python program to print negative Numbers in a List,"'\nlist1 = [11, -21, 0, 45, 66, -93] \nfor num in list1 :  \n\tif num < 0 :  \n\t\tprint(num, end = "" "")'"
Write a python program print the the number of occurrences of 8 in a list,"""\ndef countX(lst, x) :  \n\tcount = 0\n\tfor ele in lst :  \n\t\tif (ele == x) :  \n\t\t\tcount = count + 1\n\treturn count \nlst = [8, 6, 8, 10, 8, 20, 10, 8, 8] \nx = 8\nprint('{} has occurred {} times'.format(x, countX(lst, x))) """
Write a python program to swap first and last element of a list . Print the final list,"'\ndef swapList(newList) :  \n\tsize = len(newList) \n\t# Swapping  \n\ttemp = newList[0] \n\tnewList[0] = newList[size - 1] \n\tnewList[size - 1] = temp \n\treturn newList \nnewList = [12, 35, 9, 56, 24] \nprint(swapList(newList)) '"
Write a python program for print all elements with digit 7.,"'\ntest_list = [56, 72, 875, 9, 173]  \nK = 7\nres = [ele for ele in test_list if str(K) in str(ele)] \nprint(""Elements with digit K  :  "" + str(res))'"
Write a python program for printing number of unique elements in a list,"'\ninput_list = [1, 2, 2, 5, 8, 4, 4, 8] \nl1 = [] \ncount = 0\nfor item in input_list :  \n\tif item not in l1 :  \n\t\tcount += 1\n\t\tl1.append(item) \nprint(""No of unique items are : "", count) '"
Write a python program to find the sum and average of the list. Print the sum and average,"'\nL = [4, 5, 1, 2, 9, 7, 10, 8] \ncount = 0\nfor i in L :  \n\tcount += i \navg = count/len(L) \nprint(""sum = "", count) \nprint(""average = "", avg)'"
Write a python program to Remove Tuples of Length 1 from a list of tuples. Print the final list.,"'\ntest_list = [(4, 5), (4, ), (8, 6, 7), (1, ), (3, 4, 6, 7)] \nK = 1\nres = [ele for ele in test_list if len(ele) != K] \nprint(""Filtered list  :  "" + str(res))'"
Write a python program to print a list of tuples from given list having number and its cube in each tuple,"'\nlist1 = [1, 2, 5, 6] \nres = [(val, pow(val, 3)) for val in list1] \nprint(res) '"
Write a python program to print the combination of tuples in list of tuples,"'\ntest_list = [([1, 2, 3], \'gfg\'), ([5, 4, 3], \'cs\')]\nres = [ (tup1, tup2) for i, tup2 in test_list for tup1 in i ] \nprint(""The list tuple combination  :  "" + str(res)) '"
Write a python program to swap tuple elements in list of tuples. Print the output.,"'\ntest_list = [(3, 4), (6, 5), (7, 8)] \nres = [(sub[1], sub[0]) for sub in test_list] \nprint(""The swapped tuple list is  :  "" + str(res)) '"
Write a python program to print all pair combinations of 2 tuples.,"'\ntest_tuple1 = (4, 5) \ntest_tuple2 = (7, 8) \nres =  [(a, b) for a in test_tuple1 for b in test_tuple2] \nres = res +  [(a, b) for a in test_tuple2 for b in test_tuple1] \nprint(""The filtered tuple  :  "" + str(res))'"
Write a python program to print positive Tuples in List.,"'\ntest_list = [(4, 5, 9), (-3, 2, 3), (-3, 5, 6), (4, 6)] \nprint(""The original list is  :  "" + str(test_list)) \nres = [sub for sub in test_list if all(ele >= 0 for ele in sub)] \nprint(""Positive elements Tuples  :  "" + str(res))'"
write a python program to multiply three numbers,"""\nnum1 = 1.5\nnum2 = 6.3\nnum3 = -2.3\nproduct = num1 * num2 * num3\nprint(f'Product :  {product}')"""
"write a python function that when given two numbers, would divide the first number by second number and return the quotient and remainder","'\ndef divide_first_number_by_second(num1, num2) : \n\treturn (num1 // num2), (num1 % num2)'"
write a python function to return the largest and smallest numbers in the given list and return None if the list is empty,"'\ndef largest_and_smallest(list_of_nums) : \n\tif list_of_nums : \n\t\treturn max(list_of_nums), min(list_of_nums)\n\telse : \n\t\treturn'"
write a python function that would read the given input file path and print its contents,"'\ndef read_and_print_file(filepath) : \n\twith open(filepath, ""r"") as infile : \n\t\tprint( infile.read() )'"
write a python program that would print the first n positive integers using a for loop,'\nn = 62\nfor num in range(n) : \n\tprint(num)'
write a python function that returns the input list sorted in ascending order,'\ndef sort_ascending(list_to_be_sorted) : \n\treturn sorted(list_to_be_sorted)'
write a python function that returns the input list sorted in descending order,"'\ndef sort_descending(list_to_be_sorted) : \n\treturn sorted(list_to_be_sorted, reverse=True)'"
"write a python function that would return the sum of first n natural numbers, where n is the input",'\ndef sum_first_n(n) : \n\treturn ( n * (n+1) ) // 2'
"write a recursive python function that would return the sum of first n natural numbers, where n is the input",'\ndef sum_first_n_recursive(n) : \n\tif n == 0 : \n\t\treturn 0\n\treturn sum_first_n_recursive(n-1) + n'
"write a python function that would filter a list of dictionaries where a specified key equals given value, list_of_dictionaries, key and value are inputs to this function.","'\ndef filter_with_key_value(list_of_dicts, key, value) : \n\treturn list( filter( lambda x :  x.get(key) == value, list_of_dicts ) )'"
write a recursive python function that takes either a list or tuple as input and reverses the order of its elements,'\ndef reverse(seq) : \n\tSeqType = type(seq)\n\temptySeq = SeqType()\n\tif seq == emptySeq : \n\t\treturn emptySeq\n\trestrev = reverse(seq[1 : ])\n\tfirst = seq[0 : 1]\n\tresult = restrev + first\n\treturn result'
write a python function that returns the square of a given input number,'\ndef square(x) : \n\treturn x**2'
write a python program that asks for user input and prints the given input,"'\na = input(""User Input"")\nprint(a)'"
write a python function shifts and scales all numbers in the given list by the given mean and standard deviation,"'\ndef shift_and_scale(list_of_nums, mean, std) : \n\treturn [ (x-mean) / std for x in list_of_nums ]'"
write a python function that takes in a list of sequences and zips each corresponding element from the list into a tuple and returns the list of such tuples,'\ndef zip_(list_of_seq) : \n\treturn list(zip(*list_of_seq))'
write python program that would merge two dictionaries by adding the second one into the first,"'\na = {""a"" :  1, ""b"" :  3}\nb = {""c"" :  1, ""d"" :  3}\na.update(b)'"
write a python function that would reverse the given string,'\ndef reverse_string(str_to_be_reversed) : \n\treturn str_to_be_reversed[ :  : -1]'
"write a python program that would print ""Hello World""","'\nprint(""Hello World"")'"
write a python program that would swap variable values,"'\na = 10\nb = 15\na, b = b, a'"
write a python program that iterates over a dictionary and prints its keys and values,"'\na = {""a"" : 1, ""b"" : 2, ""c"" : 3, ""d"" : 4}\nfor k, v in a.items() : \n\tprint(k, v)'"
write a python function that would print the ASCII value of a given character,'\ndef print_ascii(char) : \n\tprint(ord(char))'
write a python function that takes in two numbers and returns their HCF,"'\ndef hcf(num1, num2) : \n\tsmaller = num1 if num1 < num2 else num2\n\tfor i in range(1, smaller+1) : \n\t\tif (num1 % i == 0) and (num2 % i == 0) : \n\t\t\thcf = i\n\treturn hcf'"
write a python function that takes in two numbers and returns their LCM,"'\ndef lcm(num1, num2) : \n\tbigger = num1 if num1 > num2 else num2\n\twhile True : \n\t\tif (bigger % num1 == 0) and (bigger % num2 == 0) : \n\t\t\tbreak\n\t\tbigger += 1\n\treturn bigger'"
"write a recursive python function to calculate sum of natural numbers upto n, where n is an argument",'\ndef recursive_sum(n) : \n\tif n <= 1 : \n\t\treturn n\n\telse : \n\t\treturn n + recursive_sum(n-1)'
write a python function that deletes the last element of a list and returns the list and the deleted element,"'\ndef delete_last_element(list_to_be_processed) : \n\tdeleted_element = list_to_be_processed.pop()\n\treturn list_to_be_processed, deleted_element'"
write a python function that takes in a list and returns a list containing the squares of the elements of the input list,"'\ndef square_list_elements(list_to_be_squared) : \n\treturn list( map(lambda x :  x**2, list_to_be_squared) )'"
"write a python function that finds square roots of a given number, if the square root is an integer, else returns the message ""Error - the square root is not an integer""","'\ndef find_integer_square_roots(num) : \n\tfound = False\n\tfor k in range(1, (num//2)+1) : \n\t\tif ((k**2)==num) : \n\t\t\tfound = True\n\t\t\tbreak\n\tif not found : \n\t\treturn ""Error - the square root is not an integer""\n\treturn -k, k'"
write a python program that prints out natural numbers less than or equal to the given number using a while loop,'\ninput_num = 27\nwhile input_num : \n\tprint(input_num)\n\tinput_num -= 1'
"write a python function that takes two numbers. The function divides the first number by the second and returns the answer. The function returns None, if the second number is 0","'\ndef divide(num1, num2) : \n\tif num2 == 0 : \n\t\treturn\n\telse : \n\t\treturn num1 / num2'"
write a python program uses else with for loop,"'\nseq = ""abcde""\nfor k in seq : \n\tif k == ""f"" : \n\t\tbreak\nelse : \n\tprint(""f Not Found!"")'"
Write a function to return the mean of numbers in a list,'\ndef cal_mean(num_list : list)->float : \n\tif num_list : \n\t\treturn sum(num_list)/len(num_list)\n\telse : \n\t\treturn None'
Write a function to return the area of a equilateral triangle,'\ndef cal_eq_triangle_area(a : float)->float : \n\tif a : \n\t\treturn (3**(1/2))*(a**2)/4\n\telse : \n\t\treturn None'
Write a function to return the area of a right angle triangle,"'\ndef cal_rt_triangle_area(base : float,height : float)->float : \n\tif base and height : \n\t\treturn (base*height)/2\n\telse : \n\t\treturn None'"
Write a function to return the cartisian distance of a point from origin,"'\ndef cal_dist_from_orign(x : float,y : float)->float : \n\treturn (x**2+y**2)**(1/2)'"
Write a function to return the cartisian distance between two points,"'\ndef cal_cart_distance(x1 : float,y1 : float,x2 : float,y2 : float)->float : \n\treturn ((x1-x2)**2+(y1-y2)**2)**(1/2)'"
Write a function to return the type roots of a quadratic equation ax**2 + bx + c = 0,"""\ndef root_type(a : float,b : float,c : float) : \n\tif b**2-4*a*c >= 0 : \n\t\treturn 'real'\n\telse : \n\t\treturn 'imaginary'"""
Write a function to return the sum of the roots of a quadratic equation ax**2 + bx + c = 0,"'\ndef sum_of_roots(a : float,c : float) : \n\tif a : \n\t\treturn c/a\n\telse : \n\t\treturn None'"
Write a function to return the product of the roots of a quadratic equation ax**2 + bx + c = 0,"'\ndef prod_of_roots(a : float,b : float) : \n\tif a : \n\t\treturn -b/a\n\telse : \n\t\treturn None'"
Write a function to return the real of the roots of a quadratic equation else return None ax**2 + bx + c = 0,"'\ndef roots_of_qad_eq(a : float,b : float,c : float) : \n\td = b**2-4*a*c\n\tif d >= 0 : \n\t\treturn (-b+(d)**(1/2))/2*a,(-b-(d)**(1/2))/2*a\n\telse : \n\t\treturn None'"
Write a function to return the profit or loss based on cost price and selling price,"""\ndef find_profit_or_loss(cp,sp) : \n\tif cp > sp : \n\t\treturn 'loss', cp-sp\n\telif cp < sp : \n\t\treturn 'profit', sp-cp\n\telse : \n\t\treturn 'no profit or loss', 0"""
Write a function to return the area of a rectangle,"'\ndef cal_area_rect(length, breadth) : \n\treturn length*breadth'"
Write a function to return the area of a square,'\ndef cal_area_square(side) : \n\treturn side**2'
Write a function to return the area of a rhombus with diagonals q1 and q2,"'\ndef cal_area_rhombus(q1,q2) : \n\treturn (q1*q2)/2'"
Write a function to return the area of a trapezium with base a base b and height h between parallel sides,"'\ndef cal_area_trapezium(a,b,h) : \n\treturn h*(a+b)/2'"
Write a function to return the area of a circle of raidus r,'\ndef cal_area_circle(r) : \n\tpi = 3.14\n\treturn pi*r**2'
Write a function to return the circumference of a circle,'\ndef cal_circumference(r) : \n\tpi = 3.14\n\treturn 2*pi*r'
Write a function to return the perimeter of a rectangle,"'\ndef cal_perimeter_rect(length, bredth) : \n\treturn 2*(length+bredth)'"
Write a function to return the perimeter of a triangle,"'\ndef cal_perimeter_triangle(s1,s2,s3) : \n\treturn s1+s2+s3'"
Write a function to return the perimeter of a square,'\ndef cal_perimeter_square(side) : \n\treturn 4*side'
Write a function to return the perimeter of an equilateral triangle,'\ndef cal_perimeter_eq_triangle(a) : \n\treturn 3*a'
Write a function to return the perimeter of a isoscales triangle,"'\ndef cal_perimeter_iso_triangle(s1,s2) : \n\treturn 2*s1+s2'"
Write a function to return the area of an ellipse,"'\ndef cal_area_ellipse(minor, major) : \n\tpi = 3.14\n\treturn pi*(minor*major)'"
Write a function to return the lateral surface area of a cylinder,"'\ndef cal_cylinder_lat_surf_area(height,radius) : \n\tpi=3.14\n\treturn 2*pi*radius*height'"
Write a function to return the curved surface area of a cone,"'\ndef cal_cone_curved_surf_area(slant_height,radius) : \n\tpi=3.14\n\treturn pi*radius*slant_height'"
Write a function to return the total surface area of a cube of side a,'\ndef cal_surface_area_cube(a) : \n\treturn 6*(a**2)'
"Write a function to return the total surface area of a cuboid of length l, bredth b and height h","'\ndef cal_surface_area_cuboid(l,b,h) : \n\treturn 2*(l*b+b*h+h*l)'"
Write a function to return the surface area of a sphere,'\ndef cal_area_sphere(radius) : \n\tpi = 3.14\n\treturn 4*pi*(radius**2)'
Write a function to return the surface area of a hemi-sphere,'\ndef cal_area_hemisphere(radius) : \n\tpi = 3.14\n\treturn 2*pi*(radius**2)'
Write a function to return the total surface area of a cylinder,"'\ndef cal_cylinder_surf_area(height,radius) : \n\tpi=3.14\n\treturn 2*pi*radius**2*+2*pi*radius*height'"
Write a function to return the lateral surface area of a cone,"'\ndef cal_cone_lateral_surf_area(height,radius) : \n\tpi=3.14\n\treturn pi*radius*(((height**2)+(radius**2))**(1/2))'"
Write a function to return the volume of a cylinder,"'\ndef cal_cylinder_volume(height, radius) : \n\tpi=3.14\n\treturn pi*(radius**2)*height'"
Write a function to return the volume of a cone,"'\ndef cal_cone_volume(height,radius) : \n\tpi=3.14\n\treturn pi*(radius**2)*height/3'"
Write a function to return the volume of a hemi sphere,'\ndef cal_hemisphere_volume(radius : float)->float : \n\tpi=3.14\n\treturn (2/3)*pi*(radius**3)'
Write a function to return the volume of a sphere,'\ndef cal_sphere_volume(radius : float)->float : \n\tpi=3.14\n\treturn (4/3)*pi*(radius**3)'
Write a function to return the volume of a cuboid,"'\ndef cal_cuboid_volume(length : float, breadth : float, height : float)->float : \n\treturn length*breadth*height'"
Write a function to return the volume of a cube,'\ndef cal_cube_volume(side : float)->float : \n\treturn side**3'
Write a function to return the speed of moving object based of distance travelled in given time,"'\ndef cal_speed(distance : float,time : float)->float : \n\treturn distance/time'"
Write a function to return the distance covered by a moving object based on speend and given time,"'\ndef cal_distance(time : float,speed : float)->float : \n\treturn time*speed'"
Write a function to return the time taken by a given of moving object based of distance travelled in given time,"'\ndef cal_time(distance : float,speed : float)->float : \n\treturn distance/speed'"
Write a function to return the torque when a force f is applied at angle thea and distance for axis of rotation to place force applied is r,"'\ndef cal_torque(force : float,theta : float,r : float)->float : \n\timport math\n\treturn force*r*math.sin(theta)'"
Write a function to return the angualr veolcity based on augualr distance travelled in radian unit and time taken,"'\ndef cal_angular_velocity(angular_dist : float,time : float)->float : \n\treturn angular_dist/time'"
Write a function to calculate the focal length of a lense buy the distance of object and distance of image from lense,"'\ndef cal_focal_length_of_lense(u : float,v : float)->float : \n\treturn (u*v)/(u+v)'"
Write a function to calculate the gravitational force between two objects of mass m1 and m2 and distance of r between them,"'\ndef cal_gforce(mass1 : float,mass2 : float, distance : float)->float : \n\tg = 6.674*(10)**(-11)\n\treturn (g*mass1*mass2)/(distance**2)'"
Write a function to calculate the current in the curcit where the resistance is R and voltage is V,"'\ndef cal_current(resistance : float, voltage : float)->float : \n\treturn voltage/resistance'"
Write a function to calculate the total capacitance of capacitors in parallel in a given list,'\ndef cal_total_cap_in_parallel(cap_list : list)->float : \n\treturn sum(cap_list)'
Write a function to calculate the total resistance of resistances in parallel in a given list,'\ndef cal_total_res_in_parallel(res_list : list)->float : \n\treturn sum([1/r for r in res_list])'
Write a function to calculate the total resistance of resistances in series in a given list,'\ndef cal_total_res_in_series(res_list : list)->float : \n\treturn sum(res_list)'
Write a function to calculate the moment of inertia of a ring of mass M and radius R,"'\ndef cal_mi_ring(mass : float,radius : float)->float : \n\treturn mass*(radius**2)'"
Write a function to calculate the moment of inertia of a sphere of mass M and radius R,"'\ndef cal_mi_sphere(mass : float,radius : float)->float : \n\treturn (7/5)*mass*(radius**2)'"
"Write a function to calculate the pressure P of ideal gas based on ideal gas equation - Volume V, and Temperatue T are given","'\ndef find_pressure_of_ideal_gas(volume : float, temp : float,n : float)->float : \n\tr = 8.3145 # gas constant R\n\treturn (n*r*temp)/volume'"
Write a function to calculate the volume V of ideal gas based on ideal gas equation Pressure P and Tempreature T given,"'\ndef find_volume_of_ideal_gas(pressure : float, temp : float,n : float)->float : \n\tr = 8.3145 # gas constant R\n\treturn (n*r*temp)/pressure'"
Write a function to calculate the Temprature T of ideal gas based on ideal gas equation Pressure P and Volume V given,"'\ndef find_temp_of_ideal_gas(pressure : float, volume : float,n : float)->float : \n\tr = 8.3145 # gas constant R\n\treturn (pressure*volume)/n*r'"
"Write a function to calculate the velocity of an object with initial velocity u, time t and acceleration a","'\ndef cal_final_velocity(initial_velocity : float,accelration : float,time : float)->float : \n\treturn initial_velocity + accelration*time'"
"Write a function to calculate the displacement of an object with initial velocity u, time t and acceleration a","'\ndef cal_displacement(initial_velocity : float,accelration : float,time : float)->float : \n\treturn initial_velocity*time + .5*accelration*(time)**2'"
Write a function to calculate amount of radioactive element left based on initial amount and half life,"'\ndef cal_half_life(initail_quatity : float, time_elapsed : float, half_life : float)->float : \n\treturn initail_quatity*((1/2)**(time_elapsed/half_life))'"
Write a function to calculate the new selling price based on discount percentage,"'\ndef cal_sp_after_discount(sp : float,discount : float)->float : \n\treturn sp*(1 - discount/100)'"
"Write a function to calculate the simple interest for principal p, rate r and time in years y","'\ndef get_si(p : float, r : float, t : float)->float : \n\treturn (p*r*t)/100'"
"Write a function to calculate the compound interest for principal p, rate r and time in years y","'\ndef get_ci(p : float, r : float, t : float, n : float)->float : \n\treturn round(p*((1+(r/(n*100)))**(n*t)) - p,2)'"
Write a function to calculate the energy released by converting mass m in kg to energy,'\ndef cal_energy_by_mass(mass : float)->float : \n\tc = 300000\n\treturn mass * (c**2)'
Write a function to calculate the kinetic energy of an object of mass m and velocity v,"'\ndef cal_ke(mass : float,velocity : float)->float : \n\treturn (mass*(velocity)**2)/2'"
Write a function to calculate the potential energy of an object of mass m at height h,"'\ndef cal_pe(mass : float,height : float)->float : \n\tg = 9.8\n\treturn (mass*g*height)'"
Write a function to calculate the electrostatic force between two charged particles with charge q1 and q2 at a distance d apart,"'\ndef cal_electrostatic_force(q1,q2,d) : \n\tk = 9*(10**9)\n\treturn (k*q1*q2)/(d**2)'"
Write a function to calculate the density given mass and volume,"'\ndef cal_density(mass,volume) : \n\treturn (mass/volume)'"
Write a function to convert the temprature celsius 'c' to fahrenheit 'f' or fahrenheit to celsius,"""\ndef temp_converter(temp,temp_given_in = 'f') : """
Return the converted temprature,"""\n\tif temp_given_in.lower() == 'f' :  # Convert to C\n\t\treturn (temp - 32) * (5/9)\n\telse :  # Convert to F\n\t\treturn (temp * 9/5) + 32"""
Write a function to Get Kth Column of Matrix,"'\ndef kth_column(test_list=[[4, 5, 6], [8, 1, 10], [7, 12, 5]],k=2) : \n\tprint(""The original list is  :  "" + str(test_list))\n\tK =k\n\tres = list(zip(*test_list))[K]\n\tprint(""The Kth column of matrix is  :  "" + str(res))'"
Write a function to find sum of nested list using Recursion,"'\ntotal = 0\ndef sum_nestedlist(l) : \n\tglobal total\n\tfor j in range(len(l)) : \n\t\tif type(l[j]) == list : \n\t\t\tsum_nestedlist(l[j])\n\t\telse : \n\t\t\ttotal += l[j]\nsum_nestedlist([[1, 2, 3], [4, [5, 6]], 7])\nprint(total)'"
Write a function to find power of number using recursion,"'\ndef power(N, P) : \n\tif (P == 0 or P == 1) : \n\t\treturn N\n\telse : \n\t\treturn (N * power(N, P - 1))\nprint(power(5, 2))'"
Write a function to find time for a given angle.,"'\ndef calcAngle(hh, mm) : \n\thour_angle = 0.5 * (hh * 60 + mm)\n\tminute_angle = 6 * mm\n\tangle = abs(hour_angle - minute_angle)\n\tangle = min(360 - angle, angle)\n\treturn angle'"
write a python function to print pyramid pattern,"""\ndef pyramid_pattern(symbol='*', count=4) : \n\tfor i in range(1, count + 1) : \n\t\tprint(' ' * (count - i) + symbol * i, end='')\n\t\tprint(symbol * (i - 1) + ' ' * (count - i))"""
write a python function to make permutations from a list with given length,"'\ndef get_permutations(data_list, l=2) : \n\treturn list(permutations(data_list, r=l))'"
write a python program to get all possible permutations of size of the string in lexicographic sorted order.,"""\ndef get_ordered_permutations(word, k) : \n\t[print(''.join(x)) for x in sorted(list(permutations(word, int(k))))]"""
"write a python program to get all possible combinations, up to size of the string in lexicographic sorted order.","""\ndef get_ordered_combinations(string, k) : \n\t[print(''.join(x)) for i in range(1, int(k) + 1) for x in combinations(sorted(string), i)]"""
write a python function to get all possible size replacement combinations of the string in lexicographic sorted order.,"""\ndef get_ordered_combinations_with_replacement(string, k) : \n\t[print(''.join(x)) for x in combinations_with_replacement(sorted(string), int(k))]"""
"write a python function for Caesar Cipher, with given shift value and return the modified text","'\ndef caesar_cipher(text, shift=1) : \n\talphabet = string.ascii_lowercase\n\tshifted_alphabet = alphabet[shift : ] + alphabet[ : shift]\n\ttable = str.maketrans(alphabet, shifted_alphabet)\n\treturn text.translate(table)'"
write a python function for a string to swap the case of all letters.,"""\ndef swap_case(s) : \n\treturn ''.join(x for x in (i.lower() if i.isupper() else i.upper() for i in s))"""
write a python function to get symmetric difference between two sets from user.,"'\ndef symmetric_diff_sets() : \n\tM, m = input(), set(list(map(int, input().split())))\n\tN, n = input(), set(list(map(int, input().split())))\n\ts = sorted(list(m.difference(n)) + list(n.difference(m)))\n\tfor i in s : \n\t\tprint(i)'"
write a python function to check if given set is subset or not,"'\ndef check_subset() : \n\tfor _ in range(int(input())) : \n\t\tx, a, z, b = input(), set(input().split()), input(), set(input().split())\n\tprint(a.issubset(b))'"
"write a function to compress a given string. Suppose a character 'c' occurs consecutively X times in the string. Replace these consecutive occurrences of the character 'c' with  (X, c) in the string.","'\ndef compress(text) : \n\tfrom itertools import groupby\n\tfor k, g in groupby(text) : \n\t\tprint(""({}, {})"".format(len(list(g)), k), end="" "")'"
write a python function to count 'a's in the repetition of a given string 'n' times.,"""\ndef repeated_string(s, n) : \n\treturn s.count('a') * (n // len(s)) + s[ : n % len(s)].count('a')"""
"write a python function to find all the substrings of given string that contains 2 or more vowels. Also, these substrings must lie in between 2 consonants and should contain vowels only.","'\ndef find_substr() : \n\timport re\n\tv = ""aeiou""\n\tc = ""qwrtypsdfghjklzxcvbnm""\n\tm = re.findall(r""(?<=[%s])([%s]{2,})[%s]"" % (c, v, c), input(), flags=re.I)\n\tprint(\'\\n\'.join(m or [\'-1\']))'"
write a python function that given five positive integers and find the minimum and maximum values that can be calculated by summing exactly four of the five integers.,"""\ndef min_max() : \n\tnums = [int(x) for x in input().strip().split(' ')]\n\tprint(sum(nums) - max(nums), sum(nums) - min(nums))"""
"write a python function to find the number of (i, j) pairs where i<j and ar[i]+ar[j] is divisible by k in a data list","'\ndef divisible_sum_pairs(arr, k) : \n\tcount = 0\n\tn = len(arr)\n\tfor i in range(n - 1) : \n\t\tj = i + 1\n\t\twhile j < n : \n\t\t\tif ((arr[i] + arr[j]) % k) == 0 : \n\t\t\t\tcount += 1\n\t\t\tj += 1\n\treturn count\nimport math'"
Write a python Class to calculate area of a circle and print the vale for a radius,"'\nclass CircleArea : \n\tdef __init__(self, radius) : \n\t\tself.radius = radius\n\tdef area(self) : \n\t\treturn math.pi * self.radius * self.radius\nr = 2\nobj = CircleArea(r)\nprint(""Area of circle : "", obj.area())'"
Write a python function to count the number of Words in a Text File,"'\ndef check_words() : \n\tfname = input(""file name :  "")\n\tnum_words = 0\n\twith open(fname, \'r\') as f : \n\t\tfor line in f : \n\t\t\twords = line.split()\n\t\t\tnum_words += len(words)\n\tprint(""Number of words = "", num_words)'"
Write a python function to Count the Number of Lines in a Text File,"'\ndef check_lines() : \n\tfname = input(""file name :  "")\n\tnum_lines = 0\n\twith open(fname, \'r\') as f : \n\t\tfor line in f : \n\t\t\tnum_lines += 1\n\tprint(""Number of lines = "", num_lines)'"
Write a python function that Counts the Number of Blank Spaces in a Text File,"'\ndef count_blank_space() : \n\tfname = input(""file name : "")\n\tcount = 0\n\twith open(fname, \'r\') as f : \n\t\tfor line in f : \n\t\t\tcount += line.count(\' \')\n\treturn count'"
Write a python function to check if 2 strings are anagrams or not,"'\ndef anagram(s1, s2) : \n\tif sorted(s1) == sorted(s2) : \n\t\treturn True\n\telse : \n\t\treturn False'"
Write a python function to remove the duplicate items from a List and return the modified data list,'\ndef remove_duplicates(data) : \n\tc = Counter(data)\n\ts = set(data)\n\tfor item in s : \n\t\tcount = c.get(item)\n\t\twhile count > 1 : \n\t\t\tdata.pop(item)\n\t\t\tcount -= 1\n\treturn data'
write a python function to get the most common word in text,'\ndef most_common(text) : \n\tc = Counter(text)\n\treturn c.most_common(1)'
write a python function to do bitwise multiplication on a given bin number by given shifts,"'\ndef bit_mul(n, shift) : \n\treturn n << shift'"
write a python function for bitwise division with given number of shifts,"'\ndef bit_div(n, shift) : \n\treturn n >> shift'"
write a python function to get dot product between two lists of numbers,"'\ndef dot_product(a, b) : \n\treturn sum(e[0] * e[1] for e in zip(a, b))'"
write a python function to strip punctuations from a given string,"""\ndef strip_punctuations(s) : \n\treturn s.translate(str.maketrans('', '', string.punctuation))"""
write a python function that returns biggest character in a string,"'\nfrom functools import reduce\ndef biggest_char(string) : \n\tif not isinstance(string, str) : \n\t\traise TypeError\n\treturn reduce(lambda x, y :  x if ord(x) > ord(y) else y, string)'"
write a python function to Count the Number of Digits in a Number,"'\ndef count_digits() : \n\tn = int(input(""Enter number : ""))\n\tcount = 0\n\twhile n > 0 : \n\t\tcount = count + 1\n\t\tn = n // 10\n\treturn count'"
write a python function to count number of vowels in a string,"""\ndef count_vowels(text) : \n\tv = set('aeiou')\n\tfor i in v : \n\t\tprint(f'\\n {i} occurs {text.count(i)} times')"""
write a python function to generate SHA256 for given text,'\ndef get_sha256(text) : \n\timport hashlib\n\treturn hashlib.sha256(text).hexdigest()'
write a python function to check if SHA256 hashed value is valid for given data or not,"'\ndef check_sha256_hash(hashed, data) : \n\timport hashlib\n\treturn True if hashed == hashlib.sha256(data.encode()).hexdigest() else False'"
write a python function to get HTML code for a given URL,"'\ndef get_html(url=""http : //www.python.org"") : \n\timport urllib.request\n\tfp = urllib.request.urlopen(url)\n\tmybytes = fp.read()\n\tmystr = mybytes.decode(""utf8"")\n\tfp.close()\n\tprint(mystr)'"
write a python function with generator for an infinite sequence,'\ndef infinite_sequence() : \n\tn = 0\n\twhile True : \n\t\tyield n\n\t\tn += 1\nimport uuid'
write a python function to generate a Unique identifier across space and time in this cosmos.,'\ndef get_uuid() : \n\treturn uuid.uuid4()\nimport secrets'
write a python function to generate cryptographically strong pseudo-random data,"'\ndef get_cryptographically_secure_data(n=101) : \n\treturn secrets.token_bytes(n), secrets.token_hex(n)'"
Write a python Class to calculate area of a rectangle and print the area,"'\nclass rectangle() : \n\tdef __init__(self,breadth,length) : \n\t\tself.breadth=breadth\n\t\tself.length=length\n\tdef area(self) : \n\t\treturn self.breadth*self.length\na=6\nb=4\nobj=rectangle(a,b)\nprint(""Area of rectangle : "",obj.area())'"
Write a python Class to calculate area of a circle and print the vale for a radius,"'\nclass CircleArea() : \n\tdef __init__(self,radius) : \n\t\tself.radius=radius\n\tdef area(self) : \n\t\treturn 3.14 * self.radius * self.radius\na=6\nobj=CircleArea(a)\nprint(""Area of rectangle : "",obj.area())'"
Write a python Class to calculate Perimeter of a circle and print the vale for a radius,"'\nclass CirclePerimeter() : \n\tdef __init__(self,radius) : \n\t\tself.radius=radius\n\tdef perimeter(self) : \n\t\treturn 2 * 3.14 * self.radius\na=6\nobj=CirclePerimeter(a)\nprint(""Perimeter of rectangle : "",obj.perimeter())'"
Write a python program to Read and print the Contents of a File,"'\na=str(input(""Enter file name .txt extension : ""))\nfile2=open(a,\'r\')\nline=file2.readline()\nwhile(line!="""") : \n\tprint(line)\n\tline=file2.readline()\nfile2.close()'"
Write a python program to Count and print the Number of Words in a Text File,"'\nfname = input(""Enter file name :  "")\nnum_words = 0\nwith open(fname, \'r\') as f : \n\tfor line in f : \n\t\twords = line.split()\n\t\tnum_words += len(words)\nprint(""Number of words : "")\nprint(num_words)'"
Write a python program to Count the Number of Lines in a Text File,"'\nfname = input(""Enter file name :  "")\nnum_lines = 0\nwith open(fname, \'r\') as f : \n\tfor line in f : \n\t\tnum_lines += 1\nprint(""Number of lines : "")\nprint(num_lines)'"
Write a python function to Copy the Contents of One File into Another,"'\ndef copy(from_file, to_file) : \n\twith open(from_file) as f : \n\t\twith open(to_file, ""w"") as f1 : \n\t\t\tfor line in f : \n\t\t\t\tf1.write(line)'"
Write a python function that Counts the Number of Times a Certain Letter Appears in the Text File,"""\ndef count_letter(fname, l) : \n\tk = 0\n\twith open(fname, 'r') as f : \n\t\tfor line in f : \n\t\t\twords = line.split()\n\t\t\tfor i in words : \n\t\t\t\tfor letter in i : \n\t\t\t\t\tif(letter==l) : \n\t\t\t\t\t\tk=k+1\n\treturn k"""
Write a python function that Print all the Numbers Present in the Text File,"""\ndef print_number(fname) : \n\twith open(fname, 'r') as f : \n\t\tfor line in f : \n\t\t\twords = line.split()\n\t\t\tfor i in words : \n\t\t\t\tfor letter in i : \n\t\t\t\t\tif(letter.isdigit()) : \n\t\t\t\t\t\tprint(letter)"""
Write a python function that Counts the Number of Blank Spaces in a Text File,"""\ndef count_blank_space(fname) : \n\tk = 0\n\twith open(fname, 'r') as f : \n\t\tfor line in f : \n\t\t\twords = line.split()\n\t\t\tfor i in words : \n\t\t\t\tfor letter in i : \n\t\t\t\t\tif(letter.isspace) : \n\t\t\t\t\t\tk=k+1\n\treturn k"""
Write a python function that Capitalize the First Letter of Every Word in the File,"""\ndef capitalize(fname) : \n\twith open(fname, 'r') as f : \n\t\tfor line in f : \n\t\t\tl=line.title()\n\t\t\tprint(l)"""
Write a python function that prints the Contents of a File in Reverse Order,'\ndef reverse_content(filename) : \n\tfor line in reversed(list(open(filename))) : \n\t\tprint(line.rstrip())'
Write a python Program to Flatten and print a List,"'\na=[[1,[[2]],[[[3]]]],[[4],5]]\nflatten=lambda l :  sum(map(flatten,l),[]) if isinstance(l,list) else [l]\nprint(flatten(a))'"
Write a Python function to print the GSD of Two Numbers,"'\ndef gcd(a,b) : \n\tif(b==0) : \n\t\treturn a\n\telse : \n\t\treturn gcd(b,a%b)'"
Write a Python function to Find the Power of a Number Using Recursion,"'\ndef power(base,exp) : \n\tif(exp==1) : \n\t\treturn(base)\n\tif(exp!=1) : \n\t\treturn(base*power(base,exp-1))'"
Write a Python function to Find the Total Sum of a Nested List Using Recursion,'\ndef sum1(lst) : \n\ttotal = 0\n\tfor element in lst : \n\t\tif (type(element) == type([])) : \n\t\t\ttotal = total + sum1(element)\n\t\telse : \n\t\t\ttotal = total + element\n\treturn total'
Write a Python function to Count and print the Number of Vowels Present in a String using Sets,"'\ndef count_vowels(s) : \n\tcount = 0\n\tvowels = set(""aeiou"")\n\tfor letter in s : \n\t\tif letter in vowels : \n\t\t\tcount += 1\n\treturn count'"
Write a Python Program to prints Common Letters in Two Input Strings,"'\ns1=\'python\'\ns2=\'schoolofai\'\na=list(set(s1)&set(s2))\nprint(""The common letters are : "")\nfor i in a : \n\tprint(i)'"
Write a Python Program that Prints which Letters are in the First String but not in the Second,"'\ns1=\'python\'\ns2=\'schoolofai\'\na=list(set(s1)-set(s2))\nprint(""The letters are : "")\nfor i in a : \n\tprint(i)'"
Write a Python Program to Concatenate Two Dictionaries Into One,"'\ndef concat_dic(d1, d2) : \n\treturn d1.update(d2)'"
Write a Python Program to Multiply All the Items in a Dictionary,'\ndef mul_dict(d) : \n\ttot=1\n\tfor i in d : \t\n\t\ttot=tot*d[i]\n\treturn tot'
Write a Python Program to Remove the Given Key from a Dictionary,"'\ndef remove_item_dict(d, key) : \n\tif key in d :  \n\t\tdel d[key]\n\telse : \n\t\tprint(""Key not found!"")\n\t\texit(0)'"
Write a Python Program to Map Two Lists into a Dictionary,"'\ndef map_dict(keys, values) : \n\treturn dict(zip(keys,values))'"
Write a Python Program to Remove the nth Index Character from a Non-Empty String,"'\ndef remove(string, n) :   \n\t\t first = string[ : n]   \n\t\t last = string[n+1 : ]  \n\t\t return first + last'"
Write a Python Program to Detect if Two Strings are Anagrams,"'\ndef anagram_check(s1, s2) : \n\tif(sorted(s1)==sorted(s2)) : \n\t\treturn True\n\telse : \n\t\treturn False'"
Write a Python Program to Form a New String where the First Character and the Last Character have been Exchanged,'\ndef change(string) : \n\t\t return string[-1 : ] + string[1 : -1] + string[ : 1]'
Write a Python Program to Remove the Characters of Odd Index Values in a String,"'\ndef modify(string) :   \n\tfinal = """"   \n\tfor i in range(len(string)) :   \n\t\tif i % 2 == 0 :   \n\t\t\tfinal = final + string[i]  \n\treturn final'"
Write a Python Program to Count and print Number of Lowercase Characters in a String,"'\nstring=\'This is an Assignment\'\ncount=0\nfor i in string : \n\t\t if(i.islower()) : \n\t\t\tcount=count+1\nprint(""The number of lowercase characters is : "")\nprint(count)'"
Write a Python Program to Put Even and Odd elements in a List into Two Different Lists,"'\na=[2, 3, 8, 9, 2, 4, 6]\neven=[]\nodd=[]\nfor j in a : \n\tif(j%2==0) : \n\t\teven.append(j)\n\telse : \n\t\todd.append(j)\nprint(""The even list"",even)\nprint(""The odd list"",odd)'"
Write a Python Program to Sort the List According to the Second Element in Sublist,"""\na=[['A',34],['B',21],['C',26]]\nfor i in range(0,len(a)) : \n\tfor j in range(0,len(a)-i-1) : \n\t\tif(a[j][1]>a[j+1][1]) : \n\t\t\ttemp=a[j]\n\t\t\ta[j]=a[j+1]\n\t\t\ta[j+1]=temp"""
Write a Python Program to Find the Second Largest Number in a List Using Bubble Sort,"'\na=[2, 3, 8, 9, 2, 4, 6]\nfor i in range(0,len(a)) : \n\tfor j in range(0,len(a)-i-1) : \n\t\tif(a[j]>a[j+1]) : \n\t\t\ttemp=a[j]\n\t\t\ta[j]=a[j+1]\n\t\t\ta[j+1]=temp '"
Write a Python Program to Find the Intersection of Two Lists,"'\ndef main(alist, blist) : \n\tdef intersection(a, b) : \n\t\treturn list(set(a) & set(b))\n\treturn intersection(alist, blist)'"
Write a Python Program to Create a List of Tuples with the First Element as the Number and Second Element as the Square of the Number using list comprehension,"'\nl_range=2\nu_range=5\na=[(x,x**2) for x in range(l_range,u_range+1)]'"
Write a Python Program to print all Numbers in a Range which are Perfect Squares and Sum of all Digits in the Number is Less than 10,"'\nl=6\nu=9\na=[x for x in range(l,u+1) if (int(x**0.5))**2==x and sum(list(map(int,str(x))))<10]\nprint(a)'"
Write a Python Program to Swap the First and Last Value of a List,"'\na=[2, 3, 8, 9, 2, 4, 6]\nn = len(a)\ntemp=a[0]\na[0]=a[n-1]\na[n-1]=temp\nprint(""New list is : "")\nprint(a)'"
Write a Python Program to Remove and print the Duplicate Items from a List,"'\na=[2, 3, 8, 9, 2, 4, 6]\nb = set()\nunique = []\nfor x in a : \n\tif x not in b : \n\t\tunique.append(x)\n\t\tb.add(x)\nprint(""Non-duplicate items : "")\nprint(unique)'"
Write a Python Program to Read a List of Words and Return the Length of the Longest One,"'\na=[\'the\', \'tsai\', \'python\']\nmax1=len(a[0])\ntemp=a[0]\nfor i in a : \n\tif(len(i)>max1) : \n\t\tmax1=len(i)\n\t\ttemp=i\nprint(""The word with the longest length is : "")\nprint(temp)'"
Write a Python function to Check Whether a Given Year is a Leap Year,'\ndef leapyear_check(year) : \n\tif(year%4==0 and year%100!=0 or year%400==0) : \n\t\treturn True\n\telse : \n\t\treturn False'
Write a Python Program to print Prime Factors of an Integer,"'\nn=24\nprint(""Factors are : "")\ni=1\nwhile(i<=n) : \n\tk=0\n\tif(n%i==0) : \n\t\tj=1\n\t\twhile(j<=i) : \n\t\t\tif(i%j==0) : \n\t\t\t\tk=k+1\n\t\t\tj=j+1\n\t\tif(k==2) : \n\t\t\tprint(i)\n\ti=i+1'"
Write a Python Program to print all the Divisors of an Integer,"'\nn=60\nprint(""The divisors of the number are : "")\nfor i in range(1,n+1) : \n\tif(n%i==0) : \n\t\tprint(i)'"
Write a Python Program to Check if a Number is an Armstrong Number,"'\ndef amstrong_check(n) : \n\ta=list(map(int,str(n)))\n\tb=list(map(lambda x : x**3,a))\n\tif(sum(b)==n) : \n\t\treturn True\n\telse : \n\t\treturn False'"
Write a Python Program to Check if a Number is a Perfect Number,"'\ndef perfect_no_check(n) : \n\tsum1 = 0\n\tfor i in range(1, n) : \n\t\tif(n % i == 0) : \n\t\t\tsum1 = sum1 + i\n\tif (sum1 == n) : \n\t\treturn True\n\telse : \n\t\treturn False'"
Write a Python Program to Check if a Number is a Strong Number,'\ndef strong_no_check(num) : \n\tsum1=0\n\ttemp=num\n\twhile(num) : \n\t\ti=1\n\t\tf=1\n\t\tr=num%10\n\t\twhile(i<=r) : \n\t\t\tf=f*i\n\t\t\ti=i+1\n\t\tsum1=sum1+f\n\t\tnum=num//10\n\tif(sum1==temp) : \n\t\treturn True\n\telse : \n\t\treturn False'
Write a Python Program to Check If Two Numbers are Amicable Numbers,"'\ndef amicable_no_check(x, y) : \n\tsum1=0\n\tsum2=0\n\tfor i in range(1,x) : \n\t\tif x%i==0 : \n\t\t\tsum1+=i\n\tfor j in range(1,y) : \n\t\tif y%j==0 : \n\t\t\tsum2+=j\n\tif(sum1==y and sum2==x) : \n\t\treturn True\n\telse : \n\t\treturn False'"
Write a Python Program to Check if a Number is a Prime Number,"'\ndef prime_no_check(a) : \n\tk=0\n\tfor i in range(2,a//2+1) : \n\t\tif(a%i==0) : \n\t\t\tk=k+1\n\tif(k<=0) : \n\t\treturn True\n\telse : \n\t\treturn False'"
Write a Python Program to print the Sum of First N Natural Numbers,"'\nn=7\nsum1 = 0\nwhile(n > 0) : \n\tsum1=sum1+n\n\tn=n-1\nprint(""The sum of first n natural numbers is"",sum1)'"
Write a Python Program to Print all Pythagorean Triplets in the Range,"'\nlimit=10\nc=0\nm=2\nwhile(c<limit) : \n\tfor n in range(1,m+1) : \n\t\ta=m*m-n*n\n\t\tb=2*m*n\n\t\tc=m*m+n*n\n\t\tif(c>limit) : \n\t\t\tbreak\n\t\tif(a==0 or b==0 or c==0) : \n\t\t\tbreak\n\t\tprint(a,b,c)\n\tm=m+1'"
Write a Python Program to print the Number of Times a Particular Number Occurs in a List,"'\na=[2, 3, 8, 9, 2, 4, 6]\nk=0\nnum=int(input(""Enter the number to be counted : ""))\nfor j in a : \n\tif(j==num) : \n\t\tk=k+1\nprint(""Number of times"",num,""appears is"",k)'"
Write a Python Program to test and print Collatz Conjecture for a Given Number,"""\ndef collatz(n) : \n\twhile n > 1 : \n\t\tprint(n, end=' ')\n\t\tif (n % 2) : \n\t\t\t# n is odd\n\t\t\tn = 3*n + 1\n\t\telse : \n\t\t\t# n is even\n\t\t\tn = n//2\n\tprint(1, end='')"""
Write a Python function to Count Set Bits in a Number,'\ndef count_set_bits(n) : \n\tcount = 0\n\twhile n : \n\t\tn &= n - 1\n\t\tcount += 1\n\treturn count'
Write a Python Program to Convert Gray Code to Binary,"'\ndef gray_to_binary(n) : \n\t""""""Convert Gray codeword to binary and return it.""""""\n\tn = int(n, 2)\n\tmask = n\n\twhile mask != 0 : \n\t\tmask >>= 1\n\t\tn ^= mask\n\treturn bin(n)[2 : ]'"
Write a Python Program to Convert Binary to Gray Code,"'\ndef binary_to_gray(n) : \n\t""""""Convert Binary to Gray codeword and return it.""""""\n\tn = int(n, 2)\n\tn ^= (n >> 1)\n\treturn bin(n)[2 : ]'"
Write a Python Program to print the Reverse a Given Number,"'\nn=1023\nrev=0\nwhile(n>0) : \n\tdig=n%10\n\trev=rev*10+dig\n\tn=n//10\nprint(""Reverse of the number : "",rev)'"
Write a Python Program to Accept Three Digits and Print all Possible Combinations from the Digits,"'\na=2\nb=9\nc=5\nd=[]\nd.append(a)\nd.append(b)\nd.append(c)\nfor i in range(0,3) : \n\tfor j in range(0,3) : \n\t\tfor k in range(0,3) : \n\t\t\tif(i!=j&j!=k&k!=i) : \n\t\t\t\tprint(d[i],d[j],d[k])'"
Write a Python function to Print an Identity Matrix,"'\ndef print_identity_matrix(n) : \n\tfor i in range(0,n) : \n\t\tfor j in range(0,n) : \n\t\t\tif(i==j) : \n\t\t\t\tprint(""1"",sep="" "",end="" "")\n\t\t\telse : \n\t\t\t\tprint(""0"",sep="" "",end="" "")\n\t\tprint()'"
Write a Python Program to print a list of fibonacci series for a given no using closer,"""\ndef fib() : \n\tcache = {1 : 1, 2 : 1}\n\tdef calc_fib(n) : \n\t\tif n not in cache : \n\t\t\tprint(f'Calculating fib({n})')\n\t\t\tcache[n] = calc_fib(n - 1) + calc_fib(n - 2)\n\t\treturn cache[n]\n\treturn calc_fib"""
Write a Python Program to print a list of fibonacci series for a given no using class,"""\nclass Fib : \n\tdef __init__(self) : \n\t\tself.cache = {1 : 1, 2 : 1}\n\tdef fib(self, n) : \n\t\tif n not in self.cache : \n\t\t\tprint(f'Calculating fib({n})')\n\t\t\tself.cache[n] = self.fib(n-1) + self.fib(n-2)\n\t\treturn self.cache[n]"""
Write a Python function to calculate factorial of a given no using closer,"""\ndef fact() : \n\tcache = {0 : 1, 1 : 1}\n\tdef calc_fib(n) : \n\t\tif n not in cache : \n\t\t\tprint(f'Calculating fact({n})')\n\t\t\tcache[n] = calc_fib(n - 1) * n\n\t\treturn cache[n]\n\treturn calc_fib"""
Write a Python function to calculate factorial of a given no using class,"'\nclass Fact : \n\tdef __init__(self) : \n\t\tself.cache = {0 : 1, 1 : 1}\n\tdef fact(self, n) : \n\t\tif n not in self.cache : \n\t\t\tself.cache[n] = self.fact(n-1) * n\n\t\treturn self.cache[n]'"
Write a Python function to calculate dot product of two given sequence,"'\ndef dot_product(a, b) : \n\treturn sum( e[0]*e[1] for e in zip(a, b))'"
Write a Python function to Find the Sum of Sine Series,"'\nimport math\ndef sin(x,n) : \n\tsine = 0\n\tfor i in range(n) : \n\t\tsign = (-1)**i\n\t\tpi=22/7\n\t\ty=x*(pi/180)\n\t\tsine = sine + ((y**(2.0*i+1))/math.factorial(2*i+1))*sign\n\treturn sine'"
Write a Python function to Find the Sum of Cosine Series,"'\ndef cosine(x,n) : \n\tcosx = 1\n\tsign = -1\n\tfor i in range(2, n, 2) : \n\t\tpi=22/7\n\t\ty=x*(pi/180)\n\t\tcosx = cosx + (sign*(y**i))/math.factorial(i)\n\t\tsign = -sign\n\treturn cosx'"
Write a Python function to strip vowels from a string,"'\ndef vowel_stripping(string) : \n\t\'\'\'This function takes a string as an input strips out vowels and returns stripted out string\'\'\'\n\treturn """".join([x for x in string if x not in(\'a\',\'e\',\'i\',\'o\',\'u\')])'"
Write a Python function that calculate interior angle of a equilateral polygon,'\ndef interior_angle(no_of_sides) : \n\treturn (no_of_sides - 2) * 180 / no_of_sides'
Write a Python function that calculate side length of a equilateral polygon,"'\nimport math\ndef side_length(no_of_sides, circumradius) : \n\treturn 2 * circumradius * math.sin(math.pi / no_of_sides)'"
Write a Python function that calculate area of a equilateral polygon,"'\nimport math\ndef area(no_of_sides, circumradius) : \n\tside_length = 2 * circumradius * math.sin(math.pi / no_of_sides)\n\tapothem = circumradius * math.cos(math.pi / no_of_sides)\n\treturn no_of_sides / 2 * side_length * apothem'"
write a python function to print every alternate number in the user provided list,'\ndef print_alternate_numbers(list1) : \n\tprint(list1[ :  : 2])'
write a python function  to convert a list of string list to a string list,"""\ndef convert_to_string_list(list_of_string_list) : \n\tres = [''.join(str(b) for b in eval(a)) for a in list_of_string_list] \n\treturn res"""
write a python program to clear a list,"'\ngiven_list - = [6, 0, 4, 1] \ngiven_list.clear()'"
write a python program to sort and print a list,"""\ngiven_list - = [6, 0, 4, 1] \nsorted_list = sorted(given_list)\nprint(f'sorted list is {sorted_list}')"""
Write Python Program to print if a Number is Odd or Even,"'\nnum = 102\nif (num % 2) == 0 : \n\tprint(f""{num} is Even"")\nelse : \n\tprint(f""{num} is Odd"")'"
Write a python function to Compute LCM of two input number,"'\ndef compute_lcm(x, y) : \n\tif x > y : \n\t\tgreater = x\n\telse : \n\t\tgreater = y\n\twhile(True) : \n\t\tif((greater % x == 0) and (greater % y == 0)) : \n\t\t\tlcm = greater\n\t\t\tbreak\n\t\tgreater += 1\n\treturn lcm'"
write a python Program to print the ASCII value of the given character,"'\nc = \'p\'\nprint(""The ASCII value of \'"" + c + ""\' is"", ord(c))'"
write Python Program to print the Sum of 10 Natural Numbers,"'\nnum = 10\nif num < 0 : \n\tprint(""Enter a positive number"")\nelse : \n\tsum = 0\n\t# use while loop to iterate until zero\n\twhile(num > 0) : \n\t\tsum += num\n\t\tnum -= 1\n\tprint(""The sum is"", sum)'"
write  a Python Program to Swap Two Variables and print them,"""\nx = 5\ny = 10\ntemp = x\nx = y\ny = temp\nprint('The value of x after swapping :  {}'.format(x))\nprint('The value of y after swapping :  {}'.format(y))"""
Write a Python Program to Convert Kilometers to Miles,"""\nkilometers = 10000\nconv_fac = 0.621371\nmiles = kilometers * conv_fac\nprint('%0.2f kilometers is equal to %0.2f miles' %(kilometers,miles))"""
Write Python Program to Convert Celsius To Fahrenheit,"""\ncelsius = 37.5\nfahrenheit = (celsius * 1.8) + 32\nprint('%0.1f degree Celsius is equal to %0.1f degree Fahrenheit' %(celsius,fahrenheit))"""
Write Python Program to print the Square Root of a number,"""\nnum = 8 \nnum_sqrt = num ** 0.5\nprint('The square root of %0.3f is %0.3f'%(num ,num_sqrt))"""
Write python function to count number of 1s in binary representation of an integer.,'\ndef  countSetBits(n) :  \n\tcount = 0\n\twhile (n) :  \n\t\tcount += n & 1\n\t\tn >>= 1\n\treturn count '
Write Python function to check if a string is palindrome or not,'\ndef isPalindrome(s) : \n\treturn s == s[ :  : -1]'
Write a python program to reverse a string,"'\ns = ""i like this program very much""\nwords = s.split(\' \')\nstring =[]\nfor word in words : \n\tstring.insert(0, word)\nprint(""Reversed String : "")\nprint("" "".join(string))'"
Write a python function to merge two Dictionaries,"'\ndef Merge(dict1, dict2) : \n\treturn(dict2.update(dict1))'"
Write a python program to print sum of number digits in List,"'\ntest_list = [12, 67, 98, 34] \nres = [] \nfor ele in test_list :  \n\tsum = 0\n\tfor digit in str(ele) :  \n\t\tsum += int(digit) \n\tres.append(sum) \nprint (""List Integer Summation  :  "" + str(res)) '"
Write a Python function to count number of lists in a list of lists,'\ndef countList(lst) :  \n\tcount = 0\n\tfor el in lst :  \n\t\tif type(el)== type([]) :  \n\t\t\tcount+= 1          \n\treturn count '
Write a Python program to print largest element in an array,"""\narr = [10, 324, 45, 90, 9808] \nprint(f'the largest element in the array is {max(arr)}')"""
Write a Python function to interchange first and last elements in a list,'\ndef swapList(newList) :  \n\tsize = len(newList) \n\ttemp = newList[0] \n\tnewList[0] = newList[size - 1] \n\tnewList[size - 1] = temp \n\treturn newList'
Write a Python function to multiply all values in the list,'\ndef multiplyList(myList)  : \n\tresult = 1\n\tfor x in myList : \n\t\t\tresult = result * x \n\treturn result '
Write a Python program to Multiply two list and print the resultant list,"'\ntest_list1 = [1, 3, 4, 6, 8] \ntest_list2 = [4, 5, 6, 2, 10] \nres_list = [] \nfor i in range(0, len(test_list1)) :  \n\tres_list.append(test_list1[i] * test_list2[i])\t\nprint (""Resultant list is  :  "" + str(res_list)) \t'"
write a Python program to print positive numbers in a list,"'\nlist1 = [11, -21, 0, 45, 66, -93] \nfor num in list1 :  \n\tif num >= 0 :  \n\t\tprint(num, end = "" "") '"
Write a Python program to print negative numbers in a list,"'\nlist1 = [11, -21, 0, 45, 66, -93] \nfor num in list1 :  \n\tif num < 0 :  \n\t\tprint(num, end = "" "") \t'"
Write a python program to Count occurrences of given element in a list,"'\ndef countX(lst, x) :  \n\treturn lst.count(x)'"
Write a python function to remove numeric digits from given string,"""\ndef removedigits(ini_string) : \n\tres = ''.join([i for i in ini_string if not i.isdigit()]) \n\treturn res"""
Write a Python program to print the number words in a sentence,"'\ntest_string = ""India is my country""\nres = len(test_string.split()) \nprint (f""The number of words in string are  :  {res}"") '"
Write Python function to check if a string has at least one letter and one number,'\ndef checkString(str) :  \n\tflag_l = False\n\tflag_n = False\n\tfor i in str :  \n\t\tif i.isalpha() :  \n\t\t\tflag_l = True\n\t\tif i.isdigit() :  \n\t\t\tflag_n = True\n\treturn flag_l and flag_n '
Write a python function to Check whether triangle is valid or not if three points are given,"'\ndef checkTriangle(x1, y1, x2, y2, x3, y3) :  \n\ta = (x1 * (y2 - y3) + x2 * (y3 - y1) + x3 * (y1 - y2)) \n\tif a == 0 :  \n\t\treturn False \n\telse :  \n\t\treturn True'"
Write a python function to Check whether triangle is valid or not if sides are given,"'\ndef checkValidity(a, b, c) :   \n\tif (a + b <= c) or (a + c <= b) or (b + c <= a)  :  \n\t\treturn False\n\telse :  \n\t\treturn True '"
Write a python function to extract odd length words in String,'\ndef findoddlenthwords(test_str) : \n\tres = [] \n\tfor ele in test_str.split() :  \n\t\tif len(ele) % 2  :  \n\t\t\tres.append(ele) \n\treturn res'
Write a python function to extract even length words in String,'\ndef findevenlenthwords(test_str) : \n\tres = [] \n\tfor ele in test_str.split() :  \n\t\tif len(ele) % 2 == 0 :  \n\t\t\tres.append(ele)  \n\treturn res'
Write a python program to print Words lengths in String,"'\ntest_string = ""India is my country""\nres = list(map(len, test_string.split())) \nprint (""The list of words lengths is  :  "" + str(res)) '"
Write a python program to check if a number is positive or negative,"'\nnum = 15\nif num > 0 : \n\tprint(f""Positive number"")\nelif num == 0 : \n\tprint(f""Zero"")\nelse : \n\tprint(f""Negative number"")'"
write a Python Program to Display the multiplication Table of given number,"""\nnum = 12\nfor i in range(1, 11) : \n\tprint(num, 'x', i, '=', num*i)\t"""
write a Python function to Convert Decimal to Binary,"""\ndef convertToBinary(n) : \n\tif n > 1 : \n\t\tconvertToBinary(n//2)\n\tprint(n % 2,end = '')"""
write a Python Program to Count and print the Number of Each Vowel in the input string,"""\nvowels = 'aeiou'\nip_str = 'India is my country'\nip_str = ip_str.casefold()\ncount = {}.fromkeys(vowels,0)\nfor char in ip_str : \n\tif char in count : \n\t\tcount[char] += 1\nprint(count)"""
write a Python Program to Check Whether a String is Palindrome or Not,"'\nmy_str = \'aIbohPhoBiA\'\nmy_str = my_str.casefold()\nrev_str = reversed(my_str)\nif list(my_str) == list(rev_str) : \n\tprint(""The string is a palindrome."")\nelse : \n\tprint(""The string is not a palindrome."")'"
Write Python Program to Remove Punctuations From a String and print the cleaned string.,"'\npunctuations = \'\'\'!()-[]{}; : \'""\\,<>./?@#$%^&*_~\'\'\'\nmy_str = ""Hello!!!, he said ---and went.""\nno_punct = """"\nfor char in my_str : \n\tif char not in punctuations : \n\t\tno_punct = no_punct + char\nprint(no_punct)   '"
Write a Python program to remove and print every third number from a list of numbers until the list becomes empty.,"'\nnum = [10,20,30,40,50,60,70,80,90]\nlen_list = len(num)\nposition = 3 - 1\nidx = 0\nwhile len_list > 0 : \n\tidx = (idx+position) % len_list\n\tprint(num.pop(idx))\n\tlen_list-=1 '"
Write a Python function to compute simple interest,"'\ndef simple_interest(p,t,r) :  \n\tsi = (p * t * r)/100\n\treturn si '"
Write a Python function to compute compound interest,"'\ndef compound_interest(principle, rate, time) :   \n\tAmount = principle * (pow((1 + rate / 100), time)) \n\tCI = Amount - principle \n\treturn CI'"
Write a Python function for Program to find area of a circle,'\ndef findArea(r) :  \n\tPI = 3.142\n\treturn PI * (r*r)'
Write a python function to find Area Of Rectangle,"'\ndef areaRectangle(a, b) :  \n\treturn (a * b) '"
Write a python function to find perimeter Of Rectangle,"'\ndef perimeterRectangle(a, b) :  \n\treturn (2 * (a + b))'"
Write a python program to print the Sum of digits of a number,"'\nn = 12345\nq = 0\nwhile(n>0) : \n\tr=n%10\n\tq=q+r\n\tn=n//10\nprint(""Sum of digits is :  ""+str(q))\t'"
Write a python program to sort alphabetically the words form a string provided by the user,"""\ndef sortwords(my_str) : \n\twords = my_str.split()\n\twords.sort()\n\treturn ' '.join(words)"""
"Write a python function to replace all the spaces in an entered string with a hyphen ""-""","'\ndef replacetext(string) : \n\tstring = string.replace("" "", ""-"")\n\treturn string'"
write a python program to rotate a list 10 times and print it,"'\nlist = [11,22,33,44,55,66,77,88,99]\nn = 10\nfinalList = []\nfor i in range(0, N) : \n\tfinalList.append(list[(i+d)%N])\nprint(finalList)'"
write a Python Program to Add two binary numbers and print the sum,"""\nnum1 = '00001'\nnum2 = '10001'\nsum = bin(int(num1,2) + int(num2,2))\nprint(sum)"""
write a Python Program to Calculate and print the Average of Numbers in a Given List,"'\na= [11,22,33,44,55,66,77,88,99]\navg=sum(a)/len(a)\nprint(""Average of elements in the list"",round(avg,2))'"
write a Python Program to check if a number is a Perfect number and print the result,"'\nn = 7\nsum1 = 0\nfor i in range(1, n) : \n\tif(n % i == 0) : \n\t\tsum1 = sum1 + i\nif (sum1 == n) : \n\tprint(""The number is a Perfect number!"")\nelse : \n\tprint(""The number is not a Perfect number!"")'"
write a Python function to convert binary to Gray codeword,"'\ndef binary_to_gray(n) : \n\tn = int(n, 2)\n\tn ^= (n >> 1)\n\treturn bin(n)[2 : ]'"
write a Python function to convert Gray code to binary,"'\ndef gray_to_binary(n) : \n\tn = int(n, 2) # convert to int\n\tmask = n\n\twhile mask != 0 : \n\t\tmask >>= 1\n\t\tn ^= mask\n\treturn bin(n)[2 : ]'"
write a Python Program to Replace all Occurrences of ‘a’ with $ in a String,"""\ndef replacestring(txt) : \n\treturn txt.replace('A','$')"""
write a python program to Print Quotient and Remainder of two numbers,"'\na = 15\nb = 4\nquotient=a//b\nremainder=a%b\nprint(""Quotient is : "",quotient)\nprint(""Remainder is : "",remainder)'"
write a python program to print the Area of a Triangle Given All Three Sides,"'\na = 15\nb = 9\nc = 7\ns=(a+b+c)/2\narea=(s*(s-a)*(s-b)*(s-c)) ** 0.5\nprint(""Area of the triangle is :  "",round(area,2))'"
write a Python Program to print all the Divisors of an Integer,"'\nn = 20\nprint(""The divisors of the number are : "")\nfor i in range(1,n+1) : \n\tif(n%i==0) : \n\t\tprint(i)\t\t'"
Write a python program to print dimension in centimeter to inches,"'\ncm = 50\ninches=0.394*cm\nprint(""The dimension in inches "",round(inches,2))'"
Write a python program to print dimension in centimeter to feet,"'\ncm = 50\nfeet=0.0328*cm\nprint(""The dimension in feet "",round(feet,2))'"
write Python Program to print the Union of two Lists,"""\nl1 = [11,22,33,44]\nl2 = [55,66,77,88]\nunion = list(set().union(l1,l2)) \nprint('The Union of two lists is : ',union)"""
write a python function to Check if a Substring is Present in a Given String,"'\ndef checksubstring(string,sub_string) : \n\tif(string.find(sub_str)==-1) : \n\t\t return False\n\telse : \n\t\treturn True'"
Write a Python Program to Multiply All the Items in a Dictionary and print the result,"""\nd={'A' : 10,'B' : 10,'C' : 239}\ntot=1\nfor i in d :     \n\ttot=tot*d[i]\nprint(tot)"""
Write Python Program to print Common Letters in Two Input Strings,"'\ns1=""Trump was the American President""\ns2=""Who is the American President now?""\na=list(set(s1)&set(s2))\nprint(""The common letters are : "")\nfor i in a : \n\tprint(i)'"
Write a Python function to Find Whether a Number is a Power of Two,'\ndef is_power_of_two(n) : \n\tif n <= 0 : \n\t\treturn False\n\telse : \n\t\treturn n & (n - 1) == 0'
Write a Python Program to Search the Number of Times a Particular Number Occurs in a List,"'\na = [2,3,2,3,4,4,5,5,6,6,6]\nk=0\nnum=6\nfor j in a : \n\tif(j==num) : \n\t\tk=k+1\nprint(""Number of times"",num,""appears is"",k)'"
write Python function to Clear the Rightmost Set Bit of a Number,'\ndef clear_rightmost_set_bit(n) : \n\treturn n & (n - 1)'
write a Python function to Find HCF of two numbers,"'\ndef hcf(x, y) :   \n\tif x > y :   \n\t\tsmaller = y  \n\telse :   \n\t\tsmaller = x  \n\tfor i in range(1,smaller + 1) :   \n\t\tif((x % i == 0) and (y % i == 0)) :   \n\t\t\thcf = i  \n\treturn hcf  '"
Write a Python Program to Transpose a Matrix  and print result.,"'\nX = [[1,2],  \n\t\t [4,5],  \n\t\t[7,8]]  \nResult = [[0,0,0],  \n\t\t\t\t[0,0,0]]  \nfor i in range(len(X)) :   \n\tfor j in range(len(X[0])) :   \n\t\tresult[j][i] = X[i][j]  \nfor r in result :   \n\tprint(r)'"
Write a Python function to Find the Intersection of Two Lists,"'\ndef intersection(a, b) : \n\treturn list(set(a) & set(b))'"
write a Python function to Sort a List According to the Length of the Elements.,'\ndef sortlistwithlen(list) : \n\tlist.sort(key=len)\n\treturn list'
Write a Python Program to Print an Identity Matrix,"'\nn = 3\nfor i in range(0,n) : \n\tfor j in range(0,n) : \n\t\tif(i==j) : \n\t\t\tprint(""1"",sep="" "",end="" "")\n\t\telse : \n\t\t\tprint(""0"",sep="" "",end="" "") \t'"
Write a Python Program to print Those Numbers which are Divisible by 7 and Multiple of 5 in a Given Range of Numbers,"'\nlower = 1\nupper = 100\nfor i in range (lower,upper+1) : \n\tif(i%7==0 and i%5==0) : \n\t\tprint(i)'"
write Python function to find the Length of the Longest One element in the list,'\ndef findlongest(list) : \n\tmax1=len(list[0])\n\ttemp=list[0]\n\tfor i in list : \n\t\tif(len(i)>max1) : \n\t\t   max1=len(i)\n\t\t   temp=i\n\treturn temp'
write a Python function to Detect if Two Strings are Anagrams,"'\ndef check_if_anagram(s1,s2) : \n\tif(sorted(s1)==sorted(s2)) : \n\t\t  return True\n\telse : \n\t\t  return False'"
Write Python Program to print the Length of a String Without Using a Library Function,"'\nstring= ""United States of America""\ncount=0\nfor i in string : \n\t\t count=count+1\nprint(""Length of the string is : "")\nprint(count)'"
Write Python Program to Find the Area of a Rectangle Using Classes,"'\nclass rectangle() : \n\tdef __init__(self,breadth,length) : \n\t\tself.breadth=breadth\n\t\tself.length=length\n\tdef area(self) : \n\t\treturn self.breadth*self.length\na=15\nb=10\nobj=rectangle(a,b)\nprint(""Area of rectangle : "",obj.area())'"
Write a Python Program to Find the Second Largest Number in a List,"'\na= [11,22,33,44,55,66,77,88,99]\na.sort()\nprint(""Second largest element is : "",a[n-2])'"
Write a Python Program to Count Number of Lowercase Characters in a String and print the result,"'\nstring=""SriNAtH""\ncount=0\nfor i in string : \n\t\t if(i.islower()) : \n\t\t\tcount=count+1\nprint(""The number of lowercase characters is : "")\nprint(count)'"
write a Python Program to Sum All the Items in a Dictionary and print the result,"'\nd={\'A\' : 100,\'B\' : 540,\'C\' : 239}\nprint(""Total sum of values in the dictionary : "")\nprint(sum(d.values()))'"
write Python function to Count the Frequency of Words Appearing in a String Using a Dictionary,"'\ndef countword(test_string) : \n\tl=[]\n\tl=test_string.split()\n\twordfreq=[l.count(p) for p in l]\n\treturn(dict(zip(l,wordfreq)))'"
write Python Program to Read the Contents of a File,"'\na=str(input(""Enter the name of the file with .txt extension : ""))\nfile2=open(a,\'r\')\nline=file2.readline()\nwhile(line!="""") : \n\tprint(line)\n\tline=file2.readline()\nfile2.close()\t'"
write Python Program to Count the Number of Lines in a Text File,"'\nfname = input(""Enter file name :  "")\nnum_lines = 0\nwith open(fname, \'r\') as f : \n\tfor line in f : \n\t\tnum_lines += 1\nprint(""Number of lines : "")\nprint(num_lines)'"
write Python Program to Count the Number of Words in a Text File,"'\nfname = input(""Enter file name :  "")\nnum_words = 0\nwith open(fname, \'r\') as f : \n\tfor line in f : \n\t\twords = line.split()\n\t\tnum_words += len(words)\nprint(""Number of words : "")\nprint(num_words)'"
write a Python Program to Read a File and Capitalize the First Letter of Every Word in the File,"'\nfname = input(""Enter file name :  "")\nwith open(fname, \'r\') as f : \n\tfor line in f : \n\t\tl=line.title()\n\t\tprint(l)'"
write Python Program to Read the Contents of a File in Reverse Order,"'\nfilename=input(""Enter file name :  "")\nfor line in reversed(list(open(filename))) : \n\tprint(line.rstrip())'"
write a Python function to Remove the Given Key from a Dictionary,"'\ndef deletekey(dict,key)\n\tif key in dict :  \n\t\tdel dict[key]\n\treturn dict'"
Write a python function to remove an item from list,"'\ndef deleteelement(list, item) : \n\tlist.remove(item)\n\treturn list'"
write a python function to Check if a given string is binary string or not,"""\ndef check(string)  :   \n\ts = {'0', '1'} \n\tif s == p or p == {'0'} or p == {'1'} :  \n\t\treturn True \n\telse  :  \n\t\treturn False"""
write a python function to compute minimum number of rotations required to get the same string,"'\ndef findRotations(str) :  \n\ttmp = str + str\n\tn = len(str)   \n\tfor i in range(1, n + 1) :  \n\t\tsubstring = tmp[i :  i+n] \n\t\tif (str == substring) :  \n\t\t\treturn i \n\treturn n '"
write a Python function to check if count of divisors is even or odd,"'\ndef NumOfDivisor(n) :  \n\tif n < 1 :  \n\t\treturn\n\troot_n = n**0.5\n\tif root_n**2 == n :  \n\t\tprint(""Odd"") \n\telse :  \n\t\tprint(""Even"") '"
Write a program to merge two python dictionaries and print merged dictionary,"""\nd1 = {'a' :  100, 'b' :  200}\nd2 = {'x' :  300, 'y' :  200}\nd = d1.copy()\nd.update(d2)\nprint(d)"""
write a python function to concatenate two integers like string concatenation and return concatenated number as integer,"'\ndef concat_two_numbers(num1, num2) : \n\tcombined_num = str(num1) + str(num2)\n\treturn int(combined_num)'"
"With a given integral number n, write a program to generate a dictionary that contains (i, i*i*i) such that is an integral number between 1 and n (both included). and then the program should print the dictionary.","'\nn = 8\nd = dict()\nfor i in range(1,n+1) : \n\td[i] = i*i*i\nprint(d)'"
Write a program which accepts a sequence of comma-separated numbers from console and generate a list and a tuple which contains every number.,"'\nvalues=input()\nl=values.split("","")\nt=tuple(l)\nprint(l)\nprint(t)'"
Write a Python function that takes a sequence of numbers and determines whether all the numbers are different from each other,'\ndef test_distinct(data) : \n\tif len(data) == len(set(data)) : \n\treturn True\n\telse : \n\treturn False'
"Write a Python function to find the number of notes (Sample of notes: 10, 20, 50, 100, 200 and 500 ) against a given amount.","'\ndef no_notes(a) : \n\tQ = [500, 200, 100, 50, 20, 10, 5, 2, 1]\n\tx = 0\n\tfor i in range(9) : \n\tq = Q[i]\n\tx += int(a / q)\n\ta = int(a % q)\n\tif a > 0 : \n\tx = -1\n\treturn x'"
Write a Python function to find the number of zeros at the end of a factorial of a given positive number.,'\ndef factendzero(n) : \n\tx = n // 5\n\ty = x \n\twhile x > 0 : \n\tx /= 5\n\ty += int(x)\n\treturn y'
Write a Python function to remove leading zeros from an IP address,"""\nimport re\nregex = '\\.[0]*'\ndef remove_leading_zeros(ip) : \n\tmodified_ip = re.sub(regex, '.', ip)\n\treturn modified_ip"""
Write a Python function to return binary value of a given integer,'\ndef int_to_bin(a) : \n\treturn bin(a)'
Write a Python function to return octal value of a given integer,'\ndef int_to_oct(a) : \n\treturn oct(a)'
Write a Python function to return hexadecimal value of a given integer,'\ndef int_to_hex(a) : \n\treturn hex(a)'
Write a Python program to typecast given input to integer,"'\nnum = int(input(""Input a value :  ""))\nprint(num)'"
Write a Python program to typecast given input to float,"'\nnum = float(input(""Input a value :  ""))\nprint(num)'"
Write a Python program to check/test multiple variables against a value,"'\na = 10\nb = 20\nc = 30\nif 10 in {a, b, c} : \n\tprint(""True"")\nelse : \n\tprint(""False"")\t'"
"Write a Python class that will initiate a number, input a number and print the number","'\nclass Number : \n\tdef __init__(self, num) : \n\t\tself.num = num\n\tdef inputNum(self) : \n\t\tself.num = int(input(""Enter an integer number :  ""))\n\tdef printNum(self) : \n\t\tprint(self.num)'"
"Write a Python function to find the simple interest in Python when principle amount, rate of interest and time is given","'\ndef simple_interest(p,r,t) : \n\tsi = (p*r*t)/100\n\treturn si'"
"Write a Python function to find the compound interest in Python when principle amount, rate of interest and time is given","'\ndef compound_interest(p,r,t) : \n\tci = p * (pow((1 + r / 100), t)) \n\treturn ci'"
Write a Python function to check whether a person is eligible for voting or not based on their age,"'\ndef vote_eligibility(age) : \n\tif age>=18 : \n\t    status=""Eligible""\n\telse : \n\t    status=""Not Eligible""\n\treturn status'"
Write a Python function to find the BMI for given weight and height of a person,"'\ndef bmi_calculator(height, weight) : \n\tbmi = weight/(height**2)\n\treturn bmi'"
Write a Python function to find the maximum ODD number from a given list,'\ndef odd_max_checker(list1) : \n\tmaxnum = 0\n\tfor num in list1 : \n\t    if num%2 != 0 : \n\t        if num > maxnum : \n\t            maxnum = num\n\treturn maxnum'
Write a Python function to find the maximum EVEN number from a given list,'\ndef even_max_checker(list1) : \n\tmaxnum = 0\n\tfor num in list1 : \n\t    if num%2 == 0 : \n\t        if num > maxnum : \n\t            maxnum = num\n\treturn maxnum'
Write a Python function to print the root of the quadratic equation,"""\ndef quadratic_root(A,B,C) : \n\timport math\n\td=((B**2)-4*A*C)\n\tif d>=0 : \n\t    s=(-B+(d)**0.5)/(2*A)\n\t    p=(-B-(d)**0.5)/(2*A)\n\t    print(math.floor(s),math.floor(p))\n\telse : \n\t    print('The roots are imaginary')"""
Write a Python program to print the calendar of any given year,'\nimport calendar\nyear=2020\nprint(calendar.calendar(year))'
Write a Python function to print whether the given Date is valid or not,"'\ndef date_validator(d,m,y) : \n\timport datetime \n\ttry : \n\t\ts=datetime.date(y,m,d)\n\t\tprint(""Date is valid."")\n\texcept ValueError :  \n\t\tprint(""Date is invalid."")'"
Write a Python function to find the N-th number which is both square and cube,'\ndef nth_sq_and_cube(N) : \n\tR = N**6\n\treturn R'
Write a Python function to check whether a number is a power of another number or not,"""\ndef power_checker(a,b) : \n\timport math\n\ts=math.log(a,b)\n\tp=round(s)\n\tif (b**p)==a : \n\t    return f'{a} is the power of {b}.'\n\telse : \n\t    return f'{a} is NOT the power of {b}.'"""
Write a Python program to print the list of all keywords,"'\nimport keyword\nprint(""Python keywords are..."")\nprint(keyword.kwlist)'"
Write a Python function to find the intersection of two arrays,"'\ndef array_intersection(A,B) : \n\tinter=list(set(A)&set(B))\n\treturn inter'"
Write a Python function to find the union of two arrays,"'\ndef array_union(A,B) : \n\tunion=list(set(A)|set(B))\n\treturn union'"
Write a Python program to print shape of an array/ matrix,"'\nimport numpy as np\nA = np.array([[1,2,3],[2,3,5],[3,6,8],[323,623,823]])\nprint(""Shape of the matrix A :  "", A.shape)'"
Write a Python program to print rank of an array/ matrix,"'\nimport numpy as np\nA = np.array([[4,5,8], [7,1,4], [5,5,5], [2,3,6]])\nprint(""Rank of the matrix A :  "", np.linalg.matrix_rank(A))'"
Write a Python program to print trace of an array/ matrix,"'\nimport numpy as np\nA = np.array([[4,5,8], [5,5,5], [2,3,6]])\nprint(""Trace of the matrix A :  "", np.trace(A))'"
Write a Python program to print euclidean distance between two array/ vectors,"""\nimport numpy as np\na = np.array([78, 84, 87, 91, 76])\nb = np.array([92, 83, 91, 79, 89])\ndist = np.linalg.norm(a-b)\nprint('Differnce in performance between A and B  :  ', dist)"""
Write a Python function to print number with commas as thousands separators,"'\ndef formattedNumber(n) : \n\treturn (""{ : ,}"".format(n))'"
Write a Python program to find the total number of uppercase and lowercase letters in a given string,"""\nstr1='TestStringInCamelCase'\nno_of_ucase, no_of_lcase = 0,0\nfor c in str1 : \n\tif c>='A' and c<='Z' : \n\t\tno_of_ucase += 1\n\tif c>='a' and c<='z' : \n\t\tno_of_lcase += 1\nprint(no_of_lcase)\nprint(no_of_ucase)"""
Write a Python program to find the total number of letters and digits in a given string,"""\nstr1='TestStringwith123456789'\nno_of_letters, no_of_digits = 0,0\nfor c in str1 : \n\tno_of_letters += c.isalpha()\n\tno_of_digits += c.isnumeric()\nprint(no_of_letters)\nprint(no_of_digits)"""
Write a Python function to count occurrence of a word in the given text,"'\ndef text_searcher(text, word) : \n\tcount = 0\n\tfor w in text.split() : \n\t\tif w == word : \n\t\t\tcount = count + 1\n\treturn count'"
Write a Python function to capitalizes the first letter of each word in a string,'\ndef capitalize(text) : \n\treturn text.title()'
Write a Python function to remove falsy values from a list,"'\ndef newlist(lst) : \n\treturn list(filter(None, lst))'"
Write a Python function to to find the sum of all digits of a given integer,'\ndef sum_of_digits(num) : \n\tif num == 0 : \n\treturn 0\n\telse : \n\treturn num % 10 + sum_of_digits(int(num / 10))'
Write a Python function to check all elements of a list are the same or not,'\ndef check_equal(a) : \n\treturn a[1 : ] == a[ : -1]'
Write a Python program to print Square root of matrix elements,"'\nmat1 = np.array([[10,20,30],[40,50,60],[70,80,90]])\nprint(np.sqrt(mat1))'"
Write a Python function that returns the integer obtained by reversing the digits of the given integer,'\ndef reverse(n) : \n\ts=str(n) \n\tp=s[ :  : -1]\n\treturn p '
Write a Python program to convert the index of a series into a column of a dataframe,"""\nimport pandas as pd\nimport numpy as np\nmylist = list('abcedfghijklmnopqrstuvwxyz')\nmyarr = np.arange(26)\nmydict = dict(zip(mylist, myarr))\nser = pd.Series(mydict)\ndf = ser.to_frame().reset_index()\nprint(df.head())"""
Write a Python program to keep only top 2 most frequent values as it is and replace everything else as ‘Other’ in a series,"""\nimport pandas as pd\nimport numpy as np\nnp.random.RandomState(100)\nser = pd.Series(np.random.randint(1, 5, [12]))\nser[~ser.isin(ser.value_counts().index[ : 2])] = 'Other'\nprint(ser)"""
Write a Python program to create a TimeSeries starting ‘2000-01-01’ and 10 weekends (saturdays) after that having random numbers as values,"""\nimport pandas as pd\nimport numpy as np\nser = pd.Series(np.random.randint(1,10,10), pd.date_range('2000-01-01', periods=10, freq='W-SAT'))\nprint(ser)"""
Write a Python program to fill an intermittent time series so all missing dates show up with values of previous non-missing date,"""\nimport pandas as pd\nimport numpy as np\nser = pd.Series([1,10,3, np.nan], index=pd.to_datetime(['2000-01-01', '2000-01-03', '2000-01-06', '2000-01-08']))\nprint(ser.resample('D').ffill())"""
Write a Python program to fill an intermittent time series so all missing dates show up with values of next non-missing date,"""\nimport pandas as pd\nimport numpy as np\nser = pd.Series([1,10,3, np.nan], index=pd.to_datetime(['2000-01-01', '2000-01-03', '2000-01-06', '2000-01-08']))\nprint(ser.resample('D').bfill())"""
Write a Python program to create one-hot encodings of a categorical variable,"""\nimport pandas as pd\nimport numpy as np\ndf = pd.DataFrame(np.arange(25).reshape(5,-1), columns=list('abcde'))\ndf_onehot = pd.concat([pd.get_dummies(df['a']), df[list('bcde')]], axis=1)\nprint(df_onehot)"""
Write a Python program to compute the autocorrelations for first 10 lags of a numeric series,"'\nimport pandas as pd\nimport numpy as np\nser = pd.Series(np.arange(20) + np.random.normal(1, 10, 20))\nautocorrelations = [ser.autocorr(i).round(2) for i in range(11)]\nprint(autocorrelations[1 : ])'"
Write a Python program to find the positions of numbers that are multiples of 3 from a series,"'\nimport pandas as pd\nimport numpy as np\nser = pd.Series(np.random.randint(1, 10, 7))\nprint(np.argwhere(ser.values % 3 == 0))'"
"Write a Python function that Given a string, display only those characters which are present at an even index number","'\ndef printEveIndexChar(str) : \n\tfor i in range(0, len(str)-1, 2) : \n\tprint(""index["",i,""]"", str[i] )'"
"Write a Python function that Given a string and an integer number n, remove characters from a string starting from zero up to n and return a new string","'\ndef removeChars(str, n) : \n\treturn str[n : ]'"
"Write a Python function that Given a list of numbers, return True if first and last number of a list is same",'\ndef isFirst_And_Last_Same(numberList) : \n\tfirstElement = numberList[0]\n\tlastElement = numberList[-1]\n\tif (firstElement == lastElement) : \n\t\treturn True\n\telse : \n\t\treturn False'
"Write a Python function that Given a list of numbers, Iterate it and print only those numbers which are divisible of 5",'\ndef findDivisible(numberList) : \n\tfor num in numberList : \n\t\tif (num % 5 == 0) : \n\t\t\tprint(num)'
Write a Python function that Given a two list of numbers create a new list such that new list should contain only odd numbers from the first list and even numbers from the second list,"'\ndef mergeList(list1, list2) : \n\tthirdList = []\n\tfor num in list1 : \n\t\tif (num % 2 != 0) : \n\t\t\tthirdList.append(num)\n\tfor num in list2 : \n\t\tif (num % 2 == 0) : \n\t\t\tthirdList.append(num)\n\treturn thirdList'"
"Write a Python program to return a set of all elements in either A or B, but not both","'\nset1 = {10, 20, 30, 40, 50}\nset2 = {30, 40, 50, 60, 70}\nprint(set1.symmetric_difference(set2))'"
Write a Python program to Subtract a week ( 7 days) from a given date in Python,"'\nfrom datetime import datetime, timedelta\ngiven_date = datetime(2020, 2, 25)\ndays_to_subtract = 7\nres_date = given_date - timedelta(days=days_to_subtract)\nprint(res_date)'"
Write a Python program to Find the day of week of a given date,"""\nfrom datetime import datetime\ngiven_date = datetime(2020, 7, 26)\nprint(given_date.strftime('%A'))"""
Write a Python program to Convert following datetime instance into string format,"'\nfrom datetime import datetime\ngiven_date = datetime(2020, 2, 25)\nstring_date = given_date.strftime(""%Y-%m-%d %H : %M : %S"")\nprint(string_date)'"
Write a Python program to convert two equal length sets to dictionary,"""\nkeys = {'Ten', 'Twenty', 'Thirty'}\nvalues = {10, 20, 30}\nsampleDict = dict(zip(keys, values))\nprint(sampleDict)"""
Write a program which will find all such numbers which are divisible by 7 but are not a multiple of 5 between 2000 and 3200 (both included).,"'\nl=[]\nfor i in range(2000, 3201) : \n\tif (i%7==0) and (i%5!=0) : \n\t\tl.append(str(i))'"
Write a program that will determine the object type,"""\ndef typeIdentifier(object) : \n\treturn f'object type  :  {type(object)}'"""
Write a Python class which has at least two methods: getString: to get a string from console input printString: to print the string in upper case.,"'\nclass IOString(object) : \n\tdef __init__(self) : \n\t\tself.s = """"\n\tdef getString(self) : \n\t\tself.s = input()\n\tdef printString(self) : \n\t\tprint(self.s.upper())\nstrObj = IOString()\nstrObj.getString()\nstrObj.printString()'"
Write a program that will determine the memory usage by python process,"'\nimport os, psutil\nprint(psutil.Process(os.getpid()).memory_info().rss / 1024 ** 2)'"
Write a function that will provide the ascii value of a character,"""\ndef charToASCII(chr) : \n\treturn f'ASCII value of {chr} is :  {ord(chr)}'"""
Write a function to reverse a string,'\ndef revStr(inp) : \n\tinp = inp[ :  : -1]\n\treturn inp'
Write a function to determine the bits used by any number,"""\ndef totalBits(n) : \n\treturn f'total number of bits used in {n} is  :  {len(bin(n)[2 :  ])}'"""
write a function to find the sum of Sine series,"'\nimport math\ndef sin(x,n) : \n\tsine = 0\n\tfor i in range(n) : \n\t\tsign = (-1)**i\n\t\tpi=22/7\n\t\ty=x*(pi/180)\n\t\tsine = sine + ((y**(2.0*i+1))/math.factorial(2*i+1))*sign\n\treturn sine'"
Write a function to determine whether a given number is even or odd recursively,"'\ndef check(n) : \n\tif (n < 2) : \n\t\treturn (n % 2 == 0)\n\treturn (check(n - 2))\nn=int(input(""Enter number : ""))\nif(check(n)==True) : \n\t\t print(""Number is even!"")\nelse : \n\t\t print(""Number is odd!"")'"
Write a program to swap two variables inplace,"'\na,b = b,a'"
Write a program that prints the words in a comma-separated sequence after sorting them alphabetically.,"""\nitems=[x for x in input().split(',')]\nitems.sort()\nprint(','.join(items))"""
Write a function that takes a base and a power and finds the power of the base using recursion.,"'\ndef power(base,exp) : \n\tif(exp==1) : \n\t\treturn(base)\n\tif(exp!=1) : \n\t\treturn(base*power(base,exp-1))\nbase=int(input(""Enter base :  ""))\nexp=int(input(""Enter exponential value :  ""))\nprint(""Result : "",power(base,exp))'"
Write a function that will convert a string into camelCase,"'\nfrom re import sub\ndef camelCase(string) : \n\tstring = sub(r""(_|-)+"", "" "", string).title().replace("" "", """")\n\treturn string[0].lower() + string[1 : ]'"
Write a function to remove empty list from a list using list comprehension,'\ndef removeEmptyList(li) : \n\tres = [ele for ele in li if ele != []] \n\treturn res'
Write a function to Find the size of a Tuple in Python without garbage values,"""\nTuple = (10,20)\ndef sizeOfTuple(tup) : \n\treturn f'Size of Tuple :  {str(Tuple.__sizeof__())} bytes' """
"Write a function, which will find all such numbers between 1000 to 9999 that each digit of the number is an even number.","'\nvalues = []\nfor i in range(1000, 9999) : \n\ts = str(i)\n\tif (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0) : \n\t\t values.append(s)'"
Write a function that finds a list is homogeneous,"'\ndef homoList(li) : \n\tres = True\n\tfor i in li :  \n\t\t if not isinstance(i, type(li[0])) :  \n\t\t\tres = False \n\t\t\tbreak\n\treturn res'"
Write a function to remove a given date type elements from a list.,"'\ndef removeDataType(li,dType) : \n\tres = []\n\tfor i in li : \n\t\tif not isinstance(i, dType) : \n\t\t\tres.append(i)\n\treturn res'"
"Write a python function to find out the occurence of ""i"" element before first ""j"" in the list","'\ndef firstOccurence(arr, i,j) : \n\tres = 0\n\tfor k in arr : \t\t\t\t \n\t\t if k == j :  \n\t\t\tbreak\n\t\t if k == i :  \n\t\t\tres += 1\n\treturn res'"
Write a program to check whether a file/path/direcory exists or not,"'\nfile_path = ""path/here""\nimport os.path\nos.path.exists(file_path)'"
Write a program to merge two python dictionaries,"""\nx={'key1' : 'val1','key2' : 'val2'}\ny={'key3' : 'val3','key4' : 'val4'}\nz = {**x, **y} # z = x | y  """
Write a program to convert dictionary into JSON,"'\nimport json\ndata = {""key1""  :  ""value1"", ""key2""  :  ""value2""}\njsonData = json.dumps(data)\nprint(jsonData)'"
Write a function to Check whether following json is valid or invalid,'\nimport json\ndef validateJSON(jsonData) : \n\ttry : \n\t\tjson.loads(jsonData)\n\texcept ValueError as err : \n\t\treturn False\n\treturn True'
Write a function to remove and print every third number from a list of numbers until the list becomes empty,'\ndef remove_nums(int_list) : \n\tposition = 3 - 1 \n\tidx = 0\n\tlen_list = (len(int_list))\n\twhile len_list>0 : \n\tidx = (position+idx)%len_list\n\tprint(int_list.pop(idx))\n\tlen_list -= 1'
Write a program to get a list of locally installed Python modules,"'\nimport pkg_resources\ninstalled_packages = pkg_resources.working_set\ninstalled_packages_list = sorted([""%s==%s"" % (i.key, i.version)\n\t\tfor i in installed_packages])\nfor m in installed_packages_list : \n\tprint(m)'"
Write a function to add two positive integers without using the '+' operator,"'\ndef add_without_plus_operator(a, b) : \n\twhile b != 0 : \n\t\tdata = a & b\n\t\ta = a ^ b\n\t\tb = data << 1\n\treturn a'"
Write a program to find the median among three given number,'\nx=10\ny=20\nz=30\nif y < x and x < z : \n\tprint(x)\nelif z < x and x < y : \n\tprint(x)\nelif z < y and y < x : \n\tprint(y)\nelif x < y and y < z : \n\tprint(y)\nelif y < z and z < x : \n\tprint(z)\t\nelif x < z and z < y : \n\tprint(z)'
Write a program to compute the number of digits in multiplication of two given integers,"'\na,b = 312, 410\nprint(len(str(a*b)))'"
Write a function to return the area of a rhombus,"'\ndef area(d1, a) :  \n\td2 = (4*(a**2) - d1**2)**0.5\n\tarea = 0.5 * d1 * d2 \n\treturn(area) '"
"Write a function that Given a number, find the most significant bit number which is set bit and which is in power of two",'\ndef setBitNumber(n) :  \n\tif (n == 0) :  \n\t\treturn 0\n\tmsb = 0 \n\tn = int(n / 2) \n\twhile (n > 0) :  \n\t\tn = int(n / 2) \n\t\tmsb += 1\n\treturn (1 << msb) '
Write a function to calculate volume of Triangular Pyramid,"'\ndef volumeTriangular(a, b, h) :  \n\treturn (0.1666) * a * b * h '"
Write a function to calculate volume of Square Pyramid,"'\ndef volumeSquare(b, h) :  \n\treturn (0.33) * b * b * h '"
Write a function to calculate Volume of Pentagonal Pyramid,"'\ndef volumePentagonal(a, b, h) :  \n\treturn (0.83) * a * b * h '"
Write a function to calculate Volume of Hexagonal Pyramid,"'\ndef volumeHexagonal(a, b, h) :  \n\treturn a * b * h'"
Write a Python program to check a list is empty or not,"'\nl = []\nif not l : \nprint(""List is empty"")'"
Write a Python program to remove duplicates from a list.,"'\na = [10,20,30,20,10,50,60,40,80,50,40]\ndup_items = set()\nuniq_items = []\nfor x in a : \nif x not in dup_items : \nuniq_items.append(x)\ndup_items.add(x)\nprint(dup_items)'"
Write a Python function that takes two lists and returns True if they have at least one common member,"'\ndef common_data(list1, list2) : \nresult = False\nfor x in list1 : \nfor y in list2 : \nif x == y : \nresult = True\nreturn result\nprint(common_data([1,2,3,4,5], [5,6,7,8,9]))'"
Write a Python program to get the difference between the two lists,"'\nlist1 = [1, 2, 3, 4]\nlist2 = [1, 2]\nprint(list(set(list1) - set(list2)))'"
Write a Python program to find the second smallest number in a list,"""\ndef second_smallest(numbers) : \na1, a2 = float('inf'), float('inf')\nfor x in numbers : \nif x <= a1 : \na1, a2 = x, a1\nelif x < a2 : \na2 = x\nreturn a2\nprint(second_smallest([1, 2, -8, -2, 0]))"""
Write a Python program to find the second largest number in a list.,"""\ndef second_largest(numbers) : \ncount = 0\nn1 = n2 = float('-inf')\nfor x in numbers : \ncount += 1\nif x > n2 : \nif x >= n1 : \nn1, n2 = x, n1\nelse : \nn2 = x\nreturn n2 if count >= 2 else None\nprint(second_largest([1, 2, -8, -2, 0]))"""
Write a Python program to get the frequency of the elements in a list,"'\nimport collections\nmy_list = [10,10,10,10,20,20,20,20,40,40,50,50,30]\nprint(""Original List  :  "",my_list)\nctr = collections.Counter(my_list)\nprint(""Frequency of the elements in the List  :  "",ctr)'"
Write a Python program to convert a list of multiple integers into a single integer,"'\nL = [11, 33, 50]\nx = int("""".join(map(str, L)))\nprint(""Single Integer :  "",x)'"
Write a Python program to check if all dictionaries in a list are empty or not.,"'\nmy_list = [{},{},{}]\nmy_list1 = [{1,2},{},{}]\nprint(all(not d for d in my_list))\nprint(all(not d for d in my_list1))'"
Write a Python program to count the number of characters (character frequency) in a string,"""\ndef char_frequency(str1) : \ndict = {}\nfor n in str1 : \nkeys = dict.keys()\nif n in keys : \ndict[n] += 1\nelse : \ndict[n] = 1\nreturn dict\nprint(char_frequency('google.com'))"""
Write a python program to replace the first character occurence in the later part of the string,"""\ndef change_char(str1) : \nchar = str1[0]\nlength = len(str1)\nstr1 = str1.replace(char, '$')\nstr1 = char + str1[1 : ]\nreturn str1\nprint(change_char('restart'))"""
Write a Python function that takes a list of words and returns the longest one,"'\ndef find_longest_word(words_list) : \nword_len = []\nfor n in words_list : \nword_len.append((len(n), n))\nword_len.sort()\nreturn word_len[-1][1]\nprint(find_longest_word([""PHP"", ""python"", ""zekelabs""]))'"
Write a Python program to count the occurrences of each word in a given sentence,"'\ndef find_longest_word(words_list) : \nword_len = []\nfor n in words_list : \nword_len.append((len(n), n))\nword_len.sort()\nreturn word_len[-1][1]\nprint(find_longest_word([""PHP"", ""python"", ""zekelabs""]))'"
Write a Python function to convert a given string to all uppercase if it contains at least 2 uppercase characters in the first 4 characters.,"""\ndef to_uppercase(str1) : \nnum_upper = 0\nfor letter in str1[ : 4] : \nif letter.upper() == letter : \nnum_upper += 1\nif num_upper >= 2 : \nreturn str1.upper()\nreturn str1\nprint(to_uppercase('PyThon'))"""
Write a Python program to count and display the vowels of a given text,"'\ndef vowel(text) : \nvowels = ""aeiuoAEIOU""\nprint(len([letter for letter in text if letter in vowels]))\nprint([letter for letter in text if letter in vowels])\nvowel(\'zekelabs\')'"
"Write a Python script to generate and print a dictionary that contains a number (between 1 and n) in the form (x, x*x)","'\nn=int(input(""Input a number :  ""))\nd = dict()\nfor x in range(1,n+1) : \nd[x]=x*x\nprint(d)'"
Write a Python program to convert a list into a nested dictionary of keys.,"'\nnum_list = [1, 2, 3, 4]\nnew_dict = current = {}\nfor name in num_list : \ncurrent[name] = {}\ncurrent = current[name]\nprint(new_dict)'"
Write a Python program to sort a list alphabetically in a dictionary.,"""\nnum = {'n1' :  [2, 3, 1], 'n2' :  [5, 1, 2], 'n3' :  [3, 2, 4]}\nsorted_dict = {x :  sorted(y) for x, y in num.items()}\nprint(sorted_dict)"""
Write a Python program to match key values in two dictionaries.,"""\nx = {'key1' :  1, 'key2' :  3, 'key3' :  2}\ny = {'key1' :  1, 'key2' :  2}\nfor (key, value) in set(x.items()) & set(y.items()) : \nprint('%s :  %s is present in both x and y' % (key, value))"""
Write a Python program to count the elements in a list until an element is a tuple,"'\nnum = [10,20,30,(10,20),40]\nctr = 0\nfor n in num : \nif isinstance(n, tuple) : \nbreak\nctr += 1\nprint(ctr)'"
Write a Python program to convert a tuple to a string.,"""\ntup = ('e', 'x', 'e', 'r', 'c', 'i', 's', 'e', 's')\nstr = ''.join(tup)\nprint(str)"""
Write a Python program to find the repeated items of a tuple,"'\ntuplex = 2, 4, 5, 6, 2, 3, 4, 4, 7\ncount = tuplex.count(4)\nprint(count)'"
Write a Python program to convert a tuple to a dictionary.,"'\ntuplex = ((2, ""w""),(3, ""r""))\nprint(dict((y, x) for x, y in tuplex))'"
Write a Python program to sort a tuple by its float element.,"""\nprice = [('item1', '12.20'), ('item2', '15.10'), ('item3', '24.5')]\nprint( sorted(price, key=lambda x :  float(x[1]), reverse=True))"""
Write a Python program to add member(s) in a set,"'\ncolor_set = set()\ncolor_set.add(""Red"")\ncolor_set.update([""Blue"", ""Green""])\nprint(color_set)'"
Write a Python program to create a symmetric difference,"'\nsetx = set([""apple"", ""mango""])\nsety = set([""mango"", ""orange""])\nsetc = setx ^ sety\nprint(setc)'"
Write a Python program that prints all the numbers from 0 to 6 except 3 and 6,"'\nfor x in range(6) : \nif (x == 3 or x==6) : \ncontinue\nprint(x,end=\' \')\nprint(""\\n"")'"
Write a Python program to get the Fibonacci series between 0 to 50.,"'\nx,y=0,1\nwhile y<50 : \nprint(y)\nx,y = y,x+y'"
Write a Python program to find numbers between 100 and 400 (both included) where each digit of a number is an even number. The numbers obtained should be printed in a comma-separated sequence,"'\nitems = []\nfor i in range(100, 401) : \ns = str(i)\nif (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) : \nitems.append(s)\nprint( "","".join(items'"
Write a Python program to create the multiplication table (from 1 to 10) of a number.,"'\nn = int(input(""Input a number :  ""))\nfor i in range(1,11) : \nprint(n,\'x\',i,\'=\',n*i)'"
Write a Python function to find the Max of three numbers.,"'\ndef max_of_two( x, y ) : \nif x > y : \nreturn x\nreturn y\ndef max_of_three( x, y, z ) : \nreturn max_of_two( x, max_of_two( y, z ) )\nprint(max_of_three(3, 6, -5))'"
Write a Python function to sum all the numbers in a list,"'\ndef sum(numbers) : \ntotal = 0\nfor x in numbers : \ntotal += x\nreturn total\nprint(sum((8, 2, 3, 0, 7)))'"
Write a Python function to multiply all the numbers in a list,"'\ndef multiply(numbers) : \ntotal = 1\nfor x in numbers : \ntotal *= x\nreturn total\nprint(multiply((8, 2, 3, -1, 7)))'"
Write a Python function that takes a list and returns a new list with unique elements of the first list,"'\ndef unique_list(l) : \nx = []\nfor a in l : \nif a not in x : \nx.append(a)\nreturn x\nprint(unique_list([1,2,3,3,3,3,4,5]))'"
Write a Python program to print the even numbers from a given list,"'\ndef is_even_num(l) : \nenum = []\nfor n in l : \nif n % 2 == 0 : \nenum.append(n)\nreturn enum\nprint(is_even_num([1, 2, 3, 4, 5, 6, 7, 8, 9]))'"
Write a Python function that checks whether a passed string is palindrome or not,"""\ndef isPalindrome(string) : \nleft_pos = 0\nright_pos = len(string) - 1\nwhile right_pos >= left_pos : \nif not string[left_pos] == string[right_pos] : \nreturn False\nleft_pos += 1\nright_pos -= 1\nreturn True\nprint(isPalindrome('aza'))"""
Write a Python program to access a function inside a function,'\ndef test(a) : \ndef add(b) : \nnonlocal a\na += 1\nreturn a+b\nreturn add\nfunc= test(4)\nprint(func(4))'
Write a Python program to detect the number of local variables declared in a function.,"'\ndef abc() : \nx = 1\ny = 2\nstr1= ""w3resource""\nprint(abc.__code__.co_nlocals)'"
"Write a Python program to check number either positive , negative or zero","'\nnum = int (input (""Enter Integer Number :  ""))\nif num == 0 : \nprint (""Zero Entered"")\nelif num > 0 : \nprint (""Positive Number Entered"")\nelif num < 0 : \nprint (""Negative Number Entered"")'"
Write a python program to Sum of n positive Integer,"'\nn = int (input (""Enter Value of n :  ""))\nsum = 0\nx = 0\nwhile x != n+1 :  #because we need to include n in sum\nsum += x\nx+=1\nprint(""Sum of n positive Integer till {} is {}"".format(n,sum))'"
Write a python program to digit sum of a number,"'\nDigits = input(""Enter a number :  "")\nsum = int(Digits[0])\nnumber = Digits[0]\nfor i in Digits[1 :  : ] : \nsum+= int(i)\nnumber +="" + {}"".format(i)\nprint(""Sum of {} is {}"".format(number,sum))'"
Write a python program to convert decimal to binary,"'\nDecimal = input(""Enter Number :  "")\nnum = int(Decimal)\nBinary =""""\nwhile num>=1 : \ni = num%2\nnum = num//2\nBinary +=str(i)\nprint (""Binary Equivalent of {} is {}"".format(Decimal,Binary[ :  : -1]))'"
Write a python function to compute 5/0 using try except,"'\ntry : \nprint(""Division = {}"".format(5/0))\nexcept ZeroDivisionError : \nprint (""5 cannot be divided by O"")'"
Write a python program to Accept the String and print the words composed of digits only,"'\nText = input (""Enter Text :  "")\nDigits = """"\nfor i in Text : \nif i.isnumeric() : \nDigits +=i+"" ""\nprint(""Digits used in given strings are :  {}"".format(Digits))'"
Write a python program to program to compute 1/2+2/3+3/4+...+n/n+1 with a given n input by console (n>0).,"'\nnum = int (input (""Enter Number :  ""))\nsum = 0\nfor i in range(num+1) : \nsum += float(i/(i+1))\nprint (""Sum :  { : .2f}"".format(sum))'"
Write a python program to program to compute: f(n)=f(n-1)+100 when n>0 and f(0)=1,"'\ndef f(n) : \nif n == 0  : \nreturn 0\nelse : \nreturn f(n-1)+100\nn = int(input(""Enter Number :  ""))\nprint(""f(n-1)+100 = "", f(n))'"
"Write a python program to define a function with a generator which can iterate the numbers, which are divisible by 7, between a given range 0 and n.","'\ndef Generator(n) : \nfor i in range(n+1) : \nif i%7 == 0 : \nyield i\nn = int(input(""Enter Number :  ""))\nfor i in Generator(n) : \nprint(i,end = "" "")'"
Write a python program to make a recursive function to get the sum,'\ndef rec(n) : \nif n == 0 : \nreturn n\nreturn rec(n-1) + n\nn = int(input())\nsum = rec(n)\nprint(sum)'
Write a python program to count the frequency of letters of the string and print the letters in descending order of frequency.,"'\nword = input()\ndct = {}\nfor i in word : \ndct[i] = dct.get(i,0) + 1\ndct = sorted(dct.items(),key=lambda x :  (-x[1],x[0]))\nfor i in dct : \nprint(i[0],i[1]'"
Write a python program using lambda funtion to square a number,'\nsquare2 = lambda num :  num * num'
Write a python program to uppercase strings using lambda and map,"'\npeople = [""Darcy"", ""Christina"", ""Diana""]\npeeps = list(map(lambda name :  name.upper(), people))\nprint(peeps)'"
"Write a python program to filter names not starting with ""a""","""\nnames = ['austin', 'penny', 'anthony', 'rihana', 'billy', 'angel']\na_names = list(filter(lambda name :  name[0] == 'a', names))\nprint(a_names)"""
Write a python program to return dict with {student:highest score} USING MAP+LAMBDA,"""\nmidterms = [80, 91, 78]\nfinals = [98, 89, 53]\nstudents = ['dan', 'ang', 'kate']\nfinal_grades = dict(zip(students,map(lambda pair :  max(pair),zip(midterms, finals))))"""
Write a python function to sum variable number of arguments,'\ndef sum_all(*args) : \ntotal = 0\nfor num in args : \ntotal += num\nreturn total'
Write a python program using kwargs,"'\ndef fav_colors(**kwargs) : \n\'\'\' kwargs comes as a dictionary \'\'\'\nprint(kwargs)\nfor person, color in kwargs.items() : \nprint(f""{person}\'s favorite color is {color}"")\nfav_colors(sriju=""red"", faizu=""yellow"", kabir=""black"")'"
Write a python program to print even length words in a string,"'\ndef printWords(s) : \ns = s.split(\' \')\nfor word in s : \nif len(word)%2==0 : \nprint(word)\ns = ""This is a python language""\nprintWords(s)'"
Write a python program which can compute the factorial of a given number.,'\nef fact(x) : \nif x == 0 : \nreturn 1\nreturn x * fact(x - 1)\nx=int(raw_input())\nprint (fact(x))'
"Write a python program, which will find all such numbers between 1000 and 3000 (both included) such that each digit of the number is an even number.The numbers obtained should be printed in a comma-separated sequence on a single line.","'\nalues = []\nfor i in range(1000, 3001) : \ns = str(i)\nif (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0) : \nvalues.append(s)\nprint ("","".join(values))'"
Write a python program that accepts a sentence and calculate the number of letters and digits.,"'\ns = raw_input()\nd={""DIGITS"" : 0, ""LETTERS"" : 0}\nfor c in s : \nif c.isdigit() : \nd[""DIGITS""]+=1\nelif c.isalpha() : \nd[""LETTERS""]+=1\nelse : \npass\nprint (""LETTERS"", d[""LETTERS""])\nprint (""DIGITS"", d[""DIGITS""])'"
Write a function to compute 5/0 and use try/except to catch the exceptions.,"'\ndef throws() : \nreturn 5/0\ntry : \nthrows()\nexcept ZeroDivisionError : \nprint (""division by zero!"")\nexcept Exception, err : \nprint (\'Caught an exception\')\nfinally : \nprint (\'In finally block for cleanup\')'"
"Write a python program to print the list after removing the 0th, 2nd, 4th,6th numbers in [12,24,35,70,88,120,155].","'\nli = [12,24,35,70,88,120,155]\nli = [x for (i,x) in enumerate(li) if i%2!=0]\nprint(li)'"
Write a python program for selection sort,"'\nfor i in range(len(A)) : \nmin_idx = i\nfor j in range(i+1, len(A)) : \nif A[min_idx] > A[j] : \nmin_idx = j\nA[i], A[min_idx] = A[min_idx], A[i]'"
Write a python program for implementation of Bubble Sort,"'\ndef bubbleSort(arr) : \nn = len(arr)\nfor i in range(n-1) : \nfor j in range(0, n-i-1) : \nif arr[j] > arr[j+1]  : \narr[j], arr[j+1] = arr[j+1], arr[j]\narr = [64, 34, 25, 12, 22, 11, 90]\nbubbleSort(arr)'"
Write a python program to check if a number is an Armstrong number.,"'\nn=int(input(""Enter any number :  ""))\na=list(map(int,str(n)))\nb=list(map(lambda x : x**3,a))\nif(sum(b)==n) : \nprint(""The number is an armstrong number. "")\nelse : \nprint(""The number isn\'t an arsmtrong number. "")'"
Write a python program to check if a number is a Perfect number.,"'\nn = int(input(""Enter any number :  ""))\nsum1 = 0\nfor i in range(1, n) : \nif(n % i == 0) : \nsum1 = sum1 + i\nif (sum1 == n) : \nprint(""The number is a Perfect number!"")\nelse : \nprint(""The number is not a Perfect number!"")'"
Write a python to find LCM of two numbers,"'\na=int(input(""Enter the first number : ""))\nb=int(input(""Enter the second number : ""))\nif(a>b) : \nmin1=a\nelse : \nmin1=b\nwhile(1) : \nif(min1%a==0 and min1%b==0) : \nprint(""LCM is : "",min1)\nbreak\nmin1=min1+1'"
Write a python program to find length of list using recursion,"'\ndef length(lst) : \nif not lst : \nreturn 0\nreturn 1 + length(lst[1 :  : 2]) + length(lst[2 :  : 2])\na=[1,2,3]\nprint(""Length of the string is :  "")\nprint(a)'"
write a python program to shuffle the items in a list and print it,"'\nfrom random import shuffle\nmylist = [1, 2, 3, 4, 5]\nshuffle(mylist)\nprint(mylist)'"
write a python program that adds the elements of a list to a set and prints the set,"'\nmy_set = {1, 2, 3}\nmy_list = [4, 5, 6]\nmy_set.update(my_list)\nprint(my_set)'"
write a python program that prints the circumference of a circle,"""\nimport math\nradius = 10\nprint(f'Area :  {2 * math.pi * radius}')"""
write a python program that prints the area of a rectangle,"""\nlength = 10\nwidth = 5\nprint(f'Area :  {length * width}')"""
write a python program that prints the area of a square,"""\nside = 5\nprint(f'Area :  {side * side}')"""
write a python program to create a dictionary with numbers 1 to 5 as keys and the numbers in english as values,"""\nnumber_dict = {\n1 :  'one',\n2 :  'two',\n3 :  'three',\n4 :  'four',\n5 :  'five'\n}"""
write a python program to remove words less than a specified length from a sentence,"""\nsentence = 'this is my sentence and i will write it my way'\nminlength = 3\nresult = [word for word in sentence.split(' ') if len(word) >= minlength]"""
write a python program to keep words less than a specified length in a sentence,"""\nsentence = 'this is my sentence and i will write it my way'\nmaxlength = 3\nresult = [word for word in sentence.split(' ') if len(word) <= minlength]\n#### 93"""
write a python function that takes a list as an input and converts all numbers to positive numbers and returns the new list,'\ndef make_all_positive(nums) : \nreturn [num if num > 0 else -num for num in nums]'
write a python function that takes a list as an input and converts all numbers to negative numbers and returns the new list,'\ndef make_all_negative(nums) : \nreturn [num if num < 0 else -num for num in nums]'
write a python function to return a set of all punctuation used in a string,"'\ndef get_punctuations(sentence) : \npunctuations = \'\'\'!()-[]{}; : \'""\\,<>./?@#$%^&*_~\'\'\'\nused_punctuation = set()\nfor char in sentence : \nif char in punctuations : \nused_punctuation.add(char)\nreturn used_punctuation'"
write a python program to print the words in a sentence in reverse order,"""\nsentence = 'the quick brown fox'\nwords = sentence.split(' ')\nwords.reverse()\nprint(' '.join(words))"""
write a python program to replace each word in a sentence with the length of the word and print it,"""\nsentence = 'the quick brown fox jumps over the lazy dog'\nwords = sentence.split(' ')\nlengths = [str(len(word)) for word in words]\nprint(' '.join(lengths))"""
write a python program to convert a set to a list,"'\nmyset = {1, 2, 4, 7}\nmylist = list(myset)'"
write a python program to convert a list to a dictionary where the key is the index and the value is the item in the list,"'\nmy_list = [1, 8, 1, 2, 2, 9]\nmy_dict = {key :  value for key, value in enumerate(my_list)}'"
write a python function that returns True if the sum of two provided numbers is even,"'\ndef is_prod_even(num1, num2) : \nsum = num1 + num2\nreturn not sum % 2'"
write a python program to print the first 5 items in a list,"'\nmy_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\nprint(my_list[ : 5])'"
write a python program to print the last 3 items in a list,"'\nmy_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\nprint(my_list[-3 : ])'"
write a python program to subtract two numbers and print it,"""\nnum1 = 1.5\nnum2 = 6.3\ndifference = num1 - num2\nprint(f'Difference :  {difference}')"""
write a python program to print 5 random integers between 10 and 20,"'\nimport random\nprint(random.sample(range(10, 20), 5))'"
write a python program to delete a variable,'\ni = 10\ndel i'
write a python program to perform multiple assignments,'\na = b = c = 1'
write a python program to swap two numbers,"""\n(x, y) = (1, 2)\nprint(f'Before swapping :  x :  {x}, y :  {y}')\n(y, x) = (x, y)\nprint(f'After swapping :  x :  {x}, y :  {y}')"""
write a python program to print bitwise AND operation,'\na = 60\nb = 13\na_and_b = a&b\nprint(a_and_b)'
write a python program to print bitwise OR operation,'\na = 60\nb = 13\na_or_b = a|b\nprint(a_or_b)'
write a python program to print bitwise XOR operation,'\na = 60\nb = 13\na_xor_b = a^b\nprint(a_xor_b)'
write a python program to print binary ones complement on a variable,'\na = 60\nones_complement_a = ~a\nprint(ones_complement_a)'
write a python program to print binary left shift on a variable,'\na = 60\nbinary_left_shift = a<<2\nprint(binary_left_shift)'
write a python program to print binary right shift on a variable,'\na = 60\nbinary_right_shift = a>>2\nprint(binary_right_shift)'
write a python function to check if an item exists in a list and return the boolean value,"'\ndef item_exists(lst, item) : \n\tif item in lst : \n\t\treturn True\n\telse : \n\t\treturn False'"
write a python function to get the type of a variable,'\ndef get_type(var) : \n\treturn(type(var))'
write a python function to check if an object is an instance of a given class,"'\ndef check_instance(derived_class, base_class) : \n\treturn(isinstance(derived_class, base_class))'"
write a python function to accept user input to continue,"""\ndef get_userinput() : \n\twhile(1) : \n\t\tdo_continue = raw_input('Do you want to continue(y/n)?')\n\t\tif do_continue == 'y' or do_continue == 'n' : \n\t\t\treturn do_continue"""
write a python program to create a raw string,"""\nstr1 = r'hello\\n'"""
write a python function to print prime numbers between two numbers,"""\ndef get_prime_numbers(range1, range2) : \n\tfor num in range(range1,range2) : \n\t\tfor i in range(2,num) : \n\t\t\tif num%i == 0 : \n\t\t\t\tj=num/i\n\t\t\t\tbreak\n\t\telse : \n\t\t\tprint(num, 'is a prime number')"""
write a python function to get the value of maximum integer allowed on the system,'\ndef get_max_integer() : \n\timport sys\n\treturn sys.maxsize'
write a python function to get the absolute value of a number,'\ndef get_absolute_value(i) : \n\treturn(abs(i))'
write a python function to return the exponential of a number,'\ndef get_exponential_value(i) : \n\timport math\n\treturn(math.exp(i))'
write a python function to return the natural logarithm of a number,'\ndef get_natural_log_value(i) : \n\timport math\n\treturn(math.log(i))'
write a python function to return the base 10 logarithm of a number,'\ndef get_natural_log_value(i) : \n\timport math\n\treturn(math.log10(i))'
write a python function to return the square root of a number,'\ndef get_sqrt(i) : \n\timport math\n\treturn(math.sqrt(i))'
write a python program to print the maximum integer in a list of integers,"'\nlst = [23, 10, 55, 43]\nlst.sort()\nmax = lst[-1]'"
write a python program to print the minimum integer in a list of integers,"'\nlst = [23, 10, 55, 43]\nlst.sort()\nmin = lst[0]'"
write a python program to print a random number between 0 and 1,"'\nimport random\nprint(random.uniform(0, 1))'"
write a python program to concatenate two strings and print,"""\nstr1 = 'hello'\nstr2 = ' world!'\nprint(str1 + str2)"""
write a python program to print the ascii value of a character,"""\nstr1 = 'a'\nprint(ord(str1))"""
write a python program to print current date and time,'\nimport datetime\nprint(datetime.datetime.now())'
write a python program to capitalize a string,"""\nstr1 = 'hello'\nprint(str1.capitalize())"""
write a python program to clone a list,"'\na = [1, 2, 3]\nb = a[ : ]'"
write a python program to print a list in reverse,"'\na = [1, 2, 3]\nprint(a[ :  : -1])'"
write a python program to print a list in sorted order,"""\nbasket = ['apple', 'orange', 'apple', 'pear', 'orange', 'banana']\nprint(sorted(basket))"""
write a python function to return union of two sets,"'\ndef union_set(set1, set2) : \n\treturn set1|set2'"
"write a python program to print a set of all elements in either set1 or set2, but not both","'\nset1 = {10, 20, 30, 40, 50}\nset2 = {30, 40, 50, 60, 70}\nprint(set1.symmetric_difference(set2))'"
write a python program to print names of the entries in the directory given by path,"""\npath = '/home'\nimport os\nprint(os.listdir(path))"""
write a python program to create a directory named path,"""\npath = 'test'\nimport os\nos.mkdir(path)"""
write a python program to add two matrices and print them,"'\nX = [[1,2,3],\n\t[4 ,5,6],\n\t[7 ,8,9]]\nY = [[9,8,7],\n\t[6,5,4],\n\t[3,2,1]]\nresult = [[X[i][j] + Y[i][j]  for j in range\n(len(X[0]))] for i in range(len(X))]\nfor r in result : \n\tprint(r)'"
write a python function to check if a string is a palindrome or not,'\ndef isPalindrome(s) : \n\treturn s == s[ :  : -1]'
write a python program to print the least frequent character in a string,"'\ntest_str = ""this is test string""\nall_freq = {}\nfor i in test_str : \n\tif i in all_freq : \n\t\tall_freq[i] += 1\n\telse : \n\t\tall_freq[i] = 1\nres = min(all_freq, key = all_freq.get)\nprint(res)'"
write a python program to print sum of elements in a list,'\nlst = range(5)\nprint(sum(lst))'
write python code to merge two dictionaries,"""\ndef merge_dict(dict1, dict2) : \n\treturn(dict2.update(dict1))\ndict1 = {'a' :  10, 'b' :  8}\ndict2 = {'d' :  6, 'c' :  4}\nmerge_dict(dict1, dict2)\nprint(dict2)"""
write python code to print temperature in celsius to fahrenheit,"""\ncelsius = 37.5\nfahrenheit = (celsius * 1.8) + 32\nprint('%0.1f degree Celsius is equal to %0.1f degree Fahrenheit' %(celsius,fahrenheit))"""
write python function to detect if a number is even number,'\ndef is_even(num) : \n\treturn((num % 2) == 0)'
write python function to detect if a number is odd number,'\ndef is_odd(num) : \n\treturn((num % 2) != 0)'
write python function to detect if an year is leap year,'\ndef is_leap_year(year) : \n\tif (year % 4) == 0 : \n\t\tif (year % 100) == 0 : \n\t\t\tif (year % 400) == 0 : \n\t\t\t\treturn True \n\t\t\telse : \n\t\t\t\treturn False\n\t\telse : \n\t\t\treturn True \n\telse : \n\t\treturn False '
write a python program to print transpose a matrix and print,"'\nX = [[12,7],\n\t[4 ,5],\n\t[3 ,8]]\nresult = [[0,0,0],\n\t\t\t[0,0,0]]\nfor i in range(len(X)) : \n\tfor j in range(len(X[0])) : \n\t\tresult[j][i] = X[i][j]\nfor r in result : \n\tprint(r)'"
write a python program to convert Kilometers to Miles,"'\nkilometers = float(input(""Enter value in kilometers :  ""))\nconv_fac = 0.621371\nmiles = kilometers * conv_fac\nprint(\'%0.2f kilometers is equal to %0.2f miles\' %(kilometers,miles))'"
"write a python program to check if a number is positive, negative or 0","'\nnum = float(input(""Enter a number :  ""))\nif num > 0 : \n\tprint(""Positive number"")\nelif num == 0 : \n\tprint(""Zero"")\nelse : \n\tprint(""Negative number"")'"
write a python function to find H.C.F of two numbers,"'\ndef compute_hcf(x, y) : \n\tif x > y : \n\t\tsmaller = y\n\telse : \n\t\tsmaller = x\n\tfor i in range(1, smaller+1) : \n\t\tif((x % i == 0) and (y % i == 0)) : \n\t\t\thcf = i\n\treturn hcf'"
write a python function to find the factors of a number,"'\ndef print_factors(x) : \n\tprint(""The factors of"",x,""are : "")\n\tfor i in range(1, x + 1) : \n\t\tif x % i == 0 : \n\t\t\tprint(i)'"
write a python program to remove punctuations from a string and print it,"'\npunctuations = \'\'\'!()-[]{}; : \'""\\,<>./?@#$%^&*_~\'\'\'\nmy_str = input(""Enter a string :  "")\nno_punct = """"\nfor char in my_str : \n\tif char not in punctuations : \n\t\tno_punct = no_punct + char\nprint(no_punct)'"
write a python program to count the number of each vowel and print them,"""\nvowels = 'aeiou'\nip_str = 'Hello, have you tried our tutorial section yet?'\nip_str = ip_str.casefold()\ncount = {}.fromkeys(vowels,0)\nfor char in ip_str : \n\tif char in count : \n\t\tcount[char] += 1\nprint(count)"""
Write a Python program to get the last day of a specified year and month.,"'\nimport calendar\nyear = 2020\nmonth = 12 \nprint(calendar.monthrange(year, month)[1])'"
Write a Python program to convert a string to datetime.,"""\nfrom datetime import datetime\ndate_object = datetime.strptime('Jul 1 2014 2 : 43PM', '%b %d %Y %I : %M%p')\nprint(date_object)"""
Write a Python program to subtract five days from current date,"""\nfrom datetime import date, timedelta\ndt = date.today() - timedelta(5)\nprint('Current Date  : ',date.today())\nprint('5 days before Current Date  : ',dt)"""
Write a Python program to convert Year/Month/Day to Day of Year.,"'\nimport datetime\ntoday = datetime.datetime.now()\nday_of_year = (today - datetime.datetime(today.year, 1, 1)).days + 1\nprint(day_of_year)'"
Write a  program to split strings using split function.,"'\nstring = ""India is my country.""\nstring_list = string.split(\' \')\nprint(string_list)'"
write a Python program to multiply two numbers and print it,"""\nnum1 = 1.5\nnum2 = 6.3\nproduct = num1 * num2\nprint(f'product :  {product}')"""
"Write a Python program that asks the user to enter a number and Depending on whether the number is even or odd, print out an appropriate message to the user.","'\nnumber = int(input(""Number :  ""))\nif number%2 == 0 and number%4 != 0 : \nprint(""Your number is even..."")\nelif number%4 == 0 : \nprint(""Your number is a multiple of 4"")\nelse : \nprint(""Your number is odd..."")'"
Write a Python program that accepts a string and calculate the number of digits and letters and print them,"'\nx = input(""Enter a string! "")\nd=l=0\nfor c in x : \n\tif c.isdigit() : \n\t\td = d + 1\n\telif c.isalpha() : \n\t\tl = l + 1\n\telse : \n\t\tpass\nprint(""Letters :  "", l)\nprint(""Digits :  "", d)'"
write a Python program to count the number of even and odd numbers from a series of numbers and print the result,"'\nx = (1, 2, 3, 4, 5, 6, 7, 8, 9)\nodd = even = 0\nfor i in x : \n\tif i % 2 == 0 : \n\t\teven = even + 1\n\telse : \n\t\todd = odd + 1\nprint(""Even Numbers are :  "", even)\nprint(""Odd Numbers are :  "", odd)'"
"Write a Python program to find those numbers which are divisible by 7 and multiple of 5, between 1500 and 2700 and print the result.","'\nnl = []\nfor x in range(1500, 2700) : \n\tif (x%7==0) and (x%5==0) : \n\t\tnl.append(str(x))\nprint(""\\n"".join(nl))'"
"Write a python program to Convert a list of characters into a string and print it : Example :   Input ['a', 'b', 'c', 'd']  Output abcd","'\ns = [\'a\',\'b\',\'c\',\'d\']\nx = """".join(s)\nprint(x)'"
"Write a Python program to find common items from two lists. Example:   input  color1 = ""Red"", ""Green"", ""Orange"", ""White""  color2 = ""Black"", ""Green"", ""White"", ""Pink""  output  {'Green', 'White'}","'\ncolor1 = ""Red"", ""Green"", ""Orange"", ""White""\ncolor2 = ""Black"", ""Green"", ""White"", ""Pink""\nprint(set(color1) & set(color2))'"
Write a Python program to Calculate the sum of the digits of a random three-digit number and print the result.,'\nimport random \nn = random() * 900 + 100 \nn = int(n) \nprint(n) \na = n // 100 \nb = (n // 10) % 10 \nc = n % 10 \nprint(a + b + c)'
Write a Python program to find the greatest common divisor (GCD)(Euclidean algorithm) and print the result.,'\na = int(input())\nb = int(input())\nwhile a != 0 and b != 0 : \n\tif a > b : \n\t\ta %= b\n\telse : \n\t\tb %= a\ngcd = a + b\nprint(gcd)'
Write a Python program to select integers from a string and print those integers,"""\ns = input()\nl = len(s)\ni = 0\nwhile i < l : \n\tnum = ''\n\tsymbol = s[i]\n\twhile symbol.isdigit() : \n\t\tnum += symbol\n\t\ti += 1\n\t\tif i < l : \n\t\t\tsymbol = s[i]\n\t\telse : \n\t\t\tbreak\n\tif num != '' : \n\t\tprint(num)\n\ti += 1"""
"Write a program to Expand and print a string like ""a-z""  Example: enter first string :b   enter last string: e  Output : bcde","'\nfirst = input(""The first :  "")\nlast = input(""The last :  "")\nwhile first <= last : \n\tprint(first, end=\'\')\n\tfirst = chr(ord(first) + 1)\nprint()'"
Write a Python function that returns the values   of the largest and second largest elements in the passed list.,"'\ndef max2(x) : \n\tif x[0] > x[1] : \n\t\tm1,m2 = (x[0],x[1])\n\telse : \n\t\tm1,m2 = (x[1],x[0])\n\tfor i in range(2, len(x)) : \n\t\tif x[i] > m1 : \n\t\t\tm2 = m1\n\t\t\tm1 = x[i]\n\t\telif x[i] > m2 : \n\t\t\tm2 = x[i]\n\treturn m1,m2'"
"Write a Python program to print the frequency of the elements in a list.Example:  input  my_list = [10,10,10,10,20,20,20,20,40,40,50,50,30]  output  {10: 4, 20: 4, 40: 2, 50: 2, 30: 1}","'\nimport collections\nmy_list = [10,10,10,10,20,20,20,20,40,40,50,50,30]\nprint(""Original List  :  "",my_list)\nctr = collections.Counter(my_list)\nprint(""Frequency of the elements in the List  :  "",ctr)'"
"Write a Python program to generate all permutations of a list in Python. Example:  Input [1,2,3]  Output [(1, 2, 3), (1, 3, 2), (2, 1, 3), (2, 3, 1), (3, 1, 2), (3, 2, 1)]","'\nimport itertools\nprint(list(itertools.permutations([1,2,3])))'"
"Write a Python program to remove duplicates from a list.Example:  Input a = [10,20,30,20,10,50,60,40,80,50,40]  Output [10, 20, 30, 50, 60, 40, 80]","'\na = [10,20,30,20,10,50,60,40,80,50,40]\ndup_items = set()\nuniq_items = []\nfor x in a : \n\tif x not in dup_items : \n\t\tuniq_items.append(x)\n\t\tdup_items.add(x)\nprint(uniq_items)'"
"Write a Python function to return the second smallest number in a list and print it.Example:  input  second_smallest([1, 2, -8, -2, 0])  output  -2","""\ndef second_smallest(numbers) : \n\ta1, a2 = float('inf'), float('inf')\n\tfor x in numbers : \n\t\tif x <= a1 : \n\t\t\ta1, a2 = x, a1\n\t\telif x < a2 : \n\t\t\ta2 = x\n\treturn a2\nprint(second_smallest([1, 2, -8, -2, 0]))"""
Write a Python program to Separate positive numbers from negative and print the positive numbers and negative numbers separately,'\nfrom random import random\na = []\nfor i in range(7) : \n\tn = int(random() * 20) - 10\n\ta.append(n)\nprint(a)\nneg = []\npos = []\nfor i in a : \n\tif i < 0 : \n\t\tneg.append(i)\n\telif i > 0 : \n\t\tpos.append(i)\nprint(neg)\nprint(pos)'
"Write a python program to swap cases in a string and print. In other words, convert all lowercase letters to uppercase letters and vice versa and print the result  Example:input:InDiAaa  Output: iNdIaAA",'\ns = input()\nprint(s.swapcase())'
Write a python program to implement bubble sort and print the result,"'\nfrom random import randint\nN = 7\na = []\nfor i in range(N) : \n\ta.append(randint(1, 20))\nprint(a)\nfor i in range(N-1) : \n\tfor j in range(N-i-1) : \n\t\tif a[j] > a[j+1] : \n\t\t\tb = a[j]\n\t\t\ta[j] = a[j+1]\n\t\t\ta[j+1] = b\nprint(a)'"
Write a python program to find whether a given number is perfect or not and print the result in boolean format(True or False),"'\nx = int(input(""Enter any no. "")) \ndef perfect_number(n) :  \n\tsum = 0 \n\tfor x in range(1, n) :  \n\t\tif n % x == 0 :  \n\t\t\tsum += x \n\treturn sum == n\nprint(perfect_number(x))'"
Write a python program to find and print the longest word in a sentence,"'\nstring = ""python java c c++ javascript pascal php""\nprint(string)\nwords = string.split()\nid_longest = 0\nfor i in range(1, len(words)) : \n\tif len(words[id_longest]) < len(words[i]) : \n\t\tid_longest = i\nprint(words[id_longest])'"
Write a python program to print all the values in a dictionary.,"""\nd =  {'a' : 1,'b' : 2,'c' : 3,'d' : 4}\nprint(d.values())"""
Write a python program to print all the keys in a dictionary.,"""\nd =  {'a' : 1,'b' : 2,'c' : 3,'d' : 4}\nprint(d.keys())"""
Write a python program to print a given string without spaces,"'\ns = ""I love India   now I will be printed without any space""\nfor i in s : \n\tif i==\' \' :  continue\n\tprint(i,end=\'\')'"
Write a python program to print only upto the letter 't' in a given string.,"'\ns = ""hi i love python""\ni=0\nwhile s[i]!=\'t\' : \n\tprint(s[i],end=\'\')\n\ti+=1'"
Write a python program to print the length of a given string.,"'\nsample_str = ""Python is good for datascience""\nprint(len(sample_str))'"
Write a python program to turn every item of a list into its square.,"'\nsample_list = [1, 2, 3, 4, 5, 6, 7]\nsquare_list =  [x * x for x in sample_list]\nprint(square_list)'"
Write a python program to print a new set with all items from both sets by removing duplicates,"'\nset1 = {10, 20, 30, 40, 50}\nset2 = {30, 40, 50, 60, 70}\nprint(set1.union(set2))'"
write a list comprehension in python to get a list of even numbers when a range is given,"""\nN = 20\nnumber_list = [ x for x in range(N) if x % 2 == 0]\nprint(f'List of Even Numbers : ', number_list)"""
write a list comprehension in python to get a list of odd numbers when a range is given,"""\nN = 20\nnumber_list = [ x for x in range(N) if x % 2 != 0]\nprint(f'List of Odd Numbers : ', number_list)"""
write a python function to display the Fibonacci series,'\ndef recur_fibo(n) : \n\tif n <= 1 : \n\t\treturn n\n\telse : \n\t\treturn(recur_fibo(n-1) + recur_fibo(n-2))'
write a python lambda function to get remainder when divisor and divident are given,"'\nremainder = lambda Divident, Divisor :  Divident % Divisor\nprint(remainder(5,2))'"
write a python function to convert degree celsius to degree fahrenheit,'\ndef fahrenheit(celsius) : \n\treturn (celsius * 1.8) + 32'
write a python function to convert degree fahrenheit to degree celsius,'\n\tdef\tcelsius(fahrenheit) : \n\treturn (fahrenheit - 32) / 1.8'
write a python function to get the factorial of a given number,'\ndef factorial(n) : \n\tif n == 1 : \n\t\treturn n\n\telse : \n\t\treturn n*factorial(n-1)'
write a python function to compute the HCF of two numbers,"'\ndef hcf(x, y) : \n\tif x > y : \n\t\tsmaller = y\n\telse : \n\t\tsmaller = x\n\tfor i in range(1, smaller+1) : \n\t\tif((x % i == 0) and (y % i == 0)) : \n\t\t\thcf = i \n\treturn hcf'"
write a python function to compute the lcm of two numbers,"'\n\tdef\tlcm(x,\ty) : \n\tif x > y : \n\t\tgreater = x\n\telse : \n\t\tgreater = y\n\twhile(True) : \n\t\tif((greater % x == 0) and (greater % y == 0)) : \n\t\t\tlcm = greater\n\t\t\tbreak\n\t\tgreater += 1\n\treturn lcm'"
write a python function to check whether the string is a palindrome or not,"'\n\tdef\tpalindrome(my_str) : \n\tmy_str = my_str.casefold()\n\trev_str = reversed(my_str)\n\tif list(my_str) == list(rev_str) : \n\t\tprint(""The string is a palindrome."")\n\telse : \n\t\tprint(""The string is not a palindrome."")'"
write a python program to remove punctuations in a string,"'\n\tpunctuations\t=\t\'\'\'!()-[]{}; : \'""\\,<>./?@#$%^&*_~\'\'\'\n\tstring\t=\t\'\'.join(e\tfor\te\tin\td\tif\te\tnot\tin\tpunctuations)'"
write a python program to print the ASCII value of a character,"'\n\tc\t=\t\'p\'\n\tprint(""The\tASCII\tvalue\tof\t\'""\t+\tc\t+\t""\'\tis"",\tord(c))'"
write a python program to swap two numbers,"'\n\ta\t=\t1\n\tb\t=\t2\n\ta,\tb\t=\tb,\ta'"
write a python lambda function to add three numbers,"'\n\tx\t=\tlambda\ta,\tb,\tc\t : \ta\t+\tb\t+\tc\n\tprint(x(5,\t6,\t2))'"
write a python function to check whether the number is a Magic number or not,'\n\tdef\tisMagic(n) : \t\n\tsum = 0\n\twhile (n > 0 or sum > 9) :  \n\t\tif (n == 0) :  \n\t\t\tn = sum; \n\t\t\tsum = 0; \n\t\tsum = sum + n % 10; \n\t\tn = int(n / 10); \n\treturn True if (sum == 1) else False;'
write a python program to convert a list of values in kilometers to feet,"'\n\tkilometer\t=\t[39.2,\t36.5,\t37.3,\t37.8]\n\tfeet\t=\tmap(lambda\tx : \tfloat(3280.8399)*x,\tkilometer)\n\tprint(list(feet))'"
write a python list comprehension to flatten a list of lists,"'\n\tlist_of_list\t=\t[[1,2,3],[4,5,6],[7,8]]`\n\tflatten\t=\t[y\tfor\tx\tin\tlist_of_list\tfor\ty\tin\tx]'"
write a python list comprehension to transpose a 2D matrix (provided as list),"'\n\tmatrix\t=\t[[1,2,3],[4,5,6],[7,8,9]]\n\tmatrixT\t=\t[[row[i]\tfor\trow\tin\tmatrix]\tfor\ti\tin\trange(len(matrix[0]))]'"
write a python list comprehension to print numbers in a given string,"'\n\tstring\t=\t""Hello\t12345\tWorld""\n\tnumbers\t=\t[x\tfor\tx\tin\tstring\tif\tx.isdigit()]\n\tprint\t(numbers)'"
write a python function to bubblesort an array,"'\n\tdef\tbubbleSort(arr) : \t\n\tn = len(arr) \n\tfor i in range(n-1) :  \n\t\tfor j in range(0, n-i-1) :  \n\t\t\tif arr[j] > arr[j+1]  :  \n\t\t\t\tarr[j], arr[j+1] = arr[j+1], arr[j] '"
write a python function to do insertion sort,"'\ndef insertionSort(arr) :  \n\tfor i in range(1, len(arr)) :  \n\t\tkey = arr[i] \n\t\tj = i-1\n\t\twhile j >=0 and key < arr[j]  :  \n\t\t\t\tarr[j+1] = arr[j] \n\t\t\t\tj -= 1\n\t\tarr[j+1] = key '"
write a python function to linearly search an array for a given number and return its index else return -1,"'\ndef search(arr, n, x) :  \n\tfor i in range(0, n) :  \n\t\tif (arr[i] == x) :  \n\t\t\treturn i \n\treturn -1'"
write a python function to obtain the square root of a number,'\n\tdef\tsquareRoot(n) : \t\n\t\tx = n \n\t\ty = 1\n\t\te = 0.000001\n\t\twhile(x - y > e) :   \n\t\t\tx = (x + y)/2\n\t\t\ty = n / x   \n\t\treturn x '
write a python function to convert a number from decimal to binary,"'\n\tdef\tdecToBinary(n) : \t\n\tbinaryNum = [0] * n;  \n\ti = 0; \n\twhile (n > 0) :    \n\t\tbinaryNum[i] = n % 2; \n\t\tn = int(n / 2); \n\t\ti += 1; \n\tfor j in range(i - 1, -1, -1) :  \n\t\tprint(binaryNum[j], end = """"); '"
write a python function to convert a number from binary to decimal,'\n\tdef\tbinaryToDecimal(n) : \n\tnum = n;\n\tdec_value = 0;\n\tbase = 1;  \n\ttemp = num;\n\twhile(temp) : \n\t\tlast_digit = temp % 10;\n\t\ttemp = int(temp / 10);\n\t\tdec_value += last_digit * base;\n\t\tbase = base * 2;\n\treturn dec_value;'
write a python function to convert a number from decimal to octal,"'\n\tdef\tdecToOctal(n) : \n\toctalNum = [0] * 100\n\ti = 0\n\twhile (n != 0) : \n\t\toctalNum[i] = n % 8\n\t\tn = int(n / 8)\n\t\ti += 1\n\tfor j in range(i - 1, -1, -1) : \n\t\tprint(octalNum[j], end="""")'"
write a dictionary comprehension in python so that the values are square of the key number,"'\n\tsquare_dict = {num :  num*num for num in range(1, 11)}\n\tprint(square_dict)'"
write a python program to get indexes for each element in a list using enumerate,"'\n\tl1 = [""eat"",""sleep"",""repeat""] \n\tfor ele in enumerate(l1) :  \n\t\t print (ele) '"
write a python program to get indexes starting at a specified number for each element in a list using enumerate,"'\n\tl1 = [""eat"",""sleep"",""repeat""] \n\tfor count,ele in enumerate(l1,100) :  \n\t\t print (count,ele )'"
write a python program to demonstarate working of map,"'\n\tdef addition(n) :  \n\treturn n + n   \n\tnumbers = (1, 2, 3, 4) \n\tresult = map(addition, numbers) \n\tprint(list(result)) '"
write a python function to calculate simple interest,"'\n\tdef simple_interest(p,t,r) : \t\n\tsi = (p * t * r)/100\t\n\treturn si '"
write a python function to calculate compound interest,"'\n\tdef\tcompound_interest(principle,\trate,\ttime) : \t\n\tAmount = principle * (pow((1 + rate / 100), time)) \n\tCI = Amount - principle \n\tprint(""Compound interest is"", CI) '"
write a python function to convert a list of characters to a string,"'\n\tdef\tconvert(s) : \t\n\t\tstr1 = """" \n\t\treturn(str1.join(s)) '"
write a python function to check whether a number is perfect,'\n\tdef\tisPerfect(\tn\t) : \t\n\t\tsum = 1\n\t\ti = 2\n\t\twhile i * i <= n :  \n\t\t\tif n % i == 0 :  \n\t\t\t\tsum = sum + i + n/i \n\t\t\ti += 1\n\t\treturn (True if sum == n and n!=1 else False) '
write a python function to find the sum of digits in a number until one digit (no more than one digit),'\n\tdef\tdigSum(n) : \t\n\tsum = 0\n\twhile(n > 0 or sum > 9) :  \n\t\tif(n == 0) :  \n\t\t\tn = sum\n\t\t\tsum = 0         \n\t\tsum += n % 10\n\t\tn = int(n/10)    \n\treturn sum'
write a python function to get the sum of numbers in a given digit,'\n\tdef\tgetSum(n) : \t\t\t\t\t\n\tsum = 0\n\tfor digit in str(n) :    \n\t\t sum += int(digit)\t\t   \n\treturn sum'
write a python function to find the largest number in an array,"'\n\tdef\tlargest(arr,n) : \t\n\tmax = arr[0] \n\tfor i in range(1, n) :  \n\t\tif arr[i] > max :  \n\t\t\tmax = arr[i] \n\treturn max'"
write a python function to find the nth catalan number,'\ndef catalan(n) :  \n\tif n <= 1 :  \n\t\treturn 1\n\tres = 0\n\tfor i in range(n) :  \n\t\tres += catalan(i) * catalan(n-i-1) \n\treturn res '
write a python program to add two hexadecimal numbers,"'\n\ta\t=\t""B""\n\tb\t=\t""C""\n\tsum\t=\thex(int(a,\t16)\t+\tint(b,\t16))\t\n\tprint(sum[2 : ])\t'"
write a python program to add two octal numbers,"'\n\ta\t=\t""123""\n\tb\t=\t""456""\n\tsum\t=\toct(int(a,\t8)\t+\tint(b,\t8))\t\n\tprint(sum[2 : ])\t'"
write a python program to add two binary numbers,"'\n\ta\t=\t""1101""\n\tb\t=\t""100""\n\tsum\t=\tbin(int(a,\t2)\t+\tint(b,\t2))\t\t\n\tprint(sum[2 : ])\t'"
write s python program to print the union of two sets,"'\n\tA\t=\t{1,\t2,\t3,\t4,\t5}\n\tB\t=\t{4,\t5,\t6,\t7,\t8}\n\tprint(A\t|\tB)'"
write s python program to print the intersection of two sets,"'\n\tA\t=\t{1,\t2,\t3,\t4,\t5}\n\tB\t=\t{4,\t5,\t6,\t7,\t8}\n\tprint(A\t&\tB)'"
write s python program to print the difference of two sets,"'\n\tA\t=\t{1,\t2,\t3,\t4,\t5}\n\tB\t=\t{4,\t5,\t6,\t7,\t8}\n\tprint(A\t-\tB)'"
write s python program to print the symmetric difference of two sets,"'\n\tA\t=\t{1,\t2,\t3,\t4,\t5}\n\tB\t=\t{4,\t5,\t6,\t7,\t8}\n\tprint(A\t^\tB)'"
write a python function to find nCr,"'\n\tdef\tnCr(n,\tr) : \t\n\tdef fact(n) :  \n\t\tres = 1\n\t\tfor i in range(2, n+1) :  \n\t\t\tres = res * i \n\t\treturn res\n\treturn (fact(n) / (fact(r)  \n\t\t\t\t* fact(n - r)))'"
write a python function to calculate nPr,"'\n\tdef\tnPr(n,\tr) : \t\t\n\tdef fact(n) :   \n\t\tif (n <= 1) :  \n\t\t\treturn 1\n\t\treturn n * fact(n - 1)\n\treturn int(fact(n) /\n\t\t\t\tfact(n - r))'"
write a python function to calculate the volume of ellipsoid,"'\n\tdef\tvolumeOfEllipsoid(r1,\tr2,\tr3) : \t\n\treturn 1.33 * 22 * r1 * r2 * r3/7'"
write a python function to calculate the area of tetraheadron,'\n\tdef\tarea_of_tetrahedron(side) : \t\n\treturn (1.73205 * \n\t\t\t(side * side));'
write a python function to find the volume of tetraheadron,"'\n\tdef\tvol_tetra(side) : \t\n\tvolume = (side ** 3 / (6 * 1.414)) \n\treturn round(volume, 2)'"
write a python function to determing the volume of a cube whose space diagonal measure is given,"'\n\tdef CubeVolume(d) :  \n\tVolume = (1.73205 * pow(d, 3)) / 9\n\treturn Volume'"
write a python function to print the pascal's triangle,"'\n\tdef\tprintPascal(n) : \t\t\n\tfor line in range(1, n + 1) :   \n\t\tC = 1; \n\t\tfor i in range(1, line + 1) :    \n\t\t\tprint(C, end = "" "");  \n\t\t\tC = int(C * (line - i) / i);  \n\t\tprint("""");'"
write a python function to print Floyd's triangle,"'\n\tdef loydTriangle(n) : \t \n\tval = 1\n\tfor i in range(1, n + 1) :  \n\t\tfor j in range(1, i + 1) :  \n\t\t\tprint(val, end = "" "") \n\t\t\tval += 1       \n\t\tprint("""") '"
write a python function to print reverese Floyd's triangle,"'\n\tdef\tprintReverseFloyd(n) : \t\n\tcurr_val = int(n*(n + 1)/2) \n\tfor i in range(n + 1, 1, -1) :  \n\t\tfor j in range(i, 1, -1) :  \n\t\t\tprint(curr_val, end =""  "") \n\t\t\tcurr_val -= 1       \n\t\tprint("""") '"
write a python function to print fibonacci series in the reverse order,"'\n\tdef\treverseFibonacci(n) : \t\n\ta = [0] * n  \n\ta[0] = 0 \n\ta[1] = 1   \n\tfor i in range(2, n) :    \n\t\ta[i] = a[i - 2] + a[i - 1]  \n\tfor i in range(n - 1, -1 , -1) : \t\n\t\tprint(a[i],end="" "")  '"
write a python function to check whether the given series is in Arithematic progression,"'\n\tdef\tcheckIsAP(arr,\tn) : \t\n\tif (n == 1) :  return True\n\tarr.sort() \n\td = arr[1] - arr[0] \n\tfor i in range(2, n) :  \n\t\tif (arr[i] - arr[i-1] != d) :  \n\t\t\treturn False\n\treturn True'"
write a python function to check whether the given series is in harmonic progression,"'\ndef is_geometric(li) :  \n\tif len(li) <= 1 :  \n\t\treturn True\n\tratio = li[1]/float(li[0]) \n\tfor i in range(1, len(li)) :  \n\t\tif li[i]/float(li[i-1]) != ratio :   \n\t\t\treturn False\n\treturn True'"
write a python function to find the area of a circumscribed circle of an equilateral triangle,'\n\tdef area_cicumscribed(a) :  \n\treturn (a * a * (3.14159265 / 3)) '
write a python function to find the side of a octogon inscribed in a square,'\n\tdef octaside(a) :  \n\tif a < 0 :  \n\t\treturn -1\n\ts = a / (1.414 + 1) \n\treturn s '
write a python program to find the area of enneagon,"'\n\tlength = 6\n\tNonagon_area = 6.1818 * (length ** 2)\t\n\tprint(""Area of regular Nonagon is = "", Nonagon_area) '"
write a python function to find the day of the week given the date,"'\n\tdef\tdayofweek(d,\tm,\ty) : \t\n\tt = [ 0, 3, 2, 5, 0, 3, \n\t\t\t5, 1, 4, 6, 2, 4 ] \n\ty -= m < 3\n\treturn (( y + int(y / 4) - int(y / 100) \n\t\t\t\t+ int(y / 400) + t[m - 1] + d) % 7) '"
write a python function to calculate the MDAS factorial of a number,'\n\tdef\tMDAS_Factorial(\tN\t) : \t\t\t\n\tif N <= 2 :  \n\t\treturn N \n\tif N <= 4 :  \n\t\treturn N + 3      \n\tif (N - 4) % 4 == 0 :  \n\t\treturn N + 1\n\telif (N - 4) % 4 <= 2 :  \n\t\t\treturn N + 2\n\telse :  \n\t\t\treturn N - 1'
write a python function to find the nth pronic number,'\n\tdef\tfindRectNum(n) : \t\n\treturn n*(n + 1) '
write a python function to find the sum of N pronic numbers,'\n\tdef\tcalculateSum(N) : \t\n\treturn (N * (N - 1) // 2 + \n\t\t\tN * (N - 1) * (2 * \n\t\t\t\t\tN - 1) // 6); '
write a python function to find the sum of first N even numbers,'\n\tdef evensum(n) :  \n\tcurr = 2\n\tsum = 0\n\ti = 1 \n\twhile i <= n :  \n\t\tsum += curr  \n\t\tcurr += 2\n\t\ti = i + 1\n\treturn sum'
write a python function to check whether a number can be written as a sum of 3 primes (Goldbach Weak Coonjecture),"""\n\tdef\tcheck(n) : \t\n\tif n % 2 == 1 and n > 5 :  \n\tprint('YES') \n\telse :  \n\tprint('NO') """
write a python function to find the nth perrin number,'\n\tdef\tper(n) : \t\n\tif (n == 0) :  \n\t\treturn 3; \n\tif (n == 1) :  \n\t\treturn 0; \n\tif (n == 2) :  \n\t\treturn 2; \n\treturn per(n - 2) + per(n - 3); '
write a python function to implement linear extrapolation,"'\n\tdef\textrapolate(d,\tx) : \t\n\ty = (d[0][1] + (x - d[0][0]) / \n\t\t(d[1][0] - d[0][0]) * \n\t\t(d[1][1] - d[0][1]));    \n\treturn y;  '"
write a python function to print the collatz sequence,"""\n\tdef\tprintCollatz(n) : \t\n\twhile n != 1 :  \n\t\tprint(n, end = ' ') \n\t\tif n & 1 :  \n\t\t\tn = 3 * n + 1\n\t\telse :  \n\t\t\tn = n // 2  \n\tprint(n) """
write a python function to print the newman-conway sequence,"'\n\tdef\tsequence(n) : \t\n\tf = [0, 1, 1] \n\tprint(f[1], end="" ""), \n\tprint(f[2], end="" ""), \n\tfor i in range(3,n+1) :  \n\t\tf.append( f[f[i - 1]] + f[i - f[i - 1]]) \n\t\tprint(f[i], end="" ""), '"
write a python function to find the nth term in a padovan's sequence,"'\n\tdef\tpadovan(n) : \t\n\tpPrevPrev, pPrev, pCurr, pNext = 1, 1, 1, 1 \n\tfor i in range(3, n+1) :  \n\t\tpNext = pPrevPrev + pPrev \n\t\tpPrevPrev = pPrev \n\t\tpPrev = pCurr \n\t\tpCurr = pNext \n\treturn pNext; '"
write a python function to print the sylvester's sequence,"'\n\tdef\tprintSequence(n)\t : \t\n\ta = 1\n\tans = 2 \n\tN = 1000000007\n\ti = 1\n\twhile i <= n  :  \n\t\tprint ans, \n\t\tans = ((a % N) * (ans % N)) % N \n\t\ta = ans \n\t\tans = (ans + 1) % N \n\t\ti = i + 1'"
write a python function to find the sum of two numbers without using arithematic operators,"'\n\tdef\tAdd(x,\ty) : \t\n\twhile (y != 0) :  \n\t\tcarry = x & y \n\t\tx = x ^ y \n\t\ty = carry << 1     \n\treturn x '"
write a python function to subtract two numbers without using arithemmatic operators,"'\n\tdef subtract(x, y) : \t\n\twhile (y != 0) :  \n\t\tborrow = (~x) & y \n\t\tx = x ^ y \n\t\ty = borrow << 1\n\treturn x '"
write a python function to check whether the number is a perfect square without finding square root,'\n\tdef\tisPerfectSquare(n)\t : \n\ti = 1\n\twhile(i * i<= n) : \n\t\tif ((n % i == 0) and (n / i == i)) : \n\t\t\treturn True          \n\t\ti = i + 1\n\treturn False'
write a python function to find the square root of a number using babylonian method,'\n\tdef\tsquareRoot(n) : \t\n\t\tx = n \n\t\ty = 1\n\t\te = 0.000001\n\t\twhile(x - y > e) :  \n\t\t\tx = (x + y)/2\n\t\t\ty = n / x \n\t\treturn x '
write a python function to check whether the number is a duck number or not,"'\ndef check_duck(num)  :  \n\tn = len(num)   \n\ti = 0\n\twhile (i < n and num[i] == \'0\')  :  \n\t\ti = i + 1\n\twhile (i < n)  :   \n\t\tif (num[i] == ""0"")  :  \n\t\t\treturn True \n\t\ti = i + 1\n\treturn False'"
write a python function to check whether the given number is a Buzz number or not,'\n\tdef\tisBuzz(num)\t : \t\n\treturn (num % 10 == 7 or num % 7 == 0)  '
write a python function to check whether the number is a nude number or not,'\n\tdef checkDivisbility(num) :  \n\tdigit = 0\n\tN = num \n\twhile (num != 0) :  \n\t\tdigit = num % 10\n\t\tnum = num // 10\n\t\tif (digit == 0 or N % digit != 0) :  \n\t\t\treturn False\n\treturn True'
write a python function to print two composite numbers whose difference is N,"'\n\tdef\tfind_composite_nos(n)\t : \t\t\n\tprint(9 * n, 8 * n);  '"
write a python function to print N-bonacci series,"'\n\tdef\tbonacciseries(n,\tm)\t : \t\t\n\ta = [0] * m \n\ta[n - 1] = 1 \n\tfor i in range(n, m)  :  \n\t\tfor j in range(i - n, i)  :  \n\t\t\ta[i] = a[i] + a[j]  \n\tfor i in range(0, m)  :  \n\t\tprint (a[i], end = "" "") '"
write a python function to return count of number of vowels in a sentence,"'\ndef count_vowels(sentence) : \n\tcount = 0\n\tfor letter in sentence : \n\t\t if letter in ""aeiouAEIOU"" : \n\t\t\tcount += 1\n\treturn count'"
write a python function to check if a given string is a palindrome,'\ndef is_palindrome(string) : \n\treturn string == string[ :  : -1]'
write a program to print the nth fibonacci number,"'\nn1 = 1\nn2 = 1\nn = 5\nfor _ in range(n) : \n\tn1, n2 = n2, n1 + n2\nprint(n2)'"
write a function to return the square of first N numbers,'\ndef get_squares(n) : \n\treturn [i*i for i in range(n)]'
write a python function to return only even numbers in a list,"'\ndef filter_even(nums) : \n\treturn list(filter(lambda num :  num % 2 == 0, nums))'"
write a python function to return only odd numbers in a list,"'\ndef filter_odd(nums) : \n\treturn list(filter(lambda num :  num % 2 == 1, nums))'"
write a python program to calculate the sum of numbers using reduce and print it,"""\nfrom functools import reduce\nnums = [1, 2, 3, 4, 5, 10, 20, 30, 40, 50]\ntotal_sum = reduce(lambda a, b :  a + b, nums)\nprint(f'Sum :  {total_sum}')"""
write a python program to print unique numbers in a list,"""\nnumbers = [1, 2, 2, 3, 4, 4, 5, 6]\nunique = set(numbers)\nprint(f'Unique numbers :  {list(unique)}')"""
write a python program to count how many times each letter occurs in a string,"""\nstring = 'The quick brown fox jumps over the lazy dog'\ncountmap = {}\nfor letter in string : \n\tif letter in countmap : \n\t\t countmap[letter] += 1\n\telse : \n\t\t countmap[letter] = 1\nprint(f'Count of letters :  {countmap}')"""
write a python function to repeat a given string n times,"'\ndef repeat_string(string, frequency) : \n\treturn string * frequency'"
write a program to capitalize the first letter of every word in a string and print it,"""\nstring = 'The quick brown fox jumps over the lazy dog'\nprint(string.title())"""
write a function that merges two dictionaries,"'\ndef merge_dictionaries(dict1, dict2) : \n\treturn {**dict1, **dict2}'"
write a program to merge two lists into a dictionary,"""\nkeys = [1, 2, 3]\nvalues = ['aye', 'bee', 'sea']\ndictionary = dict(zip(keys, values))"""
write a python function that inverts the key and values in a dict and returns it,"'\ndef invert_dict(dictionary) : \n\tinverted_dict = {value :  key for key, value in dictionary.items()}\n\treturn inverted_dict'"
write a python program to print the difference in days between two dates,"""\nfrom datetime import date\ndate1 = date(2020, 10, 25)\ndate2 = date(2020, 12, 25)\nprint(f'Difference between dates :  {(date2 - date1).days}')"""
write a python function that returns the weighted average of numbers,"'\ndef get_weighted_average(numbers, weightage) : \n\treturn sum(x * y for x, y in zip(numbers, weightage)) / sum(weightage)'"
write a python program to check and print if a number is prime,"'\nnum = 407\nif num > 1 : \n\tfor i in range(2,num) : \n\t\t if (num % i) == 0 : \n\t\t\tprint(num,""is not a prime number"")\n\t\t\tbreak\n\telse : \n\t\t print(num,""is a prime number"")\nelse : \n\tprint(num,""is not a prime number"")'"
write a python program to print all prime numbers in a given interval,"'\nlower = 900\nupper = 1000\nfor num in range(lower, upper + 1) : \n\tif num > 1 : \n\t\t for i in range(2, num) : \n\t\t\tif (num % i) == 0 : \n\t\t\t\tbreak\n\t\t else : \n\t\t\tprint(num)'"
write a python function to return words in a sentence in sorted order,'\ndef get_sorted_words(sentence) : \n\twords = [word for word in sentence.split()]\n\twords.sort()\n\treturn words'
write a python function to remove all punctuation from a string,"'\ndef remove_punctuations(sentence) : \n\tpunctuations = \'\'\'!()-[]{}; : \'""\\,<>./?@#$%^&*_~\'\'\'\n\tno_punct = \'\'\n\tfor char in sentence : \n\t\t if char not in punctuations : \n\t\t\tno_punct = no_punct + char\n\treturn no_punct'"
write a python function to return the nth fibonacci number,'\ndef fib(n) : \n\tif n <= 1 : \n\t\t return n\n\telse : \n\t\t return (fib(n-1) + fib(n-2))'
write a python function to return the sum of first n numbers,'\ndef sum_of_nums(n) : \n\tif n <= 1 : \n\t\t return n\n\telse : \n\t\t return n + sum_of_nums(n-1)'
write a python function to return the factorial of a number,'\ndef fact(n) : \n\tif n == 1 : \n\t\t return n\n\telse : \n\t\t return n * fact(n-1)'
write a python program to print the factors of a number,"'\nnum = 320\nfor i in range(1, num + 1) : \n\tif num % i == 0 : \n\t\t print(i)'"
write a python function that returns the lcm of two numbers,"'\ndef lcm(x, y) : \n\tif x > y : \n\t\t greater = x\n\telse : \n\t\t greater = y\n\twhile(True) : \n\t\t if((greater % x == 0) and (greater % y == 0)) : \n\t\t\tlcm = greater\n\t\t\tbreak\n\t\t greater += 1\n\treturn lcm'"
write a python function that returns the gcd of two numbers,"'\ndef gcd(x, y) : \n\tif x > y : \n\t\t smaller = y\n\telse : \n\t\t smaller = x\n\tfor i in range(1, smaller + 1) : \n\t\t if((x % i == 0) and (y % i == 0)) : \n\t\t\tgcd = i\n\treturn gcd'"
write a python program to print the ASCII value of a character,"""\ncharacter = 'x'\nprint(f'The ASCII value of {character} is {ord(character)}')"""
write a python program to print the character of an ASCII value,"""\nvalue = 65\nprint(f'The ASCII value {value} is of the character {chr(value)}')"""
write a python function to print the binary value of a decimal number,'\ndef print_binary(dec) : \n\tprint(bin(dec))'
write a python function to print the octal value of a decimal number,'\ndef print_octal(dec) : \n\tprint(oct(dec))'
write a python function to print the hexadecimal value of a decimal number,'\ndef print_hexadecimal(dec) : \n\tprint(hex(dec))'
write a python program that prints the sum of natural numbers up to a given number,"""\nnum = 16\nsum = 0\nwhile (num > 0) : \n\tsum += num\n\tnum -= 1\nprint(f'The sum is {sum}')"""
write a python function to return the number of lines in a file,"""\ndef count_lines(filename) : \n\twith open(filename, 'r') as f : \n\t\t contents = f.read().split('\\n')\n\t\t return len(contents)"""
write a program to print the current date and time,'\nfrom datetime import datetime\nnow = datetime.now()\nprint(now)'
write a python program to extract the file name and extension of a file,"""\nimport os\nfilename, extension = os.path.splitext('/path/to/some/file.ext')"""
write a python program to merge two lists,"'\nodd = [1, 3, 5, 7, 9]\neven = [2, 4, 6, 8, 10]\nodd.extend(even)'"
write a python program to print a random vowel,"""\nimport random\nvowels = ['a', 'e', 'i', 'o', 'u']\nprint(random.choice(vowels))"""
write a python program to flip a coin 100 times and print number of heads and tails,"""\nimport random\nheads = 0\ntails = 0\nfor i in range(100) : \n\tif(random.choice([True, False])) : \n\t\t heads += 1\n\telse : \n\t\t tails += 1\nprint(f'{heads} heads, {tails} tails')"""
write a python program to print common elements in two lists,"""\nlist_a = [1, 2, 3, 4, 5, 6, 7]\nlist_b = [2, 4, 6, 8, 10]\nprint(f'Common elements :  { set(list_a).intersection(set(list_b)) }')"""
write a python program to print squares of numbers until 20,'\nfor i in range(20) : \n\tprint(i*i)'
write a python program to print the number of letters and digits in sentence,"""\nsentence = 'The Quick 123 Fox'\ndigits = 0\nletters = 0\nfor c in sentence : \n\tif c.isdigit() : \n\t\t digits += 1\n\telif c.isalpha() : \n\t\t letters += 1\n\telse : \n\t\t pass\nprint(f'Digits :  {digits}, Letters :  {letters}')"""
write a python function to print a given string n times,"'\ndef printn(string, n) : \n\tprint(string * n)'"
write a python program that creates a dictionary whose keys are numbers from 1 to 10 and values are squares of the key,"'\nsquare_dict = {}\nfor i in range(1, 11) : \n\tsquare_dict[i] = i*i'"
write a python class called Person that has a name property,"'\nclass Person : \n\tdef __init__(self, name) : \n\t\t self.name = name'"
write a python function that takes two strings as a parameter and prints the shorter one,"'\ndef print_shorter(str1, str2) : \n\tif (len(str1) > len(str2)) : \n\t\t print(str2)\n\telse : \n\t\t print(str1)'"
write a program to compute the count of each word in a sentence and print it,"""\nword_freq = {}\nline = 'how many how words does this many have'\nfor word in line.split() : \n\tword_freq[word] = word_freq.get(word, 0) + 1\nprint(word_freq)"""
write a python function that squares every number in a list using a list comprehension and returns the result,'\ndef square_numbers(nums) : \n\treturn [i*i for i in nums]'
write a python program that converts a binary number to decimal and prints it,"""\nbinary_num = '1010101'\ndecimal_num = int(binary_num, 2)\nprint(decimal_num)"""
write a python program that converts a octal number to octal and prints it,"""\noctal_num = '17'\ndecimal_num = int(octal_num, 8)\nprint(decimal_num)"""
write a python program that converts a hexadecimal number to hexadecimal and prints it,"""\nhexadecimal_num = 'FF'\ndecimal_num = int(hexadecimal_num, 16)\nprint(decimal_num)"""
write a python program that alphabetically sorts the words in a sentence and prints it,"""\nsentence = 'the quick brown fox jumps'\nsorted_words = sentence.split(' ')\nsorted_words.sort()\nprint(' '.join(sorted_words))"""
write a python program that prints the area of a circle,"""\nimport math\nradius = 5\nprint(f'Area :  {math.pi * radius * radius}')"""
write a python function that returns a dictionary with the area and perimeter of a rectangle,"""\ndef calculate_rect_properties(width, height) : \n\treturn {\n\t\t 'perimeter' :  2 * (width + height),\n\t\t 'area' :  width * height\n\t}"""
write a python program that removes all blank spaces in a sentence and prints it,"""\nsentence = 'the quick brown fox'\nprint(sentence.replace(' ', ''))"""
write a python program that prints all characters at even indexes in a sentence,"""\nsentence = 'the quick brown fox'\nprint(sentence[ :  : 2])"""
write a python program that prints every third character in a sentence,"""\nsentence = 'the quick brown fox'\nprint(sentence[ :  : 3])"""
write a program to remove odd numbers from a list using list comprehensions,"'\nnums = [1, 2, 3, 4, 5, 6, 7, 8]\nno_odd_nums = [i for i in nums if i % 2 == 0]'"
write a program to remove even numbers from a list using list comprehensions,"'\nnums = [1, 2, 3, 4, 5, 6, 7, 8]\nno_even_nums = [i for i in nums if i % 2 == 1]'"
write a program to print 5 random numbers between 100 and 200,"'\nimport random\nprint(random.sample(range(100, 200), 5))'"
write a program to print 5 even random numbers between 10 and 100,"'\nimport random\nprint(random.sample([i for i in range(10, 100) if i%2 == 0], 5))'"
write a program to print 5 odd random numbers between 100 and 200,"'\nimport random\nprint(random.sample([i for i in range(10, 100) if i%2 == 1], 5))'"
write a program to print 5 random numbers divisible by 4 between 100 and 200,"'\nimport random\nprint(random.sample([i for i in range(10, 100) if i%4 == 0], 5))'"
write a program that adds corresponding elements in two lists and prints a new list,"'\nlist1 = [1, 2, 3, 4, 5]\nlist2 = [5, 4, 3, 2, 1]\nsum_list = [a+b for (a,b) in zip(list1, list2)]\nprint(sum_list)'"
write a program that subtracts corresponding elements in two lists and prints a new list,"'\nlist1 = [1, 2, 3, 4, 5]\nlist2 = [5, 4, 3, 2, 1]\ndiff_list = [a-b for (a,b) in zip(list1, list2)]\nprint(diff_list)'"
write a program that multiplies corresponding elements in two lists and prints a new list,"'\nlist1 = [1, 2, 3, 4, 5]\nlist2 = [5, 4, 3, 2, 1]\nprod_list = [a*b for (a,b) in zip(list1, list2)]\nprint(prod_list)'"
write a program that divides corresponding elements in two lists and prints a new list,"'\nlist1 = [1, 2, 3, 4, 5]\nlist2 = [5, 4, 3, 2, 1]\nquot_list = [a/b for (a,b) in zip(list1, list2)]\nprint(quot_list)'"
write a python program to print 5 random vowels,"""\nimport random\nvowels = ['a', 'e', 'i', 'o', 'u']\nprint([random.choice(vowels) for _ in range(5)])"""
write a python program that creates a dictionary whose keys are numbers from 1 to 10 and values are cubes of the key,"'\ncube_dict = {}\nfor i in range(1, 11) : \n\tcube_dict[i] = i ** 3'"
write a program to create a string variable and print the amount of memory it consumes,"""\nimport sys\nstring_var = 'string variable'\nprint(sys.getsizeof(string_var))"""
write a python function that joins strings in a list and returns the result,"'\ndef join_string_parts(str_list) : \n\treturn "" "".join(str_list)'"
write a python program that reverses an integer and prints it,'\nnum = 12345\nreversed = int(str(num)[ :  : -1])\nprint(reversed)'
write a python program that sorts and prints a comma separated list of values,"""\nvalues = 'one,two,three,four,five'\nitems = values.split(',')\nitems.sort()\nprint(','.join(items))"""
write a python program to print unique words in a sentence,"""\nsentence = 'the king is the one'\nunique = set(sentence.split(' '))\nprint(unique)"""
write a python program that multiplies a tuple n times and print the result,"'\nmy_tuple = (1, 2, 3)\nn = 3\nprint(my_tuple * 3)'"
write a python program to multiply three numbers and print the result,'\nnum1 = 2\nnum2 = 4\nnum3 = 6\nprint(num1 * num2 * num3)'
write a python program to print the sum of first n numbers,'\nn = 10\nsum = 0\nwhile n > 0 : \n\tsum += n\n\tn -= 1\nprint(sum)'
write a python program to print the factorial of a number,'\nnum = 5\nfact = 1\nwhile num > 0 : \n\tfact *= num\n\tnum -= 1\nprint(fact)'
write a python function to return the factors of a number,"'\ndef get_factors(num) : \n\tfactors = []\n\tfor i in range(1, num + 1) : \n\t\t if num % i == 0 : \n\t\t\tfactors.append(i)\n\treturn factors'"
write a python function that returns True if the product of two provided numbers is even,"'\ndef is_prod_even(num1, num2) : \n\tprod = num1 * num2\n\treturn not prod % 2'"
write a python function that returns True if the sum of two provided numbers is even,"'\ndef is_prod_even(num1, num2) : \n\tsum = num1 + num2\n\treturn not sum % 2'"
write a python program to print the first 5 items in a list,"'\nmy_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\nprint(my_list[ : 5])'"
write a python program to print the last 3 items in a list,"'\nmy_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\nprint(my_list[-3 : ])'"
write a python program to print the items in a list apart from the first 4,"'\nmy_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\nprint(my_list[4 : ])'"
write a python function that makes all negative values in a list zero and returns it,'\ndef make_negative_zero(items) : \n\treturn [0 if item < 0 else item for item in items]'
write a python program to shuffle the items in a list and print it,"'\nfrom random import shuffle\nmylist = [1, 2, 3, 4, 5]\nshuffle(mylist)\nprint(mylist)'"
write a python program that adds the elements of a list to a set and prints the set,"'\nmy_set = {1, 2, 3}\nmy_list = [4, 5, 6]\nmy_set.update(my_list)\nprint(my_set)'"
write a python program that prints the circumference of a circle,"""\nimport math\nradius = 10\nprint(f'Area :  {2 * math.pi * radius}')"""
write a python program that prints the area of a rectangle,"""\nlength = 10\nwidth = 5\nprint(f'Area :  {length * width}')"""
write a python program that prints the area of a square,"""\nside = 5\nprint(f'Area :  {side * side}')"""
write a python program to create a dictionary with numbers 1 to 5 as keys and the numbers in english as values,"""\nnumber_dict = {\n\t1 :  'one',\n\t2 :  'two',\n\t3 :  'three',\n\t4 :  'four',\n\t5 :  'five'\n}"""
write a python program to remove words less than a specified length from a sentence,"""\nsentence = 'this is my sentence and i will write it my way'\nminlength = 3\nresult = [word for word in sentence.split(' ') if len(word) >= minlength]"""
write a python program to keep words less than a specified length in a sentence,"""\nsentence = 'this is my sentence and i will write it my way'\nmaxlength = 3\nresult = [word for word in sentence.split(' ') if len(word) <= minlength]\n#### 93"""
write a python function that takes a list as an input and converts all numbers to positive numbers and returns the new list,'\ndef make_all_positive(nums) : \n\treturn [num if num > 0 else -num for num in nums]'
write a python function that takes a list as an input and converts all numbers to negative numbers and returns the new list,'\ndef make_all_negative(nums) : \n\treturn [num if num < 0 else -num for num in nums]'
write a python function to return a set of all punctuation used in a string,"'\ndef get_punctuations(sentence) : \n\tpunctuations = \'\'\'!()-[]{}; : \'""\\,<>./?@#$%^&*_~\'\'\'\n\tused_punctuation = set()\n\tfor char in sentence : \n\t\t if char in punctuations : \n\t\t\tused_punctuation.add(char)\n\treturn used_punctuation'"
write a python program to print the words in a sentence in reverse order,"""\nsentence = 'the quick brown fox'\nwords = sentence.split(' ')\nwords.reverse()\nprint(' '.join(words))"""
write a python program to replace each word in a sentence with the length of the word and print it,"""\nsentence = 'the quick brown fox jumps over the lazy dog'\nwords = sentence.split(' ')\nlengths = [str(len(word)) for word in words]\nprint(' '.join(lengths))"""
write a python program to convert a set to a list,"'\nmyset = {1, 2, 4, 7}\nmylist = list(myset)'"
write a python program to convert a list to a dictionary where the key is the index and the value is the item in the list,"'\nmy_list = [1, 8, 1, 2, 2, 9]\nmy_dict = {key :  value for key, value in enumerate(my_list)}'"
"1 write a program to get numbers = 1,3,11,42,12,4001",'\nfrom collections import Iterable\nhighestnumber = -999\nfor i in numbers : \n\tif i > highestnumber : \n\thighestnumber = i\nprint(numbers.index(highestnumber))'
"2 write a program to get numbers = 1,3,11,42,12,4001",'\nhighestnumber = -999\nfor i in numbers : \n\tif i > highestnumber : \n\thighestnumber = i\nprint(numbers.index(highestnumber))'
3 add 1 to all elements in list python,"'\nlst = [1,2,3]\nlist(map(lambda x : x+1, lst))'"
4 add a string to each element of a list python,"""\nmy_list = ['foo', 'fob', 'faz', 'funk']\nstring = 'bar'\nlist2 = list(map(lambda orig_string :  orig_string + string, my_list))"""
5 add a third dimension matrix dataset python,'\nx = [2D_matrix] # To convert from a 2-D to 3-D\n# or \nx = [[[value1]]] # To convert from a 1-D to 3-D'
6 python add all values of another list,"'\na = [1, 2, 3]\nb = [4, 5, 6]\na += b'"
7 add a value to the start of a list python,"'\nvar=7\narray = [1,2,3,4,5,6]\narray.insert(0,var)'"
8 print into lowersase an uppercase sentence in python,"'\ns = ""Kilometer""\nprint(s.lower())\n#9 sort a dictionary\nmydictionary  :  {1 :  1, 7 :  2, 4 :  2, 3 :  1, 8 :  1}\nsortedDictionary = sorted(mydictionary.keys())'"
10 limit decimals to only two decimals in python,"'\nanswer = str(round(answer, 2))'"
11 print how many keys are in a dictionary python,"""\na = {'foo' : 42, 'bar' : 69}\nprint(len(a))"""
11 access index of a character in a string python,"""\nfoo = 'Hello'\nfoo.find('lo')"""
12 python print last element of list,"'\nmylist = [0, 1, 2]\nprint(myList[-1]) '"
13 how to add a blank line in python,"'\nprint("""")'"
14 how to add element at first position in array python,"'\nx = [1,3,4]\na = 2\nx.insert(1,a)'"
15 how to add extra zeros after decimal in python,"""\nformat(2.0, '.6f')\n'2.000000'"""
16 how to add list numbers in python,"'\nnumbers = [1,2,3,4,5,1,4,5] \nSum = sum(numbers) '"
17 split list into lists of equal length python,"'\n[lst[i : i + n] for i in range(0, len(lst), n)]'"
18 how to break out of nested loops python,"'\nx_loop_must_break = False\nfor x in [1, 2, 3] : \n\tprint(f""x is {x}"")\n\tfor y in [1, 2, 3] : \n\t\tprint(f""y is {y}"")\n\t\tif y == 2 : \n\t\t\tx_loop_must_break = True\n\t\t\tbreak\n\tif x_loop_must_break :  break'"
19 capitalize first letter in python in list,"""\nmy_list = ['apple pie', 'orange jam']\nmy_list[0].capitalize()\n#20 how to check if a list is a subset of another list\nif(all(x in test_list for x in sub_list)) :  \n\tflag = True"""
21 write a function to check if string is camelcase pythonpython by Breakable Buffalo on Aug 09 2020 Donate,"'\ndef is_camel_case(s) : \n\treturn s != s.lower() and s != s.upper() and ""_"" not in s\n#22 how to check if string is in byte formate pythin\nisinstance(string, bytes)'"
23 how to check nth prime in python,"'\nx=int(input())\nn,c=1,0\nwhile(c<x) : \n\tn+=1\n\tfor i in range(2,n+1) : \n\t\tif(n%i==0) : \n\t\t\tbreak\n\tif(i==n) : \n\t\tc=c+1'"
24 how to convert fahrenheit to celsius in python,'\nCelsius = (Fahrenheit - 32) * 5.0/9.0\n#25 print binary of a decimal number\na=6\nprint(bin(a))'
26 write a python function to convert from base 2 to base 10 in pythonpython by TheRubberDucky on Nov 06 2020 Donate,"'\ndef getBaseTen(binaryVal) : \n\tcount = 0\n\tbinaryVal = binaryVal[ :  : -1]\n\tfor i in range(0, len(binaryVal)) : \n\t\tif(binaryVal[i] == ""1"") : \n\t\t\tcount += 2**i\n\treturn count'"
27 write a python funtion to execute bash commands,"'\nimport subprocess\nsubprocess.call([""sudo"", ""apt"", ""update""])'"
27 write a function to generate and print a random number between 0 and 22,"'\nimport random\nn = random.randint(0,22)\nprint(n)'"
28 to get a random element from an array in python,"'\nimport random\nlist_ = [1,2,3,4]\nrandom.choice(list_)'"
29 print current day in python,"'\nfrom datetime import date\ntoday = date.today()\nprint(""Today\'s date : "", today)'"
30 program to count number of cpu cores available,'\nimport os\nos.cpu_count()'
30 get rid of all null values in array python,"""\nmylist = [1, 2, 3, '', 4]\nmylist = [i for i in mylist if i]"""
31 get the most common number in python,"'\nfrom statistics import mode\nmode((1, 2, 4, 4, 5, 4, 4, 2, 3, 8, 4, 4, 4))'"
32 print current version of python,'\nimport sys\nprint(sys.version)'
33 write a python function to flatten nested lists,"'\nfrom collections import Iterable\ndef flatten(lis) : \n\tfor item in lis : \n\t\tif isinstance(item, Iterable) and not isinstance(item, str) : \n\t\t\tfor x in flatten(item) : \n\t\t\t\tyield x\n\t\telse : \n\t\t\tyield item'"
34 write a python function to convert a string  into xml,"""\nimport xml.etree.ElementTree as ET\nroot = ET.fromstring(country_data_as_string)\n#35 how to open xml file element tree\nimport xml.etree.ElementTree as ET\ntree = ET.parse('filename.xml') \ntree_root = tree.getroot() """
36 python parse datetime from string,"""\nfrom datetime import datetime\ndatetime_object = datetime.strptime('Jun 1 2005  1 : 33PM', '%b %d %Y %I : %M%p')"""
37 print list as matrix in python without bracketspython by Bright Butterfly on Jun 14 2020 Donate,"""\ndata = [7, 7, 7, 7]\nprint(*data, sep='')"""
38 how to read a specific line from a text file in python,"'\nline = open(""file.txt"", ""r"").readlines()[7]'"
39 how to remove integer from string in python,"""\ns = '12abcd405'\nresult = ''.join([i for i in s if not i.isdigit()])"""
40 write a function to return the nth fibonacci in python,"'\ndef Fibonacci(n) :  \n\tif n<0 :  \n\t\tprint(""Incorrect input"")\n\telif n==1 :  \n\t\treturn 0\n\telif n==2 :  \n\t\treturn 1\n\telse :  \n\t\treturn Fibonacci(n-1)+Fibonacci(n-2) '"
41 how to sort a list in python using lambda,"'\ndata = [(""Apples"", 5, ""20""), (""Pears"", 1, ""5""), (""Oranges"", 6, ""10"")]\ndata.sort(key=lambda x : x[0])'"
43 write a to time a python script,'\nfrom datetime import datetime\nstart = datetime.now()\ndo_something() : ...\nprint(datetime.now() - start)'
46 write Python Function to print leaders in array,"'\ndef printLeaders(arr,size) : \n\tfor i in range(0, size) : \n\t\tfor j in range(i+1, size) : \n\t\t\tif arr[i]<arr[j] : \n\t\t\t\tbreak\n\t\tif j == size-1 :   \n\t\t\tprint(arr[i])\narr=[16, 17, 4, 3, 5, 2] \nprintLeaders(arr, len(arr))'"
47 write a python function to print lcm of n numbers python,"'\nimport math\ndef LCMofArray(a) : \n\tlcm = a[0]\n\tfor i in range(1,len(a)) : \n\tlcm = lcm*a[i]//math.gcd(lcm, a[i])\n\treturn lcm\narr1 = [1,2,3]\nprint(""LCM of arr1 elements : "", LCMofArray(arr1))'"
48 write a python program to merge a list of dictionaires,'\nresult = {}\nfor d in L : \n\tresult.update(d)'
51 write a python function to find a missing number in a list of consecutive natural numbers,'\ndef getMissingNo(A) :  \n\tn = len(A) \n\ttotal = (n + 1)*(n + 2)/2\n\tsum_of_A = sum(A) \n\treturn total - sum_of_A '
52 write a python program to normalize a list of numbers and print the result,"'\na = [2,4,10,6,8,4]\namin, amax = min(a), max(a)\nfor i, val in enumerate(a) : \n\ta[i] = (val-amin) / (amax-amin)\nprint(a)'"
53  write a python program to permutations of a given string in python and print the result,"'\nfrom itertools import permutations \nimport string \ns = ""GEEK""\na = string.ascii_letters \np = permutations(s) \nd = [] \nfor i in list(p) :  \n\tif (i not in d) :  \n\t\td.append(i) \n\t\tprint(\'\'.join(i)) '"
54 Write a Python function to check if a number is a perfect square,'\ndef is_perfect_square(n) : \n\tx = n // 2\n\ty = set([x])\n\twhile x * x != n : \n\t\tx = (x + (n // x)) // 2\n\t\tif x in y :  return False\n\t\ty.add(x)\n\treturn True'
57 Write a Python function to find the single number in a list that doesn't occur twice.,'\ndef single_number(arr) : \n\tresult = 0\n\tfor i in arr : \n\t\tresult ^= i\n\treturn result'
58 Write a Python function to find the single element in a list where every element appears three times except for one.,"'\ndef single_number(arr) : \n\tones, twos = 0, 0\n\tfor x in arr : \n\t\tones, twos = (ones ^ x) & ~twos, (ones & x) | (twos & ~x)\n\tassert twos == 0\n\treturn ones'"
59 Write a function program to add the digits of a positive integer repeatedly until the result has a single digit.,'\ndef add_digits(num) : \n\t\treturn (num - 1) % 9 + 1 if num > 0 else 0'
61 Write a Python function to reverse the bits of an integer (32 bits unsigned).,'\ndef reverse_Bits(n) : \n\t\tresult = 0\n\t\tfor i in range(32) : \n\t\t\tresult <<= 1\n\t\t\tresult |= n & 1\n\t\t\tn >>= 1\n\t\treturn result'
62 Write a Python function to check a sequence of numbers is an arithmetic progression or not.,'\ndef is_arithmetic(l) : \n\tdelta = l[1] - l[0]\n\tfor index in range(len(l) - 1) : \n\t\tif not (l[index + 1] - l[index] == delta) : \n\t\t\t\treturn False\n\treturn True'
64 Write a Python function to compute the sum of the two reversed numbers and display the sum in reversed form.,"'\ndef reverse_sum(n1, n2) : \n\treturn int(str(int(str(n1)[ :  : -1]) + int(str(n2)[ :  : -1]))[ :  : -1])'"
"65 Write a Python function where you take any positive integer n, if n is even, divide it by 2 to get n / 2. If n is odd, multiply it by 3 and add 1 to obtain 3n + 1. Repeat the process until you reach 1.",'\ndef collatz_sequence(x) : \n\tnum_seq = [x]\n\tif x < 1 : \n\t\treturn []\n\twhile x > 1 : \n\t\tif x % 2 == 0 : \n\t\t\tx = x / 2\n\t\telse : \n\t\t\tx = 3 * x + 1\n\t\tnum_seq.append(x)    \n\treturn num_seq'
65 Write a Python function to check if a given string is an anagram of another given string.,"'\ndef is_anagram(str1, str2) : \n\tlist_str1 = list(str1)\n\tlist_str1.sort()\n\tlist_str2 = list(str2)\n\tlist_str2.sort()\n\treturn (list_str1 == list_str2)'"
66 Write a Python function to push all zeros to the end of a list.,'\ndef move_zero(num_list) : \n\ta = [0 for i in range(num_list.count(0))]\n\tx = [ i for i in num_list if i != 0]\n\tx.extend(a)\n\treturn(x)'
67 Write a Python function to the push the first number to the end of a list.,'\ndef move_last(num_list) : \n\ta = [num_list[0] for i in range(num_list.count(num_list[0]))]\n\tx = [ i for i in num_list if i != num_list[0]]\n\tx.extend(a)\n\treturn(x)'
68 Write a Python function to find the length of the last word.,'\ndef length_of_last_word(s) : \n\t\twords = s.split()\n\t\tif len(words) == 0 : \n\t\t\treturn 0\n\t\treturn len(words[-1])'
70 Write a Python function to find the single number which occurs odd numbers and other numbers occur even number.,'\ndef odd_occurrence(arr) : \n\t# Initialize result\n\tresult = 0\n\t# Traverse the array\n\tfor element in arr : \n\t\t# XOR\n\t\tresult = result ^ element\n\treturn result'
72 Write a Python function to create a new array such that each element at index i of the new array is the product of all the numbers of a given array of integers except the one at i.,'\ndef product(nums) : \n\tnew_nums = []\n\tfor i in nums : \n\t\tnums_product = 1\n\t\tfor j in nums :      \n\t\t\tif j != i : \n\t\t\t\tnums_product = nums_product * j\n\t\tnew_nums.append(nums_product)\n\treturn new_nums'
73 Write a python function to find the difference between the sum of the squares of the first two hundred natural numbers and the square of the sum.,"'\nr = range(1, 201)\na = sum(r)\nprint (a * a - sum(i*i for i in r))'"
74 Write a Python function to compute s the sum of the digits of the number 2 to the power 20.,'\ndef digits_sum() : \n\tn = 2**20\n\tans = sum(int(c) for c in str(n))\n\treturn str(ans)'
75 Write a Python program to compute the sum of all the multiples of 3 or 5 below 500.,"'\nn = 0\nfor i in range(1,500) : \n\t\tif not i % 5 or not i % 3 : \n\t\t\tn = n + i\nprint(n)'"
76 Write a Python function to converting an integer to a string in any base.,"'\ndef to_string(n,base) : \n\tconver_tString = ""0123456789ABCDEF""\n\tif n < base : \n\t\t return conver_tString[n]\n\telse : \n\t\t return to_string(n//base,base) + conver_tString[n % base'"
77 Write a Python function to calculate the geometric sum of n-1.,"'\ndef geometric_sum(n) : \n\tif n < 0 : \n\treturn 0\n\telse : \n\treturn 1 / (pow(2, n)) + geometric_sum(n - 1)'"
78 Write a Python function to find the greatest common divisor (gcd) of two integers.,"'\ndef Recurgcd(a, b) : \n\tlow = min(a, b)\n\thigh = max(a, b)\n\tif low == 0 : \n\t\treturn high\n\telif low == 1 : \n\t\treturn 1\n\telse : \n\t\treturn Recurgcd(low, high%low)'"
"79 Write a program to print which will find all such numbers which are divisible by 7 but are not a multiple of 5,","""\nbetween 2000 and 3200 (both included).  \nl=[]\nfor i in range(2000, 3201) : \n\tif (i%7==0) and (i%5!=0) : \n\t\tl.append(str(i))\nprint ','.join(l)"""
81 Write a Python program to convert a given Bytearray to Hexadecimal string.,"""\ndef bytearray_to_hexadecimal(list_val) : \n\t\tresult = ''.join('{ : 02x}'.format(x) for x in list_val)  \n\t\treturn(result)"""
82 Write a Python program to count number of substrings with same first and last characters of a given string.,"'\ndef no_of_substring_with_equalEnds(str1) :  \n\tresult = 0; \n\tn = len(str1); \n\tfor i in range(n) :  \n\t\tfor j in range(i, n) :  \n\t\t\tif (str1[i] == str1[j]) :  \n\t\t\t\tresult = result + 1\n\treturn result'"
83 Write a Python program to move all spaces to the front of a given string in single traversal.,"""\ndef moveSpaces(str1) :  \n\tno_spaces = [char for char in str1 if char!=' ']   \n\tspace= len(str1) - len(no_spaces)\n\tresult = ' '*space\t\n\treturn result + ''.join(no_spaces)"""
84 Write a Python program to find maximum length of consecutive 0’s in a given binary string.,"'\ndef max_consecutive_0(input_str) :  \n\t\treturn  max(map(len,input_str.split(\'1\')))\nstr1 = \'111000010000110\'\nprint(""Original string : "" + str1)\nprint(""Maximum length of consecutive 0’s : "")'"
85 Write a Python program that iterate over elements repeating each as many times as its count.,"'\nfrom collections import Counter\nc = Counter(p=4, q=2, r=0, s=-2)\nprint(list(c.elements()))'"
86 Write a Python program to generate groups of five consecutive numbers in a list,"'\nl = [[5*i + j for j in range(1,6)] for i in range(5)]\nprint(l)'"
87 Write a Python program to print the list in a list of lists whose sum of elements is the highest.,"'\nprint(max(num, key=sum))'"
88 Write a Python fuction to print the depth of a dictionary.,"""\ndef dict_depth(d) : \n\tif isinstance(d, dict) : \n\t\treturn 1 + (max(map(dict_depth, d.values())) if d else 0)\n\treturn 0\ndic = {'a' : 1, 'b' :  {'c' :  {'d' :  {}}}}\nprint(dict_depth(dic))"""
91 Write a Python function to create a multidimensional list (lists of lists) with zeros and print the output.,"'\nnums = []\nfor i in range(3) : \n\tnums.append([])\n\tfor j in range(2) : \n\t\tnums[i].append(0)\nprint(""Multidimensional list : "")\nprint(nums)'"
94 Write a Python function to print all permutations with given repetition number of characters of a given string and print the output.,"""\nfrom itertools import product\ndef all_repeat(str1, rno) : \n\tchars = list(str1)\n\tresults = []\n\tfor c in product(chars, repeat = rno) : \n\tresults.append(c)\n\treturn results\nprint(all_repeat('xyz', 3))"""
98 Write a Python program to multiply two integers without using the '*' operator in python.,"'\ndef multiply(x, y) : \n\tif y < 0 : \n\t\treturn -multiply(x, -y)\n\telif y == 0 : \n\t\treturn 0\n\telif y == 1 : \n\t\treturn x\n\telse : \n\t\treturn x + multiply(x, y - 1)'"
write a function to merge two sorted lists,"'\ndef merge_lists(lst1, lst2) : '"
write a function to find out the second maximum number in the given list,"""\ndef find_second_maximum(lst) : \n\tmax = float('-inf')\n\tsec_max = float('-inf')\n\tfor elem in list : \n\t\tif elem > max : \n\t\t\tsec_max = max\n\t\t\tmax = elem\n\t\telif elem > sec_max : \n\t\t\tsec_max = elem\n\treturn sec_max"""
write a function to right rotate a given list by given input,"'\ndef right_rotate(lst, n) : \n\tn = n % len(lst)\n\treturn lst[-n : ] + lst[ : -n]'"
"With a given tuple (1,2,3,4,5,6,7,8,9,10), write a program to print the first half values in one line and the last half values in one line.","'\ntp=(1,2,3,4,5,6,7,8,9,10)\ntp1=tp[ : 5]\ntp2=tp[5 : ]\nprint(tp1)\nprint(tp2)'"
"Write a program which accepts a string as input to print ""Yes"" if the string is ""yes"" or ""YES"" or ""Yes"", otherwise print ""No"".","'\ns= input()\nif s==""yes"" or s==""YES"" or s==""Yes"" : \n\tprint(""Yes"")\nelse : \n\tprint(""No"")'"
"Write a program which can filter even numbers in a list by using filter function. The list is: [1,2,3,4,5,6,7,8,9,10].","'\nli = [1,2,3,4,5,6,7,8,9,10]\nevenNumbers = filter(lambda x :  x%2==0, li)\nprint(evenNumbers)'"
"Write a program which can map() to make a list whose elements are square of elements in [1,2,3,4,5,6,7,8,9,10].","'\nli = [1,2,3,4,5,6,7,8,9,10]\nsquaredNumbers = map(lambda x :  x**2, li)\nprint(squaredNumbers)'"
"Write a program which can map() and filter() to make a list whose elements are square of even number in [1,2,3,4,5,6,7,8,9,10] and print it","'\nli = [1,2,3,4,5,6,7,8,9,10]\nevenNumbers = map(lambda x :  x**2, filter(lambda x :  x%2==0, li))\nprint(evenNumbers)'"
Write a program which can filter() to make a list whose elements are even number between 1 and 20 (both included).,"'\nevenNumbers = filter(lambda x :  x%2==0, range(1,21))\nprint(evenNumbers)'"
"Assuming that we have some email addresses in the ""username@companyname.com"" format, please write program to print the user name of a given email address. Both user names and company names are composed of letters only.","'\nimport re\nemailAddress = \'bing@google.com\'\npat2 = ""(\\w+)@((\\w+\\.)+(com))""\nr2 = re.match(pat2,emailAddress)\nprint(r2.group(1))'"
"Assuming that we have some email addresses in the ""username@companyname.com"" format, please write program to print the company name of a given email address. Both user names and company names are composed of letters only.","'\nimport re\nemailAddress = \'bing@google.com\'\npat2 = ""(\\w+)@(\\w+)\\.(com)""\nr2 = re.match(pat2,emailAddress)\nprint(r2.group(2))'"
Write a program which accepts a sequence of words separated by whitespace as input to print the words composed of digits only.,"'\nimport re\ns = input()\nprint(re.findall(""\\d+"",s))\n# Print a unicode string ""hello world"".\nunicodeString = u""hello world!""\nprint(unicodeString)'"
Write a program to read an ASCII string and to convert it to a unicode string encoded by utf-8.,"'\ns = input()\nu = unicode( s ,""utf-8"")\nprint(u)'"
Write a program to compute 1/2+2/3+3/4+...+n/n+1 with a given n input by input parameters.,"'\nn=int(input())\nsum=0.0\nfor i in range(1,n+1) : \n\tsum += float(float(i)/(i+1))\nprint(sum)'"
Write a function to compute: f(n)=f(n-1)+100 when n>0 and f(0)=1 with a given n input by input parameters.,'\ndef f(n) : \n\tif n==0 : \n\t\treturn 0\n\telse : \n\t\treturn f(n-1)+100'
Please write a function to compute the Fibonacci sequence until a given number via input paramters.,'\ndef fibo(n) : \n\tif n == 0 :  return 0\n\telif n == 1 :  return 1\n\telse :  return f(n-1)+f(n-2)'
Please write a function using generator to print the even numbers between 0 and n in comma separated form while n is input by console.,'\ndef EvenGenerator(n) : \n\ti=0\n\twhile i<=n : \n\t\tif i%2==0 : \n\t\t\tyield i\n\t\ti+=1'
Please write a function using generator to print the numbers which can be divisible by 5 and 7 between 0 and n in comma separated form while n is input by console.,'\ndef NumGenerator(n) : \n\tfor i in range(n+1) : \n\t\tif i%5==0 and i%7==0 : \n\t\t\tyield i'
"Please write assert statements to verify that every number in the list [2,4,6,8] is even.","'\nli = [2,4,6,8]\nfor i in li : \n\tassert i%2==0'"
Please write a program which accepts basic mathematic expression from console and print the evaluation result.,'\nexpression = input()\nprint(eval(expression))'
Please generate a random float where the value is between 10 and 100 using Python math module.,'\nimport random\nprint(random.random()*100)'
Please generate a random float where the value is between 5 and 95 using Python math module.,'\nimport random\nprint(random.random()*100-5)'
Please write a program to output a random even number between 0 and 10 inclusive using random module and list comprehension.,'\nimport random\nprint(random.choice([i for i in range(11) if i%2==0]))'
"Please write a program to output a random number, which is divisible by 5 and 7, between 0 and 10 inclusive using random module and list comprehension",'\nimport random\nprint(random.choice([i for i in range(201) if i%5==0 and i%7==0]))'
Please write a program to generate a list with 5 random numbers between 100 and 200 inclusive.,"'\nimport random\nprint(random.sample(range(100), 5))'"
Please write a program to randomly generate a list with 5 even numbers between 100 and 200 inclusive.,"'\nimport random\nprint(random.sample([i for i in range(100,201) if i%2==0], 5))'"
"Please write a program to randomly generate a list with 5 numbers, which are divisible by 5 and 7 , between 1 and 1000 inclusive.","'\nimport random\nprint(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))'"
Please write a program to randomly print a integer number between 7 and 15 inclusive.,"'\nimport random\nprint(random.randrange(7,16))'"
"Please write a program to compress and decompress the string ""hello world!hello world!hello world!hello world!"".","""\nimport zlib\ns = b'hello world!hello world!hello world!hello world!'\nt = zlib.compress(s)\nprint(t)\nprint(zlib.decompress(t))"""
"Please write a program to print the running time of execution of ""1+1"" for 100 times.","'\nfrom timeit import Timer\nt = Timer(""for i in range(100) : 1+1"")\nprint(t.timeit())'"
"Please write a program to shuffle and print the list [3,6,7,8].","'\nfrom random import shuffle\nli = [3,6,7,8]\nshuffle(li)\nprint(li)'"
"Please write a program to shuffle and print the list [3,6,7,8].","'\nfrom random import shuffle\nli = [3,6,7,8]\nshuffle(li)\nprint(li)'"
"Please write a program to print the list after removing delete even numbers in [5,6,77,45,22,12,24].","'\nli = [5,6,77,45,22,12,24]\nli = [x for x in li if x%2!=0]\nprint(li)'"
"By using list comprehension, please write a program to print the list after removing delete numbers which are divisible by 5 and 7 in [12,24,35,70,88,120,155].","'\nli = [12,24,35,70,88,120,155]\nli = [x for x in li if x%5!=0 and x%7!=0]\nprint(li)'"
"By using list comprehension, please write a program to print the list after removing the 0th, 2nd, 4th,6th numbers in [12,24,35,70,88,120,155].","'\nli = [12,24,35,70,88,120,155]\nli = [x for (i,x) in enumerate(li) if i%2!=0]\nprint(li)'"
"By using list comprehension, please write a program generate a 3*5*8 3D array whose each element is 0.",'\narray = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]\nprint(array)'
"By using list comprehension, please write a program to print the list after removing the 0th,4th,5th numbers in [12,24,35,70,88,120,155].","'\nli = [12,24,35,70,88,120,155]\nli = [x for (i,x) in enumerate(li) if i not in (0,4,5)]\nprint(li)'"
"By using list comprehension, please write a program to print the list after removing the value 24 in [12,24,35,24,88,120,155].","'\nli = [12,24,35,24,88,120,155]\nli = [x for x in li if x!=24]\nprint(li)'"
"With two given lists [1,3,6,78,35,55] and [12,24,35,24,88,120,155], write a program to make a list whose elements are intersection of the above given lists.","'\nset1=set([1,3,6,78,35,55])\nset2=set([12,24,35,24,88,120,155])\nset1 &= set2\nli=list(set1)\nprint(li)'"
Please write a program which count and print the numbers of each character in a string input by console.,"""\ndic = {}\ns=input()\nfor s in s : \n\tdic[s] = dic.get(s,0)+1\nprint('\\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))"""
Please write a program which accepts a string from console and print it in reverse order.,'\ns=input()\ns = s[ :  : -1]\nprint(s)'
Please write a program which accepts a string from console and print the characters that have even indexes.,'\ns=input()\ns = s[ :  : 2]\nprint(s)'
"Please write a program which prints all permutations of [1,2,3]","'\nimport itertools\nprint(list(itertools.permutations([1,2,3])))'"
Write a program to solve a classic ancient Chinese puzzle:  We count 35 heads and 94 legs among the chickens and rabbits in a farm. How many rabbits and how many chickens do we have?,"""\ndef solve(numheads,numlegs) : \n\tns='No solutions!'\n\tfor i in range(numheads+1) : \n\t\tj=numheads-i\n\t\tif 2*i+4*j==numlegs : \n\t\t\treturn i,j\n\treturn ns,ns"""
"Write a program which will find all such numbers which are divisible by 7 but are not a multiple of 5, between 2000 and 3200 (both included).   The numbers obtained should be printed in a comma-separated sequence on a single line.","""\nl=[]\nfor i in range(2000, 3201) : \n\tif (i%7==0) and (i%5!=0) : \n\t\tl.append(str(i))\nprint(','.join(l))"""
Write a function which can compute the factorial of a given numbers.   The results should be printed in a comma-separated sequence on a single line.,'\ndef fact(x) : \n\tif x == 0 : \n\t\treturn 1\n\treturn x * fact(x - 1)\nx=int(input())\nprint(fact(x))'
"With a given integral number n, write a program to generate a dictionary that contains (i, i*i) such that is an integral number between 1 and n (both included). and then the program should print the dictionary.","'\nn=int(input())\nd=dict()\nfor i in range(1,n+1) : \n\td[i]=i*i\nprint(d)'"
Write a program that calculates and prints the value according to the given formula: Q = Square root of [(2 * C * D)/H] Following are the fixed values of C and H: C is 50. H is 30. D is the variable whose values should be input to your program in a comma-separated sequence.,"""\nimport math\nc=50\nh=30\nvalue = []\nitems=[x for x in input().split(',')]\nfor d in items : \n\tvalue.append(str(int(round(math.sqrt(2*c*float(d)/h)))))\nprint(','.join(value))"""
Write a program that accepts a comma separated sequence of words as input and prints the words in a comma-separated sequence after sorting them alphabetically.,"""\nitems=[x for x in input().split(',')]\nitems.sort()\nprint(','.join(items))"""
Write a program that accepts sequence of lines as input and prints the lines after making all characters in the sentence capitalized.,'\nlines = []\nwhile True : \n\ts = input()\n\tif s : \n\t\tlines.append(s.upper())\n\telse : \n\t\tbreak;\nfor sentence in lines : \n\tprint(sentence)'
Write a program that accepts a sequence of whitespace separated words as input and prints the words after removing all duplicate words and sorting them alphanumerically.,"'\ns = input()\nwords = [word for word in s.split("" "")]\nprint("" "".join(sorted(list(set(words)))))'"
Write a program which accepts a sequence of comma separated 4 digit binary numbers as its input and then check whether they are divisible by 5 or not. The numbers that are divisible by 5 are to be printed in a comma separated sequence.,"""\nvalue = []\nitems=[x for x in input().split(',')]\nfor p in items : \n\tintp = int(p, 2)\n\tif not intp%5 : \n\t\tvalue.append(p)\nprint(','.join(value))"""
"Write a program, which will find all such numbers between 1000 and 3000 (both included) such that each digit of the number is an even number. The numbers obtained should be printed in a comma-separated sequence on a single line.","'\nvalues = []\nfor i in range(1000, 3001) : \n\ts = str(i)\n\tif (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0) : \n\t\tvalues.append(s)\nprint("","".join(values))'"
Write a program that accepts a sentence and calculate the number of letters and digits.,"'\ns = input()\nd={""DIGITS"" : 0, ""LETTERS"" : 0}\nfor c in s : \n\tif c.isdigit() : \n\t\td[""DIGITS""]+=1\n\telif c.isalpha() : \n\t\td[""LETTERS""]+=1\n\telse : \n\t\tpass\nprint(""LETTERS"", d[""LETTERS""])\nprint(""DIGITS"", d[""DIGITS""])'"
"Write a function with a generator which can iterate the numbers, which are divisible by 7, between a given range 0 and n.",'\ndef putNumbers(n) : \n\ti = 0\n\twhile i<n : \n\t\tj=i\n\t\ti=i+1\n\t\tif j%7==0 : \n\t\t\tyield j\nfor i in reverse(100) : \n\tprint(i)'
Write a program to compute the frequency of the words from the input. The output should output after sorting the key alphanumerically.,"'\nfreq = {}   # frequency of words in text\nline = input()\nfor word in line.split() : \n\tfreq[word] = freq.get(word,0)+1\nwords = freq.keys()\nwords.sort()\nfor w in words : \n\tprint(""%s : %d"" % (w,freq[w]))'"
Write a method which can calculate and return square value of number,'\ndef square(num) : \n\treturn num ** 2'
Please write a program to print Python built-in functions document of abs(),'\nprint(abs.__doc__)'
Please write a program to print Python built-in functions document of int(),'\nprint(int.__doc__)'
Please write a program to print Python built-in functions document of input(),"'\nprint(input.__doc__)\n# Define a class, which has a class parameter and have a same instance parameter.\nclass Person : \n\tname = ""Person""\n\tdef __init__(self, name = None) : \n\t\tself.name = name'"
Define a function which can compute the sum of two numbers.,"'\ndef sum_nums(number1, number2) : \n\treturn number1+number2'"
Define a function that can convert a integer into a string and print it in console.,'\ndef convert_to_str(n) : \n\tprint(str(n))'
Define a function that can receive two integral numbers in string form and compute their sum and then print it in console.,"'\ndef sum_of_ints(s1,s2) : \n\tprint(int(s1)+int(s2))'"
Define a function that can accept two strings as input and concatenate them and then print it in console.,"'\ndef add(s1,s2) : \n\tprint(s1+s2)'"
"Define a function that can accept two strings as input and print the string with maximum length in console. If two strings have the same length, then the function should print al l strings line by line.","'\ndef max_len_str(s1,s2) : \n\tlen1 = len(s1)\n\tlen2 = len(s2)\n\tif len1>len2 : \n\t\tprint(s1)\n\telif len2>len1 : \n\t\tprint(s2)\n\telse : \n\t\tprint(s1)\n\t\tprint(s2)'"
"Define a function that can accept an integer number as input and print the ""It is an even number"" if the number is even, otherwise print ""It is an odd number"".","'\ndef even_or_odd_num(n) : \n\tif n%2 == 0 : \n\t\tprint(""It is an even number"")\n\telse : \n\t\tprint(""It is an odd number"")'"
Define a function which can print a dictionary where the keys are numbers between 1 and 3 (both included) and the values are square of keys.,'\ndef print_dict_keys_val_1() : \n\td=dict()\n\td[1]=1\n\td[2]=2**2\n\td[3]=3**2\n\tprint(d)'
Define a function which can print a dictionary where the keys are numbers between 1 and 20 (both included) and the values are square of keys.,"'\ndef print_dict_keys_val_2() : \n\td=dict()\n\tfor i in range(1,21) : \n\t\td[i]=i**2\n\tprint(d)'"
Define a function which can generate a dictionary where the keys are numbers between 1 and 20 (both included) and the values are square of keys. The function should just print the values only.,"'\ndef print_dict_keys_val_3() : \n\td=dict()\n\tfor i in range(1,21) : \n\t\td[i]=i**2\n\tfor (k,v) in d.items() : \t\n\t\tprint(v)'"
Define a function which can generate a dictionary where the keys are numbers between 1 and 20 (both included) and the values are square of keys. The function should just print the keys only.,"'\ndef print_dict_keys_val_4() : \n\td=dict()\n\tfor i in range(1,21) : \n\t\td[i]=i**2\n\tfor k in d.keys() : \t\n\t\tprint(k)'"
Define a function which can generate and print a list where the values are square of numbers between 1 and 20 (both included).,"'\ndef printList() : \n\tli=list()\n\tfor i in range(1,21) : \n\t\tli.append(i**2)\n\tprint(li)'"
Define a function which can generate a list where the values are square of numbers between 1 and 20 (both included). Then the function needs to print the first 5 elements in the list.,"'\ndef printList() : \n\tli=list()\n\tfor i in range(1,21) : \n\t\tli.append(i**2)\n\tprint(li[ : 5])'"
Define a function which can generate a list where the values are square of numbers between 1 and 20 (both included). Then the function needs to print the last 5 elements in the list.,"'\ndef printList() : \n\tli=list()\n\tfor i in range(1,21) : \n\t\tli.append(i**2)\n\tprint(li[-5 : ])'"
Define a function which can generate a list where the values are square of numbers between 1 and 20 (both included). Then the function needs to print all values except the first 5 elements in the list.,"'\ndef printList() : \n\tli=list()\n\tfor i in range(1,21) : \n\t\tli.append(i**2)\n\tprint(li[5 : ])'"
Define a function which can generate and print a tuple where the value are square of numbers between 1 and 20 (both included).,"'\ndef printTuple() : \n\tli=list()\n\tfor i in range(1,21) : \n\t\tli.append(i**2)\n\tprint(tuple(li))'"
write a python function to check if the user provided string is palindrome or not a palindrome,"'\ndef ifPalindrome(inVar) : \n\trevInvar = []\n\tfor _ in range((len(inVar)-1), -1, -1) : \n\t\trevInvar.append(inVar[_])\n\tif revInvar == inVar : \n\t\treturn ""Palindrome""\n\telse : \n\t\treturn ""Not a palindrome""'"
write a python function to Calculate the date of n days from the given date.,"'\nfrom datetime import datetime, timedelta\ndef add_days(n, d = datetime.today()) : \n\treturn d + timedelta(n)'"
write a python function to check if all elements in a list are equal.,'\ndef all_equal(lst) : \n\treturn len(set(lst)) == 1'
write a python function to check if all elements in a list are unique.,'\ndef all_unique(lst) : \n\treturn len(lst) == len(set(lst))'
write a python function to find the average of two or more numbers and return the average,"'\ndef average(*args) : \n\treturn sum(args, 0.0) / len(args)'"
write a python function to convert a user provided string to camelcase,"'\nfrom re import sub\ndef camel(s) : \n\ts = sub(r""(_|-)+"", "" "", s).title().replace("" "", """")\n\treturn \'\'.join([s[0].lower(), s[1 : ]])'"
write a python function to capitalize the first letter of a string,"""\ndef capitalize(s, lower_rest = False) : \n\treturn ''.join([s[ : 1].upper(), (s[1 : ].lower() if lower_rest else s[1 : ])])"""
write a python function to convert Celsius to Fahrenheit.,'\ndef celsius_to_fahrenheit(degrees) : \n\treturn ((degrees * 1.8) + 32)'
write a python function to convert a given string into a list of words.,"""\nimport re\ndef words(s, pattern = '[a-zA-Z-]+') : \n\treturn re.findall(pattern, s)"""
write a python function thats returns a flat list of all the values in a flat dictionary,'\ndef values_only(flat_dict) : \n\treturn list(flat_dict.values())'
write a python function thats accepts a list and returns most frequent element that appears in a list,"'\ndef most_frequent(list) : \n\treturn max(set(list), key = list.count)'"
write a python program to create multiplication table of 5,"""\nn=5\nfor i in range(1,11) : \n\tprint(n,'x',i,'=',n*i)"""
write a python function to create multiplication table from the user provided number,"""\ndef multiplication_table(n) : \n\tfor i in range(1,11) : \n\tprint(n,'x',i,'=',n*i)"""
write a python program to print a dictionary where the keys are numbers between 1 and 10 (both included) and the values are square of keys.,"'\nd=dict()\nfor x in range(1,11) : \n\td[x]=x**2\nprint(d)'"
write a python program to sort a list of tuples using Lambda.,"'\nmarks = [(\'Computer Science\', 88), (\'Physics\', 90), (\'Maths\', 97), (\'Chemistry\', 82)]\nprint(""Original list of tuples : "")\nprint(marks)\nmarks.sort(key = lambda x :  x[1])\nprint(""\\nSorting the List of Tuples : "")\nprint(marks)'"
write a python function to calculate the median of user provided list of numbers,'\ndef median(list) : \n\tlist.sort()\n\tlist_length = len(list)\n\tif list_length % 2 == 0 : \n\treturn (list[int(list_length / 2) - 1] + list[int(list_length / 2)]) / 2\n\treturn float(list[int(list_length / 2)])'
write a Python program to calculate simple interest,"""\np = 10000\nt = 6\nr = 8\nsi = (p * t * r)/100\nprint(f'Simple interest is {si}')"""
write a python Program to find area of circle,"""\nPI = 3.14\nradius = float(6)\narea = PI * radius * radius\ncircumference = 2 * PI * radius\nprint(f'Area Of a Circle {area}')\nprint(f'Circumference Of a Circle {circumference}')"""
write a python function to find the area of a circle using the user provided radius,"""\ndef area_of_circle(radius) : \n\tPI = 3.14\n\tradius = float(radius)\n\tarea = PI * radius * radius\n\tcircumference = 2 * PI * radius\n\tprint(f'Area Of a Circle {area}')\n\tprint(f'Circumference Of a Circle {circumference}')"""
write a python function to find the area of a circle using the user provided circumference,"""\ndef area_of_circle(circumference) : \n\tcircumference = float(circumference)\n\tPI = 3.14\n\tarea = (circumference * circumference)/(4 * PI)\n\tprint(f'Area Of a Circle {area}')"""
write a python function to find the area of a circle using the user provided diameter,"""\ndef area_of_circle(diameter) : \n\tPI = 3.14\n\tarea = (PI/4) * (diameter * diameter)\n\tprint(f'Area Of a Circle {area}')"""
write a python function to generate 4 digit OTP,"'\nimport math, random \ndef generateOTP()  :  \n\tdigits = ""0123456789""\n\tOTP = """" \n\tfor i in range(4)  :  \n\t\tOTP += digits[math.floor(random.random() * 10)] \n\treturn OTP'"
write a python function to generate 6 digit OTP,"'\nimport math, random \ndef generateOTP()  :   \n\tdigits = ""0123456789""\n\tOTP = """" \n\tfor i in range(6)  :  \n\t\tOTP += digits[math.floor(random.random() * 10)]  \n\treturn OTP'"
write a python program to calculate distance between tao points,"'\nimport math\np1 = [4, 0]\np2 = [6, 6]\ndistance = math.sqrt( ((p1[0]-p2[0])**2)+((p1[1]-p2[1])**2) )\nprint(f""The distance between {p1} and {p2} is {distance}"")'"
write a python function to calculate compound interest,"'\ndef compound_interest(principle, rate, time) :  \n\tAmount = principle * (pow((1 + rate / 100), time)) \n\tCI = Amount - principle \n\tprint(f""Compound interest is {CI}"")'"
write a python function to convert hours to minutes,'\ndef convert_to_minutes(num_hours) : \n\tminutes = num_hours * 60\n\treturn minutes'
write a python function to convert hours to seconds,'\ndef convert_to_seconds(num_hours) : \n\tminutes = num_hours * 60\n\tseconds = minutes * 60\n\treturn seconds'
write a python function to remove vowels from a string,"'\ndef vowel_remover(text) : \n\tstring = """"\n\tfor l in text : \n\t\tif l.lower() != ""a"" and l.lower() != ""e"" and l.lower() != ""i"" and l.lower() != ""o"" and l.lower() != ""u"" : \n\t\t\tstring += l\n\treturn string'"
write a python program to print all integers that aren’t divisible by either 2 or 3 and lies between 1 and 50.,"'\nfor i in range(0,50) : \n\tif((i%2!=0) & (i%3!=0)) : \n\t\t print(i)'"
write a python function to print odd numbers between user provided ranges,"'\ndef odd_numbers(lower,upper) : \n\tfor i in range(lower,upper+1) : \n\tif(i%2!=0) : \n\t\tprint(i)'"
write a python program to find sum of natural numbers up to a 16,"'\nnum = 16\nif num < 0 : \n\tprint(""Enter a positive number"")\nelse : \n\tsum = 0\n\t# use while loop to iterate until zero\n\twhile(num > 0) : \n\t\tsum += num\n\t\tnum -= 1\n\tprint(""The sum is"", sum)'"
write a python program to remove punctuations from a string,"'\npunctuations = \'\'\'!()-[]{}; : \'""\\,<>./?@#$%^&*_~\'\'\'\nmy_str = ""Hello!!!, she said ---and went.""\nno_punct = """"\nfor char in my_str : \n\tif char not in punctuations : \n\t\tno_punct = no_punct + char'"
write a python program to count the number of each vowels in a given text,"""\nvowels = 'aeiou'\ntext = 'Hello, have you tried our tutorial section yet?'\ntext = text.casefold()\ncount = {}.fromkeys(vowels,0)\nfor char in text : \n\tif char in count : \n\t\tcount[char] += 1\nprint(count)"""
write a python function to check if a key exists in a dictionary,"""\nd = {'key1' :  'value1', 'key2' :  'value2', 'key3' :  'value3', 'key4' :  'value4'}\ndef is_key_present(x) : \n\tif x in d : \n\t\t print('Key is present in the dictionary')\n\telse : \n\t\t print('Key is not present in the dictionary')"""
write a python program to check if the list is empty,"'\nl = []\nif not l : \n\tprint(""List is empty"")\nelse : \n\tprint(""List is not empty"")'"
write a python program to get index values for a list in the form of key:value pair using enumerate,"""\nmy_list = ['a', 'b', 'c', 'd', 'e']\nfor index, value in enumerate(my_list) : \n\tprint('{0} :  {1}'.format(index, value))"""
write a python program to merge two dictionaries,"""\ndict_1 = {'apple' :  9, 'banana' :  6}\ndict_2 = {'banana' :  4, 'orange' :  8}\ncombined_dict = {**dict_1, **dict_2}\nprint(combined_dict)"""
write a python function to check if all elements in a list are unique or not,"'\ndef unique(l) : \n\tif len(l)==len(set(l)) : \n\t\tprint(""All elements are unique"")\n\telse : \n\t\tprint(""List has duplicates"")'"
write a python function to validate the email,"'\nimport re \nregex = \'^[a-z0-9]+[\\._]?[a-z0-9]+[@]\\w+[.]\\w{2,3}$\'      \ndef check(email) :   \n\tif(re.search(regex,email)) :   \n\t\tprint(""Valid Email"")\t\t \n\telse :   \n\t\tprint(""Invalid Email"")'"
write a python function to calculate the age with the user provided date of birth,"'\nfrom datetime import date\ndef calculate_age(dtob) : \n\ttoday = date.today()\n\treturn today.year - dtob.year - ((today.month, today.day) < (dtob.month, dtob.day))'"
write a python function to check if a user provided number is a perfect square.,'\ndef is_perfect_square(n) : \n\tx = n // 2\n\ty = set([x])\n\twhile x * x != n : \n\t\tx = (x + (n // x)) // 2\n\t\tif x in y :  return False\n\t\ty.add(x)\n\treturn True'
write a python function that removes element from a list using a user provided number,"'\ndef drop(a, n = 1) : \n\treturn a[n : ]'"
write a program function to check if given words appear together in a list of sentence,"'\ndef check(sentence, words) :  \n\tres = [all([k in s for k in words]) for s in sentence] \n\treturn [sentence[i] for i in range(0, len(res)) if res[i]]'"
write a python program  to convert list of tuples into list,"""\nlt = [('English', 2), ('Maths', 4), ('Science', '6')] \nout = [item for t in lt for item in t]  \nprint(out)"""
write a python program to count the number of words in a sentence,"'\ntest_string = ""This is a good book""\nres = len(test_string.split()) \nprint (f""The number of words in string are  : {str(res)}"")'"
write a python function to count the occurrences of a value in a list.,"'\ndef count_occurrences(lst, val) : \n\treturn lst.count(val)'"
write a python function to return the length of user provided string in bytes,"""\ndef byte_size(s) : \n\treturn len(s.encode('utf-8'))"""
write a python function to calculate the greatest common divisor (GCD) of two user provided positive integers.,"'\ndef gcd(num1, num2) : \n\tgcd = 1  \n\tif num1 % num2 == 0 : \n\t\treturn num2\n\tfor k in range(int(num2 / 2), 0, -1) : \n\t\tif num1 % k == 0 and num2 % k == 0 : \n\t\t\tgcd = k\n\t\t\tbreak  \n\treturn gcd'"
write a python function to calculate the least common multiple (LCM) of two user provided positive integers.,"'\ndef lcm(num1, num2) : \n\tif num1 > num2 : \n\t\tz = num1\n\telse : \n\t\tz = num2\n\twhile(True) : \n\t\tif((z % num1 == 0) and (z % num2 == 0)) : \n\t\t\tlcm = z\n\t\t\tbreak\n\t\tz += 1\n\treturn lcm'"
write a python program to split the string into chunks of size 3,"""\nstr = 'CarBadBoxNumKeyValRayCppSan'\nn = 3\nchunks = [str[i : i+n] for i in range(0, len(str), n)]\nprint(chunks)"""
write a python function to read first n lines from a file,"'\ndef file_read_from_head(fname, nlines) : \n\tfrom itertools import islice\n\twith open(fname) as f : \n\t\t for line in islice(f, nlines) : \n\t\tprint(line)'"
write a python program to check whether a person is eligible to vote or not,"'\nage=23\nif age>=18 : \n\t\tstatus=""Eligible""\nelse : \n\tstatus=""Not Eligible""\nprint(""You are "",status,"" for Vote."")'"
"write a python program to check if a number is positive, negative or zero.","'\nnum = 5\nif num > 0 : \n\tprint(""It is positive number"")\nelif num == 0 : \n\tprint(""It is Zero"")\nelse : \n\tprint(""It is a negative number"")'"
write a python program to get numbers divisible by fifteen from a list,"'\nnum_list = [45, 55, 60, 37, 100, 105, 220]\nresult = list(filter(lambda x :  (x % 15 == 0), num_list))\nprint(f""Numbers divisible by 15 are {result}"")'"
write a python function to append text to a user provided file,"'\ndef file_read(fname) : \n\twith open(fname, ""w"") as myfile : \n\t\t myfile.write(""Appending line one\\n"")\n\t\t myfile.write(""Appending line two"")\n\t\t txt = open(fname)\n\t\t print(txt.read())'"
write a python function to pad a user provided number to specified length,"'\ndef pad_number(n, l) : \n\treturn str(n).zfill(l)'"
write a python function to convert a user provided list of dictionaries into a list of values corresponding to the user specified key,"'\ndef pluck(lst, key) : \n\treturn [x.get(key) for x in lst]'"
write a python function to convert the values of RGB components to a hexadecimal color code.,"""\ndef rgb_to_hex(r, g, b) : \n\treturn ('{ : 02X}' * 3).format(r, g, b)"""
write a python function to reverse a user provided list or string,'\ndef reverse(itr) : \n\treturn itr[ :  : -1]'
write a python function to convert an angle from radians to degrees.,'\ndef rads_to_degrees(rad) : \n\treturn (rad * 180.0) / 3.14'
write a python function that returns a list of elements that exist in both user provided lists.,"'\ndef similarity(a, b) : \n\treturn [item for item in a if item in b]'"
write a python function that converts a user provided string to snake case,"""\nfrom re import sub\ndef snake(s) : \n\treturn '_'.join(\n\tsub('([A-Z][a-z]+)', r' \\1',\n\tsub('([A-Z]+)', r' \\1',\n\ts.replace('-', ' '))).split()).lower()"""
write a python function that sorts a list based on the user provided list of indexes.,"'\ndef sort_by_indexes(lst, indexes, reverse=False) : \n\treturn [val for (_, val) in sorted(zip(indexes, lst), key=lambda x :  \\\n\t\t\tx[0], reverse=reverse)]'"
write a python function to sort the dictionary by key,"'\ndef sort_dict_by_key(d, reverse = False) : \n\treturn dict(sorted(d.items(), reverse = reverse))'"
write a python function to sort the dictionary by values,"'\ndef sort_dict_by_value(d, reverse = False) : \n\treturn dict(sorted(d.items(), key = lambda x :  x[1], reverse = reverse))'"
write a python function to capitalize first letter of a string,"""\ndef capitalize(s, lower_rest = False) : \n\treturn ''.join([s[ : 1].upper(), (s[1 : ].lower() if lower_rest else s[1 : ])])"""
write a python function that chunks a list into smaller lists of a specified size,"'\nfrom math import ceil\ndef chunk(lst, size) : \n\treturn list(\n\tmap(lambda x :  lst[x * size : x * size + size],\n\t\t list(range(ceil(len(lst) / size)))))'"
write a python function to calculate a sigmoid value for any user provided real numbers,'\ndef sigmoid(x) : \n\treturn 1 / (1 + math.exp(-x))'
write a python program to count the number of lines in a text file,"'\n!touch abc.txt\nfile = open(""abc.txt"",""r"") \nCounter = 0\nContent = file.read() \nCoList = Content.split(""\\n"")  \nfor i in CoList :  \n\tif i :  \n\t\tCounter += 1\t\t  \nprint(f""There are {Counter} number of lines in the file"")'"
write a python program to count the number of lower case in a string,"'\nstring=""This is a very good place to Visit""\ncount=0\nfor i in string : \n\t\t if(i.islower()) : \n\t\t\tcount=count+1\nprint(f""The number of lowercase characters is : {count}"")'"
write a python program to find the sequences of one upper case letter followed by lower case letters.,"'\nimport re\ntext=""Albert""\npatterns = \'[A-Z]+[a-z]+$\'\nif re.search(patterns, text) : \n\tprint(\'Found a match!\')\nelse : \n\tprint(\'Not matched!\')'"
write a python program to find the number of files in a directory,"""\nimport os\ndir='.'\nlist = os.listdir(dir) \nnumber_files = len(list)\nprint(f'There are {number_files} file in the directory')"""
write a python function to clamp a number within a user specified range,"'\ndef clamp_number(num, a, b) : \n\treturn max(min(num, max(a, b)), min(a, b))'"
write a python function that returns every nth element in a list,"'\ndef every_nth(lst, nth) : \n\treturn lst[nth - 1 :  : nth]'"
write a python function that returns first element of a list,'\ndef head(lst) : \n\treturn lst[0]'
write a python function to check if two lists contains same elements regardless of order,"'\ndef have_same_contents(a, b) : \n\tfor v in set(a + b) : \n\tif a.count(v) != b.count(v) : \n\t\t return False\n\treturn True'"
write a python function to rotate the given list by n times toward left,"'\ndef rotate(lst, offset) : \n\treturn lst[offset : ] + lst[ : offset]'"
write a python function to transpose a user provided two dimensional list,'\ndef transpose(lst) : \n\treturn list(zip(*lst))'
write a python function to convert a user provided date to iso representation,'\nfrom datetime import datetime\ndef to_iso_date(d) : \n\treturn d.isoformat()'
write a python function that returns binary representation of given number,'\ndef to_binary(n) : \n\treturn bin(n)'
write a python function to calculate weighted average of two or more numbers,"'\ndef weighted_average(nums, weights) : \n\treturn sum(x * y for x, y in zip(nums, weights)) / sum(weights)'"
write a python program to filter out non-empty rows of a matrix,"'\ntest_list = [[4, 5, 6, 7], [], [], [9, 8, 1], []] \nprint(f""The original list is  : {test_list} "") \nres = [row for row in test_list if len(row) > 0]\nprint(f""Filtered Matrix {res}"")'"
write a python program to print prime factors of user provided number,"'\nimport math \ndef primeFactors(n) :  \n\twhile n % 2 == 0 :  \n\t\tprint(2), \n\t\tn = n / 2\n\tfor i in range(3,int(math.sqrt(n))+1,2) :  \n\t\twhile n % i== 0 :  \n\t\t\tprint(i), \n\t\t\tn = n / i \n\tif n > 2 :  \n\t\tprint(n)'"
write a python function to return sum of the powers between two numbers,"'\ndef sum_of_powers(end, power = 2, start = 1) : \n\treturn sum([(i) ** power for i in range(start, end + 1)])'"
write a python program to generate random float numbers in a specific numerical range.,"""\nimport random\nfor x in range(6) : \n\tprint('{ : 04.3f}'.format(random.uniform(x, 100)), end=' ')"""
write a python program to drop microseconds from datetime.,'\nimport datetime\ndt = datetime.datetime.today().replace(microsecond=0)\ndt'
write a python program to convert unix timestamp string to readable date.,"'\nimport datetime\nunix_timestamp=""1284105682""\nprint(\n\tdatetime.datetime.fromtimestamp(\n\t\tint(unix_timestamp)\n\t).strftime(\'%Y-%m-%d %H : %M : %S\')\n)'"
write a python function to calculate the day difference between two user provided dates,"'\ndef days_diff(start, end) : \n\treturn (end - start).days'"
write a python function to decapitalize the first letter of user provided string.,"""\ndef decapitalize(s, upper_rest = False) : \n\treturn ''.join([s[ : 1].lower(), (s[1 : ].upper() if upper_rest else s[1 : ])])"""
write a program to calculate exponents of an input,"""\ninput = 9\nexponent = 2\nfinal = pow(input, exponent)\nprint(f'Exponent Value is : {final}')"""
write a program to find and print the remainder of two number,"""\nnum1 = 12\nnum2 = 10\nratio = num1 % num2\nprint(f'remainder : {ratio}')"""
reverse a number in Python,"'\nnumber = 1367891\nrevs_number = 0  \nwhile (number > 0) : \n\tremainder = number % 10\n\trevs_number = (revs_number * 10) + remainder\n\tnumber = number // 10\nprint(""The reverse number is  :  {}"".format(revs_number))'"
Sort JSON keys in Python and write it into a file,"'\nimport json\nsampleJson = {""id""  :  1, ""name""  :  ""value2"", ""age""  :  29}\nwith open(""sampleJson.json"", ""w"") as write_file : \n\tjson.dump(sampleJson, write_file, indent=4, sort_keys=True)\nprint(""Done writing JSON data into a file"")'"
Given a Python list. Turn every item of a list into its square,"'\naList = [1, 2, 3, 4, 5, 6, 7]\naList =  [x * x for x in aList]\nprint(aList)\n# Remove empty strings from the list of strings\nlist1 = [""Mike"", """", ""Emma"", ""Kelly"", """", ""Brad""]\nresList = [i for i in (filter(None, list1))]\nprint(resList)'"
"Write a program which will achieve given a Python list, remove all occurrence of an input from the list","'\nlist1 = [5, 20, 15, 20, 25, 50, 20]\ndef removeValue(sampleList, val) : \n\treturn [value for value in sampleList if value != val]\nresList = removeValue(list1, 20)\nprint(resList)'"
Convert decimal number to octal,"""\nprint('%o,' % (8))"""
Write a recursive function to calculate the sum of numbers from 0 to 10,'\ndef calculateSum(num) : \n\tif num : \n\t\treturn num + calculateSum(num-1)\n\telse : \n\t\treturn 0\nres = calculateSum(10)\nprint(res)'
Generate a Python list of all the even numbers between two given numbers,"'\nnum1 = 4\nnum2 = 30\nmyval = [i for i in range(num1, num2, 2)]\nprint(myval)\n# Return the largest item from the given list\naList = [4, 6, 8, 24, 12, 2]\nprint(max(aList))'"
"Write a program to extract each digit from an integer, in the reverse order","'\nnumber = 7536\nwhile (number > 0) : \n\tdigit = number % 10\n\tnumber = number // 10\n\tprint(digit, end="" "")'"
Generate a random n-dimensional array of float numbers,"'\nimport numpy\nrandom_float_array = numpy.random.rand(2, 2)\nprint(""2 X 2 random float array in [0.0, 1.0] \\n"", random_float_array,""\\n"")'"
1 write a python function to add to add two numbers,"'\ndef return_exponential(num1, num2) : \n\treturn num1 ** num2'"
2 write a python function to split a string at space,'\ndef string_split_at_space(string) : \n\treturn string.split()'
3 write a python program to convert a string to a char array,'\ndef char_array(string) : \n\treturn list(string)'
4 write a python function to print the factorial of a number,"'\ndef factorial(x) : \n\tprod = 1\n\tfor i in range(1, x + 1) : \n\t\tprod *= i\n\treturn prod'"
5 write a python function to accept a number and return all the numbers from 0 to that number,'\ndef print_numbers(x) : \n\tfor i in range(x) : \n\t\tprint(i)'
6 write a python function that concatenates two stings,"'\ndef concat(s1, s2) : \n\treturn s1 + s2'"
7 write a python function to return every second number from a list,'\ndef every_other_number(lst) : \n\treturn lst[ :  : 2]'
7 write a python function to return every nth number from a list,"'\ndef every_nth_number(lst, n) : \n\treturn lst[ :  : n]'"
"8 write a python function to accept a key, value pair and return a dictionary","'\ndef create_dictionary(key, value) : \n\treturn {str(key) :  value}'"
"9 write a python function to update a dictionary with a new key, value pair","'\ndef update_dictionary(dict, key, value) : \n\tdict[str(key)] = value\n\treturn dict'"
10 write a python function to return the median of a list,'\ndef calc_median(arr) : \n\tarr = sorted(arr)\n\tif len(arr) / 2 == 0 : \n\t\treturn arr[len(arr) / 2]\n\telse : \n\t\treturn (arr[len(arr) // 2] + arr[(len(arr) - 1) // 2]) / 2'
11 write a python function to return the length of an array plus 27,'\ndef return_length(arr) : \n\treturn len(arr) + 27'
12  write a python function to return the third last element of an array,'\ndef return_last(arr) : \n\treturn arr[-3]'
13  write a function to calculate the mean of an array,'\ndef calc_mean(arr) : \n\tsum = 0\n\tfor i in range(len(arr)) : \n\t\tsum += arr[i]\n\treturn sum / len(arr)'
14 write a function to perform insertion sort on an arary,"'\ndef sort_insertion(arr) : \n\tfor i in range(1, len(arr)) : \n\t\ttmp = arr[i]\n\t\tj = i\n\t\twhile (j > 0) & (tmp < arr[j - 1]) : \n\t\t\tarr[j] = arr[j - 1]\n\t\t\tj = j - 1\n\t\tarr[j] = tmp\n\treturn arr'"
15 write a function to implement a binary tree,"'\nclass BinTree : \n\tdef __init__(self, key) : \n\t\tself.left = None\n\t\tself.right = None\n\t\tself.val = key'"
17 write a function to initialize a linked list,"'\nclass Cell : \n\tdef __init__(self, val) : \n\t\tself.val = val\n\t\tself.next = None\nclass LinkedList : \n\tdef __init__(self) : \n\t\tself.head = None'"
20 write a function which returns the count of each token in a given sentence as a dictionary,'\nfrom collections import Counter\ndef count_tokens(sent) : \n\tsent = list(sent)\n\treturn dict(Counter(sent))'
21 write a function that removes all the punctuations from a string,"'\nimport string\ndef remove_punct(s) : \n\treturn """".join(ch for ch in s if ch not in set(string.punctuation))'"
22 write a function that counts the sum of every element in the odd place in a list,"'\nfrom functools import reduce\ndef count_second(lst) : \n\treturn reduce(lambda x, y :  x + y, lst[ :  : 2])'"
23 write a function that returns the square root of the third power of every number in a list,"'\ndef comp_power(lst) : \n\treturn list(map(lambda x :  x ** 1.5, lst))'"
23 write a function to calculate the residual sum of squares between two lists of the same size,"'\ndef rss(lst1, lst2) : \n\tdiff = [lst1[x] - lst2[x] for x in range(len(lst1))]\n\treturn sum(list(map(lambda x :  x ** 2, diff)))'"
24 write a program to caclulate the approximate value of pi using the monte carlo method,'\nimport random\ndef pi_monte_carlo(n=1000000) : \n\tcount = 0\n\tfor _ in range(n) : \n\t\tx = random.random()\n\t\ty = random.random()\n\t\tif x ** 2 + y ** 2 <= 1 : \n\t\t\tcount += 1\n\treturn 4 * count / n\nprint(pi_monte_carlo())'
25 write a funtion to print all the files in the current directory,'\nimport os\ndef list_files() : \n\treturn os.listdir()'
26 write a generator in python which returns a random number between 0 and a million,"'\nimport random\ndef yield_a_number() : \n\tyield random.randint(0, 1000000)'"
27 write a program that filters a list for even numbers only and returns their sum,"'\ndef map_reduce(lst) : \n\treturn reduce(lambda x, y :  x + y, filter(lambda x :  x % 2 == 0, lst))\nprint(map_reduce([1, 2, 3, 4, 5]))'"
28 write a program that return the first n numbers from a list,"'\ndef sub_list(lst, ind) : \n\treturn lst[ : ind]\nprint(sub_list([1, 2, 3, 4, 5, 56], 3))'"
29 write a program to sort a list using bubblesort,"'\ndef bubblesort(arr) : \n\tn = len(arr)\n\tfor i in range(n - 1) : \n\t\tfor j in range(n - i - 1) : \n\t\t\tif arr[j] > arr[j + 1] : \n\t\t\t\tarr[j], arr[j + 1] = arr[j + 1], arr[j]\n\treturn arr\nprint(bubblesort([1, 33, 192, 21, 0]))'"
"30 write a function that accepts two numbers or lists or dictionaries and returns True if the two are equal, and False otherwise","'\ndef check_assert(item1, item2) : \n\ttry : \n\t\tassert item1 == item2\n\t\treturn True\n\texcept AssertionError : \n\t\treturn False'"
31 write a function that checks if a number is an Armstrong number (sum of digits of the number = the number),"'\nfrom itertools import chain\ndef check_armstrong(n) : \n\tsum_of_digits = sum(map(lambda x :  int(x) ** 3, chain(str(n))))\n\tif sum_of_digits == n : \n\t\treturn True\n\telse : \n\t\treturn False'"
33 write a program that shows how child class can access the init method of the parent class using super,"'\nclass A : \n\tdef __init__(self) : \n\t\tprint(""My name is GYOBU MASATAKA ONIWA!"")\nclass B(A) : \n\tdef __init__(self) : \n\t\tsuper(B, self).__init__()\n\t\tprint(""as I breath, you WILL not pass the castle gates!"")\ntmp = B()'"
34 write a program to generate a random number between two ranges,"'\nimport random\ndef rand_range(low, high) : \n\treturn random.randrange(low, high)'"
35 Write a python function that sorts a list of strings by their length in the descending order,"'\ndef sort_by_len(arr) : \n\treturn sorted(arr, reverse=True, key=lambda x :  len(x))'"
36 Write a  python function that returns the Highest Common Factor of two given numbers,"'\ndef calculate_hcf(x1, x2) : \n\tif x1 == 0 : \n\t\treturn x2\n\telse : \n\t\treturn hcf(x2 % x1, x1)'"
37 Write a python program to calculate the LCM and HCF of two given numbers,"'\ndef hcf(x1, x2) : \n\tif x1 == 0 : \n\t\treturn x2\n\telse : \n\t\treturn hcf(x2 % x1, x1)\ndef lcm_hcf(x1, x2) : \n\th_c_f = hcf(x1, x2)\n\tlcm = x1 * x2 / h_c_f\n\treturn lcm, h_c_f\nl, h = lcm_hcf(18, 12)\nprint(f""LCM  :  {l}, HCF :  {h}"")'"
38 write a python program which takes in a dictionary with unique values and converts keys into values and vice versa,"'\ndef flip_dict(d) : \n\ttmp_dict = {}\n\tfor pair in d.items() : \n\t\ttmp_dict[pair[1]] = pair[0]\n\treturn tmp_dict\nprint(flip_dict({""a"" :  10, ""b"" :  20, ""c"" :  15}))'"
39 write a python function to return a list of all punctuations from the string library,'\nimport string\ndef return_punct() : \n\treturn string.punctuation'
40 write a python function that takes in a string and returns it in lowercase,'\ndef to_lower(s) : \n\treturn s.lower()'
41 write a python function that takes in a string and returns it in uppercase,'\ndef to_upper(s) : \n\treturn s.upper()'
42 write a python program that converts lower case letters to uppercase and vice versa,"'\ndef flip_case(s) : \n\ts = [int(ord(x)) for x in s]\n\ts = [x - 32 if x >= 97 else x + 32 for x in s]\n\ts = [chr(x) for x in s]\n\treturn """".join(s)'"
43 Define a function which returns the current working directory,'\nimport os\ndef get_cwd() : \n\treturn os.getcwd()'
44 Define a python function that can read text file from a given URL,'\nimport requests\ndef read_data(url) : \n\tdata = requests.get(url).text\n\treturn data'
45 Define a python function which can generate a list where the values are square of numbers between 1 and 20 (both included). Then the function needs to print the last 5 elements in the list.,'\nimport requests\ndef get_status(url) : \n\tdata = requests.get(url)\n\treturn data.status_code'
46 Define a function which can generate a list where the values are square of numbers between 1 and 20 (both included). Then the function needs to print all values except the first 5 elements in the list.,'\nimport requests\ndef get_encoding(url) : \n\tdata = requests.get(url)\n\treturn data.encoding'
47 write a python function that accepts a valid path and changes the current working directory,'\nimport os\ndef change_dir(path) : \n\treturn os.chdir(path)'
48 write a python function that checks if a given key is present in the environment,'\nimport os\ndef get_env_path(key) : \n\treturn os.getenv(key)'
49 Write a generator that returns True / False randomly,'\nimport random\ndef generate_tf() : \n\trand = random.random()\n\tif rand > 0.5 : \n\t\tyield True\n\telse : \n\t\tyield False'
50 write a python program to normalize an array such that it sums upto 1,"'\ndef normalize(arr) : \n\treturn [float(i) / sum(arr) for i in arr]\nprint(normalize([1, 2, 3, 4, 5]))'"
51 write a python program to perform Softmax operation on an input array,"'\nimport math\ndef softmax(arr) : \n\te_arr = [math.exp(x) for x in arr]\n\te_soft = [i / sum(e_arr) for i in e_arr]\n\treturn e_soft\nprint(softmax([3.0, 1.0, 0.2]))'"
52 Write a python program to calculate the slope of a line given two points,"'\ndef slope_of_a_line(x1, x2, y1, y2) : \n\tdel_x = x2 - x1\n\tdel_y = y2 - y1\n\treturn float(del_y) / del_x\nprint(slope_of_a_line(0, 10, 0, 10))'"
53 write a python function which checks if a number is a perfect square,'\nimport math\ndef is_perfect_square(num) : \n\tsq_root = round(math.sqrt(num))\n\tif num == sq_root ** 2 : \n\t\treturn True\n\telse : \n\t\treturn False'
54 Write a python function that implements the ReLU function,'\ndef relu(arr) : \n\treturn [x if x > 0 else 0 for x in arr]'
55 Write a python program that pads a given python list to a given length at the end and prints the modified list,"'\ndef pad_arr_end(arr, pad_len) : \n\tpad_arr = [0] * (pad_len - len(arr))\n\treturn arr.extend(pad_arr)\ntmp = [1, 2, 3, 4, 5]\npad_arr_end(tmp, 10)\nprint(tmp)'"
55 Write a python program that pads a given python list to a given length at the start and prints the modified list,"'\ndef pad_arr_start(arr, pad_len) : \n\tpad_arr = [0] * (pad_len - len(arr))\n\tpad_arr.extend(arr)\n\treturn pad_arr\ntmp = [1, 2, 3, 4, 5]\nx = pad_arr_start(tmp, 10)\nprint(x)'"
56 write a python function to implement the sigmoid activation function,'\nimport math\ndef sigmoid(x) : \n\treturn 1 / (1 + math.exp(-x))'
57 write a python function to implement the tanh activation function,'\nimport math\ndef tanh(x) : \n\treturn (math.exp(2 * x) - 1) / (math.exp(2 * x) + 1)'
58 Write a python program that calculates and prints the area of an ellipse,"'\nimport math\nclass Ellipse : \n\tdef __init__(self, a, b) : \n\t\tself.major_axis = b\n\t\tself.minor_axis = a\n\tdef area(self) : \n\t\treturn math.pi * self.major_axis * self.minor_axis\nellipse = Ellipse(2, 10)\nprint(ellipse.area())'"
59 Write a python program that adds a time delay between a loop that prints numbers between 0 and 10,"'\nimport time\ndef print_loop_with_delay(sec) : \n\tfor i in range(0, 10) : \n\t\ttime.sleep(sec)\n\t\tprint(i)'"
60 Write a function to return the the unique tokens from a string,'\ndef unique_tokens(st) : \n\treturn set(st)'
61 write a python function to return the standard deviation of a list of numbers,'\nimport math\ndef st_dev(arr) : \n\tavg = sum(arr) / len(arr)\n\tss_dev = sum([(x - avg) ** 2 for x in arr])\n\treturn math.sqrt(ss_dev / (len(arr) - 1))'
62 write a python function to return mode of the data,'\nimport statistics\ndef mode(arr) : \n\treturn statistics.mode(arr)'
"63 Write a python function which returns true if all the numbers in a list negative, else return False","'\ndef are_all_negative(arr) : \n\tfilt_arr = list(filter(lambda x :  x < 0, arr))\n\tif len(filt_arr) == len(arr) : \n\t\treturn True\n\telse : \n\t\treturn False'"
64 Write a python function that checks if all the numbers in a list sum upto 1. Returns False otherwise,'\ndef sum_upto_one(arr) : \n\tarr_sum = sum(arr)\n\ttry : \n\t\tassert float(arr_sum) == 1.0\n\t\treturn True\n\texcept AssertionError : \n\t\treturn False'
65 write a program to output a random even number between 0 and 10 inclusive using random module and list comprehension.,'\nimport random\nprint(random.choice([i for i in range(11) if i % 2 == 0]))'
"66 write a program to output a random number, which is divisible by 5 and 7, between 0 and 10 inclusive using random module and list comprehension.",'\nimport random\nprint(random.choice([i for i in range(201) if i % 5 == 0 and i % 7 == 0]))'
67 write a program to generate a list with 5 random numbers between 100 and 200 inclusive.,"'\nimport random\nprint(random.sample(range(100), 5))'"
68 write a program to randomly generate a list with 5 even numbers between 100 and 200 inclusive.,"'\nimport random\nprint(random.sample([i for i in range(100, 201) if i % 2 == 0], 5))'"
"69 write a program to randomly generate a list with 5 numbers, which are divisible by 5 and 7 , between 1 and 1000 inclusive.","'\nimport random\nprint(random.sample([i for i in range(1, 1001) if i % 5 == 0 and i % 7 == 0], 5))'"
70 write a program to randomly print a integer number between 7 and 15 inclusive.,"'\nimport random\nprint(random.randrange(7, 16))'"
71 write a python function to count the length of the string,'\ndef len_str(st) : \n\treturn len(st)'
"72 write a program to print the running time of execution of ""1+1"" for 100 times.","'\nfrom timeit import Timer\nt = Timer(""for i in range(100) : 1+1"")\nprint(t.timeit())'"
"73 write a program to shuffle and print the list [3,6,7,8].","'\nfrom random import shuffle\nli = [3, 6, 7, 8]\nshuffle(li)\nprint(li)'"
"74 write a program to shuffle and print the list [3,6,7,8].","'\nfrom random import shuffle\nli = [3, 6, 7, 8]\nshuffle(li)\nprint(li)'"
"76 Write a program to print the list after removing delete even numbers in [5,6,77,45,22,12,24].","'\nli = [5, 6, 77, 45, 22, 12, 24]\nli = [x for x in li if x % 2 != 0]\nprint(li)'"
"77 By using list comprehension, write a program to print the list after removing delete numbers which are divisible by 5 and 7 in [12,24,35,70,88,120,155].","'\nli = [12, 24, 35, 70, 88, 120, 155]\nli = [x for x in li if x % 5 != 0 and x % 7 != 0]\nprint(li)'"
"78 By using list comprehension, write a program to print the list after removing the 0th, 2nd, 4th,6th numbers in [12,24,35,70,88,120,155].","'\nli = [12, 24, 35, 70, 88, 120, 155]\nli = [x for (i, x) in enumerate(li) if i % 2 != 0]\nprint(li)'"
"79 By using list comprehension, write a program generate a 3*5*8 3D array whose each element is 0.",'\narray = [[[0 for col in range(8)] for col in range(5)] for row in range(3)]\nprint(array)'
"80 By using list comprehension, write a program to print the list after removing the 0th,4th,5th numbers in [12,24,35,70,88,120,155].","'\nli = [12, 24, 35, 70, 88, 120, 155]\nli = [x for (i, x) in enumerate(li) if i not in (0, 4, 5)]\nprint(li)'"
"81 By using list comprehension, write a program to print the list after removing the value 24 in [12,24,35,24,88,120,155].","'\nli = [12, 24, 35, 24, 88, 120, 155]\nli = [x for x in li if x != 24]\nprint(li)'"
"82 With two given lists [1,3,6,78,35,55] and [12,24,35,24,88,120,155], write a program to make a list whose elements are intersection of the above given lists.","'\nset1 = set([1, 3, 6, 78, 35, 55])\nset2 = set([12, 24, 35, 24, 88, 120, 155])\nset1 &= set2\nli = list(set1)\nprint(li)'"
85 write a program which count and print the numbers of each character in a string,"'\ndic = {}\ns = ""JRR Tolkien""\nfor s in s : \n\tdic[s] = dic.get(s, 0) + 1\nprint(""\\n"".join([""%s,%s"" % (k, v) for k, v in dic.items()]))'"
86 write a program which accepts a string and counts the number of words in it,'\ndef num_of_words(st) : \n\treturn len(st.split())'
87 write a function which accepts a string prints the characters that have even indexes.,'\ndef every_alternate_char(s) : \n\ts = s[ :  : 2]\n\treturn s'
"88 write a program which prints all permutations of [1,2,3]","'\nimport itertools\nprint(list(itertools.permutations([1, 2, 3])))'"
89 Write a program to solve a classic ancient Chinese puzzle:  We count 35 heads and 94 legs among the chickens and rabbits in a farm. How many rabbits and how many chickens do we have?,"'\ndef solve(numheads, numlegs) : \n\tns = ""No solutions!""\n\tfor i in range(numheads + 1) : \n\t\tj = numheads - i\n\t\tif 2 * i + 4 * j == numlegs : \n\t\t\treturn i, j\n\treturn ns, ns'"
90 Write a python function to round down a given decimal number,'\nimport math\ndef apply_ceil(num) : \n\treturn math.ceil(x)'
91 Write a python function to round up a given decimal number,'\nimport math\ndef apply_floor(num) : \n\treturn math.floor(num)'
92 Write a python function to round off a given decimal number,'\ndef apply_round(num) : \n\treturn round(num)'
93 write a python function to find One's compliment of a number,'\nimport math\ndef OnesComplement(num) : \n\tbits = int(math.floor(math.log(num) / math.log(2)) + 1)\n\treturn ((1 << bits) - 1) ^ num'
94 write a python function that takes in a decimal number and prints it's binary representation,"'\ndef dec2bin(num) : \n\tprint(format(num, ""b""))'"
95 write a python function that accepts a binary string and converts it into an equivalent decimal number,"'\ndef bin2dec(num) : \n\treturn int(num, 2)'"
96 write a python function that takes a number and returns an array of the number duplicated n times,"'\ndef duplicate_array(num, n) : \n\tnum = [num] * n\n\treturn num'"
"97 write a python function that accepts a number, and returns the nearest square number",'\nimport math\ndef nearest_square(n) : \n\tupp = math.floor(math.sqrt(n))\n\tlow = math.floor(math.sqrt(n))\n\tupp_diff = upp ** 2 - n\n\tlow_diff = n - low ** 2\n\tif upp_diff > low_diff : \n\t\treturn upp\n\telse : \n\t\treturn low'
98 write a python function that calculates the midpoint between two numbers,"'\ndef midpoint(a, b) : \n\tlar = b if b > a else a\n\tsm = a if b > a else b\n\treturn float(lar + sm) / 2'"
99 write a  python function that accepts a string and reverses it,'\ndef reverse(st) : \n\treturn st[ :  : -1]'
100 write a python program that checks if a string is a pallindrome,"'\ndef is_palindrome(st) : \n\tst = st.lower()\n\trev_st = st[ :  : -1]\n\ttry : \n\t\tassert rev_st == st\n\t\treturn True\n\texcept AssertionError : \n\t\treturn False\nst = ""Nitin""\nprint(is_palindrome(st))\n# coding :  utf-8'"
write a python program to add two numbers,"""\nnum1 = 5465461\nnum2 = 8765468\nsum = num1 + num2\nprint(f'Sum :  {sum}')"""
write a python function to add two user provided numbers and return the sum,"'\ndef add_two_numbers(num1, num2) :     \n\tsum = num1 + num2\t\n\treturn sum'"
write a program to find and print the largest among three numbers,"""\nnum1 = 123\nnum2 = 125\nnum3 = 148\nif (num1 >= num2) and (num1 >= num3) :    \n\tlargest = num1\nelif (num2 >= num1) and (num2 >= num3) :    \n\tlargest = num2\nelse :    largest = num3\nprint(f'largest : {largest}')"""
write a program to find length of list,"'\nl = [1,2,3,4,5]\nprint(len(l))'"
write a function to find length of list,'\ndef get_list_length(l) : \n\treturn len(l)'
write a program to convert tuple to list,"""\nt = (1,2,4,5,6)\nprint(f'list : {list(t)}')"""
write a function to convert tuple to list,'\ndef convert_tuple2list(t) : \n\treturn list(t)'
write a program to convert list to tuple,"""\nl = ['a',4,5]\nprint(f'tuple : {tuple(l)}')"""
write a function to convert list to tuple,'\ndef list2tuple(l) : \n\treturn tuple(l)'
write a function to find length of list,'\ndef tuple_lenght(t) : \n\treturn len(t)'
write a program to find length of list,"""\nt = 1,2,3,4,5\nprint(f'tuple length :  {len(t)}')"""
write a program to concat two list,"""\nl1 = [1,2,3]\nl2 = [4,5,6]\nprint(f'sum  :  {l1 + l2}')"""
write a functiom to concat two list,"'\nl1 = [1,2,3]\nl2 = [4,5,6]\ndef list_concat(l1,l2) : \n\treturn l1 + l2 '"
write Python code to convert Celsius scale to Fahrenheit scale,'\ndef Cel_To_Fah(n) :  \n\treturn (n*1.8)+32\nn = 20\nprint(int(Cel_To_Fah(n))) '
write Python program to convert temperature from Fahrenheit to Kelvin,"'\ndef Fahrenheit_to_Kelvin(F) :  \n\treturn 273.5 + ((F - 32.0) * (5.0/9.0)) \nF = 100\nprint(""Temperature in Kelvin ( K ) = { : .3f}"" \n\t\t\t.format(Fahrenheit_to_Kelvin( F ))) '"
write Function to convert temperature  from degree Celsius to Kelvin,"'\ndef Celsius_to_Kelvin(C) :  \n\treturn (C + 273.15) \nC = 100 \nprint(""Temperature in Kelvin ( K ) = "",  \n\t\t\t\t\tCelsius_to_Kelvin(C)) '"
write Python code to convert radian to degree,"'\ndef Convert(radian) :  \n\tpi = 3.14159\n\tdegree = radian * (180/pi) \n\treturn degree \nradian = 5\nprint(""degree ="",(Convert(radian))) '"
write  Function to Rotate  the matrix by 180 degree,"'\ndef rotateMatrix(mat) :  \n\tN = 3  \n\ti = N - 1;  \n\twhile(i >= 0) :  \n\t\tj = N - 1; \n\t\twhile(j >= 0) :  \n\t\t\tprint(mat[i][j], end = "" ""); \n\t\t\tj = j - 1; \n\t\tprint(); \n\t\ti = i - 1; '"
Driven code,"'\nmat = [[1, 2, 3], \n\t\t[ 4, 5, 6 ], \n\t\t[ 7, 8, 9 ]]; \nrotateMatrix(mat); '"
write  Function to left rotate n by d bits,"'\ndef leftRotate(n, d) :  \n\tINT_BITS = 32\n\treturn (n << d)|(n >> (INT_BITS - d)) \nn = 16\nd = 2\nprint(""Left Rotation of"",n,""by"",d,""is"",end="" "") \nprint(leftRotate(n, d)) '"
write Function to right rotate n by d bits,"'\ndef rightRotate(n, d) :  \n\tINT_BITS = 32\n\treturn (n >> d)|(n << (INT_BITS - d)) & 0xFFFFFFFF\nn = 16\nd = 2\nprint(""Right Rotation of"",n,""by"",d,""is"",end="" "") \nprint(rightRotate(n, d)) '"
write Python3 code to demonstrate to create a substring from string,"""\nini_string = 'xbzefdgstb'\nsstring = ini_string[2 : 7 : 2] \nprint ('resultant substring{sstring}') """
Program to cyclically rotate an array by one,'\ndef cyclicRotate(input) :  \n\tprint ([input[-1]] + input[0 : -1]) '
write Python3 code to demonstrate list slicing from K to end using None,"'\ntest_list = [5, 6, 2, 3, 9] \nK = 2\nres = test_list[K  :  None] \nprint (f""The sliced list is  : {str(res)} ""  ) '"
write Python code t get difference of two lists Using set(),"'\ndef Diff(li1, li2) : \n\treturn (list(list(set(li1)-set(li2)) + list(set(li2)-set(li1))))\nli1 = [10, 15, 20, 25, 30, 35, 40]\nli2 = [25, 40, 35]\nprint(Diff(li1, li2))'"
write a program for round for integers,"'\ninteger = 18\nprint(f""Round off value  :  {round(integer , -1)}"")'"
write a program for floating pointwrite a program,"'\nprint(f""Round off value  :  {round(51.6)}"")'"
write Program to demonstrate conditional operator,"'\na, b = 10, 20\nmin = a if a < b else b \nprint(min) '"
"write Python program to demonstrate ternary operator using tuples, Dictionary and lambda","'\na, b = 10, 20\nprint( (b, a) [a < b] ) \nprint({True :  a, False :  b} [a < b]) \nprint((lambda :  b, lambda :  a)[a < b]()) '"
"write a python program using ""any"" function","'\nprint (any([False, True, False, False])) '"
"write a python program using ""all"" function","'\nprint (all([False, True, False, False])) '"
write Python3 code to demonstrate working of Check if tuple has any None value using any() + map() + lambda,"'\ntest_tup = (10, 4, 5, 6, None) \nres = any(map(lambda ele :  ele is None, test_tup)) \nprint(""Does tuple contain any None value ?  :  "" + str(res)) '"
write Python3 code to demonstrate working of Check if tuple has any None value using not + all(),"'\ntest_tup = (10, 4, 5, 6, None) \nprint(""The original tuple  :  "" + str(test_tup))  \nres = not all(test_tup) \nprint(""Does tuple contain any None value ?  :  "" + str(res)) '"
write Python3 code to demonstrate working of  Sort tuple list by Nth element of tuple  using sort() + lambda,"'\ntest_list = [(4, 5, 1), (6, 1, 5), (7, 4, 2), (6, 2, 4)] \nprint(""The original list is  :  "" + str(test_list)) \nN = 1\ntest_list.sort(key = lambda x :  x[N]) \nprint(""List after sorting tuple by Nth index sort  :  "" + str(test_list)) '"
write Python program to demonstrate printing of complete multidimensional list row by row.,"'\na = [[2, 4, 6, 8, 10], [3, 6, 9, 12, 15], [4, 8, 12, 16, 20]] \nfor record in a :  \n\tprint(record) '"
write Python program to demonstrate that we can access multidimensional list using square brackets,"'\na = [ [2, 4, 6, 8 ], \n\t[ 1, 3, 5, 7 ], \n\t[ 8, 6, 4, 2 ], \n\t[ 7, 5, 3, 1 ] ] \nfor i in range(len(a))  :  \n\tfor j in range(len(a[i]))  :  \n\t\tprint(a[i][j], end="" "") \n\tprint()\t '"
write a program for Adding a sublist,"'\na = [[2, 4, 6, 8, 10], [3, 6, 9, 12, 15], [4, 8, 12, 16, 20]] \na.append([5, 10, 15, 20, 25]) \nprint(a) '"
write a program for  Extending a sublist,"'\na = [[2, 4, 6, 8, 10], [3, 6, 9, 12, 15], [4, 8, 12, 16, 20]] \na[0].extend([12, 14, 16, 18]) \nprint(a) '"
write a program for Reversing a sublist,"'\na = [[2, 4, 6, 8, 10], [3, 6, 9, 12, 15], [4, 8, 12, 16, 20]] \na[2].reverse() \nprint(a) '"
write a Python3 program to demonstrate the use of replace() method,"'\nstring = ""geeks for geeks geeks geeks geeks""\nprint(string.replace(""geeks"", ""Geeks"")) \nprint(string.replace(""geeks"", ""GeeksforGeeks"", 3)) '"
write Python3 code to demonstrate working of Rear word replace in String using split() + join(),"'\ntest_str = ""GFG is good""\nprint(""The original string is  :  "" + test_str) \nrep_str = ""best""\nres = "" "".join(test_str.split(\' \')[ : -1] + [rep_str]) \nprint(""The String after performing replace  :  "" + res) '"
write Python3 code to demonstrate working of Rear word replace in String using rfind() + join(),"'\ntest_str = ""GFG is good""\nprint(""The original string is  :  "" + test_str) \nrep_str = ""best""\nres = test_str[ :  test_str.rfind(\' \')] + \' \' + rep_str \nprint(""The String after performing replace  :  "" + res) '"
"write Python3 code to demonstrate Shift from Front to Rear in List using list slicing and ""+"" operator","'\ntest_list = [1, 4, 5, 6, 7, 8, 9, 12] \nprint (""The original list is  :  "" + str(test_list)) \ntest_list = test_list[1  : ] + test_list[ :  1] \nprint (""The list after shift is  :  "" + str(test_list)) '"
Python3 code to demonstrate Shift from Front to Rear in List using insert() + pop(),"'\ntest_list = [1, 4, 5, 6, 7, 8, 9, 12] \nprint (""The original list is  :  "" + str(test_list)) \ntest_list.insert(len(test_list) - 1, test_list.pop(0)) \nprint (""The list after shift is  :  "" + str(test_list)) '"
write Python3 code to demonstrate working of Sort by Rear Character in Strings List Using sort(),"'\ndef get_rear(sub) :  \n\treturn sub[-1] \ntest_list = [\'gfg\', \'is\', \'best\', \'for\', \'geeks\'] \nprint(""The original list is  :  "" + str(test_list)) \ntest_list.sort(key = get_rear) \nprint(""Sorted List  :  "" + str(test_list)) '"
write Python3 code to demonstrate working of Sort by Rear Character in Strings List Using sorted() + lambda,"'\ntest_list = [\'gfg\', \'is\', \'best\', \'for\', \'geeks\'] \nprint(""The original list is  :  "" + str(test_list)) \nres = sorted(test_list, key = lambda sub  :  sub[-1]) \nprint(""Sorted List  :  "" + str(res)) '"
write Python3 code to demonstrate Remove Rear K characters from String List using list comprehension + list slicing,"'\ntest_list = [\'Manjeets\', \'Akashs\', \'Akshats\', \'Nikhils\'] \nprint(""The original list  :  "" + str(test_list)) \nK = 4\nres = [sub[  :  len(sub) - K] for sub in test_list] \nprint(""The list after removing last characters  :  "" + str(res)) '"
write Python code to demonstrate Kth Non-None String from Rear using filter(),"'\ntest_list = ["""", """", ""Akshat"", ""Nikhil""] \nprint(""The original list  :  "" + str(test_list)) \nK = 2\nres = list (filter(None, test_list))[-K] \nprint(""The Kth non empty string from rear is  :  "" + str(res)) '"
write a program Creating a Dictionary  with Integer Keys,"'\nDict = {1 :  \'Geeks\', 2 :  \'For\', 3 :  \'Geeks\'} \nprint(""\\nDictionary with the use of Integer Keys :  "") \nprint(Dict) '"
program Creating a Dictionary with Mixed keys,"'\nDict = {\'Name\' :  \'Geeks\', 1 :  [1, 2, 3, 4]} \nprint(""\\nDictionary with the use of Mixed Keys :  "") \nprint(Dict) '"
write a program Creating an empty Dictionary,"'\nDict = {} \nprint(""Empty Dictionary :  "") \nprint(Dict) '"
write a program Creating a Dictionary  with dict() method,"'\nDict = dict({1 :  \'Geeks\', 2 :  \'For\', 3 : \'Geeks\'}) \nprint(""\\nDictionary with the use of dict() :  "") \nprint(Dict) '"
write a program Creating a Dictionary with each item as a Pair,"'\nDict = dict([(1, \'Geeks\'), (2, \'For\')]) \nprint(""\\nDictionary with each item as a pair :  "") \nprint(Dict) '"
write a program Creating a Nested Dictionary as shown in the below image,"""\nDict = {1 :  'Geeks', 2 :  'For', \n\t\t3 : {'A'  :  'Welcome', 'B'  :  'To', 'C'  :  'Geeks'}} \nprint(Dict) """
write a program Creating a Dictionary,"'\nDict = {1 :  \'Geeks\', \'name\' :  \'For\', 3 :  \'Geeks\'} \nprint(""Accessing a element using get : "") \nprint(Dict.get(3)) '"
write a python Creating a Dictionary and  Accessing element using key,"""\nDict = {'Dict1' :  {1 :  'Geeks'}, \n\t'Dict2' :  {'Name' :  'For'}} \nprint(Dict['Dict1']) \nprint(Dict['Dict1'][1]) \nprint(Dict['Dict2']['Name']) """
write a rpogram Deleting an arbitrary key  using popitem() function in dictionary,"'\nDict = {1 :  \'Geeks\', \'name\' :  \'For\', 3 :  \'Geeks\'} \npop_ele = Dict.popitem() \nprint(""\\nDictionary after deletion :  "" + str(Dict)) \nprint(""The arbitrary pair returned is :  "" + str(pop_ele)) '"
write a  program for Deleting entire Dictionary,"'\nDict = {1 :  \'Geeks\', \'name\' :  \'For\', 3 :  \'Geeks\'} \nDict.clear() \nprint(""\\nDeleting Entire Dictionary :  "") \nprint(Dict) '"
write Python3 code to demonstrate working of Segregating key's value in list of dictionaries Using zip() + map() + values(),"'\ntest_list = [{\'gfg\'  :  1, \'best\'  :  2}, {\'gfg\'  :  4, \'best\' :  5}] \nprint(""The original list  :  "" + str(test_list)) \nres = list(zip(*map(dict.values, test_list))) \nprint(""Segregated values of keys are  :  "" + str(res)) '"
write a Python code demonstrate the working of sorted() with lambda,"'\nlis = [{ ""name""  :  ""Nandini"", ""age""  :  20}, \n{ ""name""  :  ""Manjeet"", ""age""  :  20 },\n{ ""name""  :  ""Nikhil"" , ""age""  :  19 }]\nprint (""The list printed sorting by age :  "")\nprint (sorted(lis, key = lambda i :  i[\'age\']))\nprint (""\\r"")'"
write Python3 program for illustration of values() method of dictionary,"'\ndictionary = {""raj"" :  2, ""striver"" :  3, ""vikram"" :  4} \nprint(dictionary.values()) '"
write Python program to illustrate enumerate function,"'\nl1 = [""eat"",""sleep"",""repeat""] \ns1 = ""geek""\nobj1 = enumerate(l1) \nobj2 = enumerate(s1) \nprint (""Return type : "",type(obj1) )\nprint( list(enumerate(l1)) )\nprint( list(enumerate(s1,2)) )'"
write Python program to illustrate  enumerate function in loops,"'\nl1 = [""eat"",""sleep"",""repeat""] \nfor count,ele in enumerate(l1,100) :  \n\tprint (count,ele )'"
write Python code to convert string to list,"'\ndef Convert_1(string) :  \n\tli = list(string.split("" "")) \n\treturn li \nstr1 = ""Geeks for Geeks""\nprint(Convert(str1)) '"
Python code to convert string to list,"'\ndef Convert_2(string) :  \n\tli = list(string.split(""-"")) \n\treturn li \nstr1 = ""Geeks-for-Geeks""\nprint(Convert(str1)) '"
write Python code to convert string to list character-wise,"'\ndef Convert_3(string) :  \n\tlist1=[] \n\tlist1[ : 0]=string \n\treturn list1 \nstr1=""ABCD""\nprint(Convert(str1)) '"
write Python3 code to demonstrate convert list of strings to list of tuples Using map() + split() + tuple(),"'\ntest_list = [\'4, 1\', \'3, 2\', \'5, 3\'] \nprint(""The original list  :  "" + str(test_list)) \nres = [tuple(map(int, sub.split(\', \'))) for sub in test_list] \nprint(""The list after conversion to tuple list  :  "" + str(res)) '"
write Python3 code to demonstrate convert list of strings to list of tuples Using map() + eval,"'\ntest_list = [\'4, 1\', \'3, 2\', \'5, 3\'] \nprint(""The original list  :  "" + str(test_list)) \nres = list(map(eval, test_list)) \nprint(""The list after conversion to tuple list  :  "" + str(res)) '"
write Python3 code to demonstrate Combining tuples in list of tuples Using list comprehension,"'\ntest_list = [([1, 2, 3], \'gfg\'), ([5, 4, 3], \'cs\')] \nprint(""The original list  :  "" + str(test_list)) \nres = [ (tup1, tup2) for i, tup2 in test_list for tup1 in i ] \nprint(""The list tuple combination  :  "" + str(res)) '"
"write Python3 code to demonstrate working of Add list elements to tuples list Using list comprehension + ""+"" operator","'\ntest_list = [(5, 6), (2, 4), (5, 7), (2, 5)] \nprint(""The original list is  :  "" + str(test_list)) \nsub_list = [7, 2, 4, 6] \nres = [sub + tuple(sub_list) for sub in test_list] \nprint(""The modified list  :  "" + str(res)) '"
"write Python3 code to demonstrate working of Add list elements to tuples list Using list comprehension + ""*"" operator","'\ntest_list = [(5, 6), (2, 4), (5, 7), (2, 5)] \nprint(""The original list is  :  "" + str(test_list)) \nsub_list = [7, 2, 4, 6] \nres = [(*sub, *sub_list) for sub in test_list] \nprint(""The modified list  :  "" + str(res)) '"
"write Python3 code to demonstrate working of Concatenating tuples to nested tuples using + operator + "", "" operator during initialization","'\ntest_tup1 = (3, 4), \ntest_tup2 = (5, 6), \nprint(""The original tuple 1  :  "" + str(test_tup1)) \nprint(""The original tuple 2  :  "" + str(test_tup2)) \nres = test_tup1 + test_tup2 \nprint(""Tuples after Concatenating  :  "" + str(res)) '"
"write Python3 code to demonstrate working of Concatenating tuples to nested tuples Using "", "" operator during concatenation","'\ntest_tup1 = (3, 4) \ntest_tup2 = (5, 6) \nprint(""The original tuple 1  :  "" + str(test_tup1)) \nprint(""The original tuple 2  :  "" + str(test_tup2)) \nres = ((test_tup1, ) + (test_tup2, )) \nprint(""Tuples after Concatenating  :  "" + str(res)) '"
write Python code to demonstrate to remove the tuples if certain criteria met,"'\nini_tuple = [(\'b\', 100), (\'c\', 200), (\'c\', 45), \n\t\t\t\t\t\t(\'d\', 876), (\'e\', 75)] \nprint(""intial_list"", str(ini_tuple))\nresult = [i for i in ini_tuple if i[1] <= 100] \nprint (""Resultant tuple list :  "", str(result)) '"
write Python code to demonstrate to remove the tuples if certain criteria met,"'\nini_tuple = [(\'b\', 100), (\'c\', 200), (\'c\', 45), \n\t\t\t\t\t\t(\'d\', 876), (\'e\', 75)] \nprint(""intial_list"", str(ini_tuple)) \nresult = list(filter(lambda x :  x[1] <= 100, ini_tuple)) \nprint (""Resultant tuple list :  "", str(result)) '"
write Python code to remove all strings from a list of tuples,"""\nlistOfTuples = [('string', 'Geeks'), (2, 225), (3, '111'), (4, 'Cyware'), (5, 'Noida')]\t \noutput = [tuple(j for j in i if not isinstance(j, str)) for i in listOfTuples] \nprint(output) """
write Python3 code to demonstrate working of Extract Tuples with all Numeric Strings Using all() + list comprehension + isdigit(),"'\ntest_list = [(""45"", ""86""), (""Gfg"", ""1""), (""98"", ""10""), (""Gfg"", ""Best"")] \nprint(""The original list is  :  "" + str(test_list)) \nres = [sub for sub in test_list if all(ele.isdigit() for ele in sub)] \nprint(""Filtered Tuples  :  "" + str(res)) '"
Python3 code to demonstrate working of Extract String till Numeric Using isdigit() + index() + loop,"'\ntest_str = ""geeks4geeks is best""\nprint(""The original string is  :  "" + str(test_str)) \ntemp = 0\nfor chr in test_str :  \n\tif chr.isdigit() :  \n\t\ttemp = test_str.index(chr) \nprint(""Extracted String  :  "" + str(test_str[0  :  temp])) \n1.'"
write a python program to swap two numbers and print it,"'\nnum1 = 5\nnum2 = 10\ntemp = num1\nnum1 = num2\nnum2 = temp\nprint(""The value of num1 after swapping :  {}"".format(num1))\nprint(""The value of num2 after swapping :  {}"".format(num2))\n3. '"
write a python function to add user provided list and return the result,"""\ndef addlist(list1,list2) : \n\tresult = list1+list2\n\treturn result\nanswer = addlist(['cat','dog'],['samsung','oneplus'])\n4."""
write a python function to reverse user provided list and return the result,"'\ndef reverselist(inlist) :     \n\tinlist = inlist[ :  : -1] \n\treturn inlist\nresult = reverselist([1,2])\n5.'"
write a python function to find the largest element in an array and return the result,"'\ndef largest(arr) : \n\tmax = arr[0]\n\tn = len(arr)\n\tfor i in range(1,n) : \n\t\tif arr[i] > max : \n\t\t\tmax = arr[i]\n\t\treturn max\nlargest([1,20,3])    \n7.'"
write a python function to check if a string is palindrome or not and print the result,"'\ndef isPalindrome(s) : \n\tif (s == s[ :  : -1]) : \n\t\tprint(""Given string is palindrome"")\n\telse : \n\t\tprint(""Given string is not palindrome"")\ns = ""malayalam""\nisPalindrome(s)\n8.'"
Write a function to convert Kilometers to Miles,'\ndef Kilometers_to_Miles(km) : \n\tconv_fac = 0.621371\n\tmiles = km * conv_fac\n\treturn miles\n9. '
Write a function to convert Miles to Kilometers,'\ndef Miles_to_Kilometers(m) : \n\tconv_fac = 0.621371\n\tkilometers = m / conv_fac\n\treturn kilometers\t\n10. '
Write a function to Convert Celsius To Fahrenheit,'\ndef Celsius_To_Fahrenheit(c) : \n\tfahrenheit = (c * 1.8) + 32\n\treturn fahrenheit\n11.'
Write a fucntion to convert Fahrenheit to Celsius,'\ndef Fahrenheit_to_Celsius(f) : \n\tcelsius = (f - 32) / 1.8\n\treturn celsius\n12.'
"Write a program which will find all such numbers which are divisible by 7 but are not a multiple of 5, between 2000 and 3200 (both included). The numbers obtained should be printed in a comma-separated sequence on a single line.","""\nl=[]\nfor i in range(2000, 3201) : \n\tif (i%7==0) and (i%5!=0) : \n\t\tl.append(str(i))\nprint ','.join(l)"""
Write a program which can compute the factorial of a given numbers. The results should be printed in a comma-separated sequence on a single line.,'\ndef fact(x) : \n\tif x == 0 : \n\t\treturn 1\n\treturn x * fact(x - 1)\nx=int(raw_input())\nprint fact(x)'
"With a given integral number n, write a program to generate a dictionary that contains (i, i*i) such that is an integral number between 1 and n (both included). and then the program should print the dictionary.","'\nn=int(raw_input())\nd=dict()\nfor i in range(1,n+1) : \n\td[i]=i*i\nprint d'"
Write a program that calculates and prints the value according to the given formula: Q = Square root of [(2 * C * D)/H],"""\nimport math\nc=50\nh=30\nvalue = []\nitems=[x for x in raw_input().split(',')]\nfor d in items : \n\tvalue.append(str(int(round(math.sqrt(2*c*float(d)/h)))))\nprint ','.join(value)"""
Write a program that accepts a comma separated sequence of words as input and prints the words in a comma-separated sequence after sorting them alphabetically.,"""\nitems=[x for x in raw_input().split(',')]\nitems.sort()\nprint ','.join(items)"""
Write a program that accepts sequence of lines as input and prints the lines after making all characters in the sentence capitalized.,'\nlines = []\nwhile True : \n\ts = raw_input()\n\tif s : \n\t\tlines.append(s.upper())\n\telse : \n\t\tbreak;\nfor sentence in lines : \n\tprint sentence'
Write a program that accepts a sequence of whitespace separated words as input and prints the words after removing all duplicate words and sorting them alphanumerically.,"'\ns = raw_input()\nwords = [word for word in s.split("" "")]\nprint "" "".join(sorted(list(set(words))))'"
Write a program which accepts a sequence of comma separated 4 digit binary numbers as its input and then check whether they are divisible by 5 or not. The numbers that are divisible by 5 are to be printed in a comma separated sequence.,"""\nvalue = []\nitems=[x for x in raw_input().split(',')]\nfor p in items : \n\tintp = int(p, 2)\n\tif not intp%5 : \n\t\tvalue.append(p)\nprint ','.join(value)"""
"Write a program, which will find all such numbers between 1000 and 3000 (both included) such that each digit of the number is an even number. The numbers obtained should be printed in a comma-separated sequence on a single line.","'\nvalues = []\nfor i in range(1000, 3001) : \n\ts = str(i)\n\tif (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0) : \n\t\tvalues.append(s)\nprint "","".join(values)'"
Write a program that accepts a sentence and calculate the number of letters and digits.,"'\ns = raw_input()\nd={""DIGITS"" : 0, ""LETTERS"" : 0}\nfor c in s : \n\tif c.isdigit() : \n\t\td[""DIGITS""]+=1\n\telif c.isalpha() : \n\t\td[""LETTERS""]+=1\n\telse : \n\t\tpass\nprint ""LETTERS"", d[""LETTERS""]\nprint ""DIGITS"", d[""DIGITS""]'"
Write a program to compute the frequency of the words from the input. The output should output after sorting the key alphanumerically.,"'\nfreq = {}  \nline = raw_input()\nfor word in line.split() : \n\tfreq[word] = freq.get(word,0)+1\nwords = freq.keys()\nwords.sort()\nfor w in words : \n\tprint ""%s : %d"" % (w,freq[w])'"
Write a method which can calculate square value of number,'\ndef square(num) : \n\treturn num ** 2'
Define a function which can compute the sum of two numbers.,"'\ndef SumFunction(number1, number2) : \n\treturn number1+number2'"
Define a function that can convert a integer into a string and print it in console.,'\ndef printValue(n) : \n\tprint str(n)'
Define a function that can convert a integer into a string and print it in console.,'\ndef printValue(n) : \n\tprint str(n)'
Define a function that can receive two integral numbers in string form and compute their sum and then print it in console.,"'\ndef printValue(s1,s2) : \n\tprint int(s1)+int(s2)'"
Define a function that can accept two strings as input and concatenate them and then print it in console.,"'\ndef printValue(s1,s2) : \n\tprint s1+s2'"
"Define a function that can accept two strings as input and print the string with maximum length in console. If two strings have the same length, then the function should print al l strings line by line.","'\ndef printValue(s1,s2) : \n\tlen1 = len(s1)\n\tlen2 = len(s2)\n\tif len1>len2 : \n\t\tprint s1\n\telif len2>len1 : \n\t\tprint s2\n\telse : \n\t\tprint s1\n\t\tprint s2'"
"Define a function that can accept an integer number as input and print the ""It is an even number"" if the number is even, otherwise print ""It is an odd number"".","'\ndef checkValue(n) : \n\tif n%2 == 0 : \n\t\tprint ""It is an even number""\n\telse : \n\t\tprint ""It is an odd number""'"
Define a function which can print a dictionary where the keys are numbers between 1 and 3 (both included) and the values are square of keys.,'\ndef printDict() : \n\td=dict()\n\td[1]=1\n\td[2]=2**2\n\td[3]=3**2\n\tprint d'
Define a function which can print a dictionary where the keys are numbers between 1 and 20 (both included) and the values are square of keys.,"'\ndef printDict() : \n\td=dict()\n\tfor i in range(1,21) : \n\t\td[i]=i**2\n\tprint d'"
Define a function which can generate a dictionary where the keys are numbers between 1 and 20 (both included) and the values are square of keys. The function should just print the values only.,"'\ndef printDict() : \n\td=dict()\n\tfor i in range(1,21) : \n\t\td[i]=i**2\n\tfor (k,v) in d.items() : \t\n\t\tprint v'"
Define a function which can generate a dictionary where the keys are numbers between 1 and 20 (both included) and the values are square of keys. The function should just print the keys only.,"'\ndef printDict() : \n\td=dict()\n\tfor i in range(1,21) : \n\t\td[i]=i**2\n\tfor k in d.keys() : \t\n\t\tprint k'"
Define a function which can generate and print a list where the values are square of numbers between 1 and 20 (both included).,"'\ndef printList() : \n\tli=list()\n\tfor i in range(1,21) : \n\t\tli.append(i**2)\n\tprint li'"
Define a function which can generate a list where the values are square of numbers between 1 and 20 (both included). Then the function needs to print the first 5 elements in the list.,"'\ndef printList() : \n\tli=list()\n\tfor i in range(1,21) : \n\t\tli.append(i**2)\n\tprint li[ : 5]'"
Define a function which can generate a list where the values are square of numbers between 1 and 20 (both included). Then the function needs to print the last 5 elements in the list.,"'\ndef printList() : \n\tli=list()\n\tfor i in range(1,21) : \n\t\tli.append(i**2)\n\tprint li[-5 : ]'"
Define a function which can generate a list where the values are square of numbers between 1 and 20 (both included). Then the function needs to print all values except the first 5 elements in the list.,"'\ndef printList() : \n\tli=list()\n\tfor i in range(1,21) : \n\t\tli.append(i**2)\n\tprint li[5 : ]'"
Define a function which can generate and print a tuple where the value are square of numbers between 1 and 20 (both included).,"'\ndef printTuple() : \n\tli=list()\n\tfor i in range(1,21) : \n\t\tli.append(i**2)\n\tprint tuple(li)'"
"With a given tuple (1,2,3,4,5,6,7,8,9,10), write a program to print the first half values in one line and the last half values in one line.","'\ntp=(1,2,3,4,5,6,7,8,9,10)\ntp1=tp[ : 5]\ntp2=tp[5 : ]\nprint tp1\nprint tp2'"
"Write a program to generate and print another tuple whose values are even numbers in the given tuple (1,2,3,4,5,6,7,8,9,10).","'\ntp=(1,2,3,4,5,6,7,8,9,10)\nli=list()\nfor i in tp : \n\tif tp[i]%2==0 : \n\t\tli.append(tp[i])\ntp2=tuple(li)\nprint tp2'"
"Write a program which accepts a string as input to print ""Yes"" if the string is ""yes"" or ""YES"" or ""Yes"", otherwise print ""No"".","'\ns= raw_input()\nif s==""yes"" or s==""YES"" or s==""Yes"" : \n\tprint ""Yes""\nelse : \n\tprint ""No""'"
"Write a program which can filter even numbers in a list by using filter function. The list is: [1,2,3,4,5,6,7,8,9,10].","'\nli = [1,2,3,4,5,6,7,8,9,10]\nevenNumbers = filter(lambda x :  x%2==0, li)\nprint evenNumbers'"
"Write a program which can map() to make a list whose elements are square of elements in [1,2,3,4,5,6,7,8,9,10].","'\nli = [1,2,3,4,5,6,7,8,9,10]\nsquaredNumbers = map(lambda x :  x**2, li)\nprint squaredNumbers'"
"Write a program which can map() and filter() to make a list whose elements are square of even number in [1,2,3,4,5,6,7,8,9,10].","'\nli = [1,2,3,4,5,6,7,8,9,10]\nevenNumbers = map(lambda x :  x**2, filter(lambda x :  x%2==0, li))\nprint evenNumbers'"
Write a program which can filter() to make a list whose elements are even number between 1 and 20 (both included).,"'\nevenNumbers = filter(lambda x :  x%2==0, range(1,21))\nprint evenNumbers'"
"Assuming that we have some email addresses in the ""username@companyname.com"" format, write program to print the user name of a given email address. Both user names and company names are composed of letters only.","'\nimport re\nemailAddress = raw_input()\npat2 = ""(\\w+)@((\\w+\\.)+(com))""\nr2 = re.match(pat2,emailAddress)\nprint r2.group(1)'"
"Assuming that we have some email addresses in the ""username@companyname.com"" format, write program to print the company name of a given email address. Both user names and company names are composed of letters only.","'\nimport re\nemailAddress = raw_input()\npat2 = ""(\\w+)@(\\w+)\\.(com)""\nr2 = re.match(pat2,emailAddress)\nprint r2.group(2)'"
Write a program which accepts a sequence of words separated by whitespace as input to print the words composed of digits only.,"'\nimport re\ns = raw_input()\nprint re.findall(""\\d+"",s)\n# Print a unicode string ""hello world"".\nunicodeString = u""hello world!""\nprint unicodeString'"
Write a program to read an ASCII string and to convert it to a unicode string encoded by utf-8.,"'\ns = raw_input()\nu = unicode( s ,""utf-8"")\nprint u'"
Write a program to compute 1/2+2/3+3/4+...+n/n+1 with a given n input by console (n>0).,"'\nn=int(raw_input())\nsum=0.0\nfor i in range(1,n+1) : \n\tsum += float(float(i)/(i+1))\nprint sum'"
Write a program to compute: f(n)=f(n-1)+100 when n>0 and f(0)=1,'\ndef f(n) : \n\tif n==0 : \n\t\treturn 0\n\telse : \n\t\treturn f(n-1)+100\nn=int(raw_input())\nprint f(n)'
Write a program to add an integer and [revious non negative integer,'\nSolution : \ndef f(n) : \n\tif n == 0 :  return 0\n\telif n == 1 :  return 1\n\telse :  return f(n-1)+f(n-2)'
Write a program using list comprehension to print the Fibonacci Sequence in comma separated form with a given n input by console.,"'\ndef f(n) : \n\tif n == 0 :  return 0\n\telif n == 1 :  return 1\n\telse :  return f(n-1)+f(n-2)\nn=int(raw_input())\nvalues = [str(f(x)) for x in range(0, n+1)]\nprint "","".join(values)'"
write a program using generator to print the even numbers between 0 and n in comma separated form while n is input by console.,"'\ndef EvenGenerator(n) : \n\ti=0\n\twhile i<=n : \n\t\tif i%2==0 : \n\t\t\tyield i\n\t\ti+=1\nn=int(raw_input())\nvalues = []\nfor i in EvenGenerator(n) : \n\tvalues.append(str(i))\nprint "","".join(values)'"
write a program using generator to print the numbers which can be divisible by 5 and 7 between 0 and n in comma separated form while n is input by console.,"'\ndef NumGenerator(n) : \n\tfor i in range(n+1) : \n\t\tif i%5==0 and i%7==0 : \n\t\t\tyield i\nn=int(raw_input())\nvalues = []\nfor i in NumGenerator(n) : \n\tvalues.append(str(i))\nprint "","".join(values)'"
"write assert statements to verify that every number in the list [2,4,6,8] is even.","'\nli = [2,4,6,8]\nfor i in li : \n\tassert i%2==0'"
write a program which accepts basic mathematic expression from console and print the evaluation result.,'\nexpression = raw_input()\nprint eval(expression)'
generate a random float where the value is between 10 and 100 using Python math module.,'\nimport random\nprint random.random()*100'
generate a random float where the value is between 5 and 95 using Python math module.,'\nimport random\nprint random.random()*100-5'
write a program to output a random even number between 0 and 10 inclusive using random module and list comprehension.,'\nimport random\nprint random.choice([i for i in range(11) if i%2==0])'
"write a program to output a random number, which is divisible by 5 and 7, between 0 and 10 inclusive using random module and list comprehension.",'\nimport random\nprint random.choice([i for i in range(201) if i%5==0 and i%7==0])'
write a program to generate a list with 5 random numbers between 100 and 200 inclusive.,"'\nimport random\nprint random.sample(range(100), 5)'"
write a program to randomly generate a list with 5 even numbers between 100 and 200 inclusive.,"'\nimport random\nprint random.sample([i for i in range(100,201) if i%2==0], 5)'"
"write a program to randomly generate a list with 5 numbers, which are divisible by 5 and 7 , between 1 and 1000 inclusive.","'\nimport random\nprint random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5)'"
write a program to randomly print a integer number between 7 and 15 inclusive.,"'\nimport random\nprint random.randrange(7,16)'"
"write a program to compress and decompress the string ""hello world!hello world!hello world!hello world!"".","""\nimport zlib\ns = 'hello world!hello world!hello world!hello world!'\nt = zlib.compress(s)\nprint t\nprint zlib.decompress(t)"""
"write a program to print the running time of execution of ""1+1"" for 100 times.","'\nfrom timeit import Timer\nt = Timer(""for i in range(100) : 1+1"")\nprint t.timeit()'"
"write a program to shuffle and print the list [3,6,7,8].","'\nfrom random import shuffle\nli = [3,6,7,8]\nshuffle(li)\nprint li'"
"write a program to shuffle and print the list [3,6,7,8].","'\nfrom random import shuffle\nli = [3,6,7,8]\nshuffle(li)\nprint li'"
"Write a program to print the list after removing delete even numbers in [5,6,77,45,22,12,24].","'\nli = [5,6,77,45,22,12,24]\nli = [x for x in li if x%2!=0]\nprint li'"
"By using list comprehension, write a program to print the list after removing delete numbers which are divisible by 5 and 7 in [12,24,35,70,88,120,155].","'\nli = [12,24,35,70,88,120,155]\nli = [x for x in li if x%5!=0 and x%7!=0]\nprint li'"
"By using list comprehension, write a program to print the list after removing the 0th, 2nd, 4th,6th numbers in [12,24,35,70,88,120,155].","'\nli = [12,24,35,70,88,120,155]\nli = [x for (i,x) in enumerate(li) if i%2!=0]\nprint li'"
"By using list comprehension, write a program generate a 3*5*8 3D array whose each element is 0.",'\narray = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]\nprint array'
"By using list comprehension, write a program to print the list after removing the 0th,4th,5th numbers in [12,24,35,70,88,120,155].","'\nli = [12,24,35,70,88,120,155]\nli = [x for (i,x) in enumerate(li) if i not in (0,4,5)]\nprint li'"
"By using list comprehension, write a program to print the list after removing the value 24 in [12,24,35,24,88,120,155].","'\nli = [12,24,35,24,88,120,155]\nli = [x for x in li if x!=24]\nprint li'"
"With two given lists [1,3,6,78,35,55] and [12,24,35,24,88,120,155], write a program to make a list whose elements are intersection of the above given lists.","'\nset1=set([1,3,6,78,35,55])\nset2=set([12,24,35,24,88,120,155])\nset1 &= set2\nli=list(set1)\nprint li'"
write a program which count and print the numbers of each character in a string input by console.,"""\ndic = {}\ns=raw_input()\nfor s in s : \n\tdic[s] = dic.get(s,0)+1\nprint '\\n'.join(['%s,%s' % (k, v) for k, v in dic.items()])"""
write a program which accepts a string from console and print it in reverse order.,'\ns=raw_input()\ns = s[ :  : -1]\nprint s'
write a program which accepts a string from console and print the characters that have even indexes.,'\ns=raw_input()\ns = s[ :  : 2]\nprint s'
"write a program which prints all permutations of [1,2,3]","'\nimport itertools\nprint list(itertools.permutations([1,2,3]))'"
Write a program to solve a classic ancient Chinese puzzle:  We count 35 heads and 94 legs among the chickens and rabbits in a farm. How many rabbits and how many chickens do we have?,"""\ndef solve(numheads,numlegs) : \n\tns='No solutions!'\n\tfor i in range(numheads+1) : \n\t\tj=numheads-i\n\t\tif 2*i+4*j==numlegs : \n\t\t\treturn i,j\n\treturn ns,ns"""
write a program to count characters in a string,"'\nst = ""AmmarAdil""\ncount = {}\nfor a in st : \n\tif a in count : \n\t\tcount[a]+=1\n\telse : \n\t\tcount[a] = 1\nprint(\'Count\', count)'"
write a program to print count of vowels in a string,"'\nst = ""ammaradil""\nvowle = [\'a\', \'e\', \'i\', \'o\', \'u\']\ncount = 0\nfor s in st : \n\tif s in vowle : \n\t\tcount = count+1\nprint(""Count"", count)'"
write program to convert string to upper case,"'\nst = ""ammar adil""\nupper_st = st.upper()\nprint(""Upper Case"", upper_st)'"
write program to convert string to lower case,"'\nst = ""AMMAR ADIL""\nlower_st = st.lower()\nprint(""Lower Case"", lower_st)'"
write a program to find union of 2 arrays,"'\na = {1, 2, 3, 4}\nb = {3, 4, 5, 6}\nunion_both = a.union(b)\nprint(""Union"", union_both)'"
write a program to find intersection,"'\na = {1, 2, 3, 4}\nb = {3, 4, 5, 6}\nintersection_both = a.intersection(b)\nprint(""Intersection"", intersection_both)'"
write a program to create print array in beautiful format,"""\na = [[1, 2, 3, 4], [5, 6, 7, 8], [9, 10, 11, 12], [13, 14, 15, 16]]\nfor i in a : \n\trow = '|'\n\tfor b in i : \n\t\trow = row + ' ' + str(b)\n\tprint(row + ' ' + '|')"""
"write a program to join all items in a tuple into a string, using a hash character as separator","'\nmyTuple = (""John"", ""Peter"", ""Vicky"")\nx = ""#"".join(myTuple)\nprint(x)'"
write a program to remove spaces at the beginning and at the end of the string,"'\ntxt = ""     banana     ""\nx = txt.strip()\nprint(""of all fruits"", x, ""is my favorite"")'"
write a program to remove the leading and trailing characters,"'\ntxt = "",,,,,rrttgg.....banana....rrr""\nx = txt.strip("",.grt"")\nprint(x)'"
write a program to split a string into a list where each line is a list item,"'\ntxt = ""Thank you for the music\\nWelcome to the jungle""\nx = txt.splitlines()\nprint(x)'"
write a program to find index of a word in given string,"'\ntxt = ""Hello, welcome to my world.""\nx = txt.index(""welcome"")\nprint(x)'"
write a program to find ceil of a number,"""\nimport math\nnumber = 34.564\nce = math.ceil(number)\nprint('Ceil', ce)"""
write a program to find absoluute number of a given number,"""\nimport math\nnumber = 34.564\nfa = math.fabs(number)\nprint('Fabs', fa)"""
write a program to find factorinal of a number,"""\nimport math\nnumber = 8\nfa = math.factorial(number)\nprint('Factorial', fa)"""
write a program to find exponential of a number,"""\nimport math\nnumber = 3\nprint('Exponential', math.exp(number))"""
write a program to find log of a number,"'\nimport math\nnum = 5\nbase = 7\nprint(""Log_x_b"", math.log(num, base))'"
write a program to find cosine of a number,"'\nimport math\nnum = 45\nprint(""Cosine"", math.cos(num))'"
write a program to find sin of a number,"'\nimport math\nnum = 45\nprint(""Sin"", math.sin(num))'"
write a program to find tangent of a number,"'\nimport math\nnum = 45\nprint(""Tangent"", math.tan(num))'"
Write a program to print bit wise AND of two numbers,"'\na = 60            # 60 = 0011 1100\nb = 13            # 13 = 0000 1101\nc = a & b        # 12 = 0000 1100\nprint(""AND"", c)'"
Write a program to print bit wise OR of two numbers,"'\na = 60\nb = 13\nc = a | b\nprint(""OR"", c)'"
Write a program to print bit wise XOR of two numbers,"'\na = 60\nb = 13\nc = a ^ b\nprint(""XOR"", c)'"
Write a program to calculate Binary Ones Complement of a number,"'\na = 60\nc = ~a\nprint(""Binary Ones Complement"", c)'"
write a program to Binary Left Shift a number,"'\nc = a << 2\nprint(""Binary Left Shift"", c)'"
write a program to Binary Right Shift a number,"'\nc = a >> 2\nprint(""Binary Right Shift"", c)'"
