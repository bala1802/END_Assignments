src,trg
write a python program to add two numbers,"num1  =  1 . 5
num2  =  6 . 3
sum  =  num1  +  num2
print ( f'Sum :   { sum } ' ) "
write a python function to add two user provided numbers and return the sum,"def add _ two _ numbers ( num1 ,  num2 )  : 
    sum  =  num1  +  num2
    return sum"
Write a python function to merge two given lists into one,"def merge _ lists ( l1 ,  l2 )  : 
    return l1  +  l2"
Write a python function that prints the factors of a given number,"def print _ factors ( x )  : 
   print ( f""The factors of  { x }  are : "" ) 
   for i in range ( 1 ,  x  +  1 )  : 
       if x  %  i  =  =  0 : 
           print ( i ) "
"Write a python function to print whether a number is negative, positive or zero","def check _ pnz ( num )  : 
    if num  >  0 : 
       print ( ""Positive number"" ) 
    elif num  =  =  0 : 
       print ( ""Zero"" ) 
    else : 
       print ( ""Negative number"" ) "
Write a program to print the multiplication table of a given number,"num  =  9
for i in range ( 1 ,  11 )  : 
   print ( f"" { num }  x  { i }   =   { num * i } "" ) "
Write a program to filter the numbers in a list which are divisible by a given number,"my _ list  =   [ 11 ,  45 ,  74 ,  89 ,  132 ,  239 ,  721 ,  21 ] 
num  =  3
result  =  list ( filter ( lambda x :   ( x  %  num  =  =  0 )  ,  my _ list )  ) 
print ( f""Numbers divisible by  { num }  are  { result } "" ) "
Write a python function that returns the sum of n natural numbers,"def sum _ natural ( num )  : 
    if num  <  0 : 
       print ( ""Please enter a positive number ! "" ) 
    else : 
       sum  =  0
       while ( num  >  0 )  : 
           sum  +  =  num
           num  -  =  1
       return num"
Write a program to swap first and last elements in a list,"my _ list  =   [ 1 ,  2 ,  3 ,  4 ,  5 ,  6 ] 
my _ list [ 0 ]  ,  my _ list [  - 1 ]   =  my _ list [  - 1 ]  ,  my _ list [ 0 ] "
"Write a python function to find the area of a circle, whose radius is given","def findArea ( r )  :  
    PI  =  3 . 142
    return PI  *   ( r * r ) "
Write a program to print the sum of squares of first n natural numbers,"n  =  21
sum _ n  =  0
for i in range ( 1 ,  n + 1 )  : 
    sum _ n  +  =  i *  * 2
print ( sum _ n ) "
Write a program to print the length of a list,"my _ list  =   [ 1 ,  2 ,  3 ,  4 ,  5 ,  6 ,  7 ,  8 ,  9 ] 
print ( len ( my _ list )  ) "
Write a pythno function to print the length of a given tuple,"my _ tuple  =   ( 1 ,  2 ,  3 ,  4 ,  5 ,  6 ,  7 ,  8 ) 
print ( len ( my _ tuple )  ) "
"Write a python function to print the elements of a given list, one element in a line","def custom _ print ( l )  : 
    for  _  in l : 
        print (  _  ) "
Write a python function to remove all the odd numbers from a list and return the remaining list,"def remove _ odd ( my _ list )  : 
    result  =  list ( filter ( lambda x :   ( x  %  2  =  =  0 )  ,  my _ list )  ) 
    return result"
Write a python function to remove all the even numbers from a list and return the remaining list,"def remove _ even ( my _ list )  : 
    result  =  list ( filter ( lambda x :   ( x  %  2  !  =  0 )  ,  my _ list )  ) 
    return result"
Write a function that takes two lists as input and returns a zipped list of corresponding elements,"def zip _ list ( list1 ,  list2 )  : 
    return list ( zip ( list1 ,  list2 )  ) "
Write a program to to print the contents of a given file,"file _ name  =  'temp . txt'
with open ( file _ name ,  'r' )  as f : 
    print ( f . read (  )  ) "
Write a functin that returns the LCM of two input numbers,"def lcm ( a ,  b )  : 
    if a > b : 
        min _   =  a
    else : 
        min _   =  b
    while True : 
        if min _  % a =  = 0 and min _  % b =  = 0 : 
            break
        min _  +  = 1
    return min _ "
Write a program to print the unique elements in a list,"my _ list  =   [ 1 ,  2 ,  4 ,  5 ,  2 ,  3 ,  1 ,  5 ,  4 ,  7 ,  8 ,  2 ,  4 ,  5 ,  2 ,  7 ,  3 ] 
print ( set ( my _ list )  ) "
Write a function that returns the sum of digits of a given number,"def digisum ( num )  : 
    sum _  = 0
    while num  >  0 : 
        dig  =  num  %  10
        sum _  +  = dig
        num /  /  = 10
    return sum _ "
"Write a function that prints a given value, n number of times","def print _ n ( val ,  n )  : 
    for  _  in range ( n )  : 
        print ( val ) "
Write a function to find the area of sqaure,"def square _ area ( a )  : 
    return a * a"
Write a function to find the perimeter of a square,"def square _ perimeter ( a )  : 
    return 4 * a"
Write a function to find the area of rectangle,"def rectangle _ area ( l ,  b )  : 
    return l * b"
Write a function to find the permieter of a rectangle,"def rectangle _ perimeter ( l ,  b )  : 
    return 2 *  ( l + b ) "
"Write a python function to find the area of a circle, whose radius is given","def findArea ( r )  :  
    PI  =  3 . 142
    return PI  *   ( r * r ) "
Write a function to calculate and return electricity bill. Units used are given. Price per unit is fixed and is increased after 750 units.,"def calc _ elect _ bill ( units )  : 
    if units  >  0 : 
        if units  <  =  750 : 
            return 5 * units
        else : 
            return 5 *  ( 750 )   +  7 *  ( units - 750 ) 
    else : 
        return  - 1"
"Write a function to return day of a week, given the number","def give _ day ( n )  : 
    day _ dict  =   { 1 :  'Sunday' ,  2 :  'Monday' ,  3 :  'Tuesday' ,  4 :  'Wednesday' ,  5 :  'Thursday' ,  6 :  'Friday' ,  7 :  'Saturday' } 
    return day _ dict [ n ] "
Write a program to calculate and print the volume of a cylender,"r  =  3
h  =  5
pi  =  3 . 14
volume  =  pi *  ( r *  * 2 )  * h
print ( volume ) "
Write a function to calculate and return the average of input numbers,"def calc _ avg (  * args )  : 
    if len ( args )   >  0 : 
        return sum ( args )  / len ( args ) 
    return None"
"Write a function to calculate compound interest, given p, r, t","def comp _ int ( p ,  r ,  t )  : 
    amount  =  p  *   ( 1  +   ( r / 100 )  )  *  * t
    interest  =  amount  -  p
    return interest"
"Write a function to calculate simple interest, given p, r, t","def simp _ int ( p ,  r ,  t )  : 
    interest  =   ( p * r * t )  / 100
    return interest"
"Write a program to print a given string, replacing all the vowels with '_'","st  =  ""Where is this going ?  Could you please help me understand ! ""
vowels  =  ""AEIOUaeiou""
for v in vowels : 
    st  =  st . replace ( v ,  ' _ ' ) 
print ( st ) "
Write a functio to check whether a number if perfect or not,"def is _ perfect ( n )  : 
    sum _   =  0
    for i in range ( 1 ,  n /  / 2  +  1 )  : 
        if n % i  =  =  0 : 
            sum _  +  = i
    if sum _   =  =  n : 
        return True
    return False"
"Write a program to find and print the area of a triangle, whose hight and width are given.","h  =  12
w  =  11
area  =  0 . 5 * h * w
print ( area ) "
"Write a function to find acceleration, given u, v and t","def acc ( u ,  v ,  t )  : 
    return  ( v - u )  / t"
Write a lambda function to multiply two numbers,"multiply  =  lambda a ,  b :  a * b"
Write a lambda function to add two numbers,"add  =  lambda a ,  b :  a + b"
Write a lambda function that gives True if the input number is even otherwise False,even  =  lambda a :  True if a % 2  =  =  0 else False
Write a lambda function to to give character grom it's ascii value,ascii  =  lambda a :  chr ( a ) 
Write a lambda function to that gives the number of digits in a number,dig _ cnt  =  lambda a :  len ( str ( a )  ) 
"Write a program to to check if a triangle is valid or not, given it's all three angles","def is _ valid _ triangle _ angle ( a ,  b c )  : 
    if a + b + c  =  =  180 : 
        return True
    return False"
"Write a program to to check if a triangle is valid or not, given it's all three sides' length","def is _ valid _ triangle _ length ( a ,  b c )  : 
    if a > 0 and b > 0 and c > 0 : 
        if a + b  >  c and a + c  >  b and b + c  >  a : 
            return True
    return False"
Write a lambda functio that gives the word count in a statement.,count _ word  =  lambda s :  len ( s . split ( ' ' )  ) 
Write a program to extract and print digits of a number in reverse order. The number is input from user.,"num  =  int ( input ( ""Enter a number with multiple digit :  "" )  ) 
n = 0
while num > 0 : 
    a  =  num % 10
    num  =  num  -  a
    num  =  num / 10
    print ( int ( a )  , end = """" ) 
    n  =  n  +  1"
Write a program that prints all the alphabets in a string and skips all other characters,"string  =  "" $ john . snow #  @ Got . bad _ ending / com""
for ch in string : 
    if  ( ch >  = 'A' and ch <  = 'Z' )  or  ( ch >  = 'a' and ch <  = 'z' )  : 
        print ( ch ,  end = '' ) 
    else : 
        pass"
Write a function that takes number of disks in tower of hanaoi problem and returns the minimum number of steps required,"def hanoi ( x )  : 
    if x  =  =  1 : 
        return 1
    else : 
        return 2 * hanoi ( x - 1 )   +  1"
Write a lambda function to convert centimeters to inches,cm _ to _ inch  =  lambda x :  x / 2 . 54
Write a lambda function to find the union of two lists,"union  =  lambda a ,  b :  list ( set ( a )  | set ( b )  ) "
Write a lambda function to find the intersection of two lists,"intersection  =  lambda a ,  b :  list ( set ( a )  & set ( b )  ) "
Write a program that adds the square of two numbers and prints it,"a  =  32
b  =  21
result  =  a *  * 2  +  b *  * 2
print ( result ) "
Write a python function to concat the input strings and there's also a choice for seperator,"def con _ str (  * args ,  sep  =  ' ' )  : 
  return sep . join ( args ) "
Write a program to print all the even numbers in a range,"r1 ,  r2  =  1 ,  28
for  _  in range ( r1 ,  r2 + 1 )  : 
  if  _  % 2  =  =  0 : 
    print (  _  ) "
write a program to display date and time,"import datetime
now  =  datetime . datetime . now (  ) 
time =  now . strftime ( "" % Y -  % m -  % d  % H :  % M :  % S"" ) 
print ( f""Current date and time  :   { time } "" ) "
write a program to return the absolute value,"num  =   - 10
print ( f'Absolute of  { num }  is  { abs ( num )  } ' ) "
write a python program to check the length of list,"sample _ list  =   [ 'a' , 'b' , 'c' ] 
print ( f'length of sample _ list is  { len ( sample _ list )  } ' ) "
write a Python program to convert Python objects into JSON strings.,"import json
python _ dict  =    { ""name"" :  ""David"" ,  ""age"" :  6 ,  ""class"" : ""I"" } 
json _ dict  =  json . dumps ( python _ dict ,  sort _ keys = True ,  indent = 4 ) 
print ( f""json dict  :   { json _ dict } "" ) "
write a Python program to create multiple list,"obj  =   {  } 
for i in range ( 1 ,  11 )  : 
    obj [ str ( i )  ]   =   [  ] 
print ( f'create multiple list :  { obj } ' ) "
write a Python program to merge two dictionaries,"d1  =   { 'a' :  100 ,  'b' :  200 } 
d2  =   { 'x' :  300 ,  'y' :  200 } 
d  =  d1 . copy (  ) 
d . update ( d2 ) 
print ( f'merge two dictionaries :  { d } ' ) "
write a Python program to Sum all the items in a dictionary,"my _ dict  =   { 'data1' : 100 , 'data2' :  - 54 , 'data3' : 247 } 
print ( f'Sum all the items in a dictionary :  { sum ( my _ dict . values (  )  )  } ' ) "
write a python program to do nothing for a condition,"if 1  +  1  =  =  2 : 
    pass  #  Nothing"
write a python program to make use of enumerate method,"for count ,  value in enumerate ( obj )  : 
    print ( count ,  value ) "
write a python program to make use of setdefault for missing dictionary keys,"a _ dict  =   { 'a' : 1 } 
a _ dict . setdefault ( 'b' , 2 ) 
print ( f'After appending with new value :  { a _ dict } ' ) "
write a python program to make use of maps,"def square ( number )  : 
    return number  *  *  2
numbers  =   [ 1 ,  2 ,  3 ,  4 ,  5 ] 
squared  =  map ( square ,  numbers ) 
print ( f'mapped numbers :  { list ( squared )  } ' ) "
write a python program to make use of modulo operator,print ( f'modulo 15  %  4 :  Sol -  >  { 15  %  4 } ' ) 
write a python program to explain enclosing and global scope,"x  =  'global'
def f (  )  : 
    x  =  'enclosing'
    def g (  )  : 
        print ( x ) 
    g (  ) 
    return x
obj1  =  f (  ) 
print ( 'explain global scope : ' , obj1 ) "
write a python program to expain local and global scope,"def f1 (  )  : 
    x  =  'enclosing'
    def g (  )  : 
        x  =  'local'
        return x
    x = g (  ) 
    return x
obj2  =  f1 (  ) 
print ( 'explain local scope : ' , obj2 ) "
write a python program to make use of regular expression for matching,"import re
print ( 'Find the characters in the given string : ' , re . findall ( r' [ a - z ]  + ' ,  '123FOO456' ,  flags = re . IGNORECASE )  ) "
write a python program to make use of regular expression for matching,"s  =  'foo123bar'
m  =  re . findall ( '123' ,  s ) 
print ( 'find the number position : ' , m ) "
write a python program to convert lower string to UPPERCASE,"a  =  'string'
print ( f'convert lowercase to uppercase :  { a . upper (  )  } ' ) "
write a python program to convert uppercase string to lower,"a  =  'STRING'
print ( f'convert lowercase to uppercase :  { a . lower (  )  } ' ) "
write a Python Program to Find the Square Root,"num  =  8 
num _ sqrt  =  num  *  *  0 . 5
print ( 'The square root of  % 0 . 3f is  % 0 . 3f' %  ( num  , num _ sqrt )  ) "
write a Python Program to Convert Kilometers to Miles,"kilometers  =  10 . 0
conv _ fac  =  0 . 621371
miles  =  kilometers  *  conv _ fac
print ( ' % 0 . 2f kilometers is equal to  % 0 . 2f miles'  %  ( kilometers , miles )  ) "
write a Python Program to Convert Celsius To Fahrenheit,"celsius  =  37 . 5
fahrenheit  =   ( celsius  *  1 . 8 )   +  32
print ( ' % 0 . 1f degree Celsius is equal to  % 0 . 1f degree Fahrenheit'  %  ( celsius , fahrenheit )  ) "
"write a Python Program to Check if a Number is Positive, Negative or 0","num  =  10
if num  >  0 : 
   print ( ""Positive number"" ) 
elif num  =  =  0 : 
   print ( ""Zero"" ) 
else : 
   print ( ""Negative number"" ) "
Python Program to Check if a Number is Odd or Even,"num  =  100
if  ( num  %  2 )   =  =  0 : 
   print ( "" { 0 }  is Even"" . format ( num )  ) 
else : 
   print ( "" { 0 }  is Odd"" . format ( num )  ) "
Python Program to Display the multiplication Table,"num  =  12
for i in range ( 1 ,  11 )  : 
   print ( num ,  'x' ,  i ,  ' = ' ,  num * i ) "
write a program for Rolling the dices,"import random
min  =  1
max  =  6
print ( ""Rolling the dices .  .  . and the values are"" , random . randint ( min ,  max )  ) 
print ( ""Rolling the dices .  .  . and the values are"" , random . randint ( min ,  max )  ) "
write a python program to calculate the average,"list1  =   [ 1 , 3 , 4 , 5 ] 
average  =   ( sum ( list1 )  )   /  len ( list1 ) 
print ( f""the average score is :    { average }  "" ) "
write a python program to print reverse list,print ( f'reverese the given list elements :  { list1 [  :  :  - 1 ]  } ' ) 
write a python program to check a num is less than 1000,"def near _ thousand ( n )  : 
      return  (  ( abs ( 1000  -  n )   <  =  100 )  or  ( abs ( 2000  -  n )   <  =  100 )  ) 
print ( 'near to 1000' , near _ thousand ( 1000 )  ) 
print ( 'near to 1300' , near _ thousand ( 1300 )  ) "
write a python program to convert lower case to upper for list of elements,"x  =   [ 'ab' ,  'cd' ] 
for i in x : 
    print ( i . upper (  )  ) "
write a python program to break when the num is perfectly divisible,"i  =  1
while True : 
    if i % 3  =  =  0 : 
        break
    print ( i ) 
    i +  =  1"
write a python program to check name exists in given list,"names1  =   [ 'Amir' ,  'Bala' ,  'Chales' ] 
for n in names1 : 
    name  =  n . lower (  ) 
    if 'amir'  =  =  name : 
        print ( 'Yes name exists : ' , name ) 
    else : 
        print ( 'No' ) "
write a python program to print a matrix as output,"matrix  =   [  [ 1 ,  2 ,  3 ,  4 ]  , 
        [ 4 ,  5 ,  6 ,  7 ]  , 
        [ 8 ,  9 ,  10 ,  11 ]  , 
        [ 12 ,  13 ,  14 ,  15 ]  ] 
for i in range ( 0 ,  4 )  : 
    print ( matrix [ i ]  [ 1 ]  ,  end  =  "" "" ) "
write a python program to expalin list comprehension and print alternative values,"t  =   ( 1 ,  2 ,  4 ,  3 ,  8 ,  9 ) 
print (  [ t [ i ]  for i in range ( 0 ,  len ( t )  ,  2 )  ]  ) "
write a python program to sort tuple values,"a =  ( 2 , 3 , 1 , 5 ) 
tuple _ sorted  =  sorted ( a ) 
print ( tuple ( tuple _ sorted )  ) "
write a python program to multiple two list values,"l1 =  [ 1 , 2 , 3 ] 
l2 =  [ 4 , 5 , 6 ] 
print ( 'multiply two list values : ' ,  [ x * y for x in l1 for y in l2 ]  ) "
write the list comprehension to pick out only negative integers from a given list ‘l’.,"l1 =  [ 1 , 2 , 3 ,  - 4 ,  - 8 ] 
print ( 'negative integers : ' ,   [ x for x in l1 if x < 0 ]  ) "
write a python program to convert all list elements to upper case,"s =  [ ""pune"" ,  ""mumbai"" ,  ""delhi"" ] 
print (  [  ( w . upper (  )  ,  len ( w )  )  for w in s ]  ) "
write a python program to expalin python zip method,"l1 =  [ 2 , 4 , 6 ] 
l2 =  [  - 2 ,  - 4 ,  - 6 ] 
for i in zip ( l1 ,  l2 )  : 
	print ( i ) "
write a python program to add two list using python zip method,"l1 =  [ 10 ,  20 ,  30 ] 
l2 =  [  - 10 ,   - 20 ,   - 30 ] 
l3 =  [ x + y for x ,  y in zip ( l1 ,  l2 )  ] 
print ( 'added two list : ' , l3 ) "
write a list comprehension for number and its cube,"l =  [ 1 ,  2 ,  3 ,  4 ,  5 ,  6 ,  7 ,  8 ,  9 ] 
print (  [ x *  * 3 for x in l ]  ) "
write a list comprehension for printing rows into columns and vv,"l =  [  [ 1  , 2 ,  3 ]  ,   [ 4 ,  5 ,  6 ]  ,   [ 7 ,  8 ,  9 ]  ] 
print (  [  [ row [ i ]  for row in l ]  for i in range ( 3 )  ]  ) "
write a list comprehension for printing rows into columns and vv,"def unpack ( a , b , c , d )  : 
    print ( a + d ) 
x  =   [ 1 , 2 , 3 , 4 ] 
unpack (  * x ) "
write a python program to use python lambda function,"lamb  =  lambda x :  x  *  *  3
print ( lamb ( 5 )  ) "
write a python program to multiply a string n times,"a  =  'python'
print ( a * 5 ) "
write a python to check two numbers are greater than or equal or less than,"def maximum ( x ,  y )  : 
    if x  >  y : 
        return x
    elif x  =  =  y : 
        return 'The numbers are equal'
    else : 
        return y
print ( maximum ( 2 ,  3 )  ) "
write a python to dict to zip and print as dictionary elements in original form,"a =  { ""a"" : 1 , ""b"" : 2 , ""c"" : 3 } 
b = dict ( zip ( a . values (  )  , a . keys (  )  )  ) 
print ( b ) "
write a python program to delete an dictionary element,"a =  { 1 : 5 , 2 : 3 , 3 : 4 } 
a . pop ( 3 ) 
print ( a ) "
write a python program to check two dictionary are equal or not,"d1  =   { ""john"" : 40 ,  ""peter"" : 45 } 
d2  =   { ""john"" : 466 ,  ""peter"" : 45 } 
d1  =  =  d2"
write a python program to print only dictionary keys as list,"d  =   { ""john"" : 40 ,  ""peter"" : 45 } 
print ( list ( d . keys (  )  )  ) "
write a python program to check two lists are equal or not,"a =  [ 1 ,  4 ,  3 ,  5 ,  2 ] 
b =  [ 3 ,  1 ,  5 ,  2 ,  4 ] 
print ( a =  = b ) "
write a python program to check two lists are equal or not,"a = frozenset ( set (  [ 5 , 6 , 7 ]  )  ) 
print ( a ) "
write a python program to sum the set of unqiue elements,"a =  { 5 , 6 , 7 } 
print ( sum ( a , 5 )  ) "
write a python program to implement try catch code,"try : 
    s =  { 5 , 6 } 
    s * 3
except Exception as e : 
    print ( e ) "
write a python program to count the len of unique elements,"nums  =  set (  [ 1 , 1 , 2 , 3 , 3 , 3 , 4 , 4 ]  ) 
print ( len ( nums )  ) "
write a python program to split in python,"print ( 'abcdefcdghcd' . split ( 'cd' ,  2 )  ) "
write a python program to add title to string,print ( 'ab cd - ef' . title (  )  ) 
write a python program to print equal lenght of string,print ( 'ab' . zfill ( 5 )  ) 
write a python program to use string replace,"print ( 'abcdef12' . replace ( 'cd' ,  '12' )  ) "
write a python program to check string istitle,"str1  =  'Hello ! 2 @  # World'
if str1 . istitle (  )  : 
    print ( 'Yes string is title' ) "
write a python program to do lstrip on string,print ( 'xyyzxxyxyy' . lstrip ( 'xyy' )  ) 
write a python program to check identifier/keyword,print ( 'for' . isidentifier (  )  ) 
write a python program to check is an num/int,print ( '11' . isnumeric (  )  ) 
write a python program to check is an variable is printable,print ( '1 @  a' . isprintable (  )  ) 
write a python program to check it contains any space,print ( '''''' . isspace (  )  ) 
write a python program to check is an title,print ( 'HelloWorld' . istitle (  )  ) 
write a python program to check is all are num/int,"print ( 'ab , 12' . isalnum (  )  ) "
write a python program to check is all are alphanumeric,print ( 'ab' . isalpha (  )  ) 
write a python program to check is all are digit,print ( '0xa' . isdigit (  )  ) 
write a python program to use f string,"var1  =  'python language'
print ( f'f - string is an good feature in  { var1 } ' ) "
write a python program to iterate an dict and concatenate,"D = dict ( p = 'san' ,  q = 'foundry' ) 
print ( ' { p }  { q } ' . format (  *  * D )  ) "
write a python program to replace blank space to 1,"a = '1 0 0 1'
print ( a . replace ( ' ' ,  '1' )  ) "
write a python program to explain the generator,"def f11 ( x )  : 
    yield x + 1
g = f11 ( 8 ) 
print ( next ( g )  ) "
write a python program to replace blank space to 1,"def f12 ( x )  : 
    yield x + 1
    print ( ""test"" ) 
    yield x + 2
g = f12 ( 9 ) 
print ( next ( g )  ) "
write a python program to replace blank space to 1,"a  =  re . compile ( ' [ 0 - 9 ] ' ) 
z =  a . findall ( '3 trees' ) 
print ( z ) "
write a python program to print current working directory,"import os
print ( os . getcwd (  )  ) "
write a python program to print the ascii value of a string,print (  [ ord ( ch )  for ch in 'abc' ]  ) 
write a python program to use extend in list/ append to a list,"a =  [ 13 , 56 , 17 ] 
a . append (  [ 87 ]  ) 
a . extend (  [ 45 , 67 ]  ) 
print ( a ) "
write a python program to replace blank space to 1,"my _ string  =  'balaji'
k  =   [ print ( i )  for i in my _ string if i not in ""aeiou"" ] 
print ( 'Not a vowel' , k ) "
write a python program to add and square a range of number,x  =   [ i *  *  + 1 for i in range ( 3 )  ]  ;  print ( x ) 
write a python program to replace blank space to 1,"print (  [ i + j for i in ""abc"" for j in ""def"" ]  ) "
write a python program to multiply two list with list comprehensive,"l1 =  [ 1 , 2 , 3 ] 
l2 =  [ 4 , 5 , 6 ] 
print (  [ x * y for x in l1 for y in l2 ]  ) "
write a python program to print only digit or only apha charac in a given list,"l =  [ ""good"" ,  ""oh ! "" ,  ""excellent ! "" ,  "" # 450"" ] 
print (  [ n for n in l if n . isalpha (  )  or n . isdigit (  )  ]  ) "
write a python program to print todays date,"tday = datetime . date . today (  ) 
print ( tday ) "
write a python program to check tuple are immutable,"a =  ( 1 , 2 , 3 ) 
try : 
    a  =  a + 1
except Exception as e : 
    print ( e ) "
write a python program to calculate factorial sum using list comprehensive,"import functools 
n  = 5
print ( functools . reduce ( lambda x ,  y :  x  *  y ,  range ( 1 ,  n + 1 )  )  ) "
write a python program to print len of each characters,"words  =   [ 'cat' ,  'window' ,  'defenestrate' ] 
for w in words : 
    print ( w ,  len ( w )  ) "
write a python program to make increment on each call of method using lambda function,"def make _ incrementor ( n )  : 
    return lambda x :  x  +  n
f  =  make _ incrementor ( 42 ) 
f ( 0 ) 
print ( f ( 1 )  ) "
write a python program to sort using list comprehensive,"pairs  =   [  ( 1 ,  'one' )  ,   ( 2 ,  'two' )  ,   ( 3 ,  'three' )  ,   ( 4 ,  'four' )  ] 
pairs . sort ( key = lambda pair :  pair [ 1 ]  ) 
print ( pairs ) "
write a python program to del the first element of the array/list,"a  =   [  - 1 ,  1 ,  66 . 25 ,  333 ,  333 ,  1234 . 5 ] 
del a [ 0 ] 
print ( a ) "
write a python program to replace the first character of a given word,"word  =  ""goal""
word  =  ""f""  +  word [ 1 :  ] 
print ( word ) "
write a python program to find a string in a given phrase,"phrase  =  ""the surprise is in here somewhere""
print ( phrase . find ( ""surprise"" )  ) "
write a python program to expalin the use of f-string,"n  =  3
m  =  4
print ( f"" { n }  times  { m }  is  { n * m } "" ) "
write a python program to explain the use of assert,"x = 1
y = 8
assert x > y ,  'X too small'"
write a python program to multiply three numbers,"num1  =  1 . 5
num2  =  6 . 3
num3  =   - 2 . 3
product  =  num1  *  num2  *  num3
print ( f'Product :   { product } ' ) "
"write a python function that when given two numbers, would divide the first number by second number and return the quotient and remainder","def divide _ first _ number _ by _ second ( num1 ,  num2 )  : 
    return  ( num1  /  /  num2 )  ,   ( num1  %  num2 ) "
write a python function to return the largest and smallest numbers in the given list and return None if the list is empty,"def largest _ and _ smallest ( list _ of _ nums )  : 
    if list _ of _ nums : 
        return max ( list _ of _ nums )  ,  min ( list _ of _ nums ) 
    else : 
        return"
"write a recursive python function to print the nth fibonacci number, where n is provided as the argument","def fibonacci _ recursive ( n )  : 
   if n  <  =  1 : 
       return n
   else : 
       return  ( recur _ fibo ( n - 1 )   +  recur _ fibo ( n - 2 )  ) "
write a python function that would read the given input file path and print its contents,"def read _ and _ print _ file ( filepath )  : 
    with open ( filepath ,  ""r"" )  as infile : 
        print (  infile . read (  )   ) "
write a python program that would print the first n positive integers using a for loop,"n  =  62
for num in range ( n )  : 
    print ( num ) "
write a python function that returns the input list sorted in ascending order,"def sort _ ascending ( list _ to _ be _ sorted )  : 
    return sorted ( list _ to _ be _ sorted ) "
write a python function that returns the input list sorted in descending order,"def sort _ descending ( list _ to _ be _ sorted )  : 
    return sorted ( list _ to _ be _ sorted ,  reverse = True ) "
"write a python function that would return the sum of first n natural numbers, where n is the input","def sum _ first _ n ( n )  : 
    return  (  n  *   ( n + 1 )   )   /  /  2"
"write a recursive python function that would return the sum of first n natural numbers, where n is the input","def sum _ first _ n _ recursive ( n )  : 
    if n  =  =  0 : 
        return 0
    return sum _ first _ n _ recursive ( n - 1 )   +  n"
"write a python function that would filter a list of dictionaries where a specified key equals given value, list_of_dictionaries, key and value are inputs to this function.","def filter _ with _ key _ value ( list _ of _ dicts ,  key ,  value )  : 
    return list (  filter (  lambda x :  x . get ( key )   =  =  value ,  list _ of _ dicts  )   ) "
write a python function that returns the square of a given input number,"def square ( x )  : 
    return x *  * 2"
write a python program that asks for user input and prints the given input,"a  =  input ( ""User Input"" ) 
print ( a ) "
write a python function shifts and scales all numbers in the given list by the given mean and standard deviation,"def shift _ and _ scale ( list _ of _ nums ,  mean ,  std )  : 
    return  [   ( x - mean )   /  std for x in list _ of _ nums  ] "
write a python function that takes in a list of sequences and zips each corresponding element from the list into a tuple and returns the list of such tuples,"def zip _  ( list _ of _ seq )  : 
    return list ( zip (  * list _ of _ seq )  ) "
write python program that would merge two dictionaries by adding the second one into the first,"a  =   { ""a"" :  1 ,  ""b"" :  3 } 
b  =   { ""c"" :  1 ,  ""d"" :  3 } 
a . update ( b ) "
write a python function that would reverse the given string,"def reverse _ string ( str _ to _ be _ reversed )  : 
    return str _ to _ be _ reversed [  :  :  - 1 ] "
"write a python program that would print ""Hello World""","print ( ""Hello World"" ) "
write a python program that would swap variable values,"a  =  10
b  =  15
a ,  b  =  b ,  a"
write a python program that iterates over a dictionary and prints its keys and values,"a  =   { ""a"" : 1 ,  ""b"" : 2 ,  ""c"" : 3 ,  ""d"" : 4 } 
for k ,  v in a . items (  )  : 
    print ( k ,  v ) "
write a python function that would print the ASCII value of a given character,"def print _ ascii ( char )  : 
    print ( ord ( char )  ) "
write a python function that takes in two numbers and returns their HCF,"def hcf ( num1 ,  num2 )  : 
    smaller  =  num1 if num1  <  num2 else num2
    for i in range ( 1 ,  smaller + 1 )  : 
        if  ( num1  %  i  =  =  0 )  and  ( num2  %  i  =  =  0 )  : 
            hcf  =  i
    return hcf"
write a python function that takes in two numbers and returns their LCM,"def lcm ( num1 ,  num2 )  : 
    bigger  =  num1 if num1  >  num2 else num2
    while True : 
        if  ( bigger  %  num1  =  =  0 )  and  ( bigger  %  num2  =  =  0 )  : 
            break
        bigger  +  =  1
    return bigger"
"write a recursive python function to calculate sum of natural numbers upto n, where n is an argument","def recursive _ sum ( n )  : 
    if n  <  =  1 : 
        return n
    else : 
        return n  +  recursive _ sum ( n - 1 ) "
write a python function that deletes the last element of a list and returns the list and the deleted element,"def delete _ last _ element ( list _ to _ be _ processed )  : 
    deleted _ element  =  list _ to _ be _ processed . pop (  ) 
    return list _ to _ be _ processed ,  deleted _ element"
write a python function that takes in a list and returns a list containing the squares of the elements of the input list,"def square _ list _ elements ( list _ to _ be _ squared )  : 
    return list (  map ( lambda x :  x *  * 2 ,  list _ to _ be _ squared )   ) "
write a python program that prints out natural numbers less than or equal to the given number using a while loop,"input _ num  =  27
while input _ num : 
    print ( input _ num ) 
    input _ num  -  =  1"
"write a python function that takes two numbers. The function divides the first number by the second and returns the answer. The function returns None, if the second number is 0","def divide ( num1 ,  num2 )  : 
    if num2  =  =  0 : 
        return
    else : 
        return num1  /  num2"
write a python program uses else with for loop,"seq  =  ""abcde""
for k in seq : 
    if k  =  =  ""f"" : 
        break
else : 
    print ( ""f Not Found ! "" ) "
Write a function to return the mean of numbers in a list,"def cal _ mean ( num _ list : list )  -  > float : 
    if num _ list : 
        return sum ( num _ list )  / len ( num _ list ) 
    else : 
        return None"
Write a function to return the area of a equilateral triangle,"def cal _ eq _ triangle _ area ( a : float )  -  > float : 
    if a : 
        return  ( 3 *  *  ( 1 / 2 )  )  *  ( a *  * 2 )  / 4
    else : 
        return None"
Write a function to return the area of a right angle triangle,"def cal _ rt _ triangle _ area ( base : float , height : float )  -  > float : 
    if base and height : 
        return  ( base * height )  / 2
    else : 
        return None"
Write a function to return the cartisian distance of a point from origin,"def cal _ dist _ from _ orign ( x : float , y : float )  -  > float : 
    return  ( x *  * 2 + y *  * 2 )  *  *  ( 1 / 2 ) "
Write a function to return the cartisian distance between two points,"def cal _ cart _ distance ( x1 : float , y1 : float , x2 : float , y2 : float )  -  > float : 
    return  (  ( x1 - x2 )  *  * 2 +  ( y1 - y2 )  *  * 2 )  *  *  ( 1 / 2 ) "
Write a function to return the type roots of a quadratic equation ax**2 + bx + c = 0,"def root _ type ( a : float , b : float , c : float )  : 
    if b *  * 2 - 4 * a * c  >  =  0 : 
        return 'real'
    else : 
        return 'imaginary'"
Write a function to return the sum of the roots of a quadratic equation ax**2 + bx + c = 0,"def sum _ of _ roots ( a : float , c : float )  : 
    if a : 
        return c / a
    else : 
        return None"
Write a function to return the product of the roots of a quadratic equation ax**2 + bx + c = 0,"def prod _ of _ roots ( a : float , b : float )  : 
    if a : 
        return  - b / a
    else : 
        return None"
Write a function to return the profit or loss based on cost price and selling price,"def find _ profit _ or _ loss ( cp , sp )  : 
    if cp  >  sp : 
        return 'loss' ,  cp - sp
    elif cp  <  sp : 
        return 'profit' ,  sp - cp
    else : 
        return 'no profit or loss' ,  0"
Write a function to return the area of a rectangle,"def cal _ area _ rect ( length ,  breadth )  : 
    return length * breadth"
Write a function to return the area of a square,"def cal _ area _ square ( side )  : 
    return side *  * 2"
Write a function to return the area of a rhombus with diagonals q1 and q2,"def cal _ area _ rhombus ( q1 , q2 )  : 
    return  ( q1 * q2 )  / 2"
Write a function to return the area of a trapezium with base a base b and height h between parallel sides,"def cal _ area _ trapezium ( a , b , h )  : 
    return h *  ( a + b )  / 2"
Write a function to return the area of a circle of raidus r,"def cal _ area _ circle ( r )  : 
    pi  =  3 . 14
    return pi * r *  * 2"
Write a function to return the circumference of a circle,"def cal _ circumference ( r )  : 
    pi  =  3 . 14
    return 2 * pi * r"
Write a function to return the perimeter of a rectangle,"def cal _ perimeter _ rect ( length ,  bredth )  : 
    return 2 *  ( length + bredth ) "
Write a function to return the perimeter of a triangle,"def cal _ perimeter _ triangle ( s1 , s2 , s3 )  : 
    return s1 + s2 + s3"
Write a function to return the perimeter of a square,"def cal _ perimeter _ square ( side )  : 
    return 4 * side"
Write a function to return the perimeter of an equilateral triangle,"def cal _ perimeter _ eq _ triangle ( a )  : 
    return 3 * a"
Write a function to return the perimeter of a isoscales triangle,"def cal _ perimeter _ iso _ triangle ( s1 , s2 )  : 
    return 2 * s1 + s2"
Write a function to return the area of an ellipse,"def cal _ area _ ellipse ( minor ,  major )  : 
    pi  =  3 . 14
    return pi *  ( minor * major ) "
Write a function to return the lateral surface area of a cylinder,"def cal _ cylinder _ lat _ surf _ area ( height , radius )  : 
    pi = 3 . 14
    return 2 * pi * radius * height"
Write a function to return the curved surface area of a cone,"def cal _ cone _ curved _ surf _ area ( slant _ height , radius )  : 
    pi = 3 . 14
    return pi * radius * slant _ height"
Write a function to return the total surface area of a cube of side a,"def cal _ surface _ area _ cube ( a )  : 
    return 6 *  ( a *  * 2 ) "
"Write a function to return the total surface area of a cuboid of length l, bredth b and height h","def cal _ surface _ area _ cuboid ( l , b , h )  : 
    return 2 *  ( l * b + b * h + h * l ) "
Write a function to return the surface area of a sphere,"def cal _ area _ sphere ( radius )  : 
    pi  =  3 . 14
    return 4 * pi *  ( radius *  * 2 ) "
Write a function to return the surface area of a hemi-sphere,"def cal _ area _ hemisphere ( radius )  : 
    pi  =  3 . 14
    return 2 * pi *  ( radius *  * 2 ) "
Write a function to return the total surface area of a cylinder,"def cal _ cylinder _ surf _ area ( height , radius )  : 
    pi = 3 . 14
    return 2 * pi * radius *  * 2 *  + 2 * pi * radius * height"
Write a function to return the lateral surface area of a cone,"def cal _ cone _ lateral _ surf _ area ( height , radius )  : 
    pi = 3 . 14
    return pi * radius *  (  (  ( height *  * 2 )  +  ( radius *  * 2 )  )  *  *  ( 1 / 2 )  ) "
Write a function to return the volume of a cylinder,"def cal _ cylinder _ volume ( height ,  radius )  : 
    pi = 3 . 14
    return pi *  ( radius *  * 2 )  * height"
Write a function to return the volume of a cone,"def cal _ cone _ volume ( height , radius )  : 
    pi = 3 . 14
    return pi *  ( radius *  * 2 )  * height / 3"
Write a function to return the volume of a hemi sphere,"def cal _ hemisphere _ volume ( radius : float )  -  > float : 
    pi = 3 . 14
    return  ( 2 / 3 )  * pi *  ( radius *  * 3 ) "
Write a function to return the volume of a sphere,"def cal _ sphere _ volume ( radius : float )  -  > float : 
    pi = 3 . 14
    return  ( 4 / 3 )  * pi *  ( radius *  * 3 ) "
Write a function to return the volume of a cuboid,"def cal _ cuboid _ volume ( length : float ,  breadth : float ,  height : float )  -  > float : 
    return length * breadth * height"
Write a function to return the volume of a cube,"def cal _ cube _ volume ( side : float )  -  > float : 
    return side *  * 3"
Write a function to return the speed of moving object based of distance travelled in given time,"def cal _ speed ( distance : float , time : float )  -  > float : 
    return distance / time"
Write a function to return the distance covered by a moving object based on speend and given time,"def cal _ distance ( time : float , speed : float )  -  > float : 
    return time * speed"
Write a function to return the time taken by a given of moving object based of distance travelled in given time,"def cal _ time ( distance : float , speed : float )  -  > float : 
    return distance / speed"
Write a function to return the torque when a force f is applied at angle thea and distance for axis of rotation to place force applied is r,"def cal _ torque ( force : float , theta : float , r : float )  -  > float : 
    import math
    return force * r * math . sin ( theta ) "
Write a function to return the angualr veolcity based on augualr distance travelled in radian unit and time taken,"def cal _ angular _ velocity ( angular _ dist : float , time : float )  -  > float : 
    return angular _ dist / time"
Write a function to calculate the focal length of a lense buy the distance of object and distance of image from lense,"def cal _ focal _ length _ of _ lense ( u : float , v : float )  -  > float : 
    return  ( u * v )  /  ( u + v ) "
Write a function to calculate the gravitational force between two objects of mass m1 and m2 and distance of r between them,"def cal _ gforce ( mass1 : float , mass2 : float ,  distance : float )  -  > float : 
    g  =  6 . 674 *  ( 10 )  *  *  (  - 11 ) 
    return  ( g * mass1 * mass2 )  /  ( distance *  * 2 ) "
Write a function to calculate the current in the curcit where the resistance is R and voltage is V,"def cal _ current ( resistance : float ,  voltage : float )  -  > float : 
    return voltage / resistance"
Write a function to calculate the total capacitance of capacitors in parallel in a given list,"def cal _ total _ cap _ in _ parallel ( cap _ list : list )  -  > float : 
    return sum ( cap _ list ) "
Write a function to calculate the total resistance of resistances in parallel in a given list,"def cal _ total _ res _ in _ parallel ( res _ list : list )  -  > float : 
    return sum (  [ 1 / r for r in res _ list ]  ) "
Write a function to calculate the total resistance of resistances in series in a given list,"def cal _ total _ res _ in _ series ( res _ list : list )  -  > float : 
    return sum ( res _ list ) "
Write a function to calculate the moment of inertia of a ring of mass M and radius R,"def cal _ mi _ ring ( mass : float , radius : float )  -  > float : 
    return mass *  ( radius *  * 2 ) "
Write a function to calculate the moment of inertia of a sphere of mass M and radius R,"def cal _ mi _ sphere ( mass : float , radius : float )  -  > float : 
    return  ( 7 / 5 )  * mass *  ( radius *  * 2 ) "
"Write a function to calculate the pressure P of ideal gas based on ideal gas equation - Volume V, and Temperatue T are given","def find _ pressure _ of _ ideal _ gas ( volume : float ,  temp : float , n : float )  -  > float : 
    r  =  8 . 3145  #  gas constant R
    return  ( n * r * temp )  / volume"
Write a function to calculate the volume V of ideal gas based on ideal gas equation Pressure P and Tempreature T given,"def find _ volume _ of _ ideal _ gas ( pressure : float ,  temp : float , n : float )  -  > float : 
    r  =  8 . 3145  #  gas constant R
    return  ( n * r * temp )  / pressure"
Write a function to calculate the Temprature T of ideal gas based on ideal gas equation Pressure P and Volume V given,"def find _ temp _ of _ ideal _ gas ( pressure : float ,  volume : float , n : float )  -  > float : 
    r  =  8 . 3145  #  gas constant R
    return  ( pressure * volume )  / n * r"
"Write a function to calculate the velocity of an object with initial velocity u, time t and acceleration a","def cal _ final _ velocity ( initial _ velocity : float , accelration : float , time : float )  -  > float : 
    return initial _ velocity  +  accelration * time"
"Write a function to calculate the displacement of an object with initial velocity u, time t and acceleration a","def cal _ displacement ( initial _ velocity : float , accelration : float , time : float )  -  > float : 
    return initial _ velocity * time  +   . 5 * accelration *  ( time )  *  * 2"
Write a function to calculate amount of radioactive element left based on initial amount and half life,"def cal _ half _ life ( initail _ quatity : float ,  time _ elapsed : float ,  half _ life : float )  -  > float : 
    return initail _ quatity *  (  ( 1 / 2 )  *  *  ( time _ elapsed / half _ life )  ) "
Write a function to calculate the new selling price based on discount percentage,"def cal _ sp _ after _ discount ( sp : float , discount : float )  -  > float : 
    return sp *  ( 1  -  discount / 100 ) "
"Write a function to calculate the simple interest for principal p, rate r and time in years y","def get _ si ( p : float ,  r : float ,  t : float )  -  > float : 
    return  ( p * r * t )  / 100"
"Write a function to calculate the compound interest for principal p, rate r and time in years y","def get _ ci ( p : float ,  r : float ,  t : float ,  n : float )  -  > float : 
    return round ( p *  (  ( 1 +  ( r /  ( n * 100 )  )  )  *  *  ( n * t )  )   -  p , 2 ) "
Write a function to calculate the energy released by converting mass m in kg to energy,"def cal _ energy _ by _ mass ( mass : float )  -  > float : 
    c  =  300000
    return mass  *   ( c *  * 2 ) "
Write a function to calculate the kinetic energy of an object of mass m and velocity v,"def cal _ ke ( mass : float , velocity : float )  -  > float : 
    return  ( mass *  ( velocity )  *  * 2 )  / 2"
Write a function to calculate the potential energy of an object of mass m at height h,"def cal _ pe ( mass : float , height : float )  -  > float : 
    g  =  9 . 8
    return  ( mass * g * height ) "
Write a function to calculate the electrostatic force between two charged particles with charge q1 and q2 at a distance d apart,"def cal _ electrostatic _ force ( q1 , q2 , d )  : 
    k  =  9 *  ( 10 *  * 9 ) 
    return  ( k * q1 * q2 )  /  ( d *  * 2 ) "
Write a function to calculate the density given mass and volume,"def cal _ density ( mass , volume )  : 
    return  ( mass / volume ) "
Write a function to convert the temprature celsius 'c' to fahrenheit 'f' or fahrenheit to celsius," def temp _ converter ( temp , temp _ given _ in  =  'f' )  : "
Return the converted temprature,"    
    if temp _ given _ in . lower (  )   =  =  'f' :   #  Convert to C
        return  ( temp  -  32 )   *   ( 5 / 9 ) 
    else :   #  Convert to F
        return  ( temp  *  9 / 5 )   +  32"
python program to find power of number using recursion,"def power ( N ,  P )  : 
    if  ( P  =  =  0 or P  =  =  1 )  : 
        return N
    else : 
        return  ( N  *  power ( N ,  P  -  1 )  ) 
print ( power ( 5 ,  2 )  ) "
Python 3 program to find time for a given angle.,"def calcAngle ( hh ,  mm )  : 
    hour _ angle  =  0 . 5  *   ( hh  *  60  +  mm ) 
    minute _ angle  =  6  *  mm
    angle  =  abs ( hour _ angle  -  minute _ angle ) 
    angle  =  min ( 360  -  angle ,  angle ) 
    return angle"
write a python function to remove duplicate items from the list,"def remove _ duplicatesinlist ( lst )  : 
    return len ( lst )   =  =  len ( set ( lst )  ) "
write a python function to convert list of strings to list of integers,"def stringlist _ to _ intlist ( sList )  :  
  return ( list ( map ( int ,  sList )  )  ) "
write a python function to map multiple lists using zip,"def map _ values (  * args )  : 
  return set ( zip (  * args )  ) "
write a generator function in python to generate infinite square of numbers using yield,"def nextSquare (  )  :  
    i  =  1 ;   "
An Infinite loop to generate squares,"    
    while True :  
        yield i * i                 
        i  +  =  1"
write a python generator function for generating Fibonacci Numbers,"def fib ( limit )  :  
    a ,  b  =  0 ,  1  
    while a  <  limit :  
        yield a 
        a ,  b  =  b ,  a  +  b"
write a python program which takes user input tuple and prints length of each tuple element,"userInput  =  input ( ""Enter a tuple : "" ) 
x  =  map ( lambda x : len ( x )  ,  tuple ( x . strip (  )  for x in userInput . split ( ' , ' )  )  ) 
print ( list ( x )  ) "
write a python function using list comprehension to find even numbers in a list,"def find _ evennumbers ( input _ list )  : 
  list _ using _ comp  =   [ var for var in input _ list if var  %  2  =  =  0 ]  
  return list _ using _ comp"
write a python function to return dictionary of two lists using zip,"def dict _ using _ comp ( list1 ,  list2 )  : 
  dict _ using _ comp  =   { key : value for  ( key ,  value )  in zip ( list1 ,  list2 )  }  
  return dict _ using _ comp"
write a python program to find the biggest character in a string,"bigChar  =  lambda word :  reduce ( lambda x , y :  x if ord ( x )   >  ord ( y )  else y ,  word ) "
write a python function to sort list using heapq,"def heapsort ( iterable )  : 
    from heapq import heappush ,  heappop
    h  =   [  ] 
    for value in iterable : 
        heappush ( h ,  value ) 
    return  [ heappop ( h )  for i in range ( len ( h )  )  ] "
write a python function to return first n items of the iterable as a list,"def take ( n ,  iterable )  :     
    import itertools
    return list ( itertools . islice ( iterable ,  n )  ) "
write a python function to prepend a single value in front of an iterator,"def prepend ( value ,  iterator )  :     
    import itertools
    return itertools . chain (  [ value ]  ,  iterator ) "
write a python function to return an iterator over the last n items,"def tail ( n ,  iterable )  :     
    from collections import deque
    return iter ( deque ( iterable ,  maxlen = n )  ) "
write a python function to advance the iterator n-steps ahead,"def consume ( iterator ,  n = None )  : 
    import itertools
    from collections import deque
    ""Advance the iterator n - steps ahead .  If n is None ,  consume entirely . """
Use functions that consume iterators at C speed.,"    
    if n is None : 
        deque ( iterator ,  maxlen = 0 ) 
    else : 
        next ( itertools . islice ( iterator ,  n ,  n )  ,  None ) "
write a python function to return nth item or a default value,"def nth ( iterable ,  n ,  default = None )  : 
    from itertools import islice
    return next ( islice ( iterable ,  n ,  None )  ,  default ) "
write a python function to check whether all elements are equal to each other,"def all _ equal ( iterable )  : 
    from itertools import groupby
    g  =  groupby ( iterable ) 
    return next ( g ,  True )  and not next ( g ,  False ) "
write a python function to count how many times the predicate is true,"def quantify ( iterable ,  pred = bool )  : 
    return sum ( map ( pred ,  iterable )  ) "
write a python function to return the sequence elements n times,"def ncycles ( iterable ,  n )  : 
    from itertools import chain ,  repeat
    return chain . from _ iterable ( repeat ( tuple ( iterable )  ,  n )  ) "
write a python function to return the dot product of two vectors,"def dotproduct ( vec1 ,  vec2 )  : 
    return sum ( map ( operator . mul ,  vec1 ,  vec2 )  ) "
write a python function to flatten one level of nesting,"def flatten ( list _ of _ lists )  : 
    from itertools import chain
    return chain . from _ iterable ( list _ of _ lists ) "
write a python function to repeat calls to function with specified arguments,"def repeatfunc ( func ,  times = None ,   * args )  : 
    from itertools import starmap ,  repeat
    if times is None : 
        return starmap ( func ,  repeat ( args )  ) 
    return starmap ( func ,  repeat ( args ,  times )  ) "
write a python function to convert iterable to pairwise iterable,"def pairwise ( iterable )  : 
    from itertools import tee
    a ,  b  =  tee ( iterable ) 
    next ( b ,  None ) 
    return zip ( a ,  b ) "
write a python function to collect data into fixed-length chunks or blocks,"def grouper ( iterable ,  n ,  fillvalue = None )  : 
    from itertools import zip _ longest
    args  =   [ iter ( iterable )  ]   *  n
    return zip _ longest (  * args ,  fillvalue = fillvalue ) "
write a python function to use a predicate and return entries particition into false entries and true entries,"def partition ( pred ,  iterable )  : 
    from itertools import filterfalse ,  tee
    t1 ,  t2  =  tee ( iterable ) 
    return filterfalse ( pred ,  t1 )  ,  filter ( pred ,  t2 ) "
"write a python function to list unique elements, preserving order remembering only the element just seen.""","def unique _ justseen ( iterable ,  key = None )  : 
    import operator
    from itertools import groupby    
    return map ( next ,  map ( operator . itemgetter ( 1 )  ,  groupby ( iterable ,  key )  )  ) "
"write a python function to return random selection from itertools.product(*args, **kwds)","def random _ product (  * args ,  repeat = 1 )  : 
    import random
    pools  =   [ tuple ( pool )  for pool in args ]   *  repeat
    return tuple ( map ( random . choice ,  pools )  ) "
"write a python function to return random selection from itertools.permutations(iterable, r)","def random _ permutation ( iterable ,  r = None )  : 
    import random
    pool  =  tuple ( iterable ) 
    r  =  len ( pool )  if r is None else r
    return tuple ( random . sample ( pool ,  r )  ) "
"write a python function to random select from itertools.combinations(iterable, r)","def random _ combination ( iterable ,  r )  : 
    import random
    pool  =  tuple ( iterable ) 
    n  =  len ( pool ) 
    indices  =  sorted ( random . sample ( range ( n )  ,  r )  ) 
    return tuple ( pool [ i ]  for i in indices ) "
write a python function to locate the leftmost value exactly equal to x,"def index ( a ,  x )  : 
    from bisect import bisect _ left    
    i  =  bisect _ left ( a ,  x ) 
    if i  !  =  len ( a )  and a [ i ]   =  =  x : 
        return i
    raise ValueError"
write a python function to locate the rightmost value less than x,"def find _ lt ( a ,  x )  : 
    from bisect import bisect _ left  
    i  =  bisect _ left ( a ,  x ) 
    if i : 
        return a [ i - 1 ] 
    raise ValueError"
write a python function to find rightmost value less than or equal to x,"def find _ le ( a ,  x )  : 
    from bisect import bisect _ right  
    i  =  bisect _ right ( a ,  x ) 
    if i : 
        return a [ i - 1 ] 
    raise ValueError"
write a python function to find leftmost value greater than x,"def find _ gt ( a ,  x )  : 
    from bisect import bisect _ right 
    i  =  bisect _ right ( a ,  x ) 
    if i  !  =  len ( a )  : 
        return a [ i ] 
    raise ValueError"
write a python function to find leftmost item greater than or equal to x,"def find _ ge ( a ,  x )  : 
    from bisect import bisect _ left 
    i  =  bisect _ left ( a ,  x ) 
    if i  !  =  len ( a )  : 
        return a [ i ] 
    raise ValueError"
write a python function to map a numeric lookup using bisect,"def grade ( score ,  breakpoints =  [ 60 ,  70 ,  80 ,  90 ]  ,  grades = 'FDCBA' )  : 
    from bisect import bisect
    i  =  bisect ( breakpoints ,  score ) 
    return grades [ i ] "
write a regex pattern in python to print all adverbs and their positions in user input text,"import re
text  =  input ( ""Enter a string :  "" ) 
for m in re . finditer ( r"" \ w + ly"" ,  text )  : 
    print ( ' % 02d -  % 02d :   % s'  %   ( m . start (  )  ,  m . end (  )  ,  m . group ( 0 )  )  ) "
write a python function to read a CSV file and print its content,"def read _ csv ( filename )  : 
    import csv
    with open ( filename ,  newline = '' )  as f : 
        reader  =  csv . reader ( f ) 
        for row in reader : 
            print ( row ) "
write a python snippet to convert list into indexed tuple,"test _ list  =   [ 4 ,  5 ,  8 ,  9 ,  10 ]  
list ( zip ( range ( len ( test _ list )  )  ,  test _ list )  ) "
write a python function to split word into chars,"def split ( word )  :  
    return  [ char for char in word ] "
write a python function to pickle data to a file,"def pickle _ data ( data ,  pickle _ file )  : 
  import pickle
  with open ( pickle _ file ,  'wb' )  as f : 
      pickle . dump ( data ,  f ,  pickle . HIGHEST _ PROTOCOL ) 
  return None"
write a python function to load pickle data from a file,"def load _ pickle _ data ( pickle _ file )  : 
  import pickle
  with open ( pickle _ file ,  'rb' )  as f : 
      data  =  pickle . load ( f ) 
  return data"
Write a function that adds 2 iterables a and b such that a is even and b is odd,"def add _ even _ odd _ list ( l1 : list , l2 : list )  -  >  list : 
    return  [ a + b for a , b in zip ( l1 , l2 )  if a % 2 =  = 0 and b % 2 !  = 0 ] "
Write a function that strips every vowel from a string provided,"def strip _ vowels ( input _ str : str )  -  > str : 
    vowels  =   [ 'a' ,  'e' ,  'i' ,  'o' ,  'u' ,  'A' ,  'E' ,  'I' ,  'O' ,  'U'  ] 
    return '' . join ( list ( filter ( lambda x :  x not in vowels ,  input _ str )  )  ) "
write a function that acts like a ReLU function for a 1D array,"def relu _ list ( input _ list : list )  -  > list : 
    return  [  ( lambda x :  x if x  >  =  0 else 0 )  ( x )  for x in input _ list ] "
Write a function that generates Factorial of number,"def factorial ( n )  : 
    if n  =  =  0 or n  =  = 1 : 
        return 1
    else : 
        return n * factorial ( n - 1 ) "
Write a function that returns length of the list,"def list _ length ( l )  : 
    return len ( l ) "
Write a function that sorts list of numbers and returns top element,"def biggest _ no ( l : list )  -  > int : 
    sorted ( l ) "
Write a function to print a string by repeating it n times,"def print _ repeatnstring ( text : str ,  n : int )  -  >  str : 
    return text * n"
Write a function to merge two lists element wise,"def merge _ lists ( l1 : list ,  l2 : list )  : 
    return list ( zip ( l1 , l2 )  ) "
Write a function to merge two lists element wise,"def merge _ lists ( l1 : list ,  l2 : list )  : 
    return list ( zip ( l1 , l2 )  ) "
Write a function to append two lists,"def append _ lists ( l1 : list ,  l2 : list )  -  > list : 
    return l1 . extend ( l2 ) "
Write a function to return reverse of a list,"def reverse _ list ( l1 : list )  -  > list : 
    return l1 [  :  :  - 1 ] "
Write a function to adds two lists element wise,"def adds _ listelements ( l1 : list ,  l2 : list )  : 
    return  [ i + j for i ,  j in zip ( l1 , l2 )  ] "
Write a function to Subtracts two lists element wise,"def sub _ listelements ( l1 : list ,  l2 : list )  : 
    return  [ i - j for i ,  j in zip ( l1 , l2 )  ] "
Write a function to adds two lists element wise only if numbers are even,"def adds _ listevenelements ( l1 : list ,  l2 : list )  : 
    return  [ i + j for i ,  j in zip ( l1 , l2 )  if i * j % 2  =  =  0 ] "
Write a function to multiplies two lists element wise only if numbers are odd,"def adds _ listoddelements ( l1 : list ,  l2 : list )  : 
    return  [ i * j for i ,  j in zip ( l1 , l2 )  if i * j % 2  =  =  1 ] "
Write a function that returns list of elements with n power to elements of list,"def n _ power ( l1 : list ,  power : int )  -  > list : 
    return  [ i *  * power for i in l1 ] "
Write a function that generates fibbonacci series,"def Fibonacci ( n : int )  -  >  int : 
    if n =  = 1 : 
        fibonacci  =  0
    elif n =  = 2 : 
        fibonacci  =  1
    else : 
        fibonacci  =  Fibonacci ( n - 1 )   +  Fibonacci ( n - 2 ) 
    return fibonacci"
Write a function that returns sine value of the input,"def sin ( x : float )   -  >  float : 
    import math
    return math . sin ( x ) "
Write a function that returns derivative of sine value of the input,"def derivative _ sin ( x : float )  -  >  float : 
    import math
    return math . cos ( x ) "
Write a function that returns tan value of the input,"def tan ( x : float )   -  >  float : 
    import math
    return math . tan ( x ) "
Write a function that returns derivative of tan value of the input,"def derivative _ tan ( x : float )  -  >  float : 
    import math
    return  ( 1 / math . cos ( x )  )  *  * 2"
Write a function that returns cosine value of the input,"def cos ( x : float )   -  >  float : 
    import math
    return math . cos ( x ) "
Write a function that returns cosine value of the input,"def derivative _ cos ( x : float )  -  >  float : 
    import math
    return  -  ( math . sin ( x )  ) "
Write a function that returns the exponential value of the input,"def exp ( x )   -  >  float : 
    import math
    return math . exp ( x ) "
Write a function that returns Gets the derivative of exponential of x,"def derivative _ exp ( x : float )   -  >  float : 
    import math
    return math . exp ( x ) "
Write a function that returns log of a function,"def log ( x : float )  -  > float : 
    import math
    return math . log ( x ) "
Write a function that returns derivative of log of a function,"def derivative _ log ( x : float )  -  > float : 
    return  ( 1 / x ) "
Write a function that returns relu value of the input,"def relu ( x : float )   -  >  float : 
    x  =  0 if x  <  0 else x
    return x"
Write a function that returns derivative derivative relu value of the input,"def derivative _ relu ( x : float )   -  >  float : 
    x  =  1 if x  >  0 else 0
    return x"
Write a function that returns runs a garbage collector,"def clear _ memory (  )  : 
    import gc
    gc . collect (  ) "
Write a function to identify if value is present inside a dictionary or not,"def check _ value ( d : dict ,  value )  -  > bool : 
    return any ( v  =  =  value for v in dict . values (  )  ) "
Write a function to identify to count no of instances of a value  inside a dictionary,"def count _ value ( d : dict ,  value )  -  > bool : 
    return list ( v  =  =  value for v in dict . values (  )  )  . count ( True ) "
Write a function to identify if value is present inside a list or not,"def check _ listvalue ( l : list ,  value )  -  > bool : 
    return value in l"
Write a function to identify if value is present inside a tuple or not,"def check _ tuplevalue ( l : tuple ,  value )  -  > bool : 
    return value in l"
Write a function that returns lowercase string,"def str _ lowercase ( s : str )  : 
    return s . lower (  ) "
Write a function that returns uppercase string,"def str _ uppercase ( s : str )  : 
    return s . upper (  ) "
Write a function that removes all special characters,"def clean _ str ( s )  : 
    import re
    return re . sub ( ' [  ^ A - Za - z0 - 9 ]  + ' ,  '' ,  s ) "
Write a function that returns a list sorted ascending,"def ascending _ sort ( l : list )  : 
    sorted ( l ,  reverse = False ) "
Write a function that returns a list sorted descending,"def descending _ sort ( l : list )  : 
    sorted ( l ,  reverse = True ) "
Write a function that returns a dictionary sorted descending by its values,"def descending _ dict _ valuesort ( d : dict )  : 
    return  { key :  val for key ,  val in sorted ( d . items (  )  ,  reverse = True ,  key  =  lambda ele :  ele [ 1 ]  )  } "
Write a function that returns a dictionary sorted ascending by its values,"def ascending _ dict _ valuesort ( d : dict )  : 
    return  { key :  val for key ,  val in sorted ( d . items (  )  ,  key  =  lambda ele :  ele [ 1 ]  )  } "
Write a function that returns a dictionary sorted descending by its keys,"def descending _ dict _ keysort ( d : dict )  : 
    return  { key :  val for key ,  val in sorted ( d . items (  )  ,  reverse = True ,  key  =  lambda ele :  ele [ 0 ]  )  } "
Write a function that returns a dictionary sorted ascending by its keys,"def ascending _ dict _ keysort ( d : dict )  : 
    return  { key :  val for key ,  val in sorted ( d . items (  )  ,  key  =  lambda ele :  ele [ 0 ]  )  } "
Write a function that returns a replace values in string with values provided,"def replace _ values ( s : str ,  old ,  new )  -  > str : 
    s . replace ( old ,  new ) "
Write a function that joins elements of list,"def join _ elements ( l : list )  -  >  str : 
    return  ( '' . join ( str ( l )  )  ) "
Write a function that splits the elements of string,"def split _ elements ( s : str ,  seperator )  -  >  list : 
    return s . split ( seperator ) "
Write a function that returns sum of all elements in the list,"def sum _ elements ( l : list )  : 
    return sum ( l ) "
Write a function that returns sum of all odd elements in the list,"def sum _ even _ elements ( l : list )  : 
    return sum (  [ i for i in l if i % 2 =  = 0 ]  ) "
Write a function that returns sum of all odd elements in the list,"def sum _ odd _ elements ( l : list )  : 
    return sum (  [ i for i in l if i % 2 =  = 1 ]  ) "
1 write a program to reverse a list,"lst  =   [ 11 ,  5 ,  17 ,  18 ,  23 ] 
def reverse ( lst )  :  
    new _ lst  =  lst [  :  :  - 1 ]  
    return new _ lst"
2 write a program to find sum of elements in list,"list1  =   [ 11 ,  5 ,  17 ,  18 ,  23 ] 
total  =  sum ( list1 ) 
print ( ""Sum of all elements in given list :  "" ,  total ) "
3 write a program to find the largest number in a list,"list1  =   [ 10 ,  20 ,  4 ,  45 ,  99 ]  
list1 . sort (  )  
print ( ""Largest element is : "" ,  list1 [  - 1 ]  )  "
4 write a program to print Even Numbers in a List,"list1  =   [ 10 ,  21 ,  4 ,  45 ,  66 ,  93 ]  
for num in list1 :  
    if num  %  2  =  =  0 :  
       print ( num ,  end  =  "" "" )  "
5 write a program to print negative Numbers in given range,"start ,  end  =   - 4 ,  19
for num in range ( start ,  end  +  1 )  :  
    if num  <  0 :  
        print ( num ,  end  =  "" "" )  "
8 write a program to break a list into chunks of size N,"l  =   [ 1 ,  2 ,  3 ,  4 ,  5 ,  6 ,  7 ,  8 ,  9 ]   
n  =  4 
x  =   [ l [ i : i  +  n ]  for i in range ( 0 ,  len ( l )  ,  n )  ]   
print ( x ) "
write a program to remove the duplicate words,"s  =  ""Hello world Hello""
l  =  s . split (  )  
k  =   [  ]  
for i in l :  
    if  ( s . count ( i )  > 1 and  ( i not in k ) or s . count ( i )  =  = 1 )  :  
        k . append ( i )  
print ( ' ' . join ( k )  )  "
17 write a program to get current date and time,"import datetime  
current _ time  =  datetime . datetime . now (  )   
print  ( ""Time now at greenwich meridian is  :  ""  ,  end  =  """" )   
print  ( current _ time ) "
19 write a program to find the difference between two times,"from datetime import datetime
s1  =  '10 : 33 : 26'
s2  =  '11 : 15 : 49'  #  for example
FMT  =  ' % H :  % M :  % S'
tdelta  =  datetime . strptime ( s2 ,  FMT )   -  datetime . strptime ( s1 ,  FMT ) 
print ( tdelta ) "
function to obtain the time in minutes form,"def difference ( h1 ,  m1 ,  h2 ,  m2 )  :  "
convert h1 : m1 into minutes,"    
    t1  =  h1  *  60  +  m1 "
"20 write program to find yesterday, today and tomorrow    Import datetime and timedelta    class from datetime module","from datetime import datetime ,  timedelta 
presentday  =  datetime . now (  )   #  or presentday  =  datetime . today (  )  
yesterday  =  presentday  -  timedelta ( 1 )  
tomorrow  =  presentday  +  timedelta ( 1 )  "
the need by converting them to string,"print ( ""Yesterday  =  "" ,  yesterday . strftime ( ' % d -  % m -  % Y' )  )  
print ( ""Today  =  "" ,  presentday . strftime ( ' % d -  % m -  % Y' )  )  
print ( ""Tomorrow  =  "" ,  tomorrow . strftime ( ' % d -  % m -  % Y' )  )  "
21 write a program to remove all the characters except numbers and alphabets,"import re 
ini _ string  =  ""123abcjw :  ,   .  @  !  eiw""
print  ( ""initial string  :  "" ,  ini _ string )  
result  =  re . sub ( ' [  \ W _  ]  + ' ,  '' ,  ini _ string )  
print  ( ""final string"" ,  result )  "
22 write a program to merge dict using update() method,"def Merge ( dict1 ,  dict2 )  : 
    return ( dict2 . update ( dict1 )  ) 
dict1  =   { 'a' :  10 ,  'b' :  8 } 
dict2  =   { 'd' :  6 ,  'c' :  4 } 
print ( Merge ( dict1 ,  dict2 )  ) 
print ( dict2 ) "
23 write a program to print even length words in a string,"def printWords ( s )  :  
    s  =  s . split ( ' ' )   
    for word in s :   
        if len ( word )  % 2 =  = 0 :  
            print ( word )   
s  =  ""hello world"" 
printWords ( s ) "
calling run function,"    
    run ( string )  "
Driver program,"if  _  _ name _  _   =  =  "" _  _ main _  _ "" :  
    input  =  'Hello World'
    heterogram ( input )  "
30 write a program to check whether the string is a palindrome or not,"def isPalindrome ( s )  : 
    return s  =  =  s [  :  :  - 1 ] 
s  =  ""malayalam""
ans  =  isPalindrome ( s ) 
if ans : 
    print ( ""Yes"" ) 
else : 
    print ( ""No"" ) "
43 write a program to convert kilometers to miles,"kilometers  =  float ( input ( 'How many kilometers ?  :  ' )  )   
conv _ fac  =  0 . 621371  
miles  =  kilometers  *  conv _ fac  
print ( ' % 0 . 3f kilometers is equal to  % 0 . 3f miles'  %  ( kilometers , miles )  )   "
44 write a program to convert Celsius to Fahrenheit,"celsius  =  float ( input ( 'Enter temperature in Celsius :  ' )  )   
fahrenheit  =   ( celsius  *  1 . 8 )   +  32  
print ( ' % 0 . 1f  Celsius is equal to  % 0 . 1f degree Fahrenheit' %  ( celsius , fahrenheit )  )   "
45 write a program to display the calender,"import calendar  
yy  =  int ( input ( ""Enter year :  "" )  )   
mm  =  int ( input ( ""Enter month :  "" )  )   
print ( calendar . month ( yy , mm )  )   "
50 write a program to display the multiplication table of a number,"num  =  int ( input ( ""Show the multiplication table of ?  "" )  )   
for i in range ( 1 , 11 )  :   
   print ( num , 'x' , i , ' = ' , num * i )   "
"57 write a  program to convert decimal to binary, octal and hexadecimal","dec  =  int ( input ( ""Enter a decimal number :  "" )  )   
print ( bin ( dec )  , ""in binary . "" )   
print ( oct ( dec )  , ""in octal . "" )   
print ( hex ( dec )  , ""in hexadecimal . ""  "
58 python program to find ascii value of a character,"c  =  input ( ""Enter a character :  "" )   
print ( ""The ASCII value of '""  +  c  +  ""' is"" , ord ( c )  ) "
60 write a  program to sort words in alphabetic order,"my _ str  =  input ( ""Enter a string :  "" )   
words  =  my _ str . split (  )   
words . sort (  )   
for word in words :   
   print ( word )   "
61 write a program to print the elements of an array present on even position,"arr  =   [ 1 ,  2 ,  3 ,  4 ,  5 ]  ;      
print ( ""Elements of given array present on even position :  "" )  ;     
for i in range ( 1 ,  len ( arr )  ,  2 )  :     
    print ( arr [ i ]  )  ;    "
70 write a program to display the powers of 2 using anonymous function,"terms  =  10
result  =  list ( map ( lambda x :  2  *  *  x ,  range ( terms )  )  ) 
print ( ""The total terms are : "" , terms ) 
for i in range ( terms )  : 
   print ( ""2 raised to power"" , i , ""is"" , result [ i ]  ) "
71 write a program to add 2 binary numbers,"num1  =  '00001'
num2  =  '10001'
sum  =  bin ( int ( num1 , 2 )   +  int ( num2 , 2 )  ) 
print ( sum ) "
73 write a program to print a pattern of stars (*),"for row in range  ( 0 , 5 )  : 
    for column in range  ( 0 ,  row + 1 )  : 
        print  ( "" * "" ,  end = """" ) 
    print ( ' \ r' ) "
74 write a program to return the absolute value in Python,"def get _ absolute _ value ( n )  : 
	if n  >  =  0 : 
		return n
	else : 
		return  - n
print ( get _ absolute _ value ( 101 )  ) "
75 write a program to find the power of a number,"a  =  10
b  =  3
result  =  a *  * b
print  ( a ,  "" to the power of "" ,  b ,  "" is  =  "" ,  result ) "
76 write a program to print the binary value of the numbers from 1 to N,"n  =  int ( input ( ""Enter the value of N :  "" )  ) 
for i in range ( 1 ,  n + 1 )  : 
    print ( ""Binary value of "" ,  i ,  "" is :  "" ,  bin ( i )  ) "
77 write a program to find number of bits necessary to represent an integer in binary,"num  =  int ( input ( ""Enter an integer number :  "" )  ) 
bits  =  num . bit _ length (  ) 
print ( ""bits required to store "" ,  num ,  ""  =  "" ,  bits ) 
print ( ""binary value of "" ,  num ,  "" is  =  "" ,  bin ( num )  ) "
78 write a program to find the difference between 2 lists,"list1  =   [ 10 ,  20 ,  30 ,  40 ,  50 ] 
list2  =   [ 10 ,  20 ,  30 ,  60 ,  70 ] 
print ""list1 : "" ,  list1
print ""list2 : "" ,  list2
print ""Difference elements : ""
print  ( list  ( set ( list1 )   -  set  ( list2 )  )  ) "
79 write a program to add an element at specified index in a list,"list  =   [ 10 ,  20 ,  30 ] 
print  ( list ) 
list . insert  ( 1 ,  ""ABC"" ) 
print  ( list ) 
list . insert  ( 3 ,  ""PQR"" ) 
print  ( list ) "
80 write a program to print EVEN length words of a string,"str  =  ""Python is a programming language""
words  =  list ( str . split ( ' ' )  ) 
print ""str :  "" ,  str
print ""list converted string :  "" ,  words
print ""EVEN length words : ""
for W in words : 
	if ( len ( W )  % 2 =  = 0  )  : 
		print W"
81 write a program to create N copies of a given string,"str1  =  ""Hello""
n  =  3
str2  =  str1  *  3 
print ""str1 :  "" ,  str1 
print ""str2 :  "" ,  str2"
84 write a program to design a dice throw function,"import random
def dice (  )  : 
    return random . choice (  [ 1 , 2 , 3 , 4 , 5 , 6 ]  ) "
86 write a program to convert meters into yards,"num  =  float ( input ( ""Enter the distance measured in centimeter  :  "" )  ) 
inc  =  num / 2 . 54 
print ( ""Distance in inch  :  "" ,  inc ) "
90 write a program for swapping the value of two integers without third variable,"x  =  int ( input ( ""Enter the value of x  : "" )  ) 
y  =  int ( input ( ""Enter the value of y  : "" )  ) 
 ( x , y )   =   ( y , x ) 
print ( 'Value of x :  ' ,  x ,  ' \ nValue of y :  ' ,  y ,  ' \ nWOO !  !  Values SWAPPEDDD' ) "
91 write a program to check eligibility for voting   input age,"age  =  int ( input ( ""Enter Age  :  "" )  ) 
if age >  = 18 : 
        status = ""Eligible""
else : 
    status = ""Not Eligible""
print ( ""You are "" , status , "" for Vote . "" ) "
92 write a program to print the version information,"import sys
print ( ""Python version :  "" ,  sys . version ) 
print ( ""Python version info :  "" ,  sys . version _ info ) "
93 write a program to find sum of all digits of a number,"def sumDigits ( num )  : 
  if num  =  =  0 : 
    return 0
  else : 
    return num  %  10  +  sumDigits ( int ( num  /  10 )  ) 
x  =  0
print ( ""Number :  "" ,  x ) 
print ( ""Sum of digits :  "" ,  sumDigits ( x )  ) 
print (  ) "
94 write a program to print double quotes with the string variable,"str1  =  ""Hello world"" ; 
print ( "" \ "" % s \ """"  %  str1 ) 
print ( '"" % s""'  %  str1 ) 
print ( '"" {  } ""' . format ( str1 )  ) "
95 write a program to Remove leading zeros from an IP address,"import re
def removeLeadingZeros ( ip )  : 
    modified _ ip  =  re . sub ( regex ,  ' . ' ,  ip ) 
    print ( modified _ ip ) 
if  _  _ name _  _   =  =  ' _  _ main _  _ '  :  
	ip  =  ""216 . 08 . 094 . 196""
	removeLeadingZeros ( ip ) "
98 write a program to reverse a string that contains digits in Python,"def reverse ( n )  : 
    s = str ( n )  
    p = s [  :  :  - 1 ] 
    return p 
num  =  int ( input ( 'Enter a positive value :  ' )  ) 
print ( 'The reverse integer : ' , reverse ( num )  ) "
Write a python program to Read and print the Contents of a File,"a = str ( input ( ""Enter file name  . txt extension : "" )  ) 
file2 = open ( a , 'r' ) 
line = file2 . readline (  ) 
while ( line !  = """" )  : 
    print ( line ) 
    line = file2 . readline (  ) 
file2 . close (  ) "
Write a python program to Count the Number of Lines in a Text File,"fname  =  input ( ""Enter file name :  "" ) 
num _ lines  =  0
with open ( fname ,  'r' )  as f : 
    for line in f : 
        num _ lines  +  =  1
print ( ""Number of lines : "" ) 
print ( num _ lines ) "
Write a python function to Copy the Contents of One File into Another,"def copy ( from _ file ,  to _ file )  : 
    with open ( from _ file )  as f : 
        with open ( to _ file ,  ""w"" )  as f1 : 
            for line in f : 
                f1 . write ( line ) "
Write a python function that Capitalize the First Letter of Every Word in the File,"def capitalize ( fname )  : 
    with open ( fname ,  'r' )  as f : 
        for line in f : 
            l = line . title (  ) 
            print ( l ) "
Write a python function that prints the Contents of a File in Reverse Order,"def reverse _ content ( filename )  : 
    for line in reversed ( list ( open ( filename )  )  )  : 
        print ( line . rstrip (  )  ) "
Write a python Program to Flatten and print a List,"a =  [  [ 1 ,  [  [ 2 ]  ]  ,  [  [  [ 3 ]  ]  ]  ]  ,  [  [ 4 ]  , 5 ]  ] 
flatten = lambda l :  sum ( map ( flatten , l )  ,  [  ]  )  if isinstance ( l , list )  else  [ l ] 
print ( flatten ( a )  ) "
Write a Python function to print the GSD of Two Numbers,"def gcd ( a , b )  : 
    if ( b =  = 0 )  : 
        return a
    else : 
        return gcd ( b , a % b ) "
Write a Python function to Find the Power of a Number Using Recursion,"def power ( base , exp )  : 
    if ( exp =  = 1 )  : 
        return ( base ) 
    if ( exp !  = 1 )  : 
        return ( base * power ( base , exp - 1 )  ) "
Write a Python function to Count and print the Number of Vowels Present in a String using Sets,"def count _ vowels ( s )  : 
    count  =  0
    vowels  =  set ( ""aeiou"" ) 
    for letter in s : 
        if letter in vowels : 
            count  +  =  1
    return count"
Write a Python Program to prints Common Letters in Two Input Strings,"s1 = 'python'
s2 = 'schoolofai'
a = list ( set ( s1 )  & set ( s2 )  ) 
print ( ""The common letters are : "" ) 
for i in a : 
    print ( i ) "
Write a Python Program that Prints which Letters are in the First String but not in the Second,"s1 = 'python'
s2 = 'schoolofai'
a = list ( set ( s1 )  - set ( s2 )  ) 
print ( ""The letters are : "" ) 
for i in a : 
    print ( i ) "
Write a Python Program to Concatenate Two Dictionaries Into One,"def concat _ dic ( d1 ,  d2 )  : 
    return d1 . update ( d2 ) "
Write a Python Program to Multiply All the Items in a Dictionary,"def mul _ dict ( d )  : 
    tot = 1
    for i in d :     
        tot = tot * d [ i ] 
    return tot"
Write a Python Program to Remove the Given Key from a Dictionary,"def remove _ item _ dict ( d ,  key )  : 
    if key in d :  
        del d [ key ] 
    else : 
        print ( ""Key not found ! "" ) 
        exit ( 0 ) "
Write a Python Program to Map Two Lists into a Dictionary,"def map _ dict ( keys ,  values )  : 
    return dict ( zip ( keys , values )  ) "
Write a Python Program to Remove the nth Index Character from a Non-Empty String,"def remove ( string ,  n )  :   
      first  =  string [  : n ]    
      last  =  string [ n + 1 :  ]   
      return first  +  last"
Write a Python Program to Detect if Two Strings are Anagrams,"def anagram _ check ( s1 ,  s2 )  : 
    if ( sorted ( s1 )  =  = sorted ( s2 )  )  : 
        return True
    else : 
        return False"
Write a Python Program to Form a New String where the First Character and the Last Character have been Exchanged,"def change ( string )  : 
      return string [  - 1 :  ]   +  string [ 1 :  - 1 ]   +  string [  : 1 ] "
Write a Python Program to Remove the Characters of Odd Index Values in a String,"def modify ( string )  :   
    final  =  """"   
    for i in range ( len ( string )  )  :   
        if i  %  2  =  =  0 :   
            final  =  final  +  string [ i ]   
    return final"
Write a Python Program to Count and print Number of Lowercase Characters in a String,"string = 'This is an Assignment'
count = 0
for i in string : 
      if ( i . islower (  )  )  : 
            count = count + 1
print ( ""The number of lowercase characters is : "" ) 
print ( count ) "
Write a Python Program to Find the Intersection of Two Lists,"def main ( alist ,  blist )  : 
    def intersection ( a ,  b )  : 
        return list ( set ( a )   &  set ( b )  ) 
    return intersection ( alist ,  blist ) "
Write a Python Program to Create a List of Tuples with the First Element as the Number and Second Element as the Square of the Number using list comprehension,"l _ range = 2
u _ range = 5
a =  [  ( x , x *  * 2 )  for x in range ( l _ range , u _ range + 1 )  ] "
Write a Python Program to print all Numbers in a Range which are Perfect Squares and Sum of all Digits in the Number is Less than 10,"l = 6
u = 9
a =  [ x for x in range ( l , u + 1 )  if  ( int ( x *  * 0 . 5 )  )  *  * 2 =  = x and sum ( list ( map ( int , str ( x )  )  )  )  < 10 ] 
print ( a ) "
Write a Python Program to Swap the First and Last Value of a List,"a =  [ 2 ,  3 ,  8 ,  9 ,  2 ,  4 ,  6 ] 
n  =  len ( a ) 
temp = a [ 0 ] 
a [ 0 ]  = a [ n - 1 ] 
a [ n - 1 ]  = temp
print ( ""New list is : "" ) 
print ( a ) "
Write a Python Program to Remove and print the Duplicate Items from a List,"a =  [ 2 ,  3 ,  8 ,  9 ,  2 ,  4 ,  6 ] 
b  =  set (  ) 
unique  =   [  ] 
for x in a : 
    if x not in b : 
        unique . append ( x ) 
        b . add ( x ) 
print ( ""Non - duplicate items : "" ) 
print ( unique ) "
Write a Python Program to Read a List of Words and Return the Length of the Longest One,"a =  [ 'the' ,  'tsai' ,  'python' ] 
max1 = len ( a [ 0 ]  ) 
temp = a [ 0 ] 
for i in a : 
    if ( len ( i )  > max1 )  : 
       max1 = len ( i ) 
       temp = i
print ( ""The word with the longest length is : "" ) 
print ( temp ) "
Write a Python function to Check Whether a Given Year is a Leap Year,"def leapyear _ check ( year )  : 
    if ( year % 4 =  = 0 and year % 100 !  = 0 or year % 400 =  = 0 )  : 
        return True
    else : 
        return False"
Write a Python Program to print all the Divisors of an Integer,"n = 60
print ( ""The divisors of the number are : "" ) 
for i in range ( 1 , n + 1 )  : 
    if ( n % i =  = 0 )  : 
        print ( i ) "
Write a Python Program to Check if a Number is an Armstrong Number,"def amstrong _ check ( n )  : 
    a = list ( map ( int , str ( n )  )  ) 
    b = list ( map ( lambda x : x *  * 3 , a )  ) 
    if ( sum ( b )  =  = n )  : 
        return True
    else : 
        return False"
Write a Python Program to Check if a Number is a Perfect Number,"def perfect _ no _ check ( n )  : 
    sum1  =  0
    for i in range ( 1 ,  n )  : 
        if ( n  %  i  =  =  0 )  : 
            sum1  =  sum1  +  i
    if  ( sum1  =  =  n )  : 
        return True
    else : 
        return False"
Write a Python Program to Check if a Number is a Prime Number,"def prime _ no _ check ( a )  : 
    k = 0
    for i in range ( 2 , a /  / 2 + 1 )  : 
        if ( a % i =  = 0 )  : 
            k = k + 1
    if ( k <  = 0 )  : 
        return True
    else : 
        return False"
Write a Python Program to print the Sum of First N Natural Numbers,"n = 7
sum1  =  0
while ( n  >  0 )  : 
    sum1 = sum1 + n
    n = n - 1
print ( ""The sum of first n natural numbers is"" , sum1 ) "
Write a Python Program to print the Number of Times a Particular Number Occurs in a List,"a =  [ 2 ,  3 ,  8 ,  9 ,  2 ,  4 ,  6 ] 
k = 0
num = int ( input ( ""Enter the number to be counted : "" )  ) 
for j in a : 
    if ( j =  = num )  : 
        k = k + 1
print ( ""Number of times"" , num , ""appears is"" , k ) "
Write a Python Program to test and print Collatz Conjecture for a Given Number,"def collatz ( n )  : 
    while n  >  1 : 
        print ( n ,  end = ' ' ) 
        if  ( n  %  2 )  : 
            n  =  3 * n  +  1
        else : 
            n  =  n /  / 2
    print ( 1 ,  end = '' ) "
Write a Python function to Count Set Bits in a Number,"def count _ set _ bits ( n )  : 
    count  =  0
    while n : 
        n  &  =  n  -  1
        count  +  =  1
    return count"
Write a Python Program to Convert Gray Code to Binary,"def gray _ to _ binary ( n )  : 
    """"""Convert Gray codeword to binary and return it . """"""
    n  =  int ( n ,  2 ) 
    mask  =  n
    while mask  !  =  0 : 
        mask  >  >  =  1
        n  ^  =  mask
    return bin ( n )  [ 2 :  ] "
Write a Python Program to Convert Binary to Gray Code,"def binary _ to _ gray ( n )  : 
    """"""Convert Binary to Gray codeword and return it . """"""
    n  =  int ( n ,  2 ) 
    n  ^  =   ( n  >  >  1 ) 
    return bin ( n )  [ 2 :  ] "
Write a Python Program to print the Reverse a Given Number,"n = 1023
rev = 0
while ( n > 0 )  : 
    dig = n % 10
    rev = rev * 10 + dig
    n = n /  / 10
print ( ""Reverse of the number : "" , rev ) "
Write a Python function to calculate dot product of two given sequence,"def dot _ product ( a ,  b )  : 
    return sum (  e [ 0 ]  * e [ 1 ]  for e in zip ( a ,  b )  ) "
Write a Python function to strip vowels from a string,"def vowel _ stripping ( string )  : 
    '''This function takes a string as an input strips out vowels and returns stripted out string'''
    return """" . join (  [ x for x in string if x not in ( 'a' , 'e' , 'i' , 'o' , 'u' )  ]  ) "
Write a Python function that calculate interior angle of a equilateral polygon,"def interior _ angle ( no _ of _ sides )  : 
    return  ( no _ of _ sides  -  2 )   *  180  /  no _ of _ sides"
Write a Python function that calculate side length of a equilateral polygon,"import math
def side _ length ( no _ of _ sides ,  circumradius )  : 
    return 2  *  circumradius  *  math . sin ( math . pi  /  no _ of _ sides ) "
6 write a function to print merger of two dictionary,"def merge _ dict ( dict1 :  dict ,  dict2 :  dict )  : 
    """"""
    function to print merger of two dictionary
    """"""
    final _ dict  =   {  *  * dict1 ,   *  * dict2 } 
    print ( final _ dict ) "
7 write a function to print second largest number in a list.,"def second _ large _ num ( num :  list )  : 
    if isinstance ( num ,  list )  : 
        num . sort (  ) 
        print  ( num [  - 2 ]  ) 
    else : 
        raise ValueError ( 'Invalid Input' ) "
8 write a function to remove empty list from a list and print.,"def remove _ empty _ list ( num1 :  list )  : 
    if isinstance ( num1 ,  list )  : 
        modified  =  list ( filter ( None ,  num1 )  ) 
        print ( modified ) "
9 write a function to remove empty tuples from a list and print,"def remove _ empty _ tuple ( num1 :  list )  : 
    if isinstance ( num1 ,  list )  : 
        modified  =  list ( filter ( None ,  num1 )  ) 
        print ( modified ) "
10 write a python function to remove duplicate from a list.,"def remove _ duplicates ( dup _ list :  list )  : 
    print ( list ( set ( dup _ list )  )  ) "
11 write a function to reverse every word in a string,"def reverse _ word ( sen :  str )  : 
    words  =  sen . split ( ' ' ) 
    rever _ word  =   [  i [  :  :  - 1 ]  for i in words  ] 
    final _ sen  =  ' ' . join ( rever _ word ) 
    print ( final _ sen ) "
12 function to check leap year,"def check _ leap _ year ( year :  int )  : 
    if not year % 4 : 
        print ( 'Leap Year' ) 
    else : 
        print ( 'Not a leap year' ) "
13 function to print the multiplication table,"def maths _ tables (  no _   :  int )  : 
     for i in range ( 1 ,  11 )  : 
         print ( f' { no _  } x { i }  =  { no _  * i } ' ) "
19 function to print ascii value of a character.,"def show _ ascii ( a :  str )  : 
    print ( ord ( a )  ) "
20 function to print calendar,"def show _ mm _ calendar ( mm :  int ,  yyyy :  int )  : 
    import calendar
    print ( calendar . month ( yyyy ,  mm ) "
21 Create a function that takes a list of numbers between 1 and 10 (excluding one number) and returns the missing number.,"def print _ miss _ num ( l :  list )  : 
     print ( f'Missing number is  { 55 - sum ( l )  } ' ) "
23 function to intern a sentence.,"def check _ intern ( a  ,  b )  : 
    if a is b : 
        print ( f' { a }  and  { b }  is interned by Python' ) 
    else : 
        print ( f' { a }  and  { b }  is not interned by Python' ) "
24 convert string to intern string,"def str _ to _ intern _ str ( a )  : 
    import sys
    b  =  sys . intern ( a ) 
    if a is b : 
        print ( 'Sentence is interned' ) 
    else : 
        raise ValueError ( 'This should not happen' ) "
25 write a function to print the time taken by a calc function to ferform a simple multiplication 10 Million time,"def time _ calc ( n :  int )  : 
    import time
    start  =  time . perf _ counter (  ) 
    for i in range ( 10000000 )  : 
        n * 2
    end  =  time . perf _ counter (  ) 
    return end - start"
26 write a function to print other value with given base to int.,"def other _ int ( value ,  b )  : 
    return int ( value ,  b ) "
27 write a function to convert any number to its equivalent fractions.,"def no _ to _ fraction ( no _  )  : 
    from fractions import Fractions
    return Fractions ( no _  ) "
28 function to check two number ( floating also )  are close or not,"def check _ isclose ( x ,  y ) 
    from math import isclose
    return isclose ( x ,  y ) "
32 function to remove values from dictionary,"def remove _ dic _ value ( a :  dict ,  key ) 
    a . pop ( key ) 
    return a"
33 function insert at the begining of dictionary,"def dict _ in _ at _ begin ( orgin :  dict ,  new _  :  dict )  : 
    final  =   {  *  * new _  ,   *  * origin } 
    return final"
"34 function to convert a list of tuples into dictionary   Input  : [ ('a',1), ('b', 2), ('c', 3)]   Output : { 'a':1, 'b':2, 'c':3 }","def list _ to _ dict ( l :  list )  : 
    final _ dict  =   {  } 
    for i in l : 
        final _ dict [ i [ 0 ]  ]   =  i [ 1 ] 
    return final _ dict"
35 function to sort the  dictionary with respect to key.,"def dict _ sort _ with _ key ( test _ dict :  dict )  : 
    final dict  =   {  } 
    temp  =  sorted ( test _ dict ) 
    for i in temp : 
        final _ dict [ i ]   =  test _ dict [ a ] 
    return final _ dict"
37 function to add two tuple,"def add _ tuple ( tup1 ,  tup2 )  : 
    return tup1 + tup2"
"38 function to create a list of tuples from a given list having number and its cube in each tuple   Input  : [1,2,3]   Output : [(1,1),(2,8),(3,9)]","def list _ of _ tuple (  l :  list )  : 
    final  =   [   ( i ,  pow ( i , 3 )  )  for i in l ] 
    return final"
39 function to create a dictionary of mirror of letter.,"def letter _ mirror (  )  : 
    import string
    letter  =  string . ascii _ lowercase
    rvr _ letter  =  letter [  :  :  - 1 ] 
    dict _ char  =  dict ( zip ( letter ,  rvr _ letter )  ) 
    return dict _ char"
40 function to print the ascii value of letter,"def show _ ascii (  )  : 
    import string
    letter  =  string . ascii _ letters
    for i in letter : 
        print ( i + "" : "" + str ( ord ( i )  )  ) "
41 function to get the current time at GMT,"def current _ time (  )  : 
    import datetime
    print ( datetime . datetime . now (  )  ) "
42 function to print the India Time,"def get _ India _ time (  )  : 
    import datetime ,  pytz
    print ( datetime . datetime . now (  pytz . timezone ( 'Asia / kolkata' )   )  ) "
43 function to print yesterday and tomorrow date,"def tmrw _ yest _ time (  ) 
    import datetime
    yesterday  =  datetime . datetime . now (  )   -  datetime . timedelta ( 1 ) 
    tmrw  =  datetime . datetime . now (  )   +  datetime . timedelta ( 1 ) 
    print (  yesterday ,  tmrw  ) "
47 first class function,"def call _ func ( x ,  func )  : 
    return fn ( x ) "
48 function to show documentation,"def doc _ func (  * args ,   *  * kwargs )  : 
    """"""
    function to show how to do do documentation of function
    First line after function wriiten inside triple quotes . 
    Don't forget to close when job is done . 
    """"""
    pass"
50 function to check whether a given name is function or method,"def inspect _ func ( fn )  : 
    from inspect import isfunction ,  ismethod
    print ( f' { fn }  is method  { ismethod ( func )  } ' ) 
    print ( f' { fn }  is function  { isfunction ( func )  } ' ) "
53 factorial using pythonish,"def fact _ one _ line ( n )  : 
    return 1 if n  <  2 else n * fact _ one _ line ( n - 1 ) 
def str _ to _ list ( sen )  : 
    return list ( sen ) 
def sen _ to _ tuple ( sen )  : 
   return tuple ( sen ) "
56 function to all implementation,"def all _ imp ( a )  : 
   return all ( a ) "
57 function to any implementation,"def any _ imp ( a )  : 
   return any ( a ) "
58 function to show boolean true / false is a number,"def bool _ show ( a = 5 )  : 
    return True * a"
59 function to show boolean true / false is a number,"def bool _ show ( a = 5 )  : 
    return False * a "
64 function to build a time elapsed closures,"def time _ elsaped (  ) 
    start  =  perf _ counter (  ) 
    def inner (  ) 
        nonlocal perf _ counter
        return perf _ counter (  )   -  start
    return inner"
65 function to attach counter to function,"def attach _ counter ( fn :  ""Function"" )  : 
    count  =  0
    def inner (  * args ,   *  * kwargs )  : 
        nonlocal count
        count  +  =  1
        return fn (  * args ,   *  * kwargs ) 
    return inner"
68 write a function to unpack tuple of minimum 2 value to unlimited length int first two and rest,"def unpack _ tuple ( tup )  : 
    a ,  b  ,   * c  =  tup
    return a  ,  b ,  c"
73 function to store the data of IPL match in Namedtuple,"def store _ ipl _ date ( tuple1 )  : 
    from collections import namedtuple
    IplData  =  namedtuple ( 'IplData' ,  'match toss choice session1 session2 winner' ) 
    return IplData (  * tuple1 ) "
81 generate intereger random number between user choice,"def gen _ ran _ int _ number ( lower ,  upper )  : 
    import random
    final  =   [  random . randint ( lower ,  upper )  for  _  in range ( 10 )   ] 
    return final"
82 function to show how to use f string,"def f _ string ( msg :  ""user message"" )  : 
    print ( f'This is an f string with user paramter  { msg } ' ) "
Convert generator to a list,"gen  =   ( i for i in range ( 5 )  ) 
a _ list  =  list ( gen ) 
print ( 'isinstance ( True ,  int )  : ' ,  isinstance ( True ,  int )  ) "
A recursive function to find nth catalan number,"def catalan ( n )  :  
    if n  <  =  1 :  
        return 1
    res  =  0
    for i in range ( n )  :  
        res  +  =  catalan ( i )   *  catalan ( n - i - 1 )  
    return res 
for i in range ( 10 )  :  
    print  ( catalan ( i )  ) "
A naive recursive Python implementation,"def binomialCoeff ( n  ,  k )  :  
    if k  >  n  :  
       return 0
    if k =  = 0 or k  =  = n  :  
        return 1
    return binomialCoeff ( n - 1  ,  k - 1 )   +  binomialCoeff ( n - 1  ,  k )  "
Driver Program to test ht above function,"n  =  5
k  =  2
print  ( ""Value of C (  % d ,  % d )  is  (  % d ) ""  %  ( n  ,  k  ,  binomialCoeff ( n  ,  k )  )   ) "
The function _lis() stores its result in maximum,"    
     _ lis ( arr  ,  n )  
    return maximum "
Driver program to test the above function,"arr  =   [ 10  ,  22  ,  9  ,  33  ,  21  ,  50  ,  41  ,  60 ]  
n  =  len ( arr )  
print  ( ""Length of lis is "" ,  lis ( arr )   ) "
Function for nth Fibonacci number,"def Fibonacci ( n )  :  
    if n < 0 :  
        print ( ""Incorrect input"" )  
    elif n =  = 0 :  
        return 0
    elif n =  = 1 :  
        return 1
    else :  
        return Fibonacci ( n - 1 )  + Fibonacci ( n - 2 )  "
Driver Program,print ( Fibonacci ( 9 )  )  
write a python program to add two list of same length.,"def add _ two _ list _ items (  )  : 
    num1  =   [ 1 , 2 , 3 ] 
    num2  =   [ 4 , 5 , 6 ] 
    sum  =  num1  +  num2
    print ( f'Sum :   { sum } ' ) "
write a python program to add numbers from two list if first list item is even and second list item is odd.,"def add _ two _ lists _ even _ odd ( l1 ,  l2 )  : 
    new  =   [  ] 
    for x ,  y in zip ( l1 ,  l2 )  : 
        if l1 % 2  =  =  0 and l2 % 2  !  =  0 : 
            new . append ( x + y ) 
    return new"
write a python program Convert KM/H to MPH,"kmh  =  50
mph  =   0 . 6214  *  kmh
print ( ""Speed : "" ,  kmh ,  ""KM / H  =  "" ,  mph ,  ""MPH"" ) "
write a python function to calculate simple Interest,"def simple _ interest ( p , t , r )  :  
    si  =   ( p  *  t  *  r )  / 100
    return si "
write a python program to print all Prime numbers in an Interval,"start  =  11
end  =  25
for i in range ( start , end )  : 
  if i > 1 : 
    for j in range ( 2 , i )  : 
        if ( i  %  j =  = 0 )  : 
            break
    else : 
        print ( i ) "
write a python funtion to implement a counter to record how many time the word has been repeated using closure concept,"def word _ counter (  )  : 
    counter  =   {  } 
    def count ( word )  : 
        counter [ word ]   =  counter . get ( word ,  0 )   +  1
        return counter [ word ] 
    return count"
write a python program to find N largest elements from a list,"l  =   [ 1000 , 298 , 3579 , 100 , 200 ,  - 45 , 900 ]  
n  =  4
l . sort (  )  
print ( l [  - n :  ]  ) "
write a python program to add two lists using map and lambda,"nums1  =   [ 1 ,  2 ,  3 ] 
nums2  =   [ 4 ,  5 ,  6 ] 
result  =  map ( lambda x ,  y :  x  +  y ,  nums1 ,  nums2 ) 
print ( list ( result )  ) "
write a python functionto test the equality of the float numbers,"def float _ equality _ testing ( a ,  b )  : 
    rel _ tol  =  1e - 12
    abs _ tol  =  1e - 05
    return abs ( a - b )   <  =  max ( rel _ tol  *  max ( abs ( a )  ,  abs ( b )  )  ,  abs _ tol ) "
write a python program to get positive elements from given list of lists,"Input  =   [  [ 10 ,   - 11 ,  222 ]  ,   [ 42 ,   - 222 ,   - 412 ,  99 ,   - 87 ]  ]  
temp  =  map ( lambda elem :  filter ( lambda a :  a > 0 ,  elem )  ,  Input )  
Output  =   [  [ a for a in elem if a > 0 ]  for elem in temp ]  "
write the program to remove empty tuples from a list,"def Remove ( tuples )  :  
    tuples  =  filter ( None ,  tuples )  
    return tuples "
write  a python program to find Cumulative sum of a list,"list =  [ 10 , 20 , 30 , 40 , 50 ] 
new _ list =  [  ]  
j = 0
for i in range ( 0 , len ( list )  )  : 
    j +  = list [ i ] 
    new _ list . append ( j )  
print ( new _ list )  "
write a python function to convert a list to string,"s  =   [ 'I' ,  'want' ,  4 ,  'apples' ,  'and' ,  18 ,  'bananas' ]  
listToStr  =  ' ' . join ( map ( str ,  s )  )  
print ( listToStr ) "
write a python program to merge 2 dictionaries,"x  =   { 'a'  :  1 ,  'b'  :  2 ,  'c'  :  3 } 
y  =   { 'x'  :  10 ,  'y'  :  20 ,  'z'  :  30  } 
z  =   {  *  * x  ,   *  * y } "
write a python code to implement Sigmoid function,"import math
def sigmoid ( x )  : 
  return 1  /   ( 1  +  math . exp (  - x )  ) "
write a python code to implement RELU function,"def relu ( array )  : 
    return  [ max ( 0 , i )  for i in array if ( isinstance ( i ,  int )  or isinstance ( i ,  float )  )  ] "
write a python program to strip all the vowels in a string,"string  =  ""Remove Vowel""
vowel  =   [ 'a' ,  'e' ,  'i' ,  'o' ,  'u' ] 
"""" . join (  [ i for i in string if i not in vowel ] "
write a python function to calculate factorial of a given number,"def factorial ( n )  : 
    fact  =  1
    for num in range ( 2 ,  n  +  1 )  : 
        fact  =  fact  *  num
    return ( fact ) "
write a python program which will find all such numbers which are divisible by 7 but are not a multiple of 5 ;between 2000 and 3200 (both included),"l =  [  ] 
for i in range ( 2000 ,  3201 )  : 
    if  ( i % 7 =  = 0 )  and  ( i % 5 !  = 0 )  : 
        l . append ( str ( i )  ) 
print ( ' , ' . join ( l )  ) "
write a python program to Generate a Random Number,"import random
print ( random . randint ( 0 , 9 )  ) "
write a python function to compute gcd,"def compute _ gcd ( x ,  y )  : 
   while ( y )  : 
       x ,  y  =  y ,  x  %  y
   return x"
write a python program to count the number of each vowels,"ip _ str  =  'Hello ,  have you tried our tutorial section yet ? '
ip _ str  =  ip _ str . casefold (  ) 
count  =   { x : sum (  [ 1 for char in ip _ str if char  =  =  x ]  )  for x in 'aeiou' } 
print ( count ) "
write a python Program to Find ASCII Value of Character,"c  =  'p'
print ( ""The ASCII value of '""  +  c  +  ""' is"" ,  ord ( c )  ) "
write a python program to Convert Celsius To Fahrenheit,"celsius  =  37 . 5
fahrenheit  =   ( celsius  *  1 . 8 )   +  32
print ( f' { celsius }  degree Celsius is equal to  { fahrenheit }  degree Fahrenheit' ) "
write a Python Program to Find the Sum of Natural Numbers,"num  =  16
if num  <  0 : 
   print ( ""Enter a positive number"" ) 
else : 
   sum  =  0
   while ( num  >  0 )  : 
       sum  +  =  num
       num  -  =  1
   print ( ""The sum is"" ,  sum ) "
write a python program  to Shuffle Deck of Cards,"import itertools ,  random
deck  =  list ( itertools . product ( range ( 1 , 14 )  ,  [ 'Spade' , 'Heart' , 'Diamond' , 'Club' ]  )  ) 
random . shuffle ( deck ) 
print ( deck ) "
write a Python function to Convert Decimal to Binary,"def convertToBinary ( n )  : 
   if n  >  1 : 
       convertToBinary ( n /  / 2 ) 
   print ( n  %  2 , end  =  '' ) "
function to Convert Binary to Gray Code,"def binary _ to _ gray ( n )  : 
    n  =  int ( n ,  2 )  
    n  ^  =   ( n  >  >  1 ) 
    return bin ( n )  [ 2 :  ] "
write a Python function to Find the Intersection of Two Lists,"def intersection ( a ,  b )  : 
    return list ( set ( a )   &  set ( b )  ) "
write a python program to Remove the Given Key from a Dictionary,"d  =   { 'a' : 1 , 'b' : 2 , 'c' : 3 , 'd' : 4 } 
key =  'd'
if key in d :  
    del d [ key ] 
else : 
    print ( ""Key not found ! "" ) 
    exit ( 0 ) "
write a python function to Count the Number of Words in a Text File and print it,"def word _ count ( fname )   :  
    num _ words  =  0
    with open ( fname ,  'r' )  as f : 
        for line in f : 
            words  =  line . split (  ) 
            num _ words  +  =  len ( words ) 
    print ( num _ words ) "
write a python function to Count Set Bits in a Number,"def count _ set _ bits ( n )  : 
    count  =  0
    while n : 
        n  &  =  n  -  1
        count  +  =  1
    return count"
write a python function to make permutations from a list with given length,"def get _ permutations ( data _ list ,  l = 2 )  : 
    return list ( permutations ( data _ list ,  r = l )  ) "
write a python program to get all possible permutations of size of the string in lexicographic sorted order.,"def get _ ordered _ permutations ( word ,  k )  : 
     [ print ( '' . join ( x )  )  for x in sorted ( list ( permutations ( word ,  int ( k )  )  )  )  ] "
"write a python program to get all possible combinations, up to size of the string in lexicographic sorted order.","def get _ ordered _ combinations ( string ,  k )  : 
     [ print ( '' . join ( x )  )  for i in range ( 1 ,  int ( k )   +  1 )  for x in combinations ( sorted ( string )  ,  i )  ] "
write a python function to get all possible size replacement combinations of the string in lexicographic sorted order.,"def get _ ordered _ combinations _ with _ replacement ( string ,  k )  : 
     [ print ( '' . join ( x )  )  for x in combinations _ with _ replacement ( sorted ( string )  ,  int ( k )  )  ] "
write a python function for a string to swap the case of all letters.,"def swap _ case ( s )  : 
    return '' . join ( x for x in  ( i . lower (  )  if i . isupper (  )  else i . upper (  )  for i in s )  ) "
write a python function to check if given set is subset or not,"def check _ subset (  )  : 
    for  _  in range ( int ( input (  )  )  )  : 
        x ,  a ,  z ,  b  =  input (  )  ,  set ( input (  )  . split (  )  )  ,  input (  )  ,  set ( input (  )  . split (  )  ) 
    print ( a . issubset ( b )  ) "
"write a function to compress a given string. Suppose a character 'c' occurs consecutively X times in the string. Replace these consecutive occurrences of the character 'c' with  (X, c) in the string.","def compress ( text )  : 
    from itertools import groupby
    for k ,  g in groupby ( text )  : 
        print ( "" (  {  }  ,   {  }  ) "" . format ( len ( list ( g )  )  ,  k )  ,  end = "" "" ) "
write a python function to count 'a's in the repetition of a given string 'n' times.,"def repeated _ string ( s ,  n )  : 
    return s . count ( 'a' )   *   ( n  /  /  len ( s )  )   +  s [  : n  %  len ( s )  ]  . count ( 'a' ) "
write a python function that given five positive integers and find the minimum and maximum values that can be calculated by summing exactly four of the five integers.,"def min _ max (  )  : 
    nums  =   [ int ( x )  for x in input (  )  . strip (  )  . split ( ' ' )  ] 
    print ( sum ( nums )   -  max ( nums )  ,  sum ( nums )   -  min ( nums )  ) "
Write a python function to Count the Number of Lines in a Text File,"def check _ lines (  )  : 
    fname  =  input ( ""file name :  "" ) 
    num _ lines  =  0
    with open ( fname ,  'r' )  as f : 
        for line in f : 
            num _ lines  +  =  1
    print ( ""Number of lines  =  "" ,  num _ lines ) "
Write a python function that Counts the Number of Blank Spaces in a Text File,"def count _ blank _ space (  )  : 
    fname  =  input ( ""file name : "" ) 
    count  =  0
    with open ( fname ,  'r' )  as f : 
        for line in f : 
            count  +  =  line . count ( ' ' ) 
    return count"
Write a python function to check if 2 strings are anagrams or not,"def anagram ( s1 ,  s2 )  : 
    if sorted ( s1 )   =  =  sorted ( s2 )  : 
        return True
    else : 
        return False"
write a python function to get the most common word in text,"def most _ common ( text )  : 
    c  =  Counter ( text ) 
    return c . most _ common ( 1 ) "
write a python function to do bitwise multiplication on a given bin number by given shifts,"def bit _ mul ( n ,  shift )  : 
    return n  <  <  shift"
write a python function for bitwise division with given number of shifts,"def bit _ div ( n ,  shift )  : 
    return n  >  >  shift"
write a python function to get dot product between two lists of numbers,"def dot _ product ( a ,  b )  : 
    return sum ( e [ 0 ]   *  e [ 1 ]  for e in zip ( a ,  b )  ) "
write a python function to strip punctuations from a given string,"def strip _ punctuations ( s )  : 
    return s . translate ( str . maketrans ( '' ,  '' ,  string . punctuation )  ) "
write a python function that returns biggest character in a string,"from functools import reduce
def biggest _ char ( string )  : 
    if not isinstance ( string ,  str )  : 
        raise TypeError
    return reduce ( lambda x ,  y :  x if ord ( x )   >  ord ( y )  else y ,  string ) "
write a python function to Count the Number of Digits in a Number,"def count _ digits (  )  : 
    n  =  int ( input ( ""Enter number : "" )  ) 
    count  =  0
    while n  >  0 : 
        count  =  count  +  1
        n  =  n  /  /  10
    return count"
write a python function to count number of vowels in a string,"def count _ vowels ( text )  : 
    v  =  set ( 'aeiou' ) 
    for i in v : 
        print ( f' \ n  { i }  occurs  { text . count ( i )  }  times' ) "
write a python function to generate SHA256 for given text,"def get _ sha256 ( text )  : 
    import hashlib
    return hashlib . sha256 ( text )  . hexdigest (  ) "
write a python function to check if SHA256 hashed value is valid for given data or not,"def check _ sha256 _ hash ( hashed ,  data )  : 
    import hashlib
    return True if hashed  =  =  hashlib . sha256 ( data . encode (  )  )  . hexdigest (  )  else False"
write a python function with generator for an infinite sequence,"def infinite _ sequence (  )  : 
    n  =  0
    while True : 
        yield n
        n  +  =  1
import uuid"
write a python function to generate a Unique identifier across space and time in this cosmos.,"def get _ uuid (  )  : 
    return uuid . uuid4 (  ) 
import secrets"
write a python function to generate cryptographically strong pseudo-random data,"def get _ cryptographically _ secure _ data ( n = 101 )  : 
    return secrets . token _ bytes ( n )  ,  secrets . token _ hex ( n ) "
write a python function to convert byte to UTF-8,"def byte _ to _ utf8 ( data )  : 
    return data . decode ( ""utf - 8"" ) 
print ( byte _ to _ utf8 ( data = b'r \ xc3 \ xa9sum \ xc3 \ xa9' )  ) "
"write a python function which takes length , breadth as user input and returns the area of rectangle.","def rectangle _ area ( length ,  breadth )  : 
    area  =  length  *  breadth    
    return area"
"write a python function which takes a number as user input and print square, and cube of the number","def square _ cube ( number )  : 
    print ( number  *  *  2 )   
    print ( number  *  *  3 )   "
write a python program that takes height in centimeters as user input and return height in feet and inches,"cm = int ( input ( ""Enter the height in centimeters : "" )  ) 
inches = 0 . 394 * cm
feet = 0 . 0328 * cm
print ( ""The length in inches"" , round ( inches , 2 )  ) 
print ( ""The length in feet"" , round ( feet , 2 )  ) "
write a python program to remove duplicates from the list and print the result,"l  =   [ 1 , 2 , 3 , 4 , 5 , 5 , 5 , 5 , 5 , 5 , 5 , 7 , 8 , 8 , 0 ] 
result  =  set ( l ) 
print ( ""Result  :  "" , result ) "
write a python function which takes length of sides as user input to calculate and return the area of a triangle,"def triangle _ area ( a , b , c )  : 
    s  =   ( a + b + c )  / 2
    area  =   ( s ( s - a )  *  ( s - b )  *  ( s - c )  )   *  *  0 . 5
    return ( area ) "
write a python program to swap two numbers,"num1  =  130
num2  =  34
num1 , num2  =  num2 , num1"
write a python program to input a string from user and convert input string into all upper case and print the result,"string  =  input ( ""Please Enter your Own String  :  "" ) 
string1  =  string . upper (  ) 
print ( "" \ nOriginal String in Lowercase   =   "" ,  string ) 
print ( ""The Given String in Uppercase  =   "" ,  string1 ) "
write a python program to input a Number N from user and print Odd Numbers from 1 to N,"maximum  =  int ( input ( "" Please Enter any Maximum Value  :  "" )  ) 
for number in range ( 1 ,  maximum  +  1 )  : 
    if ( number  %  2  !  =  0 )  : 
        print ( "" { 0 } "" . format ( number )  ) "
write a python program to input a Number N from user and print Even Numbers from 1 to N,"maximum  =  int ( input ( "" Please Enter the Maximum Value  :  "" )  ) 
for number in range ( 1 ,  maximum + 1 )  : 
    if ( number  %  2  =  =  0 )  : 
        print ( "" { 0 } "" . format ( number )  ) "
write a python program to print the table of input integer,"num  =  int ( input ( ""Please enter a number "" )  ) 
for a in range ( 1 , 11 )  : 
    print ( num  ,  'x'  ,  a  ,  ' = '  , num * a ) "
write a python program to print the factorial of number,"num  =  int ( input ( ""Please enter a number "" )  ) 
fact  =  1
a  =  1
while a  <  =  num  : 
    fact  *  =  a
    a  +  =  1
print ( ""The factorial of "" , num ,  "" is "" , fact ) "
write a python program which takes input a number N and print first N elements of fibonacci series,"N  =  int ( input ( ""Please enter a number "" )  ) 
first  =  0
second  =  1
print ( first ) 
print ( second ) 
for a in range ( 1 , N - 1 )  : 
    third  =  first  +  second
    print ( third ) 
    first , second  =  second  ,  third"
write a python program which takes an integer N as input and add the odd numbers up to N and print the result,"N  =  int ( input ( ""Enter Number  :  "" )  ) 
sum  =  0
i  =  1
while i  <  =  N : 
    sum  =  sum  +  i
    i  =  i  +  2
print ( sum ) "
write a python function which takes input a string and returns whether is is a palindrome or not,"def isPalindrome ( s )  : 
    return s  =  =  s [  :  :  - 1 ] "
write a python program which takes list as an input and calculate mean of given list of numbers,"lst  =  eval ( input ( ""Enter list  :  "" )  ) 
mean  =  0
sum  =  0
for i in lst : 
    sum   =  sum  +  i
mean  =  sum  /  len ( lst ) 
print ( "" The mean of given list is  : "" ,  mean ) "
write a python program which takes list as an input and calculate sum of given list of numbers,"lst  =  eval ( input ( ""Enter list  :  "" )  ) 
mean  =  0
sum  =  0
for i in lst : 
    sum   =  sum  +  i
print ( "" The mean of given list is  : "" ,  sum ) "
write a python program which takes list as an input and find frequency of all elements in list,"lst  =  eval ( input ( ""Enter list  :  "" )  ) 
mean  =  0
sum  =  0
for i in lst : 
    sum   =  sum  +  i
print ( "" The mean of given list is  : "" ,  sum ) "
write a python function that takes two lists as an input an print out common elements in two lists,"def common _ member ( a ,  b )  :  
    a _ set  =  set ( a )  
    b _ set  =  set ( b )  
    if  ( a _ set  &  b _ set )  :  
        print ( a _ set  &  b _ set )  
    else :  
        print ( ""No common elements"" )   "
write a python function that takes two lists and append second list after the first list,"lst1  =  eval ( input ( ""Enter list  :  "" )  ) 
lst2  =  eval ( input ( ""Enter list  :  "" )  ) 
print ( lst1  +  lst2 ) "
write a python program to calculate and print square root of numbers 0 to 100,"i  =  0
while i <  =  100 : 
 print ( i ,  "" \ t \ t""  ,  i *  * 0 . 5 ) 
 i  =  i  +  1"
"write a python program greets the user with ""Hello"", after user inputs his name:","name  =  input  ( ""Input your name :  "" ) 
print ( ""HELLO "" ,  name ) "
write a python program which takes input a string and print reverse string,"name  =  input ( ""Enter String"" ) 
print ( name [  :  :  - 1 ]  )  "
write a python program which takes input a list and print reverse output,"lst  =  eval ( input ( ""Enter list"" )  ) 
print ( lst [  :  :  - 1 ]  )  "
write a python function which takes sentence as input and remove vowels from a sentence,"sentence  =  input ( ""Enter a sentence  :  "" ) 
def fn ( sentence )  : 
    vowels  =  'aeiou'
    return '' . join (  [  l for l in sentence if l not in vowels ]  ) "
write a python function which takes two list of same length as input and return a dictionary with one as keys and other as values.,"keys  =  eval ( input ( ""Enter key list  :  "" )  ) 
values  =  eval ( input ( ""Enter value list  :  "" )  ) 
def fn ( keys ,  values )  : 
    return  {  keys [ i ]   :  values [ i ]  for i in range ( len ( keys )  )   } "
write a python function that takes an integer as input and returns the factorial of that number,"def factorial ( n )  :  
    return 1 if  ( n =  = 1 or n =  = 0 )  else n  *  factorial ( n  -  1 )  ;  "
write a python function that takes input radius and return area of circle,"def findArea ( r )  :  
    PI  =  3 . 142
    return PI  *   ( r * r )  ; "
"write a python funtion that takes input principle, rate, time and calculate compound intrest","def compound _ interest ( principle ,  rate ,  time )  : 
    Amount  =  principle  *   ( pow (  ( 1  +  rate  /  100 )  ,  time )  )  
    CI  =  Amount  -  principle 
    print ( ""Compound interest is"" ,  CI )  "
write a python program to print the ascii value of input character,"character  =  input ( "" Enter Character  : "" ) 
print ( f""Ascii value of character  { character }  is  :  ""  ,  ord ( character )  ) "
write a python program that takes input an integer and find sum of series with cubes of first n natural numbers using list comprehension which ta,"N  =  int ( input ( ""Enter Integer "" )  ) 
lst  =   [ i *  * 3 for i in range ( 1 ,  N  +  1 )  ] 
print ( sum ( lst )  )  "
write a python function that takes list as an input and converts it into tuple,"def convert ( list )  :  
    return tuple ( list ) "
"Write a Python program to get a list, sorted in increasing order by the last element in each tuple from a given list of non-empty tuples.","def last ( n )  :  return n [  - 1 ] 
def sort _ list _ last ( tuples )  : 
  return sorted ( tuples ,  key = last ) 
print ( sort _ list _ last (  [  ( 2 ,  5 )  ,   ( 1 ,  2 )  ,   ( 4 ,  4 )  ,   ( 2 ,  3 )  ,   ( 2 ,  1 )  ]  )  ) "
write a python program to concatenate two dictionaries,"d1  =   { 'a'  :  1  , 'b'  :  2 } 
d2  =   { 'c'  :  1  , 'd'  :  2 } 
d3  =   {  *  * d1 ,  *  * d2 } 
print ( d3 ) "
Write a Python program to print the length of a set.  Create a set,"seta  =  set (  [ 5 ,  10 ,  3 ,  15 ,  2 ,  20 ]  ) 
print ( len ( seta )  ) "
write a python program that takes two sets as input and print the common elements,"s1  =  eval ( input ( ""Enter set 1 "" )  ) 
s2  =  eval ( input ( ""Enter set 2 "" )  ) 
print ( s1 . intersection ( s2 )  ) "
write a python program which takes input a list and prints the mean of elements within the list,"s1  =  eval ( input ( ""Enter list "" )  ) 
mean  =  sum ( s1 )   /  len ( s1 )  
print ( ""Mean of sample is  :  ""  +  str ( mean )  )  "
write a python program which takes input a list and prints the standard deviation of elements within the list,"mean  =  sum ( s1 )   /  len ( s1 )  
variance  =  sum (  [  (  ( x  -  mean )   *  *  2 )  for x in s1 ]  )   /  len ( s1 )  
res  =  variance  *  *  0 . 5
print ( ""Standard deviation of sample is  :  ""  +  str ( res )  )  "
write a python program which prints a random number,"import random
n  =  random . random (  ) 
print ( n )  "
write a python function that takes input a string and removes duplicates from the same,"foo  =  input ( ""Enter String  :  "" ) 
print ( ""Duplicates Removed"" , """" . join ( set ( foo )  )  ) "
"Write a Python program to add 'ing' at the end of a given string (length should be at least 3). If the given string already ends with 'ing' then add 'ly' instead. If the string length of the given string is less than 3, leave it unchanged.","def add _ string ( str1 )  : 
  length  =  len ( str1 ) 
  if length  >  2 : 
    if str1 [  - 3 :  ]   =  =  'ing' : 
      str1  +  =  'ly'
    else : 
      str1  +  =  'ing'
  return str1"
Write a Python function to create the HTML string with tags around the word(s).,"def add _ tags ( tag ,  word )  : 
	return "" <  % s >  % s <  /  % s > ""  %   ( tag ,  word ,  tag ) "
Write a Python program to count the number of even and odd numbers from a series of numbers.,"numbers  =   ( 1 ,  2 ,  3 ,  4 ,  5 ,  6 ,  7 ,  8 ,  9 )   #  Declaring the tuple
count _ odd  =  0
count _ even  =  0
for x in numbers : 
        if not x  %  2 : 
    	     count _ even +  = 1
        else : 
    	     count _ odd +  = 1"
Write a Python program that prints each item and its corresponding type from the following list.,"datalist  =   [ 1452 ,  11 . 23 ,  1 + 2j ,  True ,  'w3resource' ,   ( 0 ,   - 1 )  ,   [ 5 ,  12 ]  , 
 { ""class"" : 'V' ,  ""section"" : 'A' }  ] 
for item in datalist : 
   print  ( ""Type of "" , item ,  "" is "" ,  type ( item )  ) "
Write a Python program to sort (ascending) a dictionary by value.,"d  =   { 1 :  2 ,  3 :  4 ,  4 :  3 ,  2 :  1 ,  0 :  0 } 
print (  { k  : v for k , v in sorted ( d . items (  )  , key  =  lambda x  :  x [ 1 ]  )  }  ) "
Write a Python program to sort (Descending) a dictionary by value.,"d  =   { 1 :  2 ,  3 :  4 ,  4 :  3 ,  2 :  1 ,  0 :  0 } 
print (  { k  : v for k , v in sorted ( d . items (  )  , key  =  lambda x  :  x [ 1 ]  , reverse  =  True )  }  ) "
Write a Python program to sort list.,"numbers  =   [ 1 ,  3 ,  4 ,  2 ]  
numbers . sort (  )   
print ( numbers )  "
Write a Python program to sort a list of tuples by second Item,"def Sort _ Tuple ( tup )  :   
    return ( sorted ( tup ,  key  =  lambda x :  x [ 1 ]  )  )    
tup  =   [  ( 'rishav' ,  10 )  ,   ( 'akash' ,  5 )  ,   ( 'ram' ,  20 )  ,   ( 'gaurav' ,  15 )  ]   
print ( Sort _ Tuple ( tup )  )  "
write a python program that tke two inputs from user and check whether they are equal or not.,"print ( ""Enter first number"" ) 
first  =  input (  ) 
print ( ""Enter second number"" ) 
second  =  input (  ) 
print ( first  =  =  second ) "
write a python program that takes input a list and squares every term using list comprehension,"s1  =  eval ( input ( ""Enter list "" )  ) 
print (  [ i *  * 2 for i in s1 ]  ) "
write a python program that takes input a list and cube every term using list comprehension,"s1  =  eval ( input ( ""Enter list "" )  ) 
print (  [ i *  * 3 for i in s1 ]  ) "
write a python program that takes input a list and square root every term using list comprehension,"s1  =  eval ( input ( ""Enter list "" )  ) 
print (  [ i *  * 0 . 5 for i in s1 ]  ) "
write a python program that takes input a string and prints the count of words,"s1  =  input ( ""Enter string "" ) 
print ( ""Count of words"" , len ( s1 . split (  )  )  ) "
write a python program that print today's date,"from datetime import date
print ( date . today (  )  )  "
write a python program that takes input number of lines and finds the possible number of intersection,"def countMaxIntersect ( n )  :  
    return int ( n *  ( n  -  1 )  / 2 )  "
write a python program to input a number n and print an inverted star pattern of the desired size.,"n = int ( input ( ""Enter number of rows :  "" )  ) 
for i in range  ( n , 0 ,  - 1 )  : 
    print (  ( n - i )   *  ' '  +  i  *  ' * ' ) "
write a python program to input a number and find the smallest divisor of an integer.,"n = int ( input ( ""Enter an integer : "" )  ) 
a =  [  ] 
for i in range ( 2 , n + 1 )  : 
    if ( n % i =  = 0 )  : 
        a . append ( i ) 
a . sort (  ) 
print ( ""Smallest divisor is : "" , a [ 0 ]  ) "
write a python function to insert an element into sorted python list,"def insert ( list ,  n )  :  
    for i in range ( len ( list )  )  :  
        if list [ i ]   >  n :  
            index  =  i 
            break
    list  =  list [  : i ]   +   [ n ]   +  list [ i :  ]  
    return list"
write a python program to add two numbers,"num1  =  1 . 5
num2  =  6 . 3
sum  =  num1  +  num2
print ( f'Sum :   { sum } ' ) "
write a python function to add two user provided numbers and return the sum,"def add _ two _ numbers ( num1 ,  num2 )  : 
    sum  =  num1  +  num2
    return sum"
write a python function to subtract two user provided numbers and return the result,"def sub _ two _ numbers ( num1 ,  num2 )  : 
    sub  =  num1  -  num2
    return sub"
write a python function to multiply two user provided numbers and return the result,"def mul _ two _ numbers ( num1 ,  num2 )  : 
    mul  =  num1  *  num2
    return mul"
write a python program to pop element form dictionary,"squares  =   { 1 :  1 ,  2 :  4 ,  3 :  9 ,  4 :  16 ,  5 :  25 } 
print ( squares . pop ( 4 )  ) "
write a python program that prints the length of tuple,"thistuple  =   ( ""apple"" ,  ""banana"" ,  ""cherry"" ) 
print ( len ( thistuple )  ) "
"1 write a program to get numbers = 1,3,11,42,12,4001","from collections import Iterable
highestnumber  =   - 999
for i in numbers : 
  if i  >  highestnumber : 
    highestnumber  =  i
print ( numbers . index ( highestnumber )  ) "
"2 write a program to get numbers = 1,3,11,42,12,4001","highestnumber  =   - 999
for i in numbers : 
  if i  >  highestnumber : 
    highestnumber  =  i
print ( numbers . index ( highestnumber )  ) "
3 add 1 to all elements in list python,"lst  =   [ 1 , 2 , 3 ] 
list ( map ( lambda x : x + 1 ,  lst )  ) "
4 add a string to each element of a list python,"my _ list  =   [ 'foo' ,  'fob' ,  'faz' ,  'funk' ] 
string  =  'bar'
list2  =  list ( map ( lambda orig _ string :  orig _ string  +  string ,  my _ list )  ) "
5 add a third dimension matrix dataset python,"x  =   [ 2D _ matrix ]   #  To convert from a 2 - D to 3 - D
x  =   [  [  [ value1 ]  ]  ]   #  To convert from a 1 - D to 3 - D"
6 python add all values of another list,"a  =   [ 1 ,  2 ,  3 ] 
b  =   [ 4 ,  5 ,  6 ] 
a  +  =  b"
7 add a value to the start of a list python,"var = 7
array  =   [ 1 , 2 , 3 , 4 , 5 , 6 ] 
array . insert ( 0 , var ) "
8 print into lowersase an uppercase sentence in python,"s  =  ""Kilometer""
print ( s . lower (  )  ) 
mydictionary  :   { 1 :  1 ,  7 :  2 ,  4 :  2 ,  3 :  1 ,  8 :  1 } 
sortedDictionary  =  sorted ( mydictionary . keys (  )  ) "
10 limit decimals to only two decimals in python,"answer  =  str ( round ( answer ,  2 )  ) "
11 print how many keys are in a dictionary python,"a  =   { 'foo' : 42 ,  'bar' : 69 } 
print ( len ( a )  ) "
11 access index of a character in a string python,"foo  =  'Hello'
foo . find ( 'lo' ) "
12 python print last element of list,"mylist  =   [ 0 ,  1 ,  2 ] 
print ( myList [  - 1 ]  )  "
13 how to add a blank line in python,"print ( """" ) "
14 how to add element at first position in array python,"x  =   [ 1 , 3 , 4 ] 
a  =  2
x . insert ( 1 , a ) "
15 how to add extra zeros after decimal in python,"format ( 2 . 0 ,  ' . 6f' ) 
'2 . 000000'"
16 how to add list numbers in python,"numbers  =   [ 1 , 2 , 3 , 4 , 5 , 1 , 4 , 5 ]  
Sum  =  sum ( numbers )  "
17 split list into lists of equal length python," [ lst [ i : i  +  n ]  for i in range ( 0 ,  len ( lst )  ,  n )  ] "
19 capitalize first letter in python in list,"my _ list  =   [ 'apple pie' ,  'orange jam' ] 
my _ list [ 0 ]  . capitalize (  ) 
if ( all ( x in test _ list for x in sub _ list )  )  :  
    flag  =  True"
21 write a function to check if string is camelcase pythonpython by Breakable Buffalo on Aug 09 2020 Donate,"def is _ camel _ case ( s )  : 
    return s  !  =  s . lower (  )  and s  !  =  s . upper (  )  and "" _ "" not in s
isinstance ( string ,  bytes ) "
23 how to check nth prime in python,"x = int ( input (  )  ) 
n , c = 1 , 0
while ( c < x )  : 
    n +  = 1
    for i in range ( 2 , n + 1 )  : 
        if ( n % i =  = 0 )  : 
            break
    if ( i =  = n )  : 
        c = c + 1"
24 how to convert fahrenheit to celsius in python,"Celsius  =   ( Fahrenheit  -  32 )   *  5 . 0 / 9 . 0
a = 6
print ( bin ( a )  ) "
26 write a python function to convert from base 2 to base 10 in pythonpython by TheRubberDucky on Nov 06 2020 Donate,"def getBaseTen ( binaryVal )  : 
    count  =  0
    binaryVal  =  binaryVal [  :  :  - 1 ] 
	for i in range ( 0 ,  len ( binaryVal )  )  : 
    	if ( binaryVal [ i ]   =  =  ""1"" )  : 
            count  +  =  2 *  * i
    return count"
27 write a python funtion to execute bash commands,"import subprocess
subprocess . call (  [ ""sudo"" ,  ""apt"" ,  ""update"" ]  ) "
27 write a function to generate and print a random number between 0 and 22,"import random
n  =  random . randint ( 0 , 22 ) 
print ( n ) "
28 to get a random element from an array in python,"import random
list _   =   [ 1 , 2 , 3 , 4 ] 
random . choice ( list _  ) "
29 print current day in python,"from datetime import date
today  =  date . today (  ) 
print ( ""Today's date : "" ,  today ) "
30 program to count number of cpu cores available,"import os
os . cpu _ count (  ) "
30 get rid of all null values in array python,"mylist  =   [ 1 ,  2 ,  3 ,  '' ,  4 ] 
mylist  =   [ i for i in mylist if i ] "
31 get the most common number in python,"from statistics import mode
mode (  ( 1 ,  2 ,  4 ,  4 ,  5 ,  4 ,  4 ,  2 ,  3 ,  8 ,  4 ,  4 ,  4 )  ) "
32 print current version of python,"import sys
print ( sys . version ) "
34 write a python function to convert a string  into xml,"import xml . etree . ElementTree as ET
root  =  ET . fromstring ( country _ data _ as _ string ) 
import xml . etree . ElementTree as ET
tree  =  ET . parse ( 'filename . xml' )  
tree _ root  =  tree . getroot (  )  "
36 python parse datetime from string,"from datetime import datetime
datetime _ object  =  datetime . strptime ( 'Jun 1 2005  1 : 33PM' ,  ' % b  % d  % Y  % I :  % M % p' ) "
37 print list as matrix in python without bracketspython by Bright Butterfly on Jun 14 2020 Donate,"data  =   [ 7 ,  7 ,  7 ,  7 ] 
print (  * data ,  sep = '' ) "
38 how to read a specific line from a text file in python,"line  =  open ( ""file . txt"" ,  ""r"" )  . readlines (  )  [ 7 ] "
39 how to remove integer from string in python,"s  =  '12abcd405'
result  =  '' . join (  [ i for i in s if not i . isdigit (  )  ]  ) "
40 write a function to return the nth fibonacci in python,"def Fibonacci ( n )  :  
    if n < 0 :  
        print ( ""Incorrect input"" ) 
    elif n =  = 1 :  
        return 0
    elif n =  = 2 :  
        return 1
    else :  
        return Fibonacci ( n - 1 )  + Fibonacci ( n - 2 )  "
41 how to sort a list in python using lambda,"data  =   [  ( ""Apples"" ,  5 ,  ""20"" )  ,   ( ""Pears"" ,  1 ,  ""5"" )  ,   ( ""Oranges"" ,  6 ,  ""10"" )  ] 
data . sort ( key = lambda x : x [ 0 ]  ) "
43 write a to time a python script,"from datetime import datetime
start  =  datetime . now (  ) 
do _ something (  )  :  .  .  . 
print ( datetime . now (  )   -  start ) "
48 write a python program to merge a list of dictionaires,"result  =   {  } 
for d in L : 
    result . update ( d ) "
51 write a python function to find a missing number in a list of consecutive natural numbers,"def getMissingNo ( A )  :  
    n  =  len ( A )  
    total  =   ( n  +  1 )  *  ( n  +  2 )  / 2
    sum _ of _ A  =  sum ( A )  
    return total  -  sum _ of _ A "
52 write a python program to normalize a list of numbers and print the result,"a  =   [ 2 , 4 , 10 , 6 , 8 , 4 ] 
amin ,  amax  =  min ( a )  ,  max ( a ) 
for i ,  val in enumerate ( a )  : 
    a [ i ]   =   ( val - amin )   /   ( amax - amin ) 
print ( a ) "
54 Write a Python function to check if a number is a perfect square,"def is _ perfect _ square ( n )  : 
    x  =  n  /  /  2
    y  =  set (  [ x ]  ) 
    while x  *  x  !  =  n : 
        x  =   ( x  +   ( n  /  /  x )  )   /  /  2
        if x in y :  return False
        y . add ( x ) 
    return True"
57 Write a Python function to find the single number in a list that doesn't occur twice.,"def single _ number ( arr )  : 
    result  =  0
    for i in arr : 
        result  ^  =  i
    return result"
58 Write a Python function to find the single element in a list where every element appears three times except for one.,"def single _ number ( arr )  : 
    ones ,  twos  =  0 ,  0
    for x in arr : 
        ones ,  twos  =   ( ones  ^  x )   &   ~ twos ,   ( ones  &  x )   |   ( twos  &   ~ x ) 
    assert twos  =  =  0
    return ones"
59 Write a function program to add the digits of a positive integer repeatedly until the result has a single digit.,"def add _ digits ( num )  : 
        return  ( num  -  1 )   %  9  +  1 if num  >  0 else 0"
61 Write a Python function to reverse the bits of an integer (32 bits unsigned).,"def reverse _ Bits ( n )  : 
        result  =  0
        for i in range ( 32 )  : 
            result  <  <  =  1
            result  |  =  n  &  1
            n  >  >  =  1
        return result"
62 Write a Python function to check a sequence of numbers is an arithmetic progression or not.,"def is _ arithmetic ( l )  : 
    delta  =  l [ 1 ]   -  l [ 0 ] 
    for index in range ( len ( l )   -  1 )  : 
        if not  ( l [ index  +  1 ]   -  l [ index ]   =  =  delta )  : 
             return False
    return True"
64 Write a Python function to compute the sum of the two reversed numbers and display the sum in reversed form.,"def reverse _ sum ( n1 ,  n2 )  : 
    return int ( str ( int ( str ( n1 )  [  :  :  - 1 ]  )   +  int ( str ( n2 )  [  :  :  - 1 ]  )  )  [  :  :  - 1 ]  ) "
65 Write a Python function to check if a given string is an anagram of another given string.,"def is _ anagram ( str1 ,  str2 )  : 
    list _ str1  =  list ( str1 ) 
    list _ str1 . sort (  ) 
    list _ str2  =  list ( str2 ) 
    list _ str2 . sort (  ) 
    return  ( list _ str1  =  =  list _ str2 ) "
66 Write a Python function to push all zeros to the end of a list.,"def move _ zero ( num _ list )  : 
    a  =   [ 0 for i in range ( num _ list . count ( 0 )  )  ] 
    x  =   [  i for i in num _ list if i  !  =  0 ] 
    x . extend ( a ) 
    return ( x ) "
67 Write a Python function to the push the first number to the end of a list.,"def move _ last ( num _ list )  : 
    a  =   [ num _ list [ 0 ]  for i in range ( num _ list . count ( num _ list [ 0 ]  )  )  ] 
    x  =   [  i for i in num _ list if i  !  =  num _ list [ 0 ]  ] 
    x . extend ( a ) 
    return ( x ) "
68 Write a Python function to find the length of the last word.,"def length _ of _ last _ word ( s )  : 
        words  =  s . split (  ) 
        if len ( words )   =  =  0 : 
            return 0
        return len ( words [  - 1 ]  ) "
70 Write a Python function to find the single number which occurs odd numbers and other numbers occur even number.,"def odd _ occurrence ( arr )  : 
    result  =  0
    for element in arr : 
        result  =  result  ^  element
    return result"
73 Write a python function to find the difference between the sum of the squares of the first two hundred natural numbers and the square of the sum.,"r  =  range ( 1 ,  201 ) 
a  =  sum ( r ) 
print  ( a  *  a  -  sum ( i * i for i in r )  ) "
74 Write a Python function to compute s the sum of the digits of the number 2 to the power 20.,"def digits _ sum (  )  : 
	n  =  2 *  * 20
	ans  =  sum ( int ( c )  for c in str ( n )  ) 
	return str ( ans ) "
75 Write a Python program to compute the sum of all the multiples of 3 or 5 below 500.,"n  =  0
for i in range ( 1 , 500 )  : 
     if not i  %  5 or not i  %  3 : 
         n  =  n  +  i
print ( n ) "
76 Write a Python function to converting an integer to a string in any base.,"def to _ string ( n , base )  : 
   conver _ tString  =  ""0123456789ABCDEF""
   if n  <  base : 
      return conver _ tString [ n ] 
   else : 
      return to _ string ( n /  / base , base )   +  conver _ tString [ n  %  base"
77 Write a Python function to calculate the geometric sum of n-1.,"def geometric _ sum ( n )  : 
  if n  <  0 : 
    return 0
  else : 
    return 1  /   ( pow ( 2 ,  n )  )   +  geometric _ sum ( n  -  1 ) "
78 Write a Python function to find the greatest common divisor (gcd) of two integers.,"def Recurgcd ( a ,  b )  : 
	low  =  min ( a ,  b ) 
	high  =  max ( a ,  b ) 
	if low  =  =  0 : 
		return high
	elif low  =  =  1 : 
		return 1
	else : 
		return Recurgcd ( low ,  high % low ) "
"79 Write a program to print which will find all such numbers which are divisible by 7 but are not a multiple of 5,","between 2000 and 3200  ( both included )  .   
l =  [  ] 
for i in range ( 2000 ,  3201 )  : 
    if  ( i % 7 =  = 0 )  and  ( i % 5 !  = 0 )  : 
        l . append ( str ( i )  ) 
print ' , ' . join ( l ) "
81 Write a Python program to convert a given Bytearray to Hexadecimal string.,"def bytearray _ to _ hexadecimal ( list _ val )  : 
     result  =  '' . join ( ' {  : 02x } ' . format ( x )  for x in list _ val )   
     return ( result ) "
83 Write a Python program to move all spaces to the front of a given string in single traversal.,"def moveSpaces ( str1 )  :  
    no _ spaces  =   [ char for char in str1 if char !  = ' ' ]    
    space =  len ( str1 )   -  len ( no _ spaces ) 
    result  =  ' ' * space    
    return result  +  '' . join ( no _ spaces ) "
84 Write a Python program to find maximum length of consecutive 0’s in a given binary string.,"def max _ consecutive _ 0 ( input _ str )  :  
     return  max ( map ( len , input _ str . split ( '1' )  )  ) 
str1  =  '111000010000110'
print ( ""Original string : ""  +  str1 ) 
print ( ""Maximum length of consecutive 0 ’ s : "" ) "
85 Write a Python program that iterate over elements repeating each as many times as its count.,"from collections import Counter
c  =  Counter ( p = 4 ,  q = 2 ,  r = 0 ,  s =  - 2 ) 
print ( list ( c . elements (  )  )  ) "
86 Write a Python program to generate groups of five consecutive numbers in a list,"l  =   [  [ 5 * i  +  j for j in range ( 1 , 6 )  ]  for i in range ( 5 )  ] 
print ( l ) "
87 Write a Python program to print the list in a list of lists whose sum of elements is the highest.,"print ( max ( num ,  key = sum )  ) "
91 Write a Python function to create a multidimensional list (lists of lists) with zeros and print the output.,"nums  =   [  ] 
for i in range ( 3 )  : 
    nums . append (  [  ]  ) 
    for j in range ( 2 )  : 
        nums [ i ]  . append ( 0 ) 
print ( ""Multidimensional list : "" ) 
print ( nums ) "
98 Write a Python program to multiply two integers without using the '*' operator in python.,"def multiply ( x ,  y )  : 
    if y  <  0 : 
        return  - multiply ( x ,   - y ) 
    elif y  =  =  0 : 
        return 0
    elif y  =  =  1 : 
        return x
    else : 
        return x  +  multiply ( x ,  y  -  1 ) "
Write a program to merge two python dictionaries and print merged dictionary,"d1  =   { 'a' :  100 ,  'b' :  200 } 
d2  =   { 'x' :  300 ,  'y' :  200 } 
d  =  d1 . copy (  ) 
d . update ( d2 ) 
print ( d ) "
write a python function to concatenate two integers like string concatenation and return concatenated number as integer,"def concat _ two _ numbers ( num1 ,  num2 )  : 
    combined _ num  =  str ( num1 )   +  str ( num2 ) 
    return int ( combined _ num ) "
"With a given integral number n, write a program to generate a dictionary that contains (i, i*i*i) such that is an integral number between 1 and n (both included). and then the program should print the dictionary.","n  =  8
d  =  dict (  ) 
for i in range ( 1 , n + 1 )  : 
    d [ i ]   =  i * i * i
print ( d ) "
Write a program which accepts a sequence of comma-separated numbers from console and generate a list and a tuple which contains every number.,"values = input (  ) 
l = values . split ( "" , "" ) 
t = tuple ( l ) 
print ( l ) 
print ( t ) "
Write a Python function that takes a sequence of numbers and determines whether all the numbers are different from each other,"def test _ distinct ( data )  : 
  if len ( data )   =  =  len ( set ( data )  )  : 
    return True
  else : 
    return False"
Write a Python function to find the number of zeros at the end of a factorial of a given positive number.,"def factendzero ( n )  : 
  x  =  n  /  /  5
  y  =  x 
  while x  >  0 : 
    x  /  =  5
    y  +  =  int ( x ) 
  return y"
Write a Python function to remove leading zeros from an IP address,"import re
regex  =  ' \  .  [ 0 ]  * '
def remove _ leading _ zeros ( ip )  : 
    modified _ ip  =  re . sub ( regex ,  ' . ' ,  ip ) 
    return modified _ ip"
Write a Python function to return binary value of a given integer,"def int _ to _ bin ( a )  : 
  return bin ( a ) "
Write a Python function to return octal value of a given integer,"def int _ to _ oct ( a )  : 
  return oct ( a ) "
Write a Python function to return hexadecimal value of a given integer,"def int _ to _ hex ( a )  : 
  return hex ( a ) "
Write a Python program to typecast given input to integer,"num  =  int ( input ( ""Input a value :  "" )  ) 
print ( num ) "
Write a Python program to typecast given input to float,"num  =  float ( input ( ""Input a value :  "" )  ) 
print ( num ) "
Write a Python program to check/test multiple variables against a value,"a  =  10
b  =  20
c  =  30
if 10 in  { a ,  b ,  c }  : 
  print ( ""True"" ) 
else : 
  print ( ""False"" )   "
"Write a Python class that will initiate a number, input a number and print the number","class Number : 
	def  _  _ init _  _  ( self ,  num )  : 
		self . num  =  num
	def inputNum ( self )  : 
		self . num  =  int ( input ( ""Enter an integer number :  "" )  ) 
	def printNum ( self )  : 
		print ( self . num ) "
"Write a Python function to find the simple interest in Python when principle amount, rate of interest and time is given","def simple _ interest ( p , r , t )  : 
    si  =   ( p * r * t )  / 100
    return si"
"Write a Python function to find the compound interest in Python when principle amount, rate of interest and time is given","def compound _ interest ( p , r , t )  : 
    ci  =  p  *   ( pow (  ( 1  +  r  /  100 )  ,  t )  )  
    return ci"
Write a Python function to check whether a person is eligible for voting or not based on their age,"def vote _ eligibility ( age )  : 
	if age >  = 18 : 
	    status = ""Eligible""
	else : 
	    status = ""Not Eligible""
	return status"
Write a Python function to find the BMI for given weight and height of a person,"def bmi _ calculator ( height ,  weight )  : 
	bmi  =  weight /  ( height *  * 2 ) 
	return bmi"
Write a Python function to find the maximum ODD number from a given list,"def odd _ max _ checker ( list1 )  : 
	maxnum  =  0
	for num in list1 : 
	    if num % 2  !  =  0 : 
	        if num  >  maxnum : 
	            maxnum  =  num
	return maxnum"
Write a Python function to find the maximum EVEN number from a given list,"def even _ max _ checker ( list1 )  : 
	maxnum  =  0
	for num in list1 : 
	    if num % 2  =  =  0 : 
	        if num  >  maxnum : 
	            maxnum  =  num
	return maxnum"
Write a Python program to print the calendar of any given year,"import calendar
year = 2020
print ( calendar . calendar ( year )  ) "
Write a Python function to print whether the given Date is valid or not,"def date _ validator ( d , m , y )  : 
	import datetime 
	try : 
		s = datetime . date ( y , m , d ) 
		print ( ""Date is valid . "" ) 
	except ValueError :  
		print ( ""Date is invalid . "" ) "
Write a Python function to find the N-th number which is both square and cube,"def nth _ sq _ and _ cube ( N )  : 
	R  =  N *  * 6
	return R"
Write a Python function to check whether a number is a power of another number or not,"def power _ checker ( a , b )  : 
	import math
	s = math . log ( a , b ) 
	p = round ( s ) 
	if  ( b *  * p )  =  = a : 
	    return f' { a }  is the power of  { b }  . '
	else : 
	    return f' { a }  is NOT the power of  { b }  . '"
Write a Python program to print the list of all keywords,"import keyword
print ( ""Python keywords are .  .  . "" ) 
print ( keyword . kwlist ) "
Write a Python function to find the intersection of two arrays,"def array _ intersection ( A , B )  : 
	inter = list ( set ( A )  & set ( B )  ) 
	return inter"
Write a Python function to find the union of two arrays,"def array _ union ( A , B )  : 
	union = list ( set ( A )  | set ( B )  ) 
	return union"
Write a Python program that prints a new set with all items from both sets by removing duplicates   ---------------------------------------------------------,"set1  =   { 10 ,  20 ,  30 ,  40 ,  50 } 
set2  =   { 30 ,  40 ,  50 ,  60 ,  70 } 
print ( set1 . union ( set2 )  ) "
"Write a Python program that Given two Python sets, update first set with items that exist only in the first set and not in the second set   ---------------------------------------------------------","set1  =   { 10 ,  20 ,  30 } 
set2  =   { 20 ,  40 ,  50 } 
print ( set1 . difference _ update ( set2 )  ) "
"Write a Python program that prints a set of all elements in either A or B, but not both   ---------------------------------------------------------","set1  =   { 10 ,  20 ,  30 ,  40 ,  50 } 
set2  =   { 30 ,  40 ,  50 ,  60 ,  70 } 
print ( set1 . symmetric _ difference ( set2 )  ) "
Write a Python function to print number with commas as thousands separators,"def formattedNumber ( n )  : 
  return  ( "" {  :  ,  } "" . format ( n )  ) "
Write a Python function to count occurrence of a word in the given text,"def text _ searcher ( text ,  word )  : 
    count  =  0
    for w in text . split (  )  : 
        if w  =  =  word : 
            count  =  count  +  1
    return count"
Write a Python function to capitalizes the first letter of each word in a string,"def capitalize ( text )  : 
  return text . title (  ) "
Write a Python function to remove falsy values from a list,"def newlist ( lst )  : 
  return list ( filter ( None ,  lst )  ) "
Write a Python function to to find the sum of all digits of a given integer,"def sum _ of _ digits ( num )  : 
  if num  =  =  0 : 
    return 0
  else : 
    return num  %  10  +  sum _ of _ digits ( int ( num  /  10 )  ) "
Write a Python function to check all elements of a list are the same or not,"def check _ equal ( a )  : 
  return a [ 1 :  ]   =  =  a [  :  - 1 ] "
Write a Python program to convert string into a datetime object,"from datetime import datetime
date _ string  =  ""Mar 26 2021  4 : 20PM""
datetime _ object  =  datetime . strptime ( date _ string ,  ' % b  % d  % Y  % I :  % M % p' ) 
print ( datetime _ object ) "
Write a Python function that returns the integer obtained by reversing the digits of the given integer,"def reverse ( n )  : 
    s = str ( n )  
    p = s [  :  :  - 1 ] 
    return p "
"Write a Python program that updates set1 by adding items from set2, except common items","set1  =   { 10 ,  20 ,  30 ,  40 ,  50 } 
set2  =   { 30 ,  40 ,  50 ,  60 ,  70 } 
set1 . symmetric _ difference _ update ( set2 ) 
print ( set1 ) "
Write a Python program that removes items from set1 that are not common to both set1 and set2,"set1  =   { 10 ,  20 ,  30 ,  40 ,  50 } 
set2  =   { 30 ,  40 ,  50 ,  60 ,  70 } 
set1 . intersection _ update ( set2 ) 
print ( set1 ) "
Write a Python program to reverse a tuple,"aTuple  =   ( 10 ,  20 ,  30 ,  40 ,  50 ) 
aTuple  =  aTuple [  :  :  - 1 ] 
print ( aTuple ) "
Write a Python program to swap two tuples,"tuple1  =   ( 11 ,  22 ) 
tuple2  =   ( 99 ,  88 ) 
tuple1 ,  tuple2  =  tuple2 ,  tuple1
print ( tuple2 ) 
print ( tuple1 ) "
Write a Python program to modify the second item (33) of a list inside a following tuple to 333,"tuple1  =   ( 11 ,   [ 22 ,  33 ]  ,  44 ,  55 ) 
tuple1 [ 1 ]  [ 1 ]   =  333
print ( tuple1 ) "
Write a Python program to sort a tuple of tuples by 2nd item,"tuple1  =   (  ( 'a' ,  23 )  ,  ( 'b' ,  37 )  ,  ( 'c' ,  11 )  ,   ( 'd' , 29 )  ) 
tuple1  =  tuple ( sorted ( list ( tuple1 )  ,  key = lambda x :  x [ 1 ]  )  ) 
print ( tuple1 ) "
Write a Python function to check if all items in the following tuple are the same,"def check _ tuple _ same ( sampleTuple )  : 
    return all ( i  =  =  sampleTuple [ 0 ]  for i in sampleTuple ) "
Write a Python program to print current time in milliseconds,"import time
milliseconds  =  int ( round ( time . time (  )   *  1000 )  ) 
print ( milliseconds ) "
Write a Python function func1() such that it can accept a variable length of  argument and print all arguments value,"def func1 (  * args )  : 
    for i in args : 
        print ( i ) "
Write a Python program that Given a two Python list. Iterate both lists simultaneously such that list1 should display item in original order and list2 in reverse order,"list1  =   [ 10 ,  20 ,  30 ,  40 ] 
list2  =   [ 100 ,  200 ,  300 ,  400 ] 
for x ,  y in zip ( list1 ,  list2 [  :  :  - 1 ]  )  : 
    print ( x ,  y ) "
"Write a Python function that Given a string, display only those characters which are present at an even index number","def printEveIndexChar ( str )  : 
  for i in range ( 0 ,  len ( str )  - 1 ,  2 )  : 
    print ( ""index [ "" , i , "" ] "" ,  str [ i ]   ) "
"Write a Python function that Given a string and an integer number n, remove characters from a string starting from zero up to n and return a new string","def removeChars ( str ,  n )  : 
  return str [ n :  ] "
"Write a Python function that Given a list of numbers, return True if first and last number of a list is same","def isFirst _ And _ Last _ Same ( numberList )  : 
    firstElement  =  numberList [ 0 ] 
    lastElement  =  numberList [  - 1 ] 
    if  ( firstElement  =  =  lastElement )  : 
        return True
    else : 
        return False"
"Write a Python function that Given a list of numbers, Iterate it and print only those numbers which are divisible of 5","def findDivisible ( numberList )  : 
    for num in numberList : 
        if  ( num  %  5  =  =  0 )  : 
            print ( num ) "
"Write a Python program to return a set of all elements in either A or B, but not both","set1  =   { 10 ,  20 ,  30 ,  40 ,  50 } 
set2  =   { 30 ,  40 ,  50 ,  60 ,  70 } 
print ( set1 . symmetric _ difference ( set2 )  ) "
Write a Python program to Subtract a week ( 7 days) from a given date in Python,"from datetime import datetime ,  timedelta
given _ date  =  datetime ( 2020 ,  2 ,  25 ) 
days _ to _ subtract  =  7
res _ date  =  given _ date  -  timedelta ( days = days _ to _ subtract ) 
print ( res _ date ) "
Write a Python program to Find the day of week of a given date,"from datetime import datetime
given _ date  =  datetime ( 2020 ,  7 ,  26 ) 
print ( given _ date . strftime ( ' % A' )  ) "
Write a Python program to Convert following datetime instance into string format,"from datetime import datetime
given _ date  =  datetime ( 2020 ,  2 ,  25 ) 
string _ date  =  given _ date . strftime ( "" % Y -  % m -  % d  % H :  % M :  % S"" ) 
print ( string _ date ) "
Write a Python program to convert two equal length sets to dictionary,"keys  =   { 'Ten' ,  'Twenty' ,  'Thirty' } 
values  =   { 10 ,  20 ,  30 } 
sampleDict  =  dict ( zip ( keys ,  values )  ) 
print ( sampleDict ) "
Write a program which will find all such numbers which are divisible by 7 but are not a multiple of 5 between 2000 and 3200 (both included).,"l =  [  ] 
for i in range ( 2000 ,  3201 )  : 
    if  ( i % 7 =  = 0 )  and  ( i % 5 !  = 0 )  : 
        l . append ( str ( i )  ) "
Write a program that will determine the object type,"def typeIdentifier ( object )  : 
  return f'object type  :   { type ( object )  } '"
Write a program that will determine the memory usage by python process,"import os ,  psutil
print ( psutil . Process ( os . getpid (  )  )  . memory _ info (  )  . rss  /  1024  *  *  2 ) "
Write a function that will provide the ascii value of a character,"def charToASCII ( chr )  : 
  return f'ASCII value of  { chr }  is :   { ord ( chr )  } '"
Write a function to reverse a string,"def revStr ( inp )  : 
  inp  =  inp [  :  :  - 1 ] 
  return inp"
Write a function to determine the bits used by any number,"def totalBits ( n )  : 
	return f'total number of bits used in  { n }  is  :   { len ( bin ( n )  [ 2 :   ]  )  } '"
Write a program to swap two variables inplace,"a , b  =  b , a"
Write a program that prints the words in a comma-separated sequence after sorting them alphabetically.,"items =  [ x for x in input (  )  . split ( ' , ' )  ] 
items . sort (  ) 
print ( ' , ' . join ( items )  ) "
Write a function that will convert a string into camelCase,"from re import sub
def camelCase ( string )  : 
  string  =  sub ( r"" (  _  |  -  )  + "" ,  "" "" ,  string )  . title (  )  . replace ( "" "" ,  """" ) 
  return string [ 0 ]  . lower (  )   +  string [ 1 :  ] "
Write a function to remove empty list from a list using list comprehension,"def removeEmptyList ( li )  : 
  res  =   [ ele for ele in li if ele  !  =   [  ]  ]  
  return res"
Write a function to Find the size of a Tuple in Python without garbage values,"Tuple  =   ( 10 , 20 ) 
def sizeOfTuple ( tup )  : 
  return f'Size of Tuple :   { str ( Tuple .  _  _ sizeof _  _  (  )  )  }  bytes' "
Write a function that finds a list is homogeneous,"def homoList ( li )  : 
  res  =  True
  for i in li :  
      if not isinstance ( i ,  type ( li [ 0 ]  )  )  :  
          res  =  False 
          break
  return res"
Write a function to remove a given date type elements from a list.,"def removeDataType ( li , dType )  : 
    res  =   [  ] 
    for i in li : 
        if not isinstance ( i ,  dType )  : 
            res . append ( i ) 
    return res"
"Write a python function to find out the occurence of ""i"" element before first ""j"" in the list","def firstOccurence ( arr ,  i , j )  : 
  res  =  0
  for k in arr :          
      if k  =  =  j :  
          break
      if k  =  =  i :  
          res  +  =  1
  return res"
Write a program to check whether a file/path/direcory exists or not,"file _ path  =  ""path / here""
import os . path
os . path . exists ( file _ path ) "
Write a program to merge two python dictionaries,"x =  { 'key1' : 'val1' , 'key2' : 'val2' } 
y =  { 'key3' : 'val3' , 'key4' : 'val4' } 
z  =   {  *  * x ,   *  * y }   #  z  =  x  |  y  "
Write a program to convert dictionary into JSON,"import json
data  =   { ""key1""  :  ""value1"" ,  ""key2""  :  ""value2"" } 
jsonData  =  json . dumps ( data ) 
print ( jsonData ) "
Write a function to Check whether following json is valid or invalid,"import json
def validateJSON ( jsonData )  : 
    try : 
        json . loads ( jsonData ) 
    except ValueError as err : 
        return False
    return True"
Write a function to add two positive integers without using the '+' operator,"def add _ without _ plus _ operator ( a ,  b )  : 
    while b  !  =  0 : 
        data  =  a  &  b
        a  =  a  ^  b
        b  =  data  <  <  1
    return a"
Write a program to compute the number of digits in multiplication of two given integers,"a , b  =  312 ,  410
print ( len ( str ( a * b )  )  ) "
Write a function to return the area of a rhombus,"def area ( d1 ,  a )  :  
    d2  =   ( 4 *  ( a *  * 2 )   -  d1 *  * 2 )  *  * 0 . 5
    area  =  0 . 5  *  d1  *  d2 
    return ( area )  "
"Write a function that Given a number, find the most significant bit number which is set bit and which is in power of two","def setBitNumber ( n )  :  
    if  ( n  =  =  0 )  :  
        return 0
    msb  =  0 
    n  =  int ( n  /  2 )  
    while  ( n  >  0 )  :  
        n  =  int ( n  /  2 )  
        msb  +  =  1
    return  ( 1  <  <  msb )  "
Write a function to calculate volume of Triangular Pyramid,"def volumeTriangular ( a ,  b ,  h )  :  
    return  ( 0 . 1666 )   *  a  *  b  *  h "
Write a function to calculate volume of Square Pyramid,"def volumeSquare ( b ,  h )  :  
    return  ( 0 . 33 )   *  b  *  b  *  h "
Write a function to calculate Volume of Pentagonal Pyramid,"def volumePentagonal ( a ,  b ,  h )  :  
    return  ( 0 . 83 )   *  a  *  b  *  h "
Write a function to calculate Volume of Hexagonal Pyramid,"def volumeHexagonal ( a ,  b ,  h )  :  
    return a  *  b  *  h"
Write a python program to find and print volume of a sphere for which diameter d is given,"import math
diameter  =  12 . 
radius  =  diameter / 2 . 
V  =  4 .  / 3 .   *  math . pi  *  radius  *  *  3
print ( f""Volume =  { V } "" ) "
"Write a python program using list comprehension to produce and print the list ['x', 'xx', 'xxx', 'xxxx', 'y', 'yy', 'yyy', 'yyyy', 'z', 'zz', 'zzz', 'zzzz']","input _ string _ list  =   [ 'x' ,  'y' ,  'z' ] 
repeat _ count  =  4
list2  =   [ input _ string _ list [ i ]   *   ( j + 1 )   for i in range ( len ( input _ string _ list )  )  for j in range ( repeat _ count )   ] 
print ( list2 ) "
"Write a python program using list comprehension to produce and print the list ['x', 'y', 'z', 'xx', 'yy', 'zz', 'xxx', 'yyy', 'zzz', 'xxxx', 'yyyy', 'zzzz']","input _ string _ list  =   [ 'x' ,  'y' ,  'z' ] 
repeat _ count  =  4
list3  =   [ input _ string _ list [ i ]   *   ( j + 1 )  for j in range ( repeat _ count )   for i in range ( len ( input _ string _ list )  )   ] 
print ( list3 ) "
"Write a python program using list comprehension to produce and print the list  [[2],[3],[4],[3],[4],[5],[4],[5],[6]]","start _ num  =  2
repeat _ count  =  3
max _ offset  =  3
list4  =   [  [ start _ num  +  i  +  j  ]   for j in range ( max _ offset )  for i in range ( repeat _ count )   ]  
print ( list4 ) "
"Write a python program using list comprehension to produce and print the list [[2, 3, 4, 5], [3, 4, 5, 6], [4, 5, 6, 7], [5, 6, 7, 8]]","start _ num  =  2
repeat _ count  =  4
max _ offset  = 4
list5  =   [  [ start _ num  +  i  +  j  for j in range ( max _ offset )  ]   for i in range ( repeat _ count )   ] 
print ( list5 ) "
"Write a python program using list comprehension to produce and print the list [(1, 1), (2, 1), (3, 1), (1, 2), (2, 2), (3, 2), (1, 3), (2, 3), (3, 3)]","max _ count  =  3
list6  =   [  ( j + 1 , i + 1 )   for i in range ( max _ count )   for j in range ( max _ count )   ] 
print ( list6 ) "
Write a python program that maps list of words into a list of integers representing the lengths of the corresponding words,"lst  =   [ ""ab"" , ""cde"" , ""erty"" ] 
length _ list  =  list ( map (  ( lambda element :  len ( element )  )  ,  lst )  ) 
print ( str ( length _ list )  ) "
Write a python program which accepts users first name and last name and print in reverse order with a space,"first _ name  =  input ( ""Enter your first name :  "" ) 
last _ name  =  input ( ""Enter your last name :  "" ) 
print ( last _ name . strip (  )   +  "" ""  +  first _ name . strip (  )  ) "
Write a python program to find and print sum of series with cubes of first n natural numbers,"n  =  10
sum  =  0
for i in range ( 1 ,  n + 1 )  :  
    sum  +  =  i *  * 3
print ( f"" { sum } "" ) "
"Write a python  function which returns True elements in a given list is monotonically increasing or decreasing, return False otherwise","def isMonotonic ( A )  :   
    return  ( all ( A [ i ]   <  =  A [ i  +  1 ]  for i in range ( len ( A )   -  1 )  )  or
            all ( A [ i ]   >  =  A [ i  +  1 ]  for i in range ( len ( A )   -  1 )  )  )  "
Write a python program to find and print  K th column of a matrix,"test _ list  =   [  [ 4 ,  5 ,  6 ]  ,   [ 8 ,  1 ,  10 ]  ,   [ 7 ,  12 ,  5 ]  ]  
K  =  2
res  =   [ sub [ K ]  for sub in test _ list ]  
print ( ""The Kth column of matrix is  :  ""  +  str ( res )  )  "
Write a python program to Convert and print Snake case to Pascal case,"test _ str  =  'go _ east _ or _ west _ india _ is _ the _ best'
res  =  test _ str . replace ( "" _ "" ,  "" "" )  . title (  )  . replace ( "" "" ,  """" ) 
print ( res ) "
Write a python  program to print only even length words in a sentence,"def printEvenLengthWords ( s )  :        
    s  =  s . split ( ' ' )   
    for word in s : 
        if len ( word )  % 2 =  = 0 :  
            print ( word )   "
Write a python function which determines if binary representation of a number is palindrome,"def binaryPallindrome ( num )  :  
     binary  =  bin ( num )  
     binary  =  binary [ 2 :  ]  
     return binary  =  =  binary [  - 1 :  :  - 1 ]  "
Write a program to print inverted star pattern for the given number,"n = 11
for i in range  ( n ,  0 ,   - 1 )  :  
    print (  ( n - i )   *  ' '  +  i  *  ' * ' )  "
Write a python function to determine if a year is leap year or not,"def is _ leap ( year )  : 
    leap  =  False"
Write your logic here,"    
    if year  %  4  =  =  0 : 
        if year  %  400  =  =  0 : 
            leap  =  True
        elif year  %  100  =  =  0 : 
            leap  =  False
        else : 
            leap  =  True
    return leap"
Write a python function to find gcd using eucliean algorithm,"def gcd ( a ,  b )  :   
    if a  =  =  0  :  
        return b  
    return gcd ( b % a ,  a ) "
Write a python program to flatten  a multidimensional list,"my _ list  =   [  [ 10 , 20 , 30 ]  ,  [ 40 , 50 , 60 ]  ,  [ 70 , 80 , 90 ]  ] 
flattened  =   [ x for temp in my _ list for x in temp ] 
print ( flattened ) "
Write Python Program to Print Table of a Given Number,"n = int ( input ( ""Enter the number to print the tables for : "" )  ) 
for i in range ( 1 , 11 )  : 
    print ( n , ""x"" , i , "" = "" , n * i ) "
Write a program to print the powers of 2 using anonymous function,"terms  =  10
result  =  list ( map ( lambda x :  2  *  *  x ,  range ( terms )  )  ) 
print ( ""The total terms are : "" , terms ) 
for i in range ( terms )  : 
   print ( ""2 raised to power"" , i , ""is"" , result [ i ]  ) "
Write a python program to sort alphabetically the words form a string provided by the user,"my _ str  =  ""Hello this Is an Example With cased letters""
words  =   [ word . lower (  )  for word in my _ str . split (  )  ] 
words . sort (  ) 
print ( ""The sorted words are : "" ) 
for word in words : 
   print ( word ) "
Write a python function which accepts or discard only string ending with alphanumeric character,"import re 
regex  =  ' [ a - zA - z0 - 9 ]  $ '
def check ( string )  : 
    if ( re . search ( regex ,  string )  )  :   
        print ( ""Accept"" )           
    else :   
        print ( ""Discard"" )  "
Write a python program to accept a number n and calculate n+nn+nn,"n = int ( input ( ""Enter a number n :  "" )  ) 
temp = str ( n ) 
t1 = temp + temp
t2 = temp + temp + temp
comp = n + int ( t1 )  + int ( t2 ) 
print ( ""The value is : "" , comp ) "
Write a program to accept a number and print inverted star pattern,"n = int ( input ( ""Enter number of rows :  "" )  ) 
for i in range  ( n , 0 ,  - 1 )  : 
    print (  ( n - i )   *  ' '  +  i  *  ' * ' ) "
Write a program to print prime numbers in a range using Sieve of Eratosthenes.,"n = int ( input ( ""Enter upper limit of range :  "" )  ) 
sieve = set ( range ( 2 , n + 1 )  ) 
while sieve : 
    prime = min ( sieve ) 
    print ( prime , end = "" \ t"" ) 
    sieve -  = set ( range ( prime , n + 1 , prime )  ) 
print (  ) "
Write a function to get the Cumulative sum of a list,"def Cumulative ( lists )  :  
    cu _ list  =   [  ]  
    length  =  len ( lists )  
    cu _ list  =   [ sum ( lists [ 0 : x : 1 ]  )  for x in range ( 0 ,  length + 1 )  ]  
    return cu _ list [ 1 :  ] "
Write a python program to convert complex number to polar coordinates,"import cmath  
num  =  cmath . polar ( 1 )   
print ( num )  "
Write a python program to print calendar of a given year,"import calendar 
year  =  2019
print ( calendar . calendar ( year )  )    "
write a python program to print even numbers in a list,"list1   =   [ 2 , 7 , 5 , 64 , 14 ] 
for i in list1 : 
    if i % 2 =  = 0 : 
        print ( i , end = "" "" ) "
write a python program to print positive numbers in a list,"list1  =   [ 2 , 4 ,  - 5 , 3 , 8 ,  - 10 ,  - 11 ] 
for i in list1 : 
    if i > 0 : 
        print ( i , end = "" "" ) "
write a python program to remove empty list from list and print it,"list1  =   [ 2 , 5 , 6 ,  [  ]  , 8 ,  [  ]  ,  [  ]  , 0 ] 
list2 =  [  ] 
for i in list1 : 
    if not isinstance ( i , list )  : 
       list2 . append ( i ) 
print ( list2 ) "
write a python program to print the list having sum of digits,"list1  =   [ 12 ,  67 ,  98 ,  34 ] 
list2 =  [  ] 
for i in list1 : 
    sum  =  0
    for digit in str ( i )  :  
        sum  +  =  int ( digit )  
    list2 . append ( sum ) 
print ( list2 ) "
write a python program to find string in a list and print it,"list1  =   [ 1 ,  2 . 0 ,  'have' ,  'a' ,  'nice' ,  'day' ]  
s  =  'nice'
for i in list1 : 
    if i  =  =  s : 
       print ( f' { s }  is  present in the list' ) "
write a python function to swap two numbers in a list and return the list,"def swapPositions ( list ,  pos1 ,  pos2 )  :  
    list [ pos1 ]  ,  list [ pos2 ]   =  list [ pos2 ]  ,  list [ pos1 ]  
    return list"
Driver function,"List1  =   [ 23 ,  65 ,  19 ,  90 ]  
pos1 ,  pos2   =  1 ,  3
print ( swapPositions ( List1 ,  pos1 - 1 ,  pos2 - 1 )  )  "
write a python function tp print the occurences of i before first j in list,"list1  =   [ 4 ,  5 ,  6 ,  4 ,  1 ,  4 ,  8 ,  5 ,  4 ,  3 ,  4 ,  9 ]  
i ,  j  =  4 ,  8
count = 0
for k in list1 : 
    if k =  = i and k !  = j : 
       count = count + 1
    elif k =  = j : 
         break ;    
print ( count ) "
14 Write a python program to find elements with the same index and print them,"list1  =   [ 3 ,  1 ,  2 ,  5 ,  4 ,  10 ,  6 ,  9 ]  
list2  =   [  ]  
for idx ,  ele in enumerate ( list1 )  :  
    if idx  =  =  ele :  
        list2 . append ( ele )  
print ( ""Filtered elements  :  ""  +  str ( list2 )  ) "
15 Write a python program to check if two list are reverse equal and print boolean value,"list1  =   [ 5 ,  6 ,  7 ,  8 ]  
list2  =   [ 8 ,  7 ,  6 ,  5 ]  
res  =  list1  =  =  list ( reversed ( list2 )  )  
print ( ""Are both list reverse of each other  ?   :  ""  +  str ( res )  ) "
17 Write a python program to check if any string is empty in list and print true or False,"list1  =   [ 'the' ,  'sun' ,  'rises' ,  '' ,  'the' ,  'east' ]  
res  =  any ( len ( ele )   =  =  0 for ele in list1 )  
print ( ""Is any string empty in list ?   :  ""  +  str ( res )  )  "
19 Write a python function to remove i'th character from a string,"def remove ( string ,  i )  :   
    a  =  string [   :  i ]   
    b  =  string [ i  +  1 :   ]  
    return a  +  b "
20 Write a python program to move number to end of string and print them,"test _ str  =  'the2sun4rises5sinthe6east9'
print ( ""The original string is  :  ""  +  str ( test _ str )  ) 
s = ''
r = ''
for i in test _ str : 
    if i . isdigit (  )  : 
      s = s + i
    else : 
      r = r + i 
print ( r + s ) "
21 Write a python program to count the number of spaces in a string and print it,"count = 0
string  =  ""Welcome to schoolofAI""
for i in string : 
    if i =  = "" "" : 
        count = count + 1
print ( f'number of spaces  { count } ' ) "
22 Write a python program to Concatenate all elements of a list into a string and print it,"l  =   [ 'hello' ,  'guys' ,  'have' ,  
   'a' ,  'nice' ,  'day' ]  
l  =  ' ' . join ( l )   
print ( l )  "
23 Write a python program to filter similar case strings and print it,"x =  [  ] 
for i in test _ list : 
    if i . islower (  )  or i . isupper (  )  : 
       print ( x . append ( i )  ) 
print ( x )  "
24 Write a python program to increment Suffix number in string and print it,"test _ str  =  'hello006'
x = ''
r = ''
for i in test _ str : 
    if i . isdigit (  )  and int ( i )  > 0 : 
       x = x + str ( int ( i )  + 1 ) 
    else : 
      r = r + i
print ( r + x )   "
28 Write a python program to compute arithmetic operation from String and print it,"test _ str  =  '5x6 ,  9x10 ,  7x8'
temp  =  test _ str . replace ( ' , ' ,  ' + ' )  . replace ( 'x' ,  ' * ' )  
res  =  eval ( temp )  
print ( ""The computed summation of products  :  ""  +  str ( res )  )  "
29 write a python  program to Extract string till first Non-Alphanumeric character and print it,"test _ str  =  'geeks4g !  !  ! eeks'
s = ''
for i in test _ str : 
    if i . isalnum (  )  =  = False : 
       break
    else : 
      s +  = i  
print ( s )    "
30 write a python program  to extract domain name from Email address and print it,"test _ str  =  'md . shakiluzzaman @ gmail . com'
print ( ""The original string is  :  ""  +  str ( test _ str )  ) 
s = test _ str . split ( ' @ ' ) 
print ( s [ 1 ]  ) "
33 write a python program to delete all occurences of character and print it,"test _ str  =  ""TheSchoolofAI""
rem _ char  =  ""e""
res  =  test _ str . replace ( rem _ char ,  """" )  
print ( ""The string after character deletion  :  ""  +  str ( res )  ) "
35 Write a python program to remove duplicate word from sentence and print it,"str1  =  ""Good bye bye world world""
l = str1 . split ( "" "" ) 
s = list ( set ( l )  ) 
print ( "" "" . join ( i for i in s )  ) "
46 write a python program to test if Values Sum is Greater than Keys Sum in dictionary and print it,"test _ dict  =   { 5 :  3 ,  1 :  3 ,  10 :  4 ,  7 :  3 ,  8 :  1 ,  9 :  5 }  
res  =  sum ( list ( test _ dict . keys (  )  )  )   <  sum ( list ( test _ dict . values (  )  )  )  
print ( ""The required result  :  ""  +  str ( res )  ) "
47 write a program to  sort Dictionary by key-value Summation and print it,"test _ dict  =   { 3 :  5 ,  1 :  3 ,  4 :  6 ,  2 :  7 ,  8 :  1 }  
res  =  sorted ( test _ dict . items (  )  ,  key = lambda sub :  sub [ 0 ]   +  sub [ 1 ]  )  "
converting to dictionary,"res  =   { sub [ 0 ]  :  sub [ 1 ]  for sub in res }  
print ( ""The sorted result  :  ""  +  str ( res )  )  "
55 write a python program to extract  N largest dictionaries keys and print it,"test _ dict  =   { 6  :  2 ,  8 :  9 ,  3 :  9 ,  10 :  8 }  
N  =  4
res  =   [  ]  "
write a python program to extract N largest dictionaries keys  and print it,"for key ,  val in sorted ( test _ dict . items (  )  ,  key  =  lambda x :  x [ 0 ]  ,  reverse  =  True )  [  : N ]  :  
    res . append ( key )  
print ( ""Top N keys are :  ""  +  str ( res )  ) "
57 write a python program  to add prefix to each key name in dictionary and print it,"test _ dict  =   { 'Gfg'  :  6 ,  'is'  :  7 ,  'best'  :  9 ,  'for'  :  8 ,  'geeks'  :  11 }   
temp  =  ""Pro""
d =  {  } 
for key , value in test _ dict . items (  )  : 
    d . update (  { temp + key : value }  ) 
print ( d ) "
62 write a program to concatenate Ranged Values in String list and print it,"test _ list  =   [ ""abGFGcs"" ,  ""cdforef"" ,  ""asalloi"" ]  
i ,  j  =  2 ,  5
r = ''
for z in test _ list : 
    r  +  =  z [ i : j ]  
print ( r ) "
64 write a program  to convert string to dictionary and print it,"str  =  "" Jan  =  January ;  Feb  =  February ;  Mar  =  March""
dictionary  =  dict ( subString . split ( "" = "" )  for subString in str . split ( "" ; "" )  )  
print ( dictionary )  "
67 write a python program to group Strings on Kth character and print it,"test _ list  =   [ ""gfg"" ,  ""is"" ,  ""best"" ,  ""for"" ,  ""geeks"" ]  
print ( ""The original list is  :  ""  +  str ( test _ list )  )  
K  =  2
d =  {  } 
for i in test _ list : 
    d . update (  { i [ K - 1 ]  :  [ i ]  }  ) 
print ( d )  "
91 write a python program to concatenate tuple and print it,"test _ tup1  =   ( 1 ,  3 ,  5 )  
test _ tup2  =   ( 4 ,  6 )  
print ( ""The original tuple 1  :  ""  +  str ( test _ tup1 )  )  
print ( ""The original tuple 2  :  ""  +  str ( test _ tup2 )  )  
c = test _ tup1 + test _ tup2
print ( c ) "
96 write a python program to convert  list of tuples into digits and print it,"lst  =   [  ( 11 ,  100 )  ,   ( 22 ,  200 )  ,   ( 33 ,  300 )  ,   ( 44 ,  400 )  ,   ( 88 ,  800 )  ] 
a = ''
for i in lst : 
    for j in i : 
        a +  = str ( j ) 
print ( list ( set ( a )  )  ) "
98 write a python program to  count the elements in a list until an element is a Tuple  and print it,"li  =   [ 4 ,  5 ,  6 ,  10 ,   ( 1 ,  2 ,  3 )  ,  11 ,  2 ,  4 ] 
count = 0
for i in li : 
    if  isinstance ( i , tuple )  : 
        break
    count = count + 1
print ( f'count of element till tuple is encountered  { count } ' ) "
write a python function to remove last element in the list,"def remove _ last _ element _ list ( list1 )  : 
    list1 . pop (  ) 
    return list1"
"write a function to calculate the apothem of polygon given the number of edges, circumradius","import math
def apothem _ of _ polygon ( number _ of _ edges ,  circumradius )  : 
    return circumradius  *  math . cos ( 180 / number _ of _ edges ) "
"write a function which creates a deck of cards, given the list of suits and values","def create _ deck _ of _ cards ( values :  list ,  suits :  list )  : 
    card _ deck  =   [  ] 
    for i in range ( 52 )  : 
        tup  =   ( values [ i ]  ,  suits [ i ]  ) 
        card _ deck . append ( tup ) 
    return card _ deck"
write a function which takes in a list and a number as an input and returns a list with each list element raised to power of that number,"def powered _ list ( a _ list ,  a _ number )  : 
    a _ list  =   [ math . pow ( a _ number )  for i in a _ list ]   
    return a _ list"
write a function to execute a string containing Python code,"def execute _ python _ code ( a _ string )  : 
    return exec ( a _ string ) "
write a function to multiply all the numbers in a list,"def multiply _ all ( a _ list )  : 
    product  =  1
    for i in a _ list : 
        product  *  =  i
    return product"
"write a function to slice a tuple, given an input tuple and start, stop, step=1","def slice _ a _ tuple ( a _ tuple ,  start ,  stop ,  step = 1 )  : 
    return a _ tuple [ start : stop : step ] "
write a function to check if a list is empty or not,"def list _ is _ empty ( a _ list )  : 
    if not a _ list : 
        return True
    else : 
        return False"
Write a Python function to convert a string list to a normal list type,"import ast
def convert _ string _ to _ list ( str _ lst )  : 
    return ast . literal _ eval ( str _ lst ) "
Write a Python function to extend a list without append.,"def extend _ list _ without _ append ( list1 ,  list2 )  : 
    return list1 . extend ( list2 ) "
Write a Python function to find the median among three given numbers,"def find _ the _ median ( x , y , z )  : 
    list _   =  sorted (  [ x , y , z ]  ) 
    return list _  [ 1 ] "
Write a python function to remove a newline in Python,"def remove _ newline ( string )  : 
    return string . strip (  ) "
Write a python function to convert a string to a list,"def convert _ str _ to _ list ( string )  : 
    return string . split ( ' ' ) "
Write a python function to remove spaces from a given string,"def remove _ spaces _ from _ string ( string )  : 
    return string . replace ( ' ' ,  '' ) "
Write a python function to remove duplicate words from a given string,"def remove _ duplicate _ words ( string )  : 
    string  =  string . strip (  )  . split (  ) 
    return ' ' . join ( set ( string )  ) "
Write a python function to calculate number of days between two dates using datetime module,"from datetime import date
def day _ diff ( date1 ,  date2 )  : 
    diff  =  date1  -  date2
    return diff . days"
Write a python function to get the volume of a sphere with radius as input,"def sphere _ volume ( radius )  : 
    volume  =   4 . 0 / 3 . 0  *  3 . 14  *  radius  *  *  3
    return volume    "
Write a Python function to check whether the input letter is a vowel or not,"def check _ vowel _ or _ not ( letter )  : 
    result  =   str ( letter )  in ""aeiou""
    return result"
Write a Python function to get OS name & platform using os & platform library,"import os
import platform
def get _ info (  )  : 
    return f'OS :   { os . name }  \ n Platform :   { platform . system } '"
Write a Python program to print out the number of CPUs working behind the scenes using multiprocessing library,"import multiprocessing
print ( multiprocessing . cpu _ count (  )  ) "
Write a Python program to calculate the hypotenuse of a right angled triangle using math library,"from math import sqrt
print ( ""Input lengths of shorter triangle sides : "" ) 
def hypotenuse ( side1 ,  side2 )  : 
    hyp  =  sqrt ( side1 *  * 2  +  side2 *  * 2 ) 
    return hyp"
Write a Python function to convert height (in feet and inches) to centimeters,"def height _ converter ( h _ ft ,  h _ inch )  : 
    h _ inch  +  =  h _ ft  *  12
    h _ cm  =  round ( h _ inch  *  2 . 54 ,  1 ) 
    return h _ cm"
Write a Python program to get the copyright information using sys module,"import sys
print ( "" \ nPython Copyright Information"" ) 
print ( sys . copyright ) 
print (  ) "
Write a Python program to find the available built-in modules using sys and textwrap modules,"import sys
import textwrap
module _ name  =  ' ,  ' . join ( sorted ( sys . builtin _ module _ names )  ) 
print ( textwrap . fill ( module _ name ,  width = 70 )  ) "
Write a Python program to get the current username using getpass library,"import getpass
print ( getpass . getuser (  )  ) "
Write a Python program to accept a filename from the user and print the extension of that,"def filename _ extension ( file )  : 
    f _ extns  =  file . split ( "" . "" ) 
    return f""The extension of the file is  :  { repr ( f _ extns [  - 1 ]  )  } """
"Write a Python function that calculates the area of parallelogram and takes in base, height as input","def area _ shape ( base ,  height ,  shape )  : 
    return  { 'triangle' :  0 . 5 * base * height ,  'parallelogram' :  base * height }  [ shape ] "
Write a Python function to reverse a string if it's length is a multiple of 4.,"def reverse _ string ( str1 )  : 
    if len ( str1 )   %  4  =  =  0 : 
       return '' . join ( reversed ( str1 )  ) 
    return str1"
Write a Python function to reverse words in a string.,"def reverse _ string _ words ( text )  : 
    for line in text . split ( ' \ n' )  : 
        return ( ' ' . join ( line . split (  )  [  :  :  - 1 ]  )  ) "
Write a Python program to count and display the vowels of a given text.,"def vowel ( text )  : 
    vowels  =  ""aeiuoAEIOU""
    main _ list  =   [ letter for letter in text if letter in vowels ] 
    return len ( main _ list )  ,  main _ list"
Write a Python program to find the first repeated character in a given string,"def first _ repeated _ char ( str1 )  : 
    for index , c in enumerate ( str1 )  : 
        if str1 [  : index + 1 ]  . count ( c )   >  1 : 
            return c 
    return ""None"""
Write a Python program to find the first repeated word in a given string.,"def first _ repeated _ word ( str1 )  : 
    temp  =  set (  ) 
    for word in str1 . split (  )  : 
        if word in temp : 
            return word
        else : 
            temp . add ( word ) 
    return 'None'"
Write a Python program to remove spaces from a given string,"def remove _ spaces ( str1 )  : 
    str1  =  str1 . replace ( ' ' , '' ) 
    return str1"
Write a Python program to remove spaces from a given string using set,"def remove _ duplicate ( str1 )  : 
    list _ str  =  str1 . split (  ) 
    return """" . join ( set ( list _ str )  ) "
Write a Python function that will accept the base and height of a triangle and compute the area.,"def triangle _ area ( base ,  height )  : 
    area  =  base * height / 2
    return area"
Write a Python program to print the calendar of a given month and year,"import calendar
y  =  int ( input ( ""Input the year  :  "" )  ) 
m  =  int ( input ( ""Input the month  :  "" )  ) 
print ( calendar . month ( y ,  m )  ) "
Write a python function to get the volume of a cube with side as input,"def cube _ volume ( side )  : 
    volume  =  side  *  *  3
    return volume "
Write a python function to get the volume of a prism with base area & height as input,"def prism _ volume ( base _ area ,  height )  : 
    volume  =  base _ area  *  height
    return volume"
Write a python function to get the volume of a cylinder with radius & height as input,"def cylinder _ volume ( radius ,  height )  : 
    volume  =  3 . 14  *   ( radius  *  *  2 )   *  height
    return volume"
Write a python function to get the volume of a cone with radius & vertical height as input,"def cone _ volume ( radius ,  height )  : 
    volume  =  1 / 3  *  3 . 14  *   ( radius  *  *  2 )   *  height
    return volume"
Write a python function to get the volume of a pyramid with base area & vertical height as input,"def pyramid _ volume ( base _ area ,  height )  : 
    volume  =  1 / 3  *  base _ area  *  height
    return volume"
Write a python function to get the surface area of a cube with side as input,"def cube _ surface _ area ( side )  : 
    surface _ area  =  6  *  side  *  *  2
    return surface _ area "
"Write a python function to get the volume of a rectangular prism with side as length, width and height as input","def rec _ prism _ volume ( length ,  width ,  height )  : 
    volume  =  length  *  width  *  height
    return volume "
"Write a python function to get the surface_area of a rectangular prism with side as length, width and height as input","def rec _ prism _ surface _ area ( length ,  width ,  height )  : 
    surface _ area  =  2 *  (  ( length  *  width )   +   ( width  *  height )   +   ( height  *  length )  ) 
    return surface _ area "
"Write a python function to get the surface_area of a prism with base area, base perimeter & height as input","def prism _ surface _ area ( base _ area ,  base _ perimeter ,  height )  : 
    surface _ area  =  2 * base _ area  +   ( base _ perimeter * height ) 
    return surface _ area"
Write a python function to get the surface_area of a cylinder with radius & height as input,"def cylinder _ surface _ area ( radius ,  height )  : 
    surface _ area  =  3 . 14  *   ( radius  *  *  2 )   +   ( 2  *  3 . 14  *  radius  *  height ) 
    return surface _ area"
Write a python function to get the surface_area of a cone with radius & slant height as input,"def cone _ surface _ area ( radius ,  slant _ height )  : 
    surface _ area  =   3 . 14  *   ( radius  *  *  2 )   +  3 . 14  *  radius  *  slant _ height
    return surface _ area"
Write a python function to get the surface_area of a pyramid with base area & vertical height as input,"def pyramid _ surface _ area ( base _ area ,  height )  : 
    surface _ area  =  1 / 3  *  base _ area  *  height
    return surface _ area"
"Write a python function to get the volume of a cuboid with length, breadth & height as input","def cuboid _ volume ( length ,  breadth ,  height )  : 
    volume  =  length  *  breadth  *  height
    return volume"
Write a python function to break a list into chunks of size N use generator,"my _ list  =   [ 'one' ,  'two' ,  'three' ,  'four' ,  'five' ,  'six' ,  'seven' ,  'eight' ]  
def divide _ chunks ( l ,  n )  :  
	 #  looping till length l 
	for i in range ( 0 ,  len ( l )  ,  n )  :  
		yield l [ i : i  +  n ]  "
"Write a python function to generate Lucas Numbers (2, 1, 3, 4, 7, 11, 18...)","def lucas _ numbers ( n )  : 
    first ,  second  =  2 , 1
    for  _  in range ( n )  : 
        first ,  second  =  second ,  first + second
    return first"
"Write a python function to generate Square Numbers (1, 4, 9, 16, 25...)","def square _ numbers ( n )  : 
    for i in range ( n )  : 
        yield i  *  *  2"
"Write a python function to generate Cube Numbers (1, 8, 27, 64, 125...)","def cube _ numbers ( n )  : 
    for i in range ( n )  : 
        yield i  *  *   3"
"Write a python function to generate Triangular Number Series (1, 3, 6, 10, 15...)","def triangle _ numbers ( n )  : 
    for i in range ( n )  : 
        yield int ( i *  ( i + 1 )  / 2 ) "
Write a Python program to append a list to the second list.,"list1  =   [ 1 ,  2 ,  3 ,  0 ] 
list2  =   [ 'Red' ,  'Green' ,  'Black' ] 
final _ list  =  list1  +  list2
print ( final _ list ) "
Write a Python program to create the colon of a tuple.,"from copy import deepcopy
tuplex  =   ( ""HELLO"" ,  5 ,   [  ]  ,  True )  
print ( tuplex ) "
make a copy of a tuple using deepcopy() function,"tuplex _ colon  =  deepcopy ( tuplex ) 
tuplex _ colon [ 2 ]  . append ( 50 ) "
Write a Python program to find the repeated items of a tuple.,"tuplex  =  2 ,  4 ,  5 ,  6 ,  2 ,  3 ,  4 ,  4 ,  7 
print ( tuplex ) 
count  =  tuplex . count ( 4 ) 
print ( count ) "
Write a Python program to slice a tuple  create a tuple,"tuplex  =   ( 2 ,  4 ,  3 ,  5 ,  4 ,  6 ,  7 ,  8 ,  6 ,  1 ) 
 _ slice  =  tuplex [ 3 : 5 ] "
Write a Python program to reverse a tuple.  create a tuple,"x  =   ( ""w3resource"" ) 
y  =  reversed ( x ) "
Write a Python program to convert a list of tuples into a dictionary.  create a list,"l  =   [  ( ""x"" ,  1 )  ,   ( ""x"" ,  2 )  ,   ( ""x"" ,  3 )  ,   ( ""y"" ,  1 )  ,   ( ""y"" ,  2 )  ,   ( ""z"" ,  1 )  ] 
d  =   {  } 
for a ,  b in l : 
    d . setdefault ( a ,   [  ]  )  . append ( b ) 
print  ( d ) "
Write a Python program to check whether an element exists within a tuple.,"tuplex  =   ( ""w"" ,  3 ,  ""r"" ,  ""e"" ,  ""s"" ,  ""o"" ,  ""u"" ,  ""r"" ,  ""c"" ,  ""e"" ) 
print ( ""e"" in tuplex ) "
Write a Python function to convert a list to a tuple.,"def convert _ list _ to _ tuple ( list _ input )  : 
    return tuple ( list _ input ) "
Write a Python function to unzip a list of tuples into individual lists,"def unzip _ list _ of _ tuples ( list _ tuple )  : 
    return list ( zip (  * l )  ) "
Write a Python program to convert a list of tuples into a dictionary.,"l  =   [  ( ""x"" ,  1 )  ,   ( ""x"" ,  2 )  ,   ( ""x"" ,  3 )  ,   ( ""y"" ,  1 )  ,   ( ""y"" ,  2 )  ,   ( ""z"" ,  1 )  ] 
d  =   {  } 
for a ,  b in l : 
    d . setdefault ( a ,   [  ]  )  . append ( b ) 
print ( d ) "
Write a Python function to clear a set.,"def clear _ set ( set _ input )  : 
    setp _ copy  =  set _ input . copy (  ) 
    setp _ copy . clear (  ) 
    return setp _ copy"
Write a Python function that returns the ASCII value of the passed in character.,"def ascii _ value _ of _ character ( char )  : 
    return ord ( char ) "
Write a Python function to create a union of sets.  Union,"def union _ of _ sets ( Set1 ,  Set2 )  : 
    result  =  Set1  |  Set2
    return result"
Write a Python program to add member in a set  A new empty set,"color _ set  =  set (  ) 
color _ set . add ( ""Red"" ) 
print ( color _ set ) "
Write a Python function to add two given lists using map and lambda.,"def add _ two _ lists ( list _ 1 ,  list _ 2 )  : 
    result  =  map ( lambda x ,  y :  x  +  y ,  list _ 1 ,  list _ 2 ) 
    return result"
Write a Python function to find numbers within a given range where every number is divisible by every digit it contains.,"def divisible _ by _ digits ( start _ num ,  end _ num )  : 
    return  [ n for n in range ( start _ num ,  end _ num + 1 )   \ 
                if not any ( map ( lambda x :  int ( x )   =  =  0 or n % int ( x )   !  =  0 ,  str ( n )  )  )  ] "
Write a Python function to find the maximum value in a given heterogeneous list using lambda,"def max _ val ( list _ val )  : 
     max _ val  =  max ( list _ val ,  key  =  lambda i :   ( isinstance ( i ,  int )  ,  i )  )   
     return ( max _ val ) "
Write a Python function that takes a string and returns the concatenated first and last character,"def first _ last ( name )  : 
    return name [ 0 ]   +  name [  - 1 ] "
Write a Python function to return Syslvester's Sequence   a(n) = a(n-1)**2 + a(n-1) + 1,"def syslvester _ seq ( n )  : 
    if n  =  =  1 : 
        return 2
    if n  >  1 : 
        return syslvester _ seq ( n - 1 )  *  * 2  -  syslvester _ seq ( n - 1 )   +  1"
"Write a Python function to return Pell's Sequence   a(n) = 2a(n − 1) + a(n − 2) for n ≥ 2, with a(0) = 0, a(1) = 1.","def pell _ seq ( n )  : 
    if n  >  =  0 : 
        if n  =  =  0 : 
            return 0
        elif n  =  =  1 : 
            return 1
        else : 
            return 2  *  pell _ seq ( n - 1 )   +  pell _ seq ( n - 2 ) "
Write a Python function to return Fermat's Sequence   Fn = 2 ** 2n + 1 for n ≥ 0.,"def fermat _ seq ( n )  : 
    if n  >  =  0 : 
        return 2  *  *   ( 2 *  * n )   +  1"
"Write a Python function to return Padovan's Sequence   P(n) = P(n − 2) + P(n − 3) for n ≥ 3, with P(0) = P(1) = P(2) = 1.","def padovan _ seq ( n )  : 
    if n  >  =  0 : 
        if n in  { 0 , 1 , 2 }  : 
            return 1
        else : 
            return padovan _ seq ( n - 3 )   +  padovan _ seq ( n - 2 ) "
"Write a Python function to return cullen number   Cn = n⋅2n + 1, with n ≥ 0.","def cullen _ number ( n )  : 
    if n  >  =  0 : 
        return n  *  2  *  *  n  +  1"
"Write a Python function to return woodall numbers   n⋅2n − 1, with n ≥ 1.","def woodall _ number ( n )  : 
    if n  >  =  0 : 
        return n  *  2  *  *  n  -  1"
"Write a Python function to return carol numbers   (2n − 1)**2 - 2, with n ≥ 1.","def carol _ number ( n )  : 
    if n  >  =  0 : 
        return  ( 2 *  * n  -  1 )  *  * 2  -  2"
Write a Python function to return star numbers   The nth star number is Sn = 6n(n − 1) + 1.,"def star _ number ( n )  : 
    return 6 * n *  ( n - 1 )  + 1"
"Write a Python function to return stella octangula numbers   Stella octangula numbers: n (2n2 − 1), with n ≥ 0.","def stella _ octangula _ number ( n )  : 
    if n  >  =  0 : 
        return n *  ( 2 *  * n  -  1 ) "
Write a Python function to convert Hours into Seconds,"def hours _ to _ seconds ( hours )  : 
    return hours  *  60  *  60"
Write a Python function which returns the Modulo of the two given numbers.,"def mod ( m ,  n )  : 
    return m  %  n"
"Write a Python function that finds the maximum range of a triangle's third edge, where the side lengths are all integers.","def next _ edge ( side1 ,  side2 )  : 
    return  ( side1 + side2 - 1 ) "
Write a Python function that takes a list and returns the difference between the biggest and smallest numbers.,"def difference _ max _ min ( lst )  : 
	return abs ( min ( lst )   -  max ( lst )  ) "
Write a Python function that returns the number of frames shown in a given number of minutes for a certain FPS.,"def number _ of _ frames ( minutes ,  fps )  : 
	return  ( minutes  *  60 )   *  fps"
Write a Python function that returns True if a string is empty and False otherwise.,"def is _ empty ( s )  : 
    if s  =  =  """" : 
        return True
    else : 
        return False"
Write a Python function that accepts a measurement value in inches and returns the equivalent in feet,"def inches _ to _ feet ( inches )  : 
    if inches  <  12 : 
        return 0
    return inches / 12"
Write a Python function that takes the age and return the age in days.,"def calc _ age ( age )  : 
    calculation  =  age * 365
    return calculation"
write a Python function to count the number of occurrences in list,"def countX ( lst ,  x )  :  
    return lst . count ( x )  
lst  =   [ 8 ,  6 ,  8 ,  10 ,  8 ,  20 ,  10 ,  8 ,  8 ]  
x  =  8
print ( ' {  }  has occurred  {  }  times' . format ( x ,  countX ( lst ,  x )  )  )  "
write a Python function to clone or copy a list using the in-built function list(),"def Cloning ( li1 )  :  
    li _ copy  =  list ( li1 )  
    return li _ copy 
li1  =   [ 4 ,  8 ,  2 ,  10 ,  15 ,  18 ]  
li2  =  Cloning ( li1 )  
print ( ""Original List : "" ,  li1 )  
print ( ""After Cloning : "" ,  li2 )  "
write a Python program to print odd Numbers in a List,"list1  =   [ 10 ,  21 ,  4 ,  45 ,  66 ,  93 ]  
only _ odd  =   [ num for num in list1 if num  %  2  =  =  1 ]  
print ( ""Odd numbers in the list :  "" , only _ odd )  "
write a Python program to print even Numbers in a List,"list1  =   [ 10 ,  21 ,  4 ,  45 ,  66 ,  93 ]   
even _ nos  =   [ num for num in list1 if num  %  2  =  =  0 ]  
print ( ""Even numbers in the list :  "" ,  even _ nos )  "
write a Python program to find N largest element from given list of integers,"l  =   [ 1000 , 298 , 3579 , 100 , 200 ,  - 45 , 900 ]  
n  =  4
l . sort (  )  
print ( l [  - n :  ]  )  "
write a Python program to find the second largest number in given list.,"list1  =   [ 10 ,  20 ,  4 ,  45 ,  99 ] 
list1 . sort (  ) 
print ( ""Second largest element is : "" ,  list1 [  - 2 ]  ) "
write a python function to swap first and last element of a list,"def swapList ( newList )  :  
    newList [ 0 ]  ,  newList [  - 1 ]   =  newList [  - 1 ]  ,  newList [ 0 ]  
    return newList 
newList  =   [ 12 ,  35 ,  9 ,  56 ,  24 ]  
print ( swapList ( newList )  )  "
write a python program for adding two binary numbers,"num1  =  '00001'
num2  =  '10001'
sum  =  bin ( int ( num1 , 2 )   +  int ( num2 , 2 )  ) 
print ( sum ) "
write a python program to print two sets union using operations like in mathematic,"E  =   { 0 ,  2 ,  4 ,  6 ,  8 }  ; 
N  =   { 1 ,  2 ,  3 ,  4 ,  5 }  ; 
print ( ""Union of E and N is"" , E  |  N ) "
write a python program to print two sets intersection using operations like in mathematic,"E  =   { 0 ,  2 ,  4 ,  6 ,  8 }  ; 
N  =   { 1 ,  2 ,  3 ,  4 ,  5 }  ; 
print ( ""Intersection of E and N is"" , E  &  N ) "
write a python program to print two sets differences using operations like in mathematic,"E  =   { 0 ,  2 ,  4 ,  6 ,  8 }  ; 
N  =   { 1 ,  2 ,  3 ,  4 ,  5 }  ; 
print ( ""Difference of E and N is"" , E  -  N ) "
write a python program to print two sets symmetric differences using operations like in mathematic,"E  =   { 0 ,  2 ,  4 ,  6 ,  8 }  ; 
N  =   { 1 ,  2 ,  3 ,  4 ,  5 }  ; 
print ( ""Symmetric difference of E and N is"" , E  ^  N ) "
write a python program to sort alphabetically the words form a string provided by the user,"my _ str  =  ""Hello this Is an Example With cased letters""
words  =   [ word . lower (  )  for word in my _ str . split (  )  ] 
words . sort (  ) 
print ( ""The sorted words are : "" ) 
for word in words : 
   print ( word ) "
write a python function to find the factors of a number,"def print _ factors ( x )  : 
   print ( ""The factors of"" , x , ""are : "" ) 
   for i in range ( 1 ,  x  +  1 )  : 
       if x  %  i  =  =  0 : 
           print ( i ) 
num  =  63
print _ factors ( num ) "
write a python program to print anonymous function to find all the numbers divisible by 13 in the list.,"my _ list  =   [ 12 ,  65 ,  54 ,  39 ,  102 ,  339 ,  221 ,  ] 
result  =  list ( filter ( lambda x :   ( x  %  13  =  =  0 )  ,  my _ list )  ) 
print ( ""Numbers divisible by 13 are"" , result ) "
write a python program to print display the powers of 2 using anonymous function,"terms  =  10
result  =  list ( map ( lambda x :  2  *  *  x ,  range ( terms )  )  ) 
for i in range ( terms )  : 
   print ( ""2 raised to power"" , i , ""is"" , result [ i ]  ) "
write a python program to print sum of natural numbers up to num,"num  =  16
if num  <  0 : 
   print ( ""Enter a positive number"" ) 
else : 
   sum  =  0
   while ( num  >  0 )  : 
       sum  +  =  num
       num  -  =  1
   print ( ""The sum is"" ,  sum ) "
write a python program to convert paragraph string into sentense case,"a  =  'hello .  i am a sentence . '
a  =  ' .  ' . join ( i . capitalize (  )  for i in a . split ( ' .  ' )  ) 
print ( a ) "
write a python program to convert raw string integer inputs to integers,"str _ input  =  ""1 2 3 4 5 6""
int _ input  =  map ( int ,  str _ input . split (  )  ) 
print ( list ( int _ input )  ) "
write a python program to find index of min element,"lst  =   [ 40 ,  10 ,  20 ,  30 ] 
def minIndex ( lst )  : 
    return min ( range ( len ( lst )  )  ,  key = lst .  _  _ getitem _  _  ) 
print ( minIndex ( lst )  ) "
write a python program to find index of max element,"lst  =   [ 40 ,  10 ,  20 ,  30 ] 
def maxIndex ( lst )  : 
    return max ( range ( len ( lst )  )  ,  key = lst .  _  _ getitem _  _  ) 
print ( maxIndex ( lst )  ) "
write a python program to use maxsplit with arbitrary whitespace,"s  =  ""foo    bar   foobar foo""
print ( s . split ( None ,  2 )  ) "
write a python program to loop over dictionaries that share (some) keys,"dctA  =   { 'a' :  1 ,  'b' :  2 ,  'c' :  3 } 
dctB  =   { 'b' :  4 ,  'c' :  3 ,  'd' :  6 } 
for ky in dctA . keys (  )   &  dctB . keys (  )  : 
    print ( ky ) "
write a python program to loop over dictionaries that share (some) keys and values,"dctA  =   { 'a' :  1 ,  'b' :  2 ,  'c' :  3 } 
dctB  =   { 'b' :  4 ,  'c' :  3 ,  'd' :  6 } 
for item in dctA . items (  )   &  dctB . items (  )  : 
    print ( item ) "
write a python program to converts list of mix data to comma separated string,"data  =   [ 2 ,  'hello' ,  3 ,  3 . 4 ] 
print  ( ' , ' . join ( map ( str ,  data )  )  ) "
write a python program to swaps keys and values in a dict," _ dict  =   { ""one"" :  1 ,  ""two"" :  2 } 
assert len (  _ dict )   =  =  len ( set (  _ dict . values (  )  )  ) 
reversed _ dict  =   { v :  k for k ,  v in  _ dict . items (  )  } 
print ( reversed _ dict ) "
write a python program to add whitespaces both sides of a string,"s  =  'The Little Price'
width  =  20
s3  =  s . center ( width ) 
print ( s3 )  "
write a python program to sort a dictionary by its values and print the sorted dictionary with 'key' argument.,"d  =   { 'apple' :  10 ,  'orange' :  20 ,  'banana' :  5 ,  'rotten tomato' :  1 } 
print ( sorted ( d . items (  )  ,  key = lambda x :  x [ 1 ]  )  ) "
write a python program to sort dict keys by value and print the keys,"d  =   { 'apple' :  10 ,  'orange' :  20 ,  'banana' :  5 ,  'rotten tomato' :  1 } 
print ( sorted ( d ,  key = d . get )  ) "
write a python program to call different functions based on condition with same arguments,"def product ( a ,  b )  : 
    return a  *  b
def subtract ( a ,  b )  : 
    return a  -  b
b  =  True
print (  ( product if b else subtract )  ( 1 ,  1 )  ) "
write a python program to do chained comparison,"a  =  10
print ( 1  <  a  <  50 ) 
print ( 10  =  =  a  <  20 ) "
write a python program to merge two dictionary,"x  =   { 'a' :  1 ,  'b'  :  2 } 
y  =   { 'c' :  3 ,  'd'  :  4 } 
z  =   {  *  * x ,   *  * y } 
print ( z ) "
write a Python program to get the Cumulative sum of a list,"list1 =  [ 10 , 20 , 30 , 40 , 50 ] 
new _ list =  [  ]  
j = 0
for i in range ( 0 , len ( list1 )  )  : 
    j +  = list1 [ i ] 
    new _ list . append ( j )  
print ( new _ list )  "
write a Python program to Break a list into chunks of size N in Python,"l  =   [ 1 ,  2 ,  3 ,  4 ,  5 ,  6 ,  7 ,  8 ,  9 ]  
n  =  4
x  =   [ l [ i : i  +  n ]  for i in range ( 0 ,  len ( l )  ,  n )  ]  
print ( x )  "
write a Python function to check Check if a Substring is Present in a Given String,"def check ( string ,  sub _ str )  :  
    if  ( string . find ( sub _ str )   =  =   - 1 )  :  
        print ( ""NO"" )  
    else :  
        print ( ""YES"" )  
string  =  ""geeks for geeks""
sub _ str  = ""geek""
check ( string ,  sub _ str )  "
write a Python function to print even length words in a string,"def printWords ( s )  :  
    s  =  s . split ( ' ' )  
    for word in s :  
        if len ( word )  % 2 =  = 0 :  
            print ( word )  
s  =  ""i am muskan""
printWords ( s )  "
write a Python program to demonstrate working of Swap Binary substring,"test _ str  =  ""geeksforgeeks""
print ( ""The original string is  :  ""  +  test _ str )  
temp  =  str . maketrans ( ""geek"" ,  ""abcd"" )  
test _ str  =  test _ str . translate ( temp )  
print ( ""The string after swap  :  ""  +  test _ str )  "
write a Python function to find sum of all items in a Dictionary,"def returnSum ( dict )  :  
    sum  =  0
    for i in dict . values (  )  :  
        sum  =  sum  +  i 
    return sum
dict  =   { 'a' :  100 ,  'b' : 200 ,  'c' : 300 }  
print ( ""Sum  : "" ,  returnSum ( dict )  )  "
write a Python program to find the minute at which the minute hand and hour hand coincide,"def find _ time ( h1 )  :  
    theta  =  30  *  h1 
    print ( "" ( "" ,  end  =  """" )  
    print (  ( theta  *  2 )  , "" /  11 )  minutes"" )  
h1  =  3
find _ time ( h1 )  "
write a Python function to find area of an Ellipse.,"def findArea ( a ,  b )  :  
    Area  =  3 . 142  *  a  *  b  ;  
    print ( ""Area : "" ,  round ( Area ,  2 )  )  ;  
a  =  5 ;  
b  =  4 ;  
findArea ( a ,  b ) "
write a Python function to find the area of the triangle inscribed within the rectangle which in turn is inscribed in an ellipse,"def area ( a ,  b )  :  
    if  ( a  <  0 or b  <  0 )  :  
        return  - 1
    A  =  a  *  b 
    return A 
a  =  5
b  =  2
print ( area ( a ,  b )  )  "
write a Python function To Calculate Volume OF Cylinder,"pi  =  22 / 7
def volume ( r ,  h )  :  
    vol  =  pi  *  r  *  r  *  h 
    return vol 
r  =  5
h  =  8
print ( ""Volume Of Cylinder  =  "" , volume ( r ,  h )  )  "
write a Python function To Calculate Total Surface Area of Cylinder,"def totalsurfacearea ( r ,  h )  :  
    tsurf _ ar  =   ( 2  *  pi  *  r  *  h )   +   ( 2  *  pi  *  r  *  r )  
    return tsurf _ ar 
r  =  5
h  =  8
print ( ""Total Surface Area Of Cylinder  =  "" , totalsurfacearea ( r , h )  )  "
write a Python function to Calculate Curved Surface Area of Cylinder,"def curvedsurfacearea ( r ,  h )  :  
    cursurf _ ar  =   ( 2  *  pi  *  r  *  h )  
    return cursurf _ ar 
r  =  5
h  =  8
print ( ""Curved Surface Area Of Cylinder  =  "" , curvedsurfacearea ( r , h )  )  "
write a Python function to find the Area of Icosahedron,"def findArea ( a )  :  
    area  =  5  *  3  *  *  0 . 5  *  a  *  a 
    return area 
a  =  5
print ( ""Area :  ""  ,  findArea ( a )  )  "
write a Python function to find the volume of Icosahedron,"def findVolume ( a )  :  
    volume  =   (  ( 5  /  12 )   *  
               ( 3  +  5  *  *  0 . 5 )   *  
               a  *  a  *  a )  
    return volume 
a  =  5
print ( ""Volume :  ""  ,  findVolume ( a )  )  "
write a Python function to find surface area of the Pentagonal Prism,"def surfaceArea ( a ,  b ,  h )  :  
    return 5  *  a  *  b  +  5  *  b  *  h 
a  =  5
b  =  3
h  =  7
print ( ""surface area  = "" ,  surfaceArea ( a ,  b ,  h )  ) "
write a Python function to find volume of the Pentagonal Prism,"def volume ( b ,  h )  :  
    return  ( 5  *  b  *  h )   /  2
a  =  5
b  =  3
h  =  7
print ( ""volume  = "" ,  volume ( b ,  h )  )  "
write a Python function to return the volume of the rectangular right wedge,"def volumeRec ( a ,  b ,  e ,  h )   :  
    return  (  (  ( b  *  h )   /  6 )   *   ( 2  *  a  +  e )  ) 
a  =  2 ;  b  =  5 ;  e  =  5 ;  h  =  6 ;  
print ( ""Volume  =  "" , volumeRec ( a ,  b ,  e ,  h )  ) "
write a Python program to calculate volume of Torus,"r  =  3
R  =  7
pi  =  3 . 14159
Volume  =   ( float )  ( 2  *  pi  *  pi  *  R  *  r  *  r ) 
print ( ""Volume :  "" ,  Volume ) "
write a Python program to calculate surface area of Torus,"r  =  3
R  =  7
Surface  =   ( float )  ( 4  *  pi  *  pi  *  R  *  r ) 
print ( ""Surface :  "" ,  Surface ) "
write a Python program to demonstrate working of Convert List to Single valued Lists in Tuple,"test _ list  =   [ 6 ,  8 ,  4 ,  9 ,  10 ,  2 ]  
print ( f""The original list is  :   { test _ list } "" )  
res  =  tuple (  [ ele ]  for ele in test _ list )   
print ( f""Tuple after conversion  :   { res } "" )  "
write Python program to find key with Maximum value in Dictionary,"Tv  =   { 'BreakingBad' : 100 ,  'GameOfThrones' : 1292 ,  'TMKUC'  :  88 }  
Keymax  =  max ( Tv ,  key = Tv . get )  
print ( Keymax )  "
Python program to get a string which is n (non-negative integer) copies of a given string.,"def larger _ string ( string1 ,  n )  : 
    result  =  """"
    for i in range ( n )  : 
        result  =  result  +  string1
    return result
print ( larger _ string ( 'abc' ,  2 )  ) 
print ( larger _ string ( ' . py' ,  3 )  ) "
Python program to calculate area of a circle,"def area ( a )  : 
    from math import pi
    r  =  float ( input ( ""Input the radius of the circle  :  "" )  ) 
    return ""The area of the circle with radius ""  +  str ( r )   +  "" is :  ""  +  str ( pi  *  a  *  *  2 ) 
print ( area ( 5 )  ) "
Python program that accepts an integer (n) and computes the value of n+nn+nnn.,"def custom ( n )  : 
    a  =  n
    n1  =  int ( "" % s""  %  a ) 
    n2  =  int ( "" % s % s""  %   ( a ,  a )  ) 
    n3  =  int ( "" % s % s % s""  %   ( a ,  a ,  a )  ) 
    return n1  +  n2  +  n3
print ( custom ( 20 )  ) "
Python program to test whether passed letter is vowel or not,"def is _ vowel ( char )  : 
    all _ vowels  =  'aeiou'
    return char in all _ vowels
print ( is _ vowel ( 'c' )  ) 
print ( is _ vowel ( 'e' )  ) "
Python program to add two objects if both objects are of type integer,"def add _ numbers ( a ,  b )  : 
    if not  ( isinstance ( a ,  int )  and isinstance ( b ,  int )  )  : 
        raise TypeError ( ""Inputs must be integers"" ) 
    return a  +  b
print ( add _ numbers ( 10 ,  20 )  ) "
python program to multiply all the numbers in given list,"def multiply ( numbers )  : 
    total  =  1
    for x in numbers : 
        total  *  =  x
    return total
print ( multiply (  ( 8 ,  2 ,  3 ,   - 1 ,  7 )  )  ) "
Python program to reverse the string,"def string _ reverse ( str1 )  : 
    rstr1  =  ''
    index  =  len ( str1 ) 
    while index  >  0 : 
        rstr1  +  =  str1 [ index  -  1 ] 
        index  =  index  -  1
    return rstr1
print ( string _ reverse ( '1234abcd' )  ) "
Python program to calculate the factorial of a number,"def factorial ( n )  : 
    if n  =  =  0 : 
        return 1
    else : 
        return n  *  factorial ( n  -  1 ) 
n  =  45
print ( factorial ( n )  ) "
python program to return unique element from a list,"def unique _ list ( l )  : 
    x1  =   [  ] 
    for a in l : 
        if a not in x1 : 
            x1 . append ( a ) 
    return x1
print ( unique _ list (  [ 1 ,  2 ,  3 ,  3 ,  3 ,  3 ,  4 ,  5 ]  )  ) "
Python program to execute a string containing Python code.,"mycode  =  'print ( ""hello world"" ) '
code  =  """"""
def multiply ( x , y )  : 
    return x * y
print ( 'Multiply of 2 and 3 is :  ' , multiply ( 2 , 3 )  ) 
""""""
exec ( mycode ) 
exec ( code ) "
Python program to access function iside function,"def test ( a )  : 
    def add ( b )  : 
        nonlocal a
        a  +  =  1
        return a  +  b
    return add
func  =  test ( 4 ) 
print ( func ( 4 )  ) "
python program to detect number of local variables defined in a program,"def abc (  )  : 
    x  =  1
    y  =  2
    str1  =  ""w3resource""
    print ( ""Python Exercises"" ) 
print ( abc .  _  _ code _  _  . co _ nlocals ) "
Python function that takes a positive integer and returns the sum of the cube of all the positive integers smaller   than the specified number.,"def sum _ of _ cubes ( n )  : 
    n  -  =  1
    total  =  0
    while n  >  0 : 
        total  +  =  n  *  n  *  n
        n  -  =  1
    return total
print ( ""Sum of cubes :  "" ,  sum _ of _ cubes ( 3 )  ) "
Python function to check whether a number is divisible by another number,"def multiple ( m ,  n )  : 
    return True if m  %  n  =  =  0 else False
print ( multiple ( 20 ,  5 )  ) 
print ( multiple ( 7 ,  2 )  ) "
Write a python function to generate random number between 2 integers,"def random _ number ( a ,  b )  : 
    import random
    return random . randint ( a ,  b ) "
Write a function to count the number of digits in a number,"def count _ digits ( n )  : 
    return len ( str ( n )  ) "
1. write a python program to add two numbers,"num1  =  1 . 5
num2  =  6 . 3
sum  =  num1  +  num2
print ( f'Sum :   { sum } ' ) "
2. write a python program to subtract two numbers,"num1  =  1 . 5
num2  =  6 . 3
sum  =  num1  -  num2
print ( f'Sub :   { sum } ' ) "
3. write a python Program to calculate the square root,"num  =  8 
num _ sqrt  =  num  *  *  0 . 5
print ( 'The square root of  % 0 . 3f is  % 0 . 3f' %  ( num  , num _ sqrt )  ) "
4. write a python function to add two user provided numbers and return the sum,"def add _ two _ numbers ( num1 ,  num2 )  : 
    sum  =  num1  +  num2
    return sum"
"6. Write a python program to swap two variables, Using a temporary variable","x  =  5
y  =  10
temp  =  x
x  =  y
y  =  temp
print ( 'The value of x after swapping :   {  } ' . format ( x )  ) 
print ( 'The value of y after swapping :   {  } ' . format ( y )  ) "
"7. Write a python program to swap two variables, Without Using Temporary Variable","x  =  5
y  =  10
x ,  y  =  y ,  x
print ( ""x  = "" ,  x ) 
print ( ""y  = "" ,  y ) "
8. Python Program to Convert Kilometers to Miles,"kilometers  =  5 . 0
conv _ fac  =  0 . 621371
miles  =  kilometers  *  conv _ fac
print ( ' % 0 . 2f kilometers is equal to  % 0 . 2f miles'  %  ( kilometers , miles )  ) "
9. Python Program to Convert Celsius To Fahrenheit,"celsius  =  37 . 5
fahrenheit  =   ( celsius  *  1 . 8 )   +  32
print ( ' % 0 . 1f degree Celsius is equal to  % 0 . 1f degree Fahrenheit'  %  ( celsius , fahrenheit )  ) "
"10. Python Program to Check if a Number is Positive, Negative or 0","num  =  float ( input ( ""Enter a number :  "" )  ) 
if num  >  0 : 
   print ( ""Positive number"" ) 
elif num  =  =  0 : 
   print ( ""Zero"" ) 
else : 
   print ( ""Negative number"" ) "
11. Python Program to Check if a Number is Odd or Even," 
 num  =  int ( input ( ""Enter a number :  "" )  ) 
if  ( num  %  2 )   =  =  0 : 
   print ( "" { 0 }  is Even"" . format ( num )  ) 
else : 
   print ( "" { 0 }  is Odd"" . format ( num )  ) "
17. Python Program to Display the multiplication Table,"num  =  12
for i in range ( 1 ,  11 )  : 
   print ( num ,  'x' ,  i ,  ' = ' ,  num * i ) "
22.  Python Program to Find the Sum of Natural Numbers,"num  =  16
if num  <  0 : 
   print ( ""Enter a positive number"" ) 
else : 
   sum  =  0
   while ( num  >  0 )  : 
       sum  +  =  num
       num  -  =  1
   print ( ""The sum is"" ,  sum ) "
23. Python Program To Display Powers of 2 Using Anonymous Function,"terms  =  10
result  =  list ( map ( lambda x :  2  *  *  x ,  range ( terms )  )  ) 
print ( ""The total terms are : "" , terms ) 
for i in range ( terms )  : 
   print ( ""2 raised to power"" , i , ""is"" , result [ i ]  ) "
24. Python Program to Find Numbers Divisible by Another Number,"my _ list  =   [ 12 ,  65 ,  54 ,  39 ,  102 ,  339 ,  221 ,  ] 
result  =  list ( filter ( lambda x :   ( x  %  13  =  =  0 )  ,  my _ list )  ) 
print ( ""Numbers divisible by 13 are"" , result ) "
25. Python Program to Convert Decimal to Binary,"dec  =  344
print ( ""The decimal value of"" ,  dec ,  ""is : "" ) 
print ( bin ( dec )  ,  ""in binary . "" ) "
26. Python Program to Convert Decimal to Octal,"dec  =  344
print ( ""The decimal value of"" ,  dec ,  ""is : "" ) 
print ( oct ( dec )  ,  ""in octal . "" ) "
27. Python Program to Convert Decimal to Hexadecimal,"dec  =  344
print ( ""The decimal value of"" ,  dec ,  ""is : "" ) 
print ( hex ( dec )  ,  ""in hexadecimal . "" ) "
28. Python Program to Find ASCII Value of Character,"c  =  'p'
print ( ""The ASCII value of '""  +  c  +  ""' is"" ,  ord ( c )  ) "
31. Write a python function to find HCf or GCD and return the value using euclidian Algorithm,"def compute _ hcf ( x ,  y )  : 
   while ( y )  : 
       x ,  y  =  y ,  x  %  y
   return x"
32. Write a python program to find HCf or GCD using euclidian Algorithm,"def compute _ hcf ( x ,  y )  : 
   while ( y )  : 
       x ,  y  =  y ,  x  %  y
   return x"
36. Python funcction to Find the Factors of a Number,"def print _ factors ( x )  : 
   print ( ""The factors of"" , x , ""are : "" ) 
   for i in range ( 1 ,  x  +  1 )  : 
       if x  %  i  =  =  0 : 
           print ( i ) "
38. Python Program to Find Sum of Natural Numbers Using Recursion,"def recur _ sum ( n )  : 
   if n  <  =  1 : 
       return n
   else : 
       return n  +  recur _ sum ( n - 1 ) 
num  =  16
if num  <  0 : 
   print ( ""Enter a positive number"" ) 
else : 
   print ( ""The sum is"" , recur _ sum ( num )  ) "
43. Python Program to Transpose a Matrix using Nested List Comprehension,"X  =   [  [ 12 , 7 ]  , 
     [ 4  , 5 ]  , 
     [ 3  , 8 ]  ] 
result  =   [  [ X [ j ]  [ i ]  for j in range ( len ( X )  )  ]  for i in range ( len ( X [ 0 ]  )  )  ] 
for r in result : 
   print ( r ) "
47. Python Program to Sort Words in Alphabetic Order,"my _ str  =  ""Hello this Is an Example With cased letters""
words  =   [ word . lower (  )  for word in my _ str . split (  )  ] 
words . sort (  ) 
print ( ""The sorted words are : "" ) 
for word in words : 
   print ( word ) "
50. Python Program to Count the Number of Each Vowel Using a list and a dictionary comprehension,"ip _ str  =  'Hello ,  have you tried our tutorial section yet ? '
ip _ str  =  ip _ str . casefold (  ) 
count  =   { x : sum (  [ 1 for char in ip _ str if char  =  =  x ]  )  for x in 'aeiou' } 
print ( count ) "
"Write a python function to derive slope given 2 points (x1,y1) and (x2, y2)","def get _ slope ( x1 , y1 ,  x2 , y2 )  : 
    if  ( x1  =  =  x2  )  : 
        return ValueError
    return  -  (  ( y2 - y1 )  /  ( x2 - x1 )  ) "
Write a python function to copy the sign bit from one variable to another,"def copysign ( dst ,  src )   : 
    return math . copysign ( dst ,  src ) "
Write a python function to find linear interpolation between two points x and y given a variable t,"def linear _ interpolate ( x ,  y ,  t  )  : 
    if (  t  >  = 1 or t  <  =  0 )  : 
        raise ValueError
    return t * x  +   ( 1 - t )  * y"
Write a python function to raise error when an input is not a string type,"def check _ string ( new _ str )  : 
    return isinstance ( new _ str , str ) "
Write a python function to extract only alphabets from a given string and also exclude spaces,"def extract _ alpha ( my _ string )  : 
    return """" . join (  [  c for c in my _ string if c . isalpha (  )  ]  ) "
Write a python function to extract only alphabets from a given string and also include spaces,"def extract _ alpha ( my _ string )  : 
    return """" . join (  [  c for c in my _ string if  ( c . isalpha (  )  or c . isspace (  )  )  ]  ) "
Write a python function to remove all non-alphabets except space from a given string using re library,"import re
def extract _ not _ alpha ( my _ string )  : 
    return re . sub ( ' [  ^ a - zA - Z \ s ]  + ' ,  """" ,  my _ string ) "
Write a python function to remove all digits and underscores from a Unicode strings,"import re
def extract _ unicode ( my _ string )  : 
    regex  =  re . compile ( r' [  ^  \ W \ d _  ]  + ' ,  re . UNICODE )     
    return regex . findall ( my _ string ) "
Write a python function to generate a random hexadecimal key of length n,"import random
def rand _ run _ name ( n )  : 
    ran  =  random . randrange ( 10 *  * 80 ) 
    myhex  =  "" % 064x""  %  ran
    myhex  =  myhex [  : n ] 
    return myhex"
Write a python function to convert a list of strings to equivalent character array using itertools,"import itertools
def extract _ characters ( input _ list )  : 
    return  [  char _ val for char _ val in itertools . chain . from _ iterable ( input _ list )   ] "
Write a python function to simulate an exception and log the error using logger provided by the user.,"def exception _ simulator ( logger )  : 
    try : 
        raise ValueError
    except ValueError : 
        logger . exception ( ""ValueError occured in the function"" ) "
Write a python function to call a user-input function with default exception handling and re-raise the exception again.,"def default _ exception _ simulator ( user _ func )  : 
    try : 
        if callable ( user _ func )  : 
            user _ func (  ) 
    except : 
        print ( ""An exception occured"" ) 
        raise"
1. write a python program to add two numbers,"num1  =  1 . 5
num2  =  6 . 3
sum  =  num1  +  num2
print ( f'Sum :   { sum } ' ) "
2. write a python program to subtract two numbers,"num1  =  1 . 5
num2  =  6 . 3
sum  =  num1  -  num2
print ( f'Sub :   { sum } ' ) "
3. write a python Program to calculate the square root,"num  =  8 
num _ sqrt  =  num  *  *  0 . 5
print ( 'The square root of  % 0 . 3f is  % 0 . 3f' %  ( num  , num _ sqrt )  ) "
4. write a python function to add two user provided numbers and return the sum,"def add _ two _ numbers ( num1 ,  num2 )  : 
    sum  =  num1  +  num2
    return sum"
"6. Write a python program to swap two variables, Using a temporary variable","x  =  5
y  =  10
temp  =  x
x  =  y
y  =  temp
print ( 'The value of x after swapping :   {  } ' . format ( x )  ) 
print ( 'The value of y after swapping :   {  } ' . format ( y )  ) "
"7. Write a python program to swap two variables, Without Using Temporary Variable","x  =  5
y  =  10
x ,  y  =  y ,  x
print ( ""x  = "" ,  x ) 
print ( ""y  = "" ,  y ) "
8. Python Program to Convert Kilometers to Miles,"kilometers  =  5 . 0
conv _ fac  =  0 . 621371
miles  =  kilometers  *  conv _ fac
print ( ' % 0 . 2f kilometers is equal to  % 0 . 2f miles'  %  ( kilometers , miles )  ) "
9. Python Program to Convert Celsius To Fahrenheit,"celsius  =  37 . 5
fahrenheit  =   ( celsius  *  1 . 8 )   +  32
print ( ' % 0 . 1f degree Celsius is equal to  % 0 . 1f degree Fahrenheit'  %  ( celsius , fahrenheit )  ) "
"10. Python Program to Check if a Number is Positive, Negative or 0","num  =  float ( input ( ""Enter a number :  "" )  ) 
if num  >  0 : 
   print ( ""Positive number"" ) 
elif num  =  =  0 : 
   print ( ""Zero"" ) 
else : 
   print ( ""Negative number"" ) "
11. Python Program to Check if a Number is Odd or Even," 
 num  =  int ( input ( ""Enter a number :  "" )  ) 
if  ( num  %  2 )   =  =  0 : 
   print ( "" { 0 }  is Even"" . format ( num )  ) 
else : 
   print ( "" { 0 }  is Odd"" . format ( num )  ) "
17. Python Program to Display the multiplication Table,"num  =  12
for i in range ( 1 ,  11 )  : 
   print ( num ,  'x' ,  i ,  ' = ' ,  num * i ) "
22.  Python Program to Find the Sum of Natural Numbers,"num  =  16
if num  <  0 : 
   print ( ""Enter a positive number"" ) 
else : 
   sum  =  0
   while ( num  >  0 )  : 
       sum  +  =  num
       num  -  =  1
   print ( ""The sum is"" ,  sum ) "
23. Python Program To Display Powers of 2 Using Anonymous Function,"terms  =  10
result  =  list ( map ( lambda x :  2  *  *  x ,  range ( terms )  )  ) 
print ( ""The total terms are : "" , terms ) 
for i in range ( terms )  : 
   print ( ""2 raised to power"" , i , ""is"" , result [ i ]  ) "
24. Python Program to Find Numbers Divisible by Another Number   Take a list of numbers,"my _ list  =   [ 12 ,  65 ,  54 ,  39 ,  102 ,  339 ,  221 ,  ] "
use anonymous function to filter,"result  =  list ( filter ( lambda x :   ( x  %  13  =  =  0 )  ,  my _ list )  ) 
print ( ""Numbers divisible by 13 are"" , result ) "
25. Python Program to Convert Decimal to Binary,"dec  =  344
print ( ""The decimal value of"" ,  dec ,  ""is : "" ) 
print ( bin ( dec )  ,  ""in binary . "" ) "
26. Python Program to Convert Decimal to Octal,"dec  =  344
print ( ""The decimal value of"" ,  dec ,  ""is : "" ) 
print ( oct ( dec )  ,  ""in octal . "" ) "
27. Python Program to Convert Decimal to Hexadecimal,"dec  =  344
print ( ""The decimal value of"" ,  dec ,  ""is : "" ) 
print ( hex ( dec )  ,  ""in hexadecimal . "" ) "
28. Python Program to Find ASCII Value of Character,"c  =  'p'
print ( ""The ASCII value of '""  +  c  +  ""' is"" ,  ord ( c )  ) "
31. Write a python function to find HCf or GCD and return the value using euclidian Algorithm,"def compute _ hcf ( x ,  y )  : 
   while ( y )  : 
       x ,  y  =  y ,  x  %  y
   return x"
32. Write a python program to find HCf or GCD using euclidian Algorithm,"def compute _ hcf ( x ,  y )  : 
   while ( y )  : 
       x ,  y  =  y ,  x  %  y
   return x"
36. Python funcction to Find the Factors of a Number,"def print _ factors ( x )  : 
   print ( ""The factors of"" , x , ""are : "" ) 
   for i in range ( 1 ,  x  +  1 )  : 
       if x  %  i  =  =  0 : 
           print ( i ) "
38. Python Program to Find Sum of Natural Numbers Using Recursion,"def recur _ sum ( n )  : 
   if n  <  =  1 : 
       return n
   else : 
       return n  +  recur _ sum ( n - 1 ) 
num  =  16
if num  <  0 : 
   print ( ""Enter a positive number"" ) 
else : 
   print ( ""The sum is"" , recur _ sum ( num )  ) "
43. Python Program to Transpose a Matrix using Nested List Comprehension,"X  =   [  [ 12 , 7 ]  , 
     [ 4  , 5 ]  , 
     [ 3  , 8 ]  ] 
result  =   [  [ X [ j ]  [ i ]  for j in range ( len ( X )  )  ]  for i in range ( len ( X [ 0 ]  )  )  ] 
for r in result : 
   print ( r ) "
47. Python Program to Sort Words in Alphabetic Order,"my _ str  =  ""Hello this Is an Example With cased letters""
words  =   [ word . lower (  )  for word in my _ str . split (  )  ] 
words . sort (  ) 
print ( ""The sorted words are : "" ) 
for word in words : 
   print ( word ) "
write a program to calculate exponents of an input,"input  =  9
exponent  =  2
final  =  pow ( input ,  exponent ) 
print ( f'Exponent Value is :  { final } ' ) "
write a program to find and print the remainder of two number,"num1  =  12
num2  =  10
ratio  =  num1  %  num2
print ( f'remainder :  { ratio } ' ) "
"Write a program which will achieve given a Python list, remove all occurrence of an input from the list","list1  =   [ 5 ,  20 ,  15 ,  20 ,  25 ,  50 ,  20 ] 
def removeValue ( sampleList ,  val )  : 
   return  [ value for value in sampleList if value  !  =  val ] 
resList  =  removeValue ( list1 ,  20 ) 
print ( resList ) "
Convert decimal number to octal,"print ( ' % o , '  %   ( 8 )  ) "
Write a recursive function to calculate the sum of numbers from 0 to 10,"def calculateSum ( num )  : 
    if num : 
        return num  +  calculateSum ( num - 1 ) 
    else : 
        return 0
res  =  calculateSum ( 10 ) 
print ( res ) "
Generate a Python list of all the even numbers between two given numbers,"num1  =  4
num2  =  30
myval  =   [ i for i in range ( num1 ,  num2 ,  2 )  ] 
print ( myval ) 
aList  =   [ 4 ,  6 ,  8 ,  24 ,  12 ,  2 ] 
print ( max ( aList )  ) "
"Write a program to extract each digit from an integer, in the reverse order","number  =  7536
while  ( number  >  0 )  : 
    digit  =  number  %  10
    number  =  number  /  /  10
    print ( digit ,  end = "" "" ) "
Generate a random n-dimensional array of float numbers,"import numpy
random _ float _ array  =  numpy . random . rand ( 2 ,  2 ) 
print ( ""2 X 2 random float array in  [ 0 . 0 ,  1 . 0 ]   \ n"" ,  random _ float _ array , "" \ n"" ) "
1. python function to return the nth fibonacci number,"def fib ( n )  : 
   if n  <  =  1 : 
      return n
   else : 
      return  ( fib ( n - 1 )   +  fib ( n - 2 )  ) "
2. python function to return the factorial of a number,"def fact ( n )  : 
   if n  =  =  1 : 
      return n
   else : 
      return n  *  fact ( n - 1 ) "
3. python function to return the squares of a list of numbers,"def sq ( n )  : 
   return  [ i *  * 2 for i in range ( n )  ] "
3. python function to return the squareroot of a list of numbers,"def sqrt ( n )  : 
   return  [ i *  * 0 . 5 for i in range ( n )  ] "
4. python function to add even number from 1st list and odd number from 2nd list,"def even _ odd ( l1 ,  l2 )  : 
    return [ x  +  y for x ,  y in zip ( l1 ,  l2 )  if x  %  2  =  = 0 and y  %  2  !  =  0 ] "
5. python function to strip vowels from a string,"def strip _ vowel _ str ( str )  : 
    vowels  =   [ 'a' ,  'e' ,  'i' ,  'o' ,  'u' ] 
    return """" . join (  [ x for x in str if x not in vowels ]  ) "
6. python ReLu function,"def relu _ like _ activation ( l )  : 
    return [ 0 if x  <  0 else x for x in l ] "
7. python sigmoid function,"def sigmoid _ activation ( l )  : 
    return [ round ( 1 /  ( 1 + math . exp (  - x )  )  , 2 )  for x in l ] "
9. python function to add even mubers in a list,"def add _ even _ num ( l )  : 
    sum  =  reduce ( lambda a ,  b :  a  +  b ,  filter ( lambda a :   ( a  %  2  =  =  0 )  ,  l )  ) 
    return sum"
10. python function to find the area of a circle,"def circle _ area ( r )  : 
    return 22 / 7  *  r *  * 2"
12. python function to return the cubes of a list of numbers,"def cube ( n )  : 
   return  [ i * i * i for i in range ( n )  ] "
14. python function to create adders,"def create _ adders (  )  : 
    adders  =   [  ] 
    for n in range ( 1 ,  4 )  : 
        adders . append ( lambda x ,  y = n :  x  +  y ) 
    return adders
adders  =  create _ adders (  ) "
15. python function for datetime,"from datetime import datetime
datetime . utcnow (  ) 
def log ( msg ,   *  ,  dt  =  datetime . utcnow (  )  )  : 
    print ( f'Message at  { dt }  was  { msg } ' ) "
16. python function for count of address reference,"import ctypes
def ref _ count ( address  :  int )  :   # what is int doing here ?  Annotations
    return ctypes . c _ long . from _ address ( address )  . value"
17. python function to modify a tuple,"def modify _ tuple ( t )  : 
    print ( f'Initial t mem - add  =   { id ( t )  } ' ) 
    t [ 0 ]  . append ( 100 ) 
    print ( f'Final t mem - add  =   { id ( t )  } ' ) "
18. python program to compare strings,"def compare _ using _ equals ( n )  : 
    a  =  'a long string that is not intered'  *  200
    b  =  'a long string that is not intered'  *  200
    for i in range ( n )  : 
        if a  =  =  b : 
            pass"
21. python function for factorial using reduce,"def fact ( n )  : 
    from operator import mul
    from functools import reduce
    return reduce ( mul ,  range ( 1 ,  n + 1 )  ) 
fact ( 10 ) "
23. python function to find the area of a circle,"def square _ area ( x )  : 
    return x  *  *  2"
24. python program for the sum of first n numbers.,"def sum _ n _ num ( n )  : 
    return n  *   ( n  +  1 )  / 2"
32. Python Program to Convert String to Uppercase,"string  =  input ( ""Please Enter your Own String  :  "" ) 
string1  =  string . upper (  ) 
print ( "" \ nOriginal String in Lowercase   =   "" ,  string ) 
print ( ""The Given String in Uppercase  =   "" ,  string1 ) "
34. Python Program to Map two lists into a Dictionary,"keys  =   [ 'name' ,  'age' ,  'job' ] 
values  =   [ 'John' ,  25 ,  'Developer' ] 
myDict  =   { k :  v for k ,  v in zip ( keys ,  values )  } 
print ( ""Dictionary Items   :   "" ,   myDict ) "
35. write a Python function To Calculate Volume OF Cylinder,"def volume ( r ,  h )  :  
    vol  =  22 / 7  *  r  *  r  *  h 
    return vol"
37. python function to find angle between hour hand and minute hand,"def calcAngle ( hh ,  mm )  :  
    hour _ angle  =  0 . 5  *   ( hh  *  60  +  mm )  
    minute _ angle  =  6  *  mm 
    angle  =  abs ( hour _ angle  -  minute _ angle )  
    angle  =  min ( 360  -  angle ,  angle )  
    return angle "
41. python function for finding cosine angle,"def cosine ( angle )  : 
    """""" returns the cosine value for an angle mentioned in radians""""""
    return math . cos ( angle ) "
42. python function for finding the derivative of cosine angle,"def dcosine ( angle )  : 
    """""" returns the cosine value for an angle mentioned in radians""""""
    return  - math . sin ( angle ) "
43. python function for finding sine angle,"def sine ( angle )  : 
    """""" returns the sine value for an angle mentioned in radians""""""
    return math . sin ( angle ) "
44. python function for finding the derivative of sine angle,"def dsine ( angle )  : 
    """""" returns the sine value for an angle mentioned in radians""""""
    return math . cos ( angle ) "
45. python function for finding tangent angle,"def tangent ( angle )  : 
  """""" returns the tangent value for an angle mentioned in radians""""""
  return math . tan ( angle ) "
46. python function for finding the derivative of tangent angle,"def dtangent ( angle )  : 
  """""" returns the tangent value for an angle mentioned in radians""""""
  return 1 /  ( math . cos ( angle )  *  * 2 ) "
47. python function for finding the exponent of a number,"def exp ( x )  : 
  """"""returns e ^ x of a number""""""
  return math . exp ( x ) "
48. python function for finding the derivative of exponent of a number,"def dexp ( x )  : 
    return math . exp ( x ) "
49. python function for finding the logarithmic value of a number,"def log ( x )  : 
  """"""returns the logarithmic value of a number""""""
  return math . log ( x ) "
50. python function for finding the derivative of logarithmic value of a number,"def dlog ( x )  : 
    return 1 / x"
52. python function for finding the hyperbolic tangent value of a number,"def tanh ( x )  : 
  """""" returns the hyperbolic tangent value of a number""""""
  return math . tanh ( x ) "
53. python function for finding the derivative of hyperbolic tangent value of a number,"def dtanh ( x )  : 
  """""" returns the hyperbolic tangent value of a number""""""
  return 1  -   ( math . tanh ( x )  *  * 2 ) "
write a python function to check if a given string is a palindrome,"def isPalindrome ( s )  : 
    return s  =  =  s [  :  :  - 1 ] "
write a function to reverse words of string,"def rev _ sentence ( sentence )  :   
    words  =  sentence . split ( ' ' )   
    reverse _ sentence  =  ' ' . join ( reversed ( words )  )   
    return reverse _ sentence "
write a program to check if a substring is present in a given string,"string  =  ""how are you ? ""
substring  =  ""are""
if  ( string . find ( substring )   =  =   - 1 )  :  
    print ( ""NO"" )  
else :  
    print ( ""YES"" )   "
write a program to print length of a string,"str1  =  ""great way to learn ! ""
print ( len ( str1 )  ) "
write a program to print even length words in a string,"str1  =  ""I am doing fine""
s  =  str1 . split ( ' ' ) 
for word in s :   
    if len ( word )  % 2 =  = 0 :  
        print ( word )   "
write a program to accept the strings which contains all vowels,"str1  =  "" _  _ main _  _ ""
if len ( set ( str1 )  . intersection ( ""AEIOUaeiou"" )  )  >  = 5 :  
  print ( 'accepted' )  
else :  
  print ( ""not accepted"" )  "
write a program to print count of number of unique matching characters in a pair of strings,"str1 = ""ababccd12 @ ""
str2 = ""bb123cca1 @ ""
matched _ chars  =  set ( str1 )   &  set ( str2 )  
print ( ""No .  of matching characters are  :  ""  +  str ( len ( matched _ chars )  )   ) "
write a program to remove all duplicate characters from a string,"str1  =  ""what a great day ! ""
print ( """" . join ( set ( str1 )  )  ) "
write a program to split and join a string with a hyphen delimiter,"str1  =  ""part of speech""
delimiter  =  "" - ""
list _ str  =  str1 . split ( "" "" ) 
new _ str  =  delimiter . join ( list _ str ) 
print ( ""Delimited String is :  ""  +  new _ str ) "
write a program to check if a string is binary or not,"str1 = ""01110011 a""
set1  =  set ( str1 ) 
if set1  =  =   { '0' , '1' }  or set1  =  =   { '0' }  or set1  =  =   { '1' }  : 
    print ( ""string is binary"" ) 
else : 
    print ( ""string is not binary"" ) "
write a function to remove i-th indexed character in a given string,"def remove _ char ( string ,  i )  : 
    str1  =  string [   :  i ]   
    str2  =  string [ i  +  1 :   ]  
    return str1  +  str2 "
write a function to rotate string left by a given length,"def rotate _ left ( input , d )  :   
    Lfirst  =  input [ 0  :  d ]   
    Lsecond  =  input [ d  :  ]   
    return  ( Lsecond  +  Lfirst )  "
write a function to rotate string right by a given length,"def rotate _ right ( input , d )  :   
    Rfirst  =  input [ 0  :  len ( input )  - d ]   
    Rsecond  =  input [ len ( input )  - d  :   ]   
    return  ( Rsecond  +  Rfirst )  "
write a function to replace all occurances of a substring in a string,"str1  =  ""Hello !  It is a Good thing""
substr1  =  ""Good""
substr2  =  ""bad""
replaced _ str  =  str1 . replace ( substr1 ,  substr2 ) 
print ( ""String after replace  : ""  +  str ( replaced _ str )  ) "
write a function that return space count,"def count _ space ( str1 )  :  
    count  =  0
    for i in range ( 0 ,  len ( str1 )  )  :  
        if str1 [ i ]   =  =  "" "" :  
            count  +  =  1
    return count"
write a program to break up string into individual elements,"str1  =  ""whatisthis""
split _ string  =  list ( '' . join ( str1 )  )  
print ( split _ string )  "
write a function to check if a lower case letter exists in a given string,"def check _ lower ( str1 )  : 
    for char in str1 :  
        k  =  char . islower (  )    
        if k  =  =  True :  
            return True 
    if ( k  !  =  1 )  :  
        return False"
write a function to check if a upper case letter exists in a given string,"def check _ upper ( str1 )  : 
    for char in str1 :  
        k  =  char . isupper (  )    
        if k  =  =  True :  
            return True
    if ( k  !  =  1 )  :  
        return False"
write a program to print number of words in a string,"str1  =  'It is a glorious day'
res  =  len ( str1 . split (  )  )  
print ( ""The number of words in string are  :  ""  +  str ( res )  )  "
write a program to print number of characters in a string,"str1  =  'It is a glorious day'
res  =  len ( str1 )  
print ( ""The number of characters in string are  :  "" ,  str ( res )  )  "
write a funtion that accepts two lists of equal length and converts them into a dictioinary,"def list _ to _ dict ( list1 ,  list2 )  : 
  return dict ( zip ( list1 ,  list2 )  ) "
write a python function that accepts a list of dictionaries and sorts it by a specified key,"def sort _ dict _ list ( dict _ list ,  sort _ key )  : 
  dict _ list . sort ( key = lambda item :  item . get ( sort _ key )  ) "
write a program to print the longest key in a dictioinary,"dict _ 1  =   { ""key1"" :  10 ,  ""keeeey2"" :  2 ,  ""ky3"" :  30 } 
max _ key = ''
for key in dict _ 1 : 
  if len ( key )  > len ( max _ key )  : 
    max _ key = key
print ( max _ key ) "
write a python function that accepts a dictionary that has unique values and returns its inversion,"def invert _ dict ( input _ dict )  : 
  my _ inverted _ dict  =   { value :  key for key ,  value in input _ dict . items (  )  } 
  return my _ inverted _ dict"
write a function to return the mean difference in the length of keys and values of dictionary comprising of strings only.,"def mean _ key _ val _ diff ( input _ dict )  : 
  sum _ diff  =  0
  for key ,  val in input _ dict . items (  )  : 
    sum _ diff  +  =  abs ( len ( val )   -  len ( key )  ) 
  return sum _ diff / len ( input _ dict ) "
write a python function to combine three lists of equal lengths into a nested dictionary and return it,"def lists _ to _ dict ( test _ list1 ,  test _ list2 ,  test _ list3 )  : 
  res  =   [  { a :   { b :  c }  }  for  ( a ,  b ,  c )  in zip ( test _ list1 ,  test _ list2 ,  test _ list3 )  ]  
  return res"
write a function that converts a integer dictionary into a list of tuples.,"def dict _ to _ tuple ( input _ dict )  : 
  out _ tuple  =   [  ( a ,  b )  for a , b in input _ dict . items (  )  ] 
  return out _ tuple"
write a Python program that sorts dictionary keys to a list using their values and prints this list.,"test _ dict  =   { 'Geeks'  :  2 ,  'for'  :  1 ,  'CS'  :  3 }  
res  =  list ( sum ( sorted ( test _ dict . items (  )  ,  key  =  lambda x : x [ 1 ]  )  ,   (  )  )  )  
print ( ""List after conversion from dictionary  :  "" ,  res ) "
write a program to convert date to timestamp and print the result,"import time 
import datetime 
str1  =  ""20 / 01 / 2020""
element  =  datetime . datetime . strptime ( str1 , "" % d /  % m /  % Y"" )  
timestamp  =  datetime . datetime . timestamp ( element )  
print ( timestamp ) "
write a python program to add an element to a list. Print the final list.,"lst  =   [ ""Jon"" ,  ""Kelly"" ,  ""Jessa"" ] 
lst . append ( ""Scott"" ) 
print ( lst ) "
write a python function to append all elements of one list to another,"def extend _ list ( list1 ,  list2 )  : 
    list1  =   [ 1 ,  2 ] 
    list2  =   [ 3 ,  4 ] 
    return list1 . extend ( list2 ) "
Write a  python program to print the last element of a list,"list1  =   [ 'p' , 'r' , 'o' , 'b' , 'e' ] 
print ( list1 [  - 1 ]  ) "
Write a python program to print positive Numbers in a List,"list1  =   [ 11 ,   - 21 ,  0 ,  45 ,  66 ,   - 93 ]  
for num in list1 :  
    if num  >  =  0 :  
       print ( num ,  end  =  "" "" )  "
Write a python function to multiply all values in a list,"def multiplyList ( myList )   : 
    result  =  1
    for x in myList : 
         result  =  result  *  x 
    return result "
Write a python program to print the smallest number in a list,"list1  =   [ 10 ,  20 ,  1 ,  45 ,  99 ]  
print ( ""Smallest element is : "" ,  min ( list1 )  )  "
Write a python program to remove even numbers from a list. Print the final list.,"list1  =   [ 11 ,  5 ,  17 ,  18 ,  23 ,  50 ]   
for ele in list1 :  
    if ele  %  2  =  =  0 :  
        list1 . remove ( ele )  
print ( ""New list after removing all even numbers :  "" ,  list1 )  "
Write a python program to print a list after removing elements from index 1 to 4,"list1  =   [ 11 ,  5 ,  17 ,  18 ,  23 ,  50 ]   
del list1 [ 1 : 5 ]  
print (  * list1 ) "
Write a python program to remove 11 and 18 from a list. Print the final list.,"list1  =   [ 11 ,  5 ,  17 ,  18 ,  23 ,  50 ]   
unwanted _ num  =   { 11 ,  18 }  
list1  =   [ ele for ele in list1 if ele not in unwanted _ num ]  
print ( ""New list after removing unwanted numbers :  "" ,  list1 ) "
Write a python function to get the Cumulative sum of a list,"def Cumulative ( lists )  :  
    cu _ list  =   [  ]  
    length  =  len ( lists )  
    cu _ list  =   [ sum ( lists [ 0 : x : 1 ]  )  for x in range ( 0 ,  length + 1 )  ]  
    return cu _ list [ 1 :  ] "
"Write a python program to print if a string ""hello"" is present in the list"," 
l  =   [ 1 ,  2 . 0 ,  'hello' , 'have' ,  'a' ,  'good' ,  'day' ]  
s  =  'hello'  
if s in l :  
    print ( f' { s }  is present in the list' )  
else :  
    print ( f' { s }  is not present in the list' )  "
Write a python fuction to create an empty list,"def emptylist (  )  : 
   return list (  )   "
Write a python program to print a list with all elements as 5 and of length 10,"list1  =   [ 5 ]   *  10
print ( list1 ) "
Write a python program to reverse a list and print it.,"def Reverse ( lst )  :  
    return  [ ele for ele in reversed ( lst )  ]  
lst  =   [ 10 ,  11 ,  12 ,  13 ,  14 ,  15 ]  
print ( Reverse ( lst )  )  "
Write a python program to print odd numbers in a List,"list1  =   [ 10 ,  21 ,  4 ,  45 ,  66 ,  93 ,  11 ]   
odd _ nos  =  list ( filter ( lambda x :   ( x  %  2  !  =  0 )  ,  list1 )  )  
print ( ""Odd numbers in the list :  "" ,  odd _ nos ) "
Write a python program to print negative Numbers in a List,"list1  =   [ 11 ,   - 21 ,  0 ,  45 ,  66 ,   - 93 ]  
for num in list1 :  
    if num  <  0 :  
       print ( num ,  end  =  "" "" ) "
Write a python program for print all elements with digit 7.,"test _ list  =   [ 56 ,  72 ,  875 ,  9 ,  173 ]   
K  =  7
res  =   [ ele for ele in test _ list if str ( K )  in str ( ele )  ]  
print ( ""Elements with digit K  :  ""  +  str ( res )  ) "
Write a python program to find the sum and average of the list. Print the sum and average,"L  =   [ 4 ,  5 ,  1 ,  2 ,  9 ,  7 ,  10 ,  8 ]  
count  =  0
for i in L :  
    count  +  =  i 
avg  =  count / len ( L )  
print ( ""sum  =  "" ,  count )  
print ( ""average  =  "" ,  avg ) "
Write a python program to Remove Tuples of Length 1 from a list of tuples. Print the final list.,"test _ list  =   [  ( 4 ,  5 )  ,   ( 4 ,   )  ,   ( 8 ,  6 ,  7 )  ,   ( 1 ,   )  ,   ( 3 ,  4 ,  6 ,  7 )  ]  
K  =  1
res  =   [ ele for ele in test _ list if len ( ele )   !  =  K ]  
print ( ""Filtered list  :  ""  +  str ( res )  ) "
Write a python program to print a list of tuples from given list having number and its cube in each tuple,"list1  =   [ 1 ,  2 ,  5 ,  6 ]  
res  =   [  ( val ,  pow ( val ,  3 )  )  for val in list1 ]  
print ( res )  "
Write a python program to print the combination of tuples in list of tuples,"test _ list  =   [  (  [ 1 ,  2 ,  3 ]  ,  'gfg' )  ,   (  [ 5 ,  4 ,  3 ]  ,  'cs' )  ] 
res  =   [   ( tup1 ,  tup2 )  for i ,  tup2 in test _ list for tup1 in i  ]  
print ( ""The list tuple combination  :  ""  +  str ( res )  )  "
Write a python program to swap tuple elements in list of tuples. Print the output.,"test _ list  =   [  ( 3 ,  4 )  ,   ( 6 ,  5 )  ,   ( 7 ,  8 )  ]  
res  =   [  ( sub [ 1 ]  ,  sub [ 0 ]  )  for sub in test _ list ]  
print ( ""The swapped tuple list is  :  ""  +  str ( res )  )  "
write a python program to multiply three numbers,"num1  =  1 . 5
num2  =  6 . 3
num3  =   - 2 . 3
product  =  num1  *  num2  *  num3
print ( f'Product :   { product } ' ) "
"write a python function that when given two numbers, would divide the first number by second number and return the quotient and remainder","def divide _ first _ number _ by _ second ( num1 ,  num2 )  : 
    return  ( num1  /  /  num2 )  ,   ( num1  %  num2 ) "
write a python function to return the largest and smallest numbers in the given list and return None if the list is empty,"def largest _ and _ smallest ( list _ of _ nums )  : 
    if list _ of _ nums : 
        return max ( list _ of _ nums )  ,  min ( list _ of _ nums ) 
    else : 
        return"
write a python function that would read the given input file path and print its contents,"def read _ and _ print _ file ( filepath )  : 
    with open ( filepath ,  ""r"" )  as infile : 
        print (  infile . read (  )   ) "
write a python program that would print the first n positive integers using a for loop,"n  =  62
for num in range ( n )  : 
    print ( num ) "
write a python function that returns the input list sorted in ascending order,"def sort _ ascending ( list _ to _ be _ sorted )  : 
    return sorted ( list _ to _ be _ sorted ) "
write a python function that returns the input list sorted in descending order,"def sort _ descending ( list _ to _ be _ sorted )  : 
    return sorted ( list _ to _ be _ sorted ,  reverse = True ) "
"write a python function that would return the sum of first n natural numbers, where n is the input","def sum _ first _ n ( n )  : 
    return  (  n  *   ( n + 1 )   )   /  /  2"
"write a recursive python function that would return the sum of first n natural numbers, where n is the input","def sum _ first _ n _ recursive ( n )  : 
    if n  =  =  0 : 
        return 0
    return sum _ first _ n _ recursive ( n - 1 )   +  n"
"write a python function that would filter a list of dictionaries where a specified key equals given value, list_of_dictionaries, key and value are inputs to this function.","def filter _ with _ key _ value ( list _ of _ dicts ,  key ,  value )  : 
    return list (  filter (  lambda x :  x . get ( key )   =  =  value ,  list _ of _ dicts  )   ) "
write a python function that returns the square of a given input number,"def square ( x )  : 
    return x *  * 2"
write a python program that asks for user input and prints the given input,"a  =  input ( ""User Input"" ) 
print ( a ) "
write a python function shifts and scales all numbers in the given list by the given mean and standard deviation,"def shift _ and _ scale ( list _ of _ nums ,  mean ,  std )  : 
    return  [   ( x - mean )   /  std for x in list _ of _ nums  ] "
write a python function that takes in a list of sequences and zips each corresponding element from the list into a tuple and returns the list of such tuples,"def zip _  ( list _ of _ seq )  : 
    return list ( zip (  * list _ of _ seq )  ) "
write python program that would merge two dictionaries by adding the second one into the first,"a  =   { ""a"" :  1 ,  ""b"" :  3 } 
b  =   { ""c"" :  1 ,  ""d"" :  3 } 
a . update ( b ) "
write a python function that would reverse the given string,"def reverse _ string ( str _ to _ be _ reversed )  : 
    return str _ to _ be _ reversed [  :  :  - 1 ] "
"write a python program that would print ""Hello World""","print ( ""Hello World"" ) "
write a python program that would swap variable values,"a  =  10
b  =  15
a ,  b  =  b ,  a"
write a python program that iterates over a dictionary and prints its keys and values,"a  =   { ""a"" : 1 ,  ""b"" : 2 ,  ""c"" : 3 ,  ""d"" : 4 } 
for k ,  v in a . items (  )  : 
    print ( k ,  v ) "
write a python function that would print the ASCII value of a given character,"def print _ ascii ( char )  : 
    print ( ord ( char )  ) "
write a python function that takes in two numbers and returns their HCF,"def hcf ( num1 ,  num2 )  : 
    smaller  =  num1 if num1  <  num2 else num2
    for i in range ( 1 ,  smaller + 1 )  : 
        if  ( num1  %  i  =  =  0 )  and  ( num2  %  i  =  =  0 )  : 
            hcf  =  i
    return hcf"
write a python function that takes in two numbers and returns their LCM,"def lcm ( num1 ,  num2 )  : 
    bigger  =  num1 if num1  >  num2 else num2
    while True : 
        if  ( bigger  %  num1  =  =  0 )  and  ( bigger  %  num2  =  =  0 )  : 
            break
        bigger  +  =  1
    return bigger"
"write a recursive python function to calculate sum of natural numbers upto n, where n is an argument","def recursive _ sum ( n )  : 
    if n  <  =  1 : 
        return n
    else : 
        return n  +  recursive _ sum ( n - 1 ) "
write a python function that deletes the last element of a list and returns the list and the deleted element,"def delete _ last _ element ( list _ to _ be _ processed )  : 
    deleted _ element  =  list _ to _ be _ processed . pop (  ) 
    return list _ to _ be _ processed ,  deleted _ element"
write a python function that takes in a list and returns a list containing the squares of the elements of the input list,"def square _ list _ elements ( list _ to _ be _ squared )  : 
    return list (  map ( lambda x :  x *  * 2 ,  list _ to _ be _ squared )   ) "
write a python program that prints out natural numbers less than or equal to the given number using a while loop,"input _ num  =  27
while input _ num : 
    print ( input _ num ) 
    input _ num  -  =  1"
"write a python function that takes two numbers. The function divides the first number by the second and returns the answer. The function returns None, if the second number is 0","def divide ( num1 ,  num2 )  : 
    if num2  =  =  0 : 
        return
    else : 
        return num1  /  num2"
write a python program uses else with for loop,"seq  =  ""abcde""
for k in seq : 
    if k  =  =  ""f"" : 
        break
else : 
    print ( ""f Not Found ! "" ) "
Write a function to return the mean of numbers in a list,"def cal _ mean ( num _ list : list )  -  > float : 
    if num _ list : 
        return sum ( num _ list )  / len ( num _ list ) 
    else : 
        return None"
Write a function to return the area of a equilateral triangle,"def cal _ eq _ triangle _ area ( a : float )  -  > float : 
    if a : 
        return  ( 3 *  *  ( 1 / 2 )  )  *  ( a *  * 2 )  / 4
    else : 
        return None"
Write a function to return the area of a right angle triangle,"def cal _ rt _ triangle _ area ( base : float , height : float )  -  > float : 
    if base and height : 
        return  ( base * height )  / 2
    else : 
        return None"
Write a function to return the cartisian distance of a point from origin,"def cal _ dist _ from _ orign ( x : float , y : float )  -  > float : 
    return  ( x *  * 2 + y *  * 2 )  *  *  ( 1 / 2 ) "
Write a function to return the cartisian distance between two points,"def cal _ cart _ distance ( x1 : float , y1 : float , x2 : float , y2 : float )  -  > float : 
    return  (  ( x1 - x2 )  *  * 2 +  ( y1 - y2 )  *  * 2 )  *  *  ( 1 / 2 ) "
Write a function to return the type roots of a quadratic equation ax**2 + bx + c = 0,"def root _ type ( a : float , b : float , c : float )  : 
    if b *  * 2 - 4 * a * c  >  =  0 : 
        return 'real'
    else : 
        return 'imaginary'"
Write a function to return the sum of the roots of a quadratic equation ax**2 + bx + c = 0,"def sum _ of _ roots ( a : float , c : float )  : 
    if a : 
        return c / a
    else : 
        return None"
Write a function to return the product of the roots of a quadratic equation ax**2 + bx + c = 0,"def prod _ of _ roots ( a : float , b : float )  : 
    if a : 
        return  - b / a
    else : 
        return None"
Write a function to return the profit or loss based on cost price and selling price,"def find _ profit _ or _ loss ( cp , sp )  : 
    if cp  >  sp : 
        return 'loss' ,  cp - sp
    elif cp  <  sp : 
        return 'profit' ,  sp - cp
    else : 
        return 'no profit or loss' ,  0"
Write a function to return the area of a rectangle,"def cal _ area _ rect ( length ,  breadth )  : 
    return length * breadth"
Write a function to return the area of a square,"def cal _ area _ square ( side )  : 
    return side *  * 2"
Write a function to return the area of a rhombus with diagonals q1 and q2,"def cal _ area _ rhombus ( q1 , q2 )  : 
    return  ( q1 * q2 )  / 2"
Write a function to return the area of a trapezium with base a base b and height h between parallel sides,"def cal _ area _ trapezium ( a , b , h )  : 
    return h *  ( a + b )  / 2"
Write a function to return the area of a circle of raidus r,"def cal _ area _ circle ( r )  : 
    pi  =  3 . 14
    return pi * r *  * 2"
Write a function to return the circumference of a circle,"def cal _ circumference ( r )  : 
    pi  =  3 . 14
    return 2 * pi * r"
Write a function to return the perimeter of a rectangle,"def cal _ perimeter _ rect ( length ,  bredth )  : 
    return 2 *  ( length + bredth ) "
Write a function to return the perimeter of a triangle,"def cal _ perimeter _ triangle ( s1 , s2 , s3 )  : 
    return s1 + s2 + s3"
Write a function to return the perimeter of a square,"def cal _ perimeter _ square ( side )  : 
    return 4 * side"
Write a function to return the perimeter of an equilateral triangle,"def cal _ perimeter _ eq _ triangle ( a )  : 
    return 3 * a"
Write a function to return the perimeter of a isoscales triangle,"def cal _ perimeter _ iso _ triangle ( s1 , s2 )  : 
    return 2 * s1 + s2"
Write a function to return the area of an ellipse,"def cal _ area _ ellipse ( minor ,  major )  : 
    pi  =  3 . 14
    return pi *  ( minor * major ) "
Write a function to return the lateral surface area of a cylinder,"def cal _ cylinder _ lat _ surf _ area ( height , radius )  : 
    pi = 3 . 14
    return 2 * pi * radius * height"
Write a function to return the curved surface area of a cone,"def cal _ cone _ curved _ surf _ area ( slant _ height , radius )  : 
    pi = 3 . 14
    return pi * radius * slant _ height"
Write a function to return the total surface area of a cube of side a,"def cal _ surface _ area _ cube ( a )  : 
    return 6 *  ( a *  * 2 ) "
"Write a function to return the total surface area of a cuboid of length l, bredth b and height h","def cal _ surface _ area _ cuboid ( l , b , h )  : 
    return 2 *  ( l * b + b * h + h * l ) "
Write a function to return the surface area of a sphere,"def cal _ area _ sphere ( radius )  : 
    pi  =  3 . 14
    return 4 * pi *  ( radius *  * 2 ) "
Write a function to return the surface area of a hemi-sphere,"def cal _ area _ hemisphere ( radius )  : 
    pi  =  3 . 14
    return 2 * pi *  ( radius *  * 2 ) "
Write a function to return the total surface area of a cylinder,"def cal _ cylinder _ surf _ area ( height , radius )  : 
    pi = 3 . 14
    return 2 * pi * radius *  * 2 *  + 2 * pi * radius * height"
Write a function to return the lateral surface area of a cone,"def cal _ cone _ lateral _ surf _ area ( height , radius )  : 
    pi = 3 . 14
    return pi * radius *  (  (  ( height *  * 2 )  +  ( radius *  * 2 )  )  *  *  ( 1 / 2 )  ) "
Write a function to return the volume of a cylinder,"def cal _ cylinder _ volume ( height ,  radius )  : 
    pi = 3 . 14
    return pi *  ( radius *  * 2 )  * height"
Write a function to return the volume of a cone,"def cal _ cone _ volume ( height , radius )  : 
    pi = 3 . 14
    return pi *  ( radius *  * 2 )  * height / 3"
Write a function to return the volume of a hemi sphere,"def cal _ hemisphere _ volume ( radius : float )  -  > float : 
    pi = 3 . 14
    return  ( 2 / 3 )  * pi *  ( radius *  * 3 ) "
Write a function to return the volume of a sphere,"def cal _ sphere _ volume ( radius : float )  -  > float : 
    pi = 3 . 14
    return  ( 4 / 3 )  * pi *  ( radius *  * 3 ) "
Write a function to return the volume of a cuboid,"def cal _ cuboid _ volume ( length : float ,  breadth : float ,  height : float )  -  > float : 
    return length * breadth * height"
Write a function to return the volume of a cube,"def cal _ cube _ volume ( side : float )  -  > float : 
    return side *  * 3"
Write a function to return the speed of moving object based of distance travelled in given time,"def cal _ speed ( distance : float , time : float )  -  > float : 
    return distance / time"
Write a function to return the distance covered by a moving object based on speend and given time,"def cal _ distance ( time : float , speed : float )  -  > float : 
    return time * speed"
Write a function to return the time taken by a given of moving object based of distance travelled in given time,"def cal _ time ( distance : float , speed : float )  -  > float : 
    return distance / speed"
Write a function to return the torque when a force f is applied at angle thea and distance for axis of rotation to place force applied is r,"def cal _ torque ( force : float , theta : float , r : float )  -  > float : 
    import math
    return force * r * math . sin ( theta ) "
Write a function to return the angualr veolcity based on augualr distance travelled in radian unit and time taken,"def cal _ angular _ velocity ( angular _ dist : float , time : float )  -  > float : 
    return angular _ dist / time"
Write a function to calculate the focal length of a lense buy the distance of object and distance of image from lense,"def cal _ focal _ length _ of _ lense ( u : float , v : float )  -  > float : 
    return  ( u * v )  /  ( u + v ) "
Write a function to calculate the gravitational force between two objects of mass m1 and m2 and distance of r between them,"def cal _ gforce ( mass1 : float , mass2 : float ,  distance : float )  -  > float : 
    g  =  6 . 674 *  ( 10 )  *  *  (  - 11 ) 
    return  ( g * mass1 * mass2 )  /  ( distance *  * 2 ) "
Write a function to calculate the current in the curcit where the resistance is R and voltage is V,"def cal _ current ( resistance : float ,  voltage : float )  -  > float : 
    return voltage / resistance"
Write a function to calculate the total capacitance of capacitors in parallel in a given list,"def cal _ total _ cap _ in _ parallel ( cap _ list : list )  -  > float : 
    return sum ( cap _ list ) "
Write a function to calculate the total resistance of resistances in parallel in a given list,"def cal _ total _ res _ in _ parallel ( res _ list : list )  -  > float : 
    return sum (  [ 1 / r for r in res _ list ]  ) "
Write a function to calculate the total resistance of resistances in series in a given list,"def cal _ total _ res _ in _ series ( res _ list : list )  -  > float : 
    return sum ( res _ list ) "
Write a function to calculate the moment of inertia of a ring of mass M and radius R,"def cal _ mi _ ring ( mass : float , radius : float )  -  > float : 
    return mass *  ( radius *  * 2 ) "
Write a function to calculate the moment of inertia of a sphere of mass M and radius R,"def cal _ mi _ sphere ( mass : float , radius : float )  -  > float : 
    return  ( 7 / 5 )  * mass *  ( radius *  * 2 ) "
"Write a function to calculate the pressure P of ideal gas based on ideal gas equation - Volume V, and Temperatue T are given","def find _ pressure _ of _ ideal _ gas ( volume : float ,  temp : float , n : float )  -  > float : 
    r  =  8 . 3145  #  gas constant R
    return  ( n * r * temp )  / volume"
Write a function to calculate the volume V of ideal gas based on ideal gas equation Pressure P and Tempreature T given,"def find _ volume _ of _ ideal _ gas ( pressure : float ,  temp : float , n : float )  -  > float : 
    r  =  8 . 3145  #  gas constant R
    return  ( n * r * temp )  / pressure"
Write a function to calculate the Temprature T of ideal gas based on ideal gas equation Pressure P and Volume V given,"def find _ temp _ of _ ideal _ gas ( pressure : float ,  volume : float , n : float )  -  > float : 
    r  =  8 . 3145  #  gas constant R
    return  ( pressure * volume )  / n * r"
"Write a function to calculate the velocity of an object with initial velocity u, time t and acceleration a","def cal _ final _ velocity ( initial _ velocity : float , accelration : float , time : float )  -  > float : 
    return initial _ velocity  +  accelration * time"
"Write a function to calculate the displacement of an object with initial velocity u, time t and acceleration a","def cal _ displacement ( initial _ velocity : float , accelration : float , time : float )  -  > float : 
    return initial _ velocity * time  +   . 5 * accelration *  ( time )  *  * 2"
Write a function to calculate amount of radioactive element left based on initial amount and half life,"def cal _ half _ life ( initail _ quatity : float ,  time _ elapsed : float ,  half _ life : float )  -  > float : 
    return initail _ quatity *  (  ( 1 / 2 )  *  *  ( time _ elapsed / half _ life )  ) "
Write a function to calculate the new selling price based on discount percentage,"def cal _ sp _ after _ discount ( sp : float , discount : float )  -  > float : 
    return sp *  ( 1  -  discount / 100 ) "
"Write a function to calculate the simple interest for principal p, rate r and time in years y","def get _ si ( p : float ,  r : float ,  t : float )  -  > float : 
    return  ( p * r * t )  / 100"
"Write a function to calculate the compound interest for principal p, rate r and time in years y","def get _ ci ( p : float ,  r : float ,  t : float ,  n : float )  -  > float : 
    return round ( p *  (  ( 1 +  ( r /  ( n * 100 )  )  )  *  *  ( n * t )  )   -  p , 2 ) "
Write a function to calculate the energy released by converting mass m in kg to energy,"def cal _ energy _ by _ mass ( mass : float )  -  > float : 
    c  =  300000
    return mass  *   ( c *  * 2 ) "
Write a function to calculate the kinetic energy of an object of mass m and velocity v,"def cal _ ke ( mass : float , velocity : float )  -  > float : 
    return  ( mass *  ( velocity )  *  * 2 )  / 2"
Write a function to calculate the potential energy of an object of mass m at height h,"def cal _ pe ( mass : float , height : float )  -  > float : 
    g  =  9 . 8
    return  ( mass * g * height ) "
Write a function to calculate the electrostatic force between two charged particles with charge q1 and q2 at a distance d apart,"def cal _ electrostatic _ force ( q1 , q2 , d )  : 
    k  =  9 *  ( 10 *  * 9 ) 
    return  ( k * q1 * q2 )  /  ( d *  * 2 ) "
Write a function to calculate the density given mass and volume,"def cal _ density ( mass , volume )  : 
    return  ( mass / volume ) "
Write a function to convert the temprature celsius 'c' to fahrenheit 'f' or fahrenheit to celsius,"def temp _ converter ( temp , temp _ given _ in  =  'f' )  : "
Return the converted temprature,"    
    if temp _ given _ in . lower (  )   =  =  'f' :   #  Convert to C
        return  ( temp  -  32 )   *   ( 5 / 9 ) 
    else :   #  Convert to F
        return  ( temp  *  9 / 5 )   +  32"
Write a function to find power of number using recursion,"def power ( N ,  P )  : 
    if  ( P  =  =  0 or P  =  =  1 )  : 
        return N
    else : 
        return  ( N  *  power ( N ,  P  -  1 )  ) 
print ( power ( 5 ,  2 )  ) "
Write a function to find time for a given angle.,"def calcAngle ( hh ,  mm )  : 
    hour _ angle  =  0 . 5  *   ( hh  *  60  +  mm ) 
    minute _ angle  =  6  *  mm
    angle  =  abs ( hour _ angle  -  minute _ angle ) 
    angle  =  min ( 360  -  angle ,  angle ) 
    return angle"
write a python program to read and print contents of a file,"filepath  =  'data . txt'
with open ( filepath ,  'r' )  as file : 
    data  =  file . read (  ) 
    print ( f'Data :   { data } ' ) "
write a python function to add numbers in a list,"def add ( list )  : 
    sum  =  0
    for i in range ( 0 ,  len ( list )  )  : 
        sum  +  =  list [ i ] 
    return sum"
write a function to check if a number is positive or not,"def check ( num )  : 
    if num  >  0 : 
        return True
    return False"
write a python function to that performs as ReLU,"def ReLU ( num )  : 
    if num  >  0 : 
        return num
    return 0"
write a boolean python function to check if a given string matches a given pattern,"import re
def match ( pattern ,  string )  : 
    if re . match ( pattern ,  string )  : 
        return True
    return False"
write a python program to swap two numbers and print them,"num1  =  2
num2  =  4
num1 ,  num2  =  num2 ,  num1
print ( num1 ,  num2 ) "
write a python function to get the maximum element in a list,"def max ( list )  : 
    return max ( list ) "
write a python program list comprehension to make a list of size n of random integers in ranges a and b,"import random
n  =  10
a  =  1
b  =  100
rand  =   [ random . randint ( a ,  b )  for i in range ( n )  ] 
print ( f'list  :   { rand } ' ) "
write a python program to tokenise a string into words and print them,"string  =  'the sun is shining'
words  =  string . split (  ) 
print ( words ) "
write a python program to print the command line arguements given to a file,"import sys
args  =  sys . argv 
print ( args ) "
write a python program to print a string in lowercase,"string  =  'SFG' ; 
print ( string . lower (  )  ) "
write a python function to return the absolute difference between two numbers,"def abs _ diff ( num1 ,  num2 )  : 
    return abs ( num1  -  num2 ) "
write a program to terminate the program execution,"import sys
sys . exit (  ) "
write a python program to print the datatype of a variable,"x  =  2
print ( type ( x )  ) "
write a python program to sort a list in descending order and print it,"list  =   [ 3 ,  1 ,  5 ,  6 ] 
result  =  sorted ( list ,  reverse  =  True ) 
print ( result ) "
write a python function to check if a string contains a vowel or not,"def check _ vowel ( string )  : 
    vowels  =   [ 'a' ,  'e' ,  'i' ,  'o' ,  'u' ] 
    for vowel in vowels : 
        if vowel in string : 
            return True
    return False"
write a python program to filter a list and return words with alphabets only and print it,"list  =   [ 'sadgas1' ,  'sasg . as3 $ ' ,  'hsd' ,  ' ^ atg' ,  'gaf' ] 
result  =   [ item for item in list if item . isalpha (  )  ] 
print ( result ) "
write a python program to trim whitespace characters from a string and print it,"string  =  ' asdga  \ t \ r'
print ( string . strip (  )  ) "
write a python program to typecast an integer to string and print it,"x  =  2
y  =  str ( x ) 
print ( y ) "
write a python program to round up a number and print it,"import math
x  =  2 . 3
y  =  math . ceil ( x ) 
print ( y ) "
write a function to accept a simple iterable and print the elements,"def print _ iter ( iter )  : 
    for item in iter : 
        print ( item ) "
write a function to reverse a string,"def reverse _ string ( string )  : 
    return string [  :  :  - 1 ] "
write a function to check if a string is a palindrome or not,"def reverse _ string ( string )  : 
    return string [  :  :  - 1 ] 
def ispalin ( string )  : 
    if string  =  =  reverse _ string ( string )  : 
        return True
    return False"
write a python function to return the largest value in a dictionary,"def dic _ largest ( dic )  : 
    return max ( dic . values (  )  ) "
write a python print to return the first n fibonacci numbers,"def fibonacci ( n )  : 
    a ,  b  =  0 ,  1
    print ( a ) 
    print ( b ) 
    for i in range ( n  -  2 )  : 
        print ( a  +  b ) 
        a ,  b  =  b ,  a  +  b"
write a python function to return the number of whitespace separated tokens,"def tokenise ( string )  : 
    return len ( string . split (  )  ) "
write a python function to return the cube of a number,"def cube ( num ) 
    return num  *  num  *  num"
write a python function to return the area of a circle with given radius,"import math
def area _ circle ( radius )  : 
    return math . pi  *  radius  *  radius"
"write a python function to calculate simple interest given principal , rate and time","def simpleIntereset ( principal ,  rate ,  time )  : 
    return principal  *  rate  *  time  /  100"
write a function to calculate the frequency of a number in a list,"def frequency ( list ,  num )  : 
    count  =  0
    for item in list : 
        if item  =  =  num : 
            count  =  count  +  1
    return count"
write a program to print ascii code of a character,"x  =  '5'
print ( ord ( x )  ) "
write a function to calculate factorial of number,"def factorial ( num )  : 
    if num  =  =  0 : 
        return 1
    return num  *  factorial ( num  -  1 ) "
write a function to print if a number is even or odd,"def oddeven ( num )  : 
    if num  %  2  =  =  0 : 
        print ( 'even' ) 
    else : 
        print ( 'odd' ) "
write a python program to accept username and print hello along with the username,"name  =  input (  ) 
print ( 'Hello '  +  name ) "
write a python program to print current datetime,"from datetime import datetime
now  =  datetime . now (  ) 
print ( now ) "
write a python function to convert from Celcius to fahrenhiet,"def cel _ to _ fah ( celcius )  : 
    return 9  *  celcius  /  5  +  32"
write a python program to delete an element from a list,"list  =   [ 'a' ,  'bc' ,  'd' ,  'e' ] 
element  =  'bc'
list . remove ( element ) "
Write a program to print the union of two sets,"Set1  =   { ""1"" , ""2"" , ""3"" } 
Set2  =   { ""a"" , ""b"" , ""c"" } 
Set  =  Set1 . union ( Set2 ) 
print ( Set ) "
write a program to remove common element between two sets,"s1  =   { ""apple"" ,  ""banana"" ,  ""cherry"" } 
s2  =   { ""google"" ,  ""microsoft"" ,  ""apple"" } 
s1 . difference _ update ( s2 ) 
print ( s1 ) "
write a program to find a given character in a string and print its position,"a =  ""Hello World""
x =  a . find ( ""r"" ) 
print ( x ) "
write a program to print logrithmic values of any number,"import math
x  =  100
base  =  5
print ( math . log ( x , base )  ) "
write a program to join two lists,"list1  =   [ ""a"" ,  ""b"" ,  ""c"" ] 
list2  =   [ 1 ,  2 ,  3 ] 
list3  =  list1  +  list2
print ( list3 ) "
write a program to print difference in between today and given date,"import datetime
dd  =  int ( input ( ""date :  "" )  ) 
mm  =  int ( input ( ""month :  "" )  ) 
yy  =  int ( input ( ""year :  "" )  ) 
a  =  datetime . date ( yy , mm , dd ) 
x  =  date . today (  ) 
print ( x - a ) "
write a function to replace vowels with a specific character K,"def replacewith _ K ( test _ str ,  K )  :  
    vowels  =  'AEIOUaeiou'
    for ele in vowels :  
        test _ str  =  test _ str . replace ( ele ,  K )  
    return test _ str"
write a python function to return mean of a list of numbers,"def mean ( list )  : 
    sum  =  0
    for num in list : 
        sum  +  =  num
    return sum  /  len ( list ) "
write a python class named complex with constructor accepting real and imaginary parts,"class Complex : 
    def  _  _ init _  _  ( self ,  realpart ,  imagpart )  : 
        self . r  =  realpart
        self . i  =  imagpart"
write a program to print sum of all even numbers in a list,"ls  =   [ 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 10 , 22 ] 
sum  =  0
for i in ls : 
    if i  %  2  =  =  0 : 
        sum  +  =  i
print ( sum ) "
write a program to write a string in a file,"filename  =  'file1 . txt'
string  =  ""programming in  \ n python""
f1  =  open ( filename , 'w' ) 
f1 . write ( string ) 
f1 . close (  ) "
write a function to check weather a number is prime or not,"def isprime ( num )  : 
    for i in range ( 2 ,  num )  : 
        if num  %  i  =  =  0 : 
            return False
    return True"
write a function to check if a number is perfect square or not,"import math
def checksquare ( num )  : 
    x  =  int ( math . sqrt ( num )  ) 
    if x  *  x  =  =  num : 
        return True
    return False"
write a program to print the sine value of a number,"import math
num  =  3
print ( math . sin ( num )  ) "
write a function to calculate the hypotenuse of a triangle give base and height,"import math
def calc _ hypotenuse ( base ,  height )  : 
    return math . sqrt ( base  *  base  +  height  *  height ) "
write a function to calculate the sum of digits of a number,"def sum _ of _ digits ( num )  : 
    sum  =  0
    while ( num  >  0 )  : 
        sum  +  =  num  %  10
        num  =  num  /  /  10
    return sum"
write a python function to calculate the dot product of two lists,"def dot ( l1 ,  l2 )  : 
    return sum ( x * y for x , y in zip ( l1 ,  l2 )  ) "
write a function to accept input as feet and inches into centimeters,"def height _ into _ cms ( feet ,  inches )  : 
    ininches  =  feet  *  12  +  inches
    return ininches  *  2 . 54"
write a python function to convert temperature from celcius to kelvin,"def cel _ to _ kel ( celcius )  : 
    return celcius  +  273"
write a python program to find difference between elements of two lists and print it,"l1  =   [ 1 ,  2 ,  3 ,  4 ] 
l2  =   [ 5 ,  8 ,  7 ,  0 ] 
res  =   [  ] 
for i in range ( len ( l1 )  )  : 
    res . append ( l1 [ i ]   -  l2 [ i ]  ) 
print ( res ) "
write a function to calculate BMI given height in meters and weights in kgs,"def bmi ( height ,  weight )  : 
    return weight  /   ( height  *  height ) "
write a function to calculate area of a triangle given height and base,"def area _ triangle ( base ,  height )  : 
    return 0 . 5  *  base  *  height"
write a program to print the bitwise OR of two numbers,"num1  =  5
num2  =  10
print ( num1  |  num2 ) "
write a function to convert weight from kgs to pounds,"def kgs _ to _ pounds ( weight _ kg )  : 
    return weight _ kg  *  2 . 2"
write a function to convert miles to kilometers,"def miles _ to _ kms ( dist )  : 
    return dist  *  1 . 609"
write a function to calculate speed given distance covered and time taken,"def calspeed ( dist ,  time )  : 
    return dist  /  time"
write a python function to return count of number of vowels in a sentence,"def count _ vowels ( sentence )  : 
   count  =  0
   for letter in sentence : 
      if letter in ""aeiouAEIOU"" : 
         count  +  =  1
   return count"
write a python function to check if a given string is a palindrome,"def is _ palindrome ( string )  : 
   return string  =  =  string [  :  :  - 1 ] "
write a program to print the nth fibonacci number,"n1  =  1
n2  =  1
n  =  5
for  _  in range ( n )  : 
   n1 ,  n2  =  n2 ,  n1  +  n2
print ( n2 ) "
write a function to return the square of first N numbers,"def get _ squares ( n )  : 
   return  [ i * i for i in range ( n )  ] "
write a python function to return only even numbers in a list,"def filter _ even ( nums )  : 
   return list ( filter ( lambda num :  num  %  2  =  =  0 ,  nums )  ) "
write a python function to return only odd numbers in a list,"def filter _ odd ( nums )  : 
   return list ( filter ( lambda num :  num  %  2  =  =  1 ,  nums )  ) "
write a python program to calculate the sum of numbers using reduce and print it,"from functools import reduce
nums  =   [ 1 ,  2 ,  3 ,  4 ,  5 ,  10 ,  20 ,  30 ,  40 ,  50 ] 
total _ sum  =  reduce ( lambda a ,  b :  a  +  b ,  nums ) 
print ( f'Sum :   { total _ sum } ' ) "
write a python program to print unique numbers in a list,"numbers  =   [ 1 ,  2 ,  2 ,  3 ,  4 ,  4 ,  5 ,  6 ] 
unique  =  set ( numbers ) 
print ( f'Unique numbers :   { list ( unique )  } ' ) "
write a python function to repeat a given string n times,"def repeat _ string ( string ,  frequency )  : 
   return string  *  frequency"
write a program to capitalize the first letter of every word in a string and print it,"string  =  'The quick brown fox jumps over the lazy dog'
print ( string . title (  )  ) "
write a function that merges two dictionaries,"def merge _ dictionaries ( dict1 ,  dict2 )  : 
   return  {  *  * dict1 ,   *  * dict2 } "
write a program to merge two lists into a dictionary,"keys  =   [ 1 ,  2 ,  3 ] 
values  =   [ 'aye' ,  'bee' ,  'sea' ] 
dictionary  =  dict ( zip ( keys ,  values )  ) "
write a python function that inverts the key and values in a dict and returns it,"def invert _ dict ( dictionary )  : 
   inverted _ dict  =   { value :  key for key ,  value in dictionary . items (  )  } 
   return inverted _ dict"
write a python program to print the difference in days between two dates,"from datetime import date
date1  =  date ( 2020 ,  10 ,  25 ) 
date2  =  date ( 2020 ,  12 ,  25 ) 
print ( f'Difference between dates :   {  ( date2  -  date1 )  . days } ' ) "
write a python function that returns the weighted average of numbers,"def get _ weighted _ average ( numbers ,  weightage )  : 
   return sum ( x  *  y for x ,  y in zip ( numbers ,  weightage )  )   /  sum ( weightage ) "
write a python program to print all prime numbers in a given interval,"lower  =  900
upper  =  1000
for num in range ( lower ,  upper  +  1 )  : 
   if num  >  1 : 
      for i in range ( 2 ,  num )  : 
         if  ( num  %  i )   =  =  0 : 
               break
      else : 
         print ( num ) "
write a python function to return words in a sentence in sorted order,"def get _ sorted _ words ( sentence )  : 
   words  =   [ word for word in sentence . split (  )  ] 
   words . sort (  ) 
   return words"
write a python function to return the nth fibonacci number,"def fib ( n )  : 
   if n  <  =  1 : 
      return n
   else : 
      return  ( fib ( n - 1 )   +  fib ( n - 2 )  ) "
write a python function to return the sum of first n numbers,"def sum _ of _ nums ( n )  : 
   if n  <  =  1 : 
      return n
   else : 
      return n  +  sum _ of _ nums ( n - 1 ) "
write a python function to return the factorial of a number,"def fact ( n )  : 
   if n  =  =  1 : 
      return n
   else : 
      return n  *  fact ( n - 1 ) "
write a python program to print the factors of a number,"num  =  320
for i in range ( 1 ,  num  +  1 )  : 
   if num  %  i  =  =  0 : 
      print ( i ) "
write a python function that returns the gcd of two numbers,"def gcd ( x ,  y )  : 
   if x  >  y : 
      smaller  =  y
   else : 
      smaller  =  x
   for i in range ( 1 ,  smaller  +  1 )  : 
      if (  ( x  %  i  =  =  0 )  and  ( y  %  i  =  =  0 )  )  : 
         gcd  =  i
   return gcd"
write a python program to print the ASCII value of a character,"character  =  'x'
print ( f'The ASCII value of  { character }  is  { ord ( character )  } ' ) "
write a python program to print the character of an ASCII value,"value  =  65
print ( f'The ASCII value  { value }  is of the character  { chr ( value )  } ' ) "
write a python function to print the binary value of a decimal number,"def print _ binary ( dec )  : 
   print ( bin ( dec )  ) "
write a python function to print the octal value of a decimal number,"def print _ octal ( dec )  : 
   print ( oct ( dec )  ) "
write a python function to print the hexadecimal value of a decimal number,"def print _ hexadecimal ( dec )  : 
   print ( hex ( dec )  ) "
write a python program that prints the sum of natural numbers up to a given number,"num  =  16
sum  =  0
while  ( num  >  0 )  : 
   sum  +  =  num
   num  -  =  1
print ( f'The sum is  { sum } ' ) "
write a python function to return the number of lines in a file,"def count _ lines ( filename )  : 
   with open ( filename ,  'r' )  as f : 
      contents  =  f . read (  )  . split ( ' \ n' ) 
      return len ( contents ) "
write a program to print the current date and time,"from datetime import datetime
now  =  datetime . now (  ) 
print ( now ) "
write a python program to extract the file name and extension of a file,"import os
filename ,  extension  =  os . path . splitext ( ' / path / to / some / file . ext' ) "
write a python program to merge two lists,"odd  =   [ 1 ,  3 ,  5 ,  7 ,  9 ] 
even  =   [ 2 ,  4 ,  6 ,  8 ,  10 ] 
odd . extend ( even ) "
write a python program to print a random vowel,"import random
vowels  =   [ 'a' ,  'e' ,  'i' ,  'o' ,  'u' ] 
print ( random . choice ( vowels )  ) "
write a python program to flip a coin 100 times and print number of heads and tails,"import random
heads  =  0
tails  =  0
for i in range ( 100 )  : 
   if ( random . choice (  [ True ,  False ]  )  )  : 
      heads  +  =  1
   else : 
      tails  +  =  1
print ( f' { heads }  heads ,   { tails }  tails' ) "
write a python program to print common elements in two lists,"list _ a  =   [ 1 ,  2 ,  3 ,  4 ,  5 ,  6 ,  7 ] 
list _ b  =   [ 2 ,  4 ,  6 ,  8 ,  10 ] 
print ( f'Common elements :   {  set ( list _ a )  . intersection ( set ( list _ b )  )   } ' ) "
write a python program to print squares of numbers until 20,"for i in range ( 20 )  : 
   print ( i * i ) "
write a python function to print a given string n times,"def printn ( string ,  n )  : 
   print ( string  *  n ) "
write a python program that creates a dictionary whose keys are numbers from 1 to 10 and values are squares of the key,"square _ dict  =   {  } 
for i in range ( 1 ,  11 )  : 
   square _ dict [ i ]   =  i * i"
write a python class called Person that has a name property,"class Person : 
   def  _  _ init _  _  ( self ,  name )  : 
      self . name  =  name"
write a python function that takes two strings as a parameter and prints the shorter one,"def print _ shorter ( str1 ,  str2 )  : 
   if  ( len ( str1 )   >  len ( str2 )  )  : 
      print ( str2 ) 
   else : 
      print ( str1 ) "
write a program to compute the count of each word in a sentence and print it,"word _ freq  =   {  } 
line  =  'how many how words does this many have'
for word in line . split (  )  : 
   word _ freq [ word ]   =  word _ freq . get ( word ,  0 )   +  1
print ( word _ freq ) "
write a python function that squares every number in a list using a list comprehension and returns the result,"def square _ numbers ( nums )  : 
   return  [ i * i for i in nums ] "
write a python program that converts a binary number to decimal and prints it,"binary _ num  =  '1010101'
decimal _ num  =  int ( binary _ num ,  2 ) 
print ( decimal _ num ) "
write a python program that converts a octal number to octal and prints it,"octal _ num  =  '17'
decimal _ num  =  int ( octal _ num ,  8 ) 
print ( decimal _ num ) "
write a python program that converts a hexadecimal number to hexadecimal and prints it,"hexadecimal _ num  =  'FF'
decimal _ num  =  int ( hexadecimal _ num ,  16 ) 
print ( decimal _ num ) "
write a python program that alphabetically sorts the words in a sentence and prints it,"sentence  =  'the quick brown fox jumps'
sorted _ words  =  sentence . split ( ' ' ) 
sorted _ words . sort (  ) 
print ( ' ' . join ( sorted _ words )  ) "
write a python program that prints the area of a circle,"import math
radius  =  5
print ( f'Area :   { math . pi  *  radius  *  radius } ' ) "
write a python function that returns a dictionary with the area and perimeter of a rectangle,"def calculate _ rect _ properties ( width ,  height )  : 
   return  { 
      'perimeter' :  2  *   ( width  +  height )  , 
      'area' :  width  *  height
    } "
write a python program that removes all blank spaces in a sentence and prints it,"sentence  =  'the quick brown fox'
print ( sentence . replace ( ' ' ,  '' )  ) "
write a python program that prints all characters at even indexes in a sentence,"sentence  =  'the quick brown fox'
print ( sentence [  :  : 2 ]  ) "
write a python program that prints every third character in a sentence,"sentence  =  'the quick brown fox'
print ( sentence [  :  : 3 ]  ) "
write a program to remove odd numbers from a list using list comprehensions,"nums  =   [ 1 ,  2 ,  3 ,  4 ,  5 ,  6 ,  7 ,  8 ] 
no _ odd _ nums  =   [ i for i in nums if i  %  2  =  =  0 ] "
write a program to remove even numbers from a list using list comprehensions,"nums  =   [ 1 ,  2 ,  3 ,  4 ,  5 ,  6 ,  7 ,  8 ] 
no _ even _ nums  =   [ i for i in nums if i  %  2  =  =  1 ] "
write a program to print 5 random numbers between 100 and 200,"import random
print ( random . sample ( range ( 100 ,  200 )  ,  5 )  ) "
write a program to print 5 even random numbers between 10 and 100,"import random
print ( random . sample (  [ i for i in range ( 10 ,  100 )  if i % 2  =  =  0 ]  ,  5 )  ) "
write a program to print 5 odd random numbers between 100 and 200,"import random
print ( random . sample (  [ i for i in range ( 10 ,  100 )  if i % 2  =  =  1 ]  ,  5 )  ) "
write a program to print 5 random numbers divisible by 4 between 100 and 200,"import random
print ( random . sample (  [ i for i in range ( 10 ,  100 )  if i % 4  =  =  0 ]  ,  5 )  ) "
write a program that adds corresponding elements in two lists and prints a new list,"list1  =   [ 1 ,  2 ,  3 ,  4 ,  5 ] 
list2  =   [ 5 ,  4 ,  3 ,  2 ,  1 ] 
sum _ list  =   [ a + b for  ( a , b )  in zip ( list1 ,  list2 )  ] 
print ( sum _ list ) "
write a program that subtracts corresponding elements in two lists and prints a new list,"list1  =   [ 1 ,  2 ,  3 ,  4 ,  5 ] 
list2  =   [ 5 ,  4 ,  3 ,  2 ,  1 ] 
diff _ list  =   [ a - b for  ( a , b )  in zip ( list1 ,  list2 )  ] 
print ( diff _ list ) "
write a program that multiplies corresponding elements in two lists and prints a new list,"list1  =   [ 1 ,  2 ,  3 ,  4 ,  5 ] 
list2  =   [ 5 ,  4 ,  3 ,  2 ,  1 ] 
prod _ list  =   [ a * b for  ( a , b )  in zip ( list1 ,  list2 )  ] 
print ( prod _ list ) "
write a program that divides corresponding elements in two lists and prints a new list,"list1  =   [ 1 ,  2 ,  3 ,  4 ,  5 ] 
list2  =   [ 5 ,  4 ,  3 ,  2 ,  1 ] 
quot _ list  =   [ a / b for  ( a , b )  in zip ( list1 ,  list2 )  ] 
print ( quot _ list ) "
write a python program to print 5 random vowels,"import random
vowels  =   [ 'a' ,  'e' ,  'i' ,  'o' ,  'u' ] 
print (  [ random . choice ( vowels )  for  _  in range ( 5 )  ]  ) "
write a python program that creates a dictionary whose keys are numbers from 1 to 10 and values are cubes of the key,"cube _ dict  =   {  } 
for i in range ( 1 ,  11 )  : 
   cube _ dict [ i ]   =  i  *  *  3"
write a program to create a string variable and print the amount of memory it consumes,"import sys
string _ var  =  'string variable'
print ( sys . getsizeof ( string _ var )  ) "
write a python function that joins strings in a list and returns the result,"def join _ string _ parts ( str _ list )  : 
   return "" "" . join ( str _ list ) "
write a python program that reverses an integer and prints it,"num  =  12345
reversed  =  int ( str ( num )  [  :  :  - 1 ]  ) 
print ( reversed ) "
write a python program that sorts and prints a comma separated list of values,"values  =  'one , two , three , four , five'
items  =  values . split ( ' , ' ) 
items . sort (  ) 
print ( ' , ' . join ( items )  ) "
write a python program to print unique words in a sentence,"sentence  =  'the king is the one'
unique  =  set ( sentence . split ( ' ' )  ) 
print ( unique ) "
write a python program that multiplies a tuple n times and print the result,"my _ tuple  =   ( 1 ,  2 ,  3 ) 
n  =  3
print ( my _ tuple  *  3 ) "
write a python program to multiply three numbers and print the result,"num1  =  2
num2  =  4
num3  =  6
print ( num1  *  num2  *  num3 ) "
write a python program to print the sum of first n numbers,"n  =  10
sum  =  0
while n  >  0 : 
   sum  +  =  n
   n  -  =  1
print ( sum ) "
write a python program to print the factorial of a number,"num  =  5
fact  =  1
while num  >  0 : 
   fact  *  =  num
   num  -  =  1
print ( fact ) "
write a python function to return the factors of a number,"def get _ factors ( num )  : 
   factors  =   [  ] 
   for i in range ( 1 ,  num  +  1 )  : 
      if num  %  i  =  =  0 : 
         factors . append ( i ) 
   return factors"
write a python function that returns True if the product of two provided numbers is even,"def is _ prod _ even ( num1 ,  num2 )  : 
   prod  =  num1  *  num2
   return not prod  %  2"
write a python function that returns True if the sum of two provided numbers is even,"def is _ prod _ even ( num1 ,  num2 )  : 
   sum  =  num1  +  num2
   return not sum  %  2"
write a python program to print the first 5 items in a list,"my _ list  =   [ 1 ,  2 ,  3 ,  4 ,  5 ,  6 ,  7 ,  8 ,  9 ,  10 ] 
print ( my _ list [  : 5 ]  ) "
write a python program to print the last 3 items in a list,"my _ list  =   [ 1 ,  2 ,  3 ,  4 ,  5 ,  6 ,  7 ,  8 ,  9 ,  10 ] 
print ( my _ list [  - 3 :  ]  ) "
write a python program to print the items in a list apart from the first 4,"my _ list  =   [ 1 ,  2 ,  3 ,  4 ,  5 ,  6 ,  7 ,  8 ,  9 ,  10 ] 
print ( my _ list [ 4 :  ]  ) "
write a python function that makes all negative values in a list zero and returns it,"def make _ negative _ zero ( items )  : 
   return  [ 0 if item  <  0 else item for item in items ] "
write a python program to shuffle the items in a list and print it,"from random import shuffle
mylist  =   [ 1 ,  2 ,  3 ,  4 ,  5 ] 
shuffle ( mylist ) 
print ( mylist ) "
write a python program that adds the elements of a list to a set and prints the set,"my _ set  =   { 1 ,  2 ,  3 } 
my _ list  =   [ 4 ,  5 ,  6 ] 
my _ set . update ( my _ list ) 
print ( my _ set ) "
write a python program that prints the circumference of a circle,"import math
radius  =  10
print ( f'Area :   { 2  *  math . pi  *  radius } ' ) "
write a python program that prints the area of a rectangle,"length  =  10
width  =  5
print ( f'Area :   { length  *  width } ' ) "
write a python program that prints the area of a square,"side  =  5
print ( f'Area :   { side  *  side } ' ) "
write a python program to create a dictionary with numbers 1 to 5 as keys and the numbers in english as values,"number _ dict  =   { 
   1 :  'one' , 
   2 :  'two' , 
   3 :  'three' , 
   4 :  'four' , 
   5 :  'five'
 } "
write a python program to remove words less than a specified length from a sentence,"sentence  =  'this is my sentence and i will write it my way'
minlength  =  3
result  =   [ word for word in sentence . split ( ' ' )  if len ( word )   >  =  minlength ] "
write a python program to keep words less than a specified length in a sentence,"sentence  =  'this is my sentence and i will write it my way'
maxlength  =  3
result  =   [ word for word in sentence . split ( ' ' )  if len ( word )   <  =  minlength ] "
write a python function that takes a list as an input and converts all numbers to positive numbers and returns the new list,"def make _ all _ positive ( nums )  : 
   return  [ num if num  >  0 else  - num for num in nums ] "
write a python function that takes a list as an input and converts all numbers to negative numbers and returns the new list,"def make _ all _ negative ( nums )  : 
   return  [ num if num  <  0 else  - num for num in nums ] "
write a python program to print the words in a sentence in reverse order,"sentence  =  'the quick brown fox'
words  =  sentence . split ( ' ' ) 
words . reverse (  ) 
print ( ' ' . join ( words )  ) "
write a python program to replace each word in a sentence with the length of the word and print it,"sentence  =  'the quick brown fox jumps over the lazy dog'
words  =  sentence . split ( ' ' ) 
lengths  =   [ str ( len ( word )  )  for word in words ] 
print ( ' ' . join ( lengths )  ) "
write a python program to convert a set to a list,"myset  =   { 1 ,  2 ,  4 ,  7 } 
mylist  =  list ( myset ) "
write a python program to convert a list to a dictionary where the key is the index and the value is the item in the list,"my _ list  =   [ 1 ,  8 ,  1 ,  2 ,  2 ,  9 ] 
my _ dict  =   { key :  value for key ,  value in enumerate ( my _ list )  } "
Write a function that adds 2 iterables a and b such that a is even and b is odd,"def add _ even _ odd _ list ( l1 : list , l2 : list )  -  >  list : 
    return  [ a + b for a , b in zip ( l1 , l2 )  if a % 2 =  = 0 and b % 2 !  = 0 ] "
Write a function that strips every vowel from a string provided,"def strip _ vowels ( input _ str : str )  -  > str : 
    vowels  =   [ 'a' ,  'e' ,  'i' ,  'o' ,  'u' ,  'A' ,  'E' ,  'I' ,  'O' ,  'U'  ] 
    return '' . join ( list ( filter ( lambda x :  x not in vowels ,  input _ str )  )  ) "
write a function that acts like a ReLU function for a 1D array,"def relu _ list ( input _ list : list )  -  > list : 
    return  [  ( lambda x :  x if x  >  =  0 else 0 )  ( x )  for x in input _ list ] "
Write a function that generates Factorial of number,"def factorial ( n )  : 
    if n  =  =  0 or n  =  = 1 : 
        return 1
    else : 
        return n * factorial ( n - 1 ) "
Write a function that returns length of the list,"def list _ length ( l )  : 
    return len ( l ) "
Write a function that sorts list of numbers and returns top element,"def biggest _ no ( l : list )  -  > int : 
    sorted ( l ) "
Write a function to print a string by repeating it n times,"def print _ repeatnstring ( text : str ,  n : int )  -  >  str : 
    return text * n"
Write a function to merge two lists element wise,"def merge _ lists ( l1 : list ,  l2 : list )  : 
    return list ( zip ( l1 , l2 )  ) "
Write a function to merge two lists element wise,"def merge _ lists ( l1 : list ,  l2 : list )  : 
    return list ( zip ( l1 , l2 )  ) "
Write a function to append two lists,"def append _ lists ( l1 : list ,  l2 : list )  -  > list : 
    return l1 . extend ( l2 ) "
Write a function to return reverse of a list,"def reverse _ list ( l1 : list )  -  > list : 
    return l1 [  :  :  - 1 ] "
Write a function to adds two lists element wise,"def adds _ listelements ( l1 : list ,  l2 : list )  : 
    return  [ i + j for i ,  j in zip ( l1 , l2 )  ] "
Write a function to Subtracts two lists element wise,"def sub _ listelements ( l1 : list ,  l2 : list )  : 
    return  [ i - j for i ,  j in zip ( l1 , l2 )  ] "
Write a function to adds two lists element wise only if numbers are even,"def adds _ listevenelements ( l1 : list ,  l2 : list )  : 
    return  [ i + j for i ,  j in zip ( l1 , l2 )  if i * j % 2  =  =  0 ] "
Write a function to multiplies two lists element wise only if numbers are odd,"def adds _ listoddelements ( l1 : list ,  l2 : list )  : 
    return  [ i * j for i ,  j in zip ( l1 , l2 )  if i * j % 2  =  =  1 ] "
Write a function that returns list of elements with n power to elements of list,"def n _ power ( l1 : list ,  power : int )  -  > list : 
    return  [ i *  * power for i in l1 ] "
Write a function that generates fibbonacci series,"def Fibonacci ( n : int )  -  >  int : 
    if n =  = 1 : 
        fibonacci  =  0
    elif n =  = 2 : 
        fibonacci  =  1
    else : 
        fibonacci  =  Fibonacci ( n - 1 )   +  Fibonacci ( n - 2 ) 
    return fibonacci"
Write a function that returns sine value of the input,"def sin ( x : float )   -  >  float : 
    import math
    return math . sin ( x ) "
Write a function that returns derivative of sine value of the input,"def derivative _ sin ( x : float )  -  >  float : 
    import math
    return math . cos ( x ) "
Write a function that returns tan value of the input,"def tan ( x : float )   -  >  float : 
    import math
    return math . tan ( x ) "
Write a function that returns derivative of tan value of the input,"def derivative _ tan ( x : float )  -  >  float : 
    import math
    return  ( 1 / math . cos ( x )  )  *  * 2"
Write a function that returns cosine value of the input,"def cos ( x : float )   -  >  float : 
    import math
    return math . cos ( x ) "
Write a function that returns cosine value of the input,"def derivative _ cos ( x : float )  -  >  float : 
    import math
    return  -  ( math . sin ( x )  ) "
Write a function that returns the exponential value of the input,"def exp ( x )   -  >  float : 
    import math
    return math . exp ( x ) "
Write a function that returns Gets the derivative of exponential of x,"def derivative _ exp ( x : float )   -  >  float : 
    import math
    return math . exp ( x ) "
Write a function that returns log of a function,"def log ( x : float )  -  > float : 
    import math
    return math . log ( x ) "
Write a function that returns derivative of log of a function,"def derivative _ log ( x : float )  -  > float : 
    return  ( 1 / x ) "
Write a function that returns relu value of the input,"def relu ( x : float )   -  >  float : 
    x  =  0 if x  <  0 else x
    return x"
Write a function that returns derivative derivative relu value of the input,"def derivative _ relu ( x : float )   -  >  float : 
    x  =  1 if x  >  0 else 0
    return x"
Write a function that returns runs a garbage collector,"def clear _ memory (  )  : 
    import gc
    gc . collect (  ) "
Write a function to identify if value is present inside a dictionary or not,"def check _ value ( d : dict ,  value )  -  > bool : 
    return any ( v  =  =  value for v in dict . values (  )  ) "
Write a function to identify to count no of instances of a value  inside a dictionary,"def count _ value ( d : dict ,  value )  -  > bool : 
    return list ( v  =  =  value for v in dict . values (  )  )  . count ( True ) "
Write a function to identify if value is present inside a list or not,"def check _ listvalue ( l : list ,  value )  -  > bool : 
    return value in l"
Write a function to identify if value is present inside a tuple or not,"def check _ tuplevalue ( l : tuple ,  value )  -  > bool : 
    return value in l"
Write a function that returns lowercase string,"def str _ lowercase ( s : str )  : 
    return s . lower (  ) "
Write a function that returns uppercase string,"def str _ uppercase ( s : str )  : 
    return s . upper (  ) "
Write a function that removes all special characters,"def clean _ str ( s )  : 
    import re
    return re . sub ( ' [  ^ A - Za - z0 - 9 ]  + ' ,  '' ,  s ) "
Write a function that returns a list sorted ascending,"def ascending _ sort ( l : list )  : 
    sorted ( l ,  reverse = False ) "
Write a function that returns a list sorted descending,"def descending _ sort ( l : list )  : 
    sorted ( l ,  reverse = True ) "
Write a function that returns a dictionary sorted descending by its values,"def descending _ dict _ valuesort ( d : dict )  : 
    return  { key :  val for key ,  val in sorted ( d . items (  )  ,  reverse = True ,  key  =  lambda ele :  ele [ 1 ]  )  } "
Write a function that returns a dictionary sorted ascending by its values,"def ascending _ dict _ valuesort ( d : dict )  : 
    return  { key :  val for key ,  val in sorted ( d . items (  )  ,  key  =  lambda ele :  ele [ 1 ]  )  } "
Write a function that returns a dictionary sorted descending by its keys,"def descending _ dict _ keysort ( d : dict )  : 
    return  { key :  val for key ,  val in sorted ( d . items (  )  ,  reverse = True ,  key  =  lambda ele :  ele [ 0 ]  )  } "
Write a function that returns a dictionary sorted ascending by its keys,"def ascending _ dict _ keysort ( d : dict )  : 
    return  { key :  val for key ,  val in sorted ( d . items (  )  ,  key  =  lambda ele :  ele [ 0 ]  )  } "
Write a function that returns a replace values in string with values provided,"def replace _ values ( s : str ,  old ,  new )  -  > str : 
    s . replace ( old ,  new ) "
Write a function that joins elements of list,"def join _ elements ( l : list )  -  >  str : 
    return  ( '' . join ( str ( l )  )  ) "
Write a function that splits the elements of string,"def split _ elements ( s : str ,  seperator )  -  >  list : 
    return s . split ( seperator ) "
Write a function that returns sum of all elements in the list,"def sum _ elements ( l : list )  : 
    return sum ( l ) "
Write a function that returns sum of all odd elements in the list,"def sum _ even _ elements ( l : list )  : 
    return sum (  [ i for i in l if i % 2 =  = 0 ]  ) "
Write a function that returns sum of all odd elements in the list,"def sum _ odd _ elements ( l : list )  : 
    return sum (  [ i for i in l if i % 2 =  = 1 ]  ) "
write a python function to remove duplicate items from the list,"def remove _ duplicatesinlist ( lst )  : 
    return len ( lst )   =  =  len ( set ( lst )  ) "
write a python function to convert list of strings to list of integers,"def stringlist _ to _ intlist ( sList )  :  
  return ( list ( map ( int ,  sList )  )  ) "
write a python function to map multiple lists using zip,"def map _ values (  * args )  : 
  return set ( zip (  * args )  ) "
write a generator function in python to generate infinite square of numbers using yield,"def nextSquare (  )  :  
    i  =  1 ;   "
An Infinite loop to generate squares,"    
    while True :  
        yield i * i                 
        i  +  =  1"
write a python generator function for generating Fibonacci Numbers,"def fib ( limit )  :  
    a ,  b  =  0 ,  1  
    while a  <  limit :  
        yield a 
        a ,  b  =  b ,  a  +  b"
write a python program which takes user input tuple and prints length of each tuple element,"userInput  =  input ( ""Enter a tuple : "" ) 
x  =  map ( lambda x : len ( x )  ,  tuple ( x . strip (  )  for x in userInput . split ( ' , ' )  )  ) 
print ( list ( x )  ) "
write a python function using list comprehension to find even numbers in a list,"def find _ evennumbers ( input _ list )  : 
  list _ using _ comp  =   [ var for var in input _ list if var  %  2  =  =  0 ]  
  return list _ using _ comp"
write a python function to return dictionary of two lists using zip,"def dict _ using _ comp ( list1 ,  list2 )  : 
  dict _ using _ comp  =   { key : value for  ( key ,  value )  in zip ( list1 ,  list2 )  }  
  return dict _ using _ comp"
write a python program to find the biggest character in a string,"bigChar  =  lambda word :  reduce ( lambda x , y :  x if ord ( x )   >  ord ( y )  else y ,  word ) "
write a python function to sort list using heapq,"def heapsort ( iterable )  : 
    from heapq import heappush ,  heappop
    h  =   [  ] 
    for value in iterable : 
        heappush ( h ,  value ) 
    return  [ heappop ( h )  for i in range ( len ( h )  )  ] "
write a python function to return first n items of the iterable as a list,"def take ( n ,  iterable )  :     
    import itertools
    return list ( itertools . islice ( iterable ,  n )  ) "
write a python function to prepend a single value in front of an iterator,"def prepend ( value ,  iterator )  :     
    import itertools
    return itertools . chain (  [ value ]  ,  iterator ) "
write a python function to return an iterator over the last n items,"def tail ( n ,  iterable )  :     
    from collections import deque
    return iter ( deque ( iterable ,  maxlen = n )  ) "
write a python function to advance the iterator n-steps ahead,"def consume ( iterator ,  n = None )  : 
    import itertools
    from collections import deque
    ""Advance the iterator n - steps ahead .  If n is None ,  consume entirely . """
Use functions that consume iterators at C speed.,"    
    if n is None : 
        deque ( iterator ,  maxlen = 0 ) 
    else : 
        next ( itertools . islice ( iterator ,  n ,  n )  ,  None ) "
write a python function to return nth item or a default value,"def nth ( iterable ,  n ,  default = None )  : 
    from itertools import islice
    return next ( islice ( iterable ,  n ,  None )  ,  default ) "
write a python function to check whether all elements are equal to each other,"def all _ equal ( iterable )  : 
    from itertools import groupby
    g  =  groupby ( iterable ) 
    return next ( g ,  True )  and not next ( g ,  False ) "
write a python function to count how many times the predicate is true,"def quantify ( iterable ,  pred = bool )  : 
    return sum ( map ( pred ,  iterable )  ) "
write a python function to return the sequence elements n times,"def ncycles ( iterable ,  n )  : 
    from itertools import chain ,  repeat
    return chain . from _ iterable ( repeat ( tuple ( iterable )  ,  n )  ) "
write a python function to return the dot product of two vectors,"def dotproduct ( vec1 ,  vec2 )  : 
    return sum ( map ( operator . mul ,  vec1 ,  vec2 )  ) "
write a python function to flatten one level of nesting,"def flatten ( list _ of _ lists )  : 
    from itertools import chain
    return chain . from _ iterable ( list _ of _ lists ) "
write a python function to repeat calls to function with specified arguments,"def repeatfunc ( func ,  times = None ,   * args )  : 
    from itertools import starmap ,  repeat
    if times is None : 
        return starmap ( func ,  repeat ( args )  ) 
    return starmap ( func ,  repeat ( args ,  times )  ) "
write a python function to convert iterable to pairwise iterable,"def pairwise ( iterable )  : 
    from itertools import tee
    a ,  b  =  tee ( iterable ) 
    next ( b ,  None ) 
    return zip ( a ,  b ) "
write a python function to collect data into fixed-length chunks or blocks,"def grouper ( iterable ,  n ,  fillvalue = None )  : 
    from itertools import zip _ longest
    args  =   [ iter ( iterable )  ]   *  n
    return zip _ longest (  * args ,  fillvalue = fillvalue ) "
write a python function to use a predicate and return entries particition into false entries and true entries,"def partition ( pred ,  iterable )  : 
    from itertools import filterfalse ,  tee
    t1 ,  t2  =  tee ( iterable ) 
    return filterfalse ( pred ,  t1 )  ,  filter ( pred ,  t2 ) "
"write a python function to list unique elements, preserving order remembering only the element just seen.""","def unique _ justseen ( iterable ,  key = None )  : 
    import operator
    from itertools import groupby    
    return map ( next ,  map ( operator . itemgetter ( 1 )  ,  groupby ( iterable ,  key )  )  ) "
"write a python function to return random selection from itertools.product(*args, **kwds)","def random _ product (  * args ,  repeat = 1 )  : 
    import random
    pools  =   [ tuple ( pool )  for pool in args ]   *  repeat
    return tuple ( map ( random . choice ,  pools )  ) "
"write a python function to return random selection from itertools.permutations(iterable, r)","def random _ permutation ( iterable ,  r = None )  : 
    import random
    pool  =  tuple ( iterable ) 
    r  =  len ( pool )  if r is None else r
    return tuple ( random . sample ( pool ,  r )  ) "
"write a python function to random select from itertools.combinations(iterable, r)","def random _ combination ( iterable ,  r )  : 
    import random
    pool  =  tuple ( iterable ) 
    n  =  len ( pool ) 
    indices  =  sorted ( random . sample ( range ( n )  ,  r )  ) 
    return tuple ( pool [ i ]  for i in indices ) "
write a python function to locate the leftmost value exactly equal to x,"def index ( a ,  x )  : 
    from bisect import bisect _ left    
    i  =  bisect _ left ( a ,  x ) 
    if i  !  =  len ( a )  and a [ i ]   =  =  x : 
        return i
    raise ValueError"
write a python function to locate the rightmost value less than x,"def find _ lt ( a ,  x )  : 
    from bisect import bisect _ left  
    i  =  bisect _ left ( a ,  x ) 
    if i : 
        return a [ i - 1 ] 
    raise ValueError"
write a python function to find rightmost value less than or equal to x,"def find _ le ( a ,  x )  : 
    from bisect import bisect _ right  
    i  =  bisect _ right ( a ,  x ) 
    if i : 
        return a [ i - 1 ] 
    raise ValueError"
write a python function to find leftmost value greater than x,"def find _ gt ( a ,  x )  : 
    from bisect import bisect _ right 
    i  =  bisect _ right ( a ,  x ) 
    if i  !  =  len ( a )  : 
        return a [ i ] 
    raise ValueError"
write a python function to find leftmost item greater than or equal to x,"def find _ ge ( a ,  x )  : 
    from bisect import bisect _ left 
    i  =  bisect _ left ( a ,  x ) 
    if i  !  =  len ( a )  : 
        return a [ i ] 
    raise ValueError"
write a python function to map a numeric lookup using bisect,"def grade ( score ,  breakpoints =  [ 60 ,  70 ,  80 ,  90 ]  ,  grades = 'FDCBA' )  : 
    from bisect import bisect
    i  =  bisect ( breakpoints ,  score ) 
    return grades [ i ] "
write a regex pattern in python to print all adverbs and their positions in user input text,"import re
text  =  input ( ""Enter a string :  "" ) 
for m in re . finditer ( r"" \ w + ly"" ,  text )  : 
    print ( ' % 02d -  % 02d :   % s'  %   ( m . start (  )  ,  m . end (  )  ,  m . group ( 0 )  )  ) "
write a python function to read a CSV file and print its content,"def read _ csv ( filename )  : 
    import csv
    with open ( filename ,  newline = '' )  as f : 
        reader  =  csv . reader ( f ) 
        for row in reader : 
            print ( row ) "
write a python snippet to convert list into indexed tuple,"test _ list  =   [ 4 ,  5 ,  8 ,  9 ,  10 ]  
list ( zip ( range ( len ( test _ list )  )  ,  test _ list )  ) "
write a python function to split word into chars,"def split ( word )  :  
    return  [ char for char in word ] "
write a python function to pickle data to a file,"def pickle _ data ( data ,  pickle _ file )  : 
  import pickle
  with open ( pickle _ file ,  'wb' )  as f : 
      pickle . dump ( data ,  f ,  pickle . HIGHEST _ PROTOCOL ) 
  return None"
write a python function to load pickle data from a file,"def load _ pickle _ data ( pickle _ file )  : 
  import pickle
  with open ( pickle _ file ,  'rb' )  as f : 
      data  =  pickle . load ( f ) 
  return data"
write a python function to check if a given string is a palindrome,"def isPalindrome ( s )  : 
    return s  =  =  s [  :  :  - 1 ] "
write a function to reverse words of string,"def rev _ sentence ( sentence )  :   
    words  =  sentence . split ( ' ' )   
    reverse _ sentence  =  ' ' . join ( reversed ( words )  )   
    return reverse _ sentence "
write a program to check if a substring is present in a given string,"string  =  ""how are you ? ""
substring  =  ""are""
if  ( string . find ( substring )   =  =   - 1 )  :  
    print ( ""NO"" )  
else :  
    print ( ""YES"" )   "
write a program to print length of a string,"str1  =  ""great way to learn ! ""
print ( len ( str1 )  ) "
write a program to print even length words in a string,"str1  =  ""I am doing fine""
s  =  str1 . split ( ' ' ) 
for word in s :   
    if len ( word )  % 2 =  = 0 :  
        print ( word )   "
write a program to accept the strings which contains all vowels,"str1  =  "" _  _ main _  _ ""
if len ( set ( str1 )  . intersection ( ""AEIOUaeiou"" )  )  >  = 5 :  
  print ( 'accepted' )  
else :  
  print ( ""not accepted"" )  "
write a program to print count of number of unique matching characters in a pair of strings,"str1 = ""ababccd12 @ ""
str2 = ""bb123cca1 @ ""
matched _ chars  =  set ( str1 )   &  set ( str2 )  
print ( ""No .  of matching characters are  :  ""  +  str ( len ( matched _ chars )  )   ) "
write a program to remove all duplicate characters from a string,"str1  =  ""what a great day ! ""
print ( """" . join ( set ( str1 )  )  ) "
write a program to split and join a string with a hyphen delimiter,"str1  =  ""part of speech""
delimiter  =  "" - ""
list _ str  =  str1 . split ( "" "" ) 
new _ str  =  delimiter . join ( list _ str ) 
print ( ""Delimited String is :  ""  +  new _ str ) "
write a program to check if a string is binary or not,"str1 = ""01110011 a""
set1  =  set ( str1 ) 
if set1  =  =   { '0' , '1' }  or set1  =  =   { '0' }  or set1  =  =   { '1' }  : 
    print ( ""string is binary"" ) 
else : 
    print ( ""string is not binary"" ) "
write a function to remove i-th indexed character in a given string,"def remove _ char ( string ,  i )  : 
    str1  =  string [   :  i ]   
    str2  =  string [ i  +  1 :   ]  
    return str1  +  str2 "
write a function to rotate string left by a given length,"def rotate _ left ( input , d )  :   
    Lfirst  =  input [ 0  :  d ]   
    Lsecond  =  input [ d  :  ]   
    return  ( Lsecond  +  Lfirst )  "
write a function to rotate string right by a given length,"def rotate _ right ( input , d )  :   
    Rfirst  =  input [ 0  :  len ( input )  - d ]   
    Rsecond  =  input [ len ( input )  - d  :   ]   
    return  ( Rsecond  +  Rfirst )  "
write a function to replace all occurances of a substring in a string,"str1  =  ""Hello !  It is a Good thing""
substr1  =  ""Good""
substr2  =  ""bad""
replaced _ str  =  str1 . replace ( substr1 ,  substr2 ) 
print ( ""String after replace  : ""  +  str ( replaced _ str )  ) "
write a function that return space count,"def count _ space ( str1 )  :  
    count  =  0
    for i in range ( 0 ,  len ( str1 )  )  :  
        if str1 [ i ]   =  =  "" "" :  
            count  +  =  1
    return count"
write a program to break up string into individual elements,"str1  =  ""whatisthis""
split _ string  =  list ( '' . join ( str1 )  )  
print ( split _ string )  "
write a function to check if a lower case letter exists in a given string,"def check _ lower ( str1 )  : 
    for char in str1 :  
        k  =  char . islower (  )    
        if k  =  =  True :  
            return True 
    if ( k  !  =  1 )  :  
        return False"
write a function to check if a upper case letter exists in a given string,"def check _ upper ( str1 )  : 
    for char in str1 :  
        k  =  char . isupper (  )    
        if k  =  =  True :  
            return True
    if ( k  !  =  1 )  :  
        return False"
write a program to print number of words in a string,"str1  =  'It is a glorious day'
res  =  len ( str1 . split (  )  )  
print ( ""The number of words in string are  :  ""  +  str ( res )  )  "
write a program to print number of characters in a string,"str1  =  'It is a glorious day'
res  =  len ( str1 )  
print ( ""The number of characters in string are  :  "" ,  str ( res )  )  "
write a funtion that accepts two lists of equal length and converts them into a dictioinary,"def list _ to _ dict ( list1 ,  list2 )  : 
  return dict ( zip ( list1 ,  list2 )  ) "
write a python function that accepts a list of dictionaries and sorts it by a specified key,"def sort _ dict _ list ( dict _ list ,  sort _ key )  : 
  dict _ list . sort ( key = lambda item :  item . get ( sort _ key )  ) "
write a program to print the longest key in a dictioinary,"dict _ 1  =   { ""key1"" :  10 ,  ""keeeey2"" :  2 ,  ""ky3"" :  30 } 
max _ key = ''
for key in dict _ 1 : 
  if len ( key )  > len ( max _ key )  : 
    max _ key = key
print ( max _ key ) "
write a python function that accepts a dictionary that has unique values and returns its inversion,"def invert _ dict ( input _ dict )  : 
  my _ inverted _ dict  =   { value :  key for key ,  value in input _ dict . items (  )  } 
  return my _ inverted _ dict"
write a function to return the mean difference in the length of keys and values of dictionary comprising of strings only.,"def mean _ key _ val _ diff ( input _ dict )  : 
  sum _ diff  =  0
  for key ,  val in input _ dict . items (  )  : 
    sum _ diff  +  =  abs ( len ( val )   -  len ( key )  ) 
  return sum _ diff / len ( input _ dict ) "
write a python function to combine three lists of equal lengths into a nested dictionary and return it,"def lists _ to _ dict ( test _ list1 ,  test _ list2 ,  test _ list3 )  : 
  res  =   [  { a :   { b :  c }  }  for  ( a ,  b ,  c )  in zip ( test _ list1 ,  test _ list2 ,  test _ list3 )  ]  
  return res"
write a function that converts a integer dictionary into a list of tuples.,"def dict _ to _ tuple ( input _ dict )  : 
  out _ tuple  =   [  ( a ,  b )  for a , b in input _ dict . items (  )  ] 
  return out _ tuple"
write a Python program that sorts dictionary keys to a list using their values and prints this list.,"test _ dict  =   { 'Geeks'  :  2 ,  'for'  :  1 ,  'CS'  :  3 }  
res  =  list ( sum ( sorted ( test _ dict . items (  )  ,  key  =  lambda x : x [ 1 ]  )  ,   (  )  )  )  
print ( ""List after conversion from dictionary  :  "" ,  res ) "
write a program to convert date to timestamp and print the result,"import time 
import datetime 
str1  =  ""20 / 01 / 2020""
element  =  datetime . datetime . strptime ( str1 , "" % d /  % m /  % Y"" )  
timestamp  =  datetime . datetime . timestamp ( element )  
print ( timestamp ) "
write a python program to add an element to a list. Print the final list.,"lst  =   [ ""Jon"" ,  ""Kelly"" ,  ""Jessa"" ] 
lst . append ( ""Scott"" ) 
print ( lst ) "
write a python function to append all elements of one list to another,"def extend _ list ( list1 ,  list2 )  : 
    list1  =   [ 1 ,  2 ] 
    list2  =   [ 3 ,  4 ] 
    return list1 . extend ( list2 ) "
Write a  python program to print the last element of a list,"list1  =   [ 'p' , 'r' , 'o' , 'b' , 'e' ] 
print ( list1 [  - 1 ]  ) "
Write a python program to print positive Numbers in a List,"list1  =   [ 11 ,   - 21 ,  0 ,  45 ,  66 ,   - 93 ]  
for num in list1 :  
    if num  >  =  0 :  
       print ( num ,  end  =  "" "" )  "
Write a python function to multiply all values in a list,"def multiplyList ( myList )   : 
    result  =  1
    for x in myList : 
         result  =  result  *  x 
    return result "
Write a python program to print the smallest number in a list,"list1  =   [ 10 ,  20 ,  1 ,  45 ,  99 ]  
print ( ""Smallest element is : "" ,  min ( list1 )  )  "
Write a python program to remove even numbers from a list. Print the final list.,"list1  =   [ 11 ,  5 ,  17 ,  18 ,  23 ,  50 ]   
for ele in list1 :  
    if ele  %  2  =  =  0 :  
        list1 . remove ( ele )  
print ( ""New list after removing all even numbers :  "" ,  list1 )  "
Write a python program to print a list after removing elements from index 1 to 4,"list1  =   [ 11 ,  5 ,  17 ,  18 ,  23 ,  50 ]   
del list1 [ 1 : 5 ]  
print (  * list1 ) "
Write a python program to remove 11 and 18 from a list. Print the final list.,"list1  =   [ 11 ,  5 ,  17 ,  18 ,  23 ,  50 ]   
unwanted _ num  =   { 11 ,  18 }  
list1  =   [ ele for ele in list1 if ele not in unwanted _ num ]  
print ( ""New list after removing unwanted numbers :  "" ,  list1 ) "
Write a python function to get the Cumulative sum of a list,"def Cumulative ( lists )  :  
    cu _ list  =   [  ]  
    length  =  len ( lists )  
    cu _ list  =   [ sum ( lists [ 0 : x : 1 ]  )  for x in range ( 0 ,  length + 1 )  ]  
    return cu _ list [ 1 :  ] "
"Write a python program to print if a string ""hello"" is present in the list"," 
l  =   [ 1 ,  2 . 0 ,  'hello' , 'have' ,  'a' ,  'good' ,  'day' ]  
s  =  'hello'  
if s in l :  
    print ( f' { s }  is present in the list' )  
else :  
    print ( f' { s }  is not present in the list' )  "
Write a python fuction to create an empty list,"def emptylist (  )  : 
   return list (  )   "
Write a python program to print a list with all elements as 5 and of length 10,"list1  =   [ 5 ]   *  10
print ( list1 ) "
Write a python program to reverse a list and print it.,"def Reverse ( lst )  :  
    return  [ ele for ele in reversed ( lst )  ]  
lst  =   [ 10 ,  11 ,  12 ,  13 ,  14 ,  15 ]  
print ( Reverse ( lst )  )  "
Write a python program to print odd numbers in a List,"list1  =   [ 10 ,  21 ,  4 ,  45 ,  66 ,  93 ,  11 ]   
odd _ nos  =  list ( filter ( lambda x :   ( x  %  2  !  =  0 )  ,  list1 )  )  
print ( ""Odd numbers in the list :  "" ,  odd _ nos ) "
Write a python program to print negative Numbers in a List,"list1  =   [ 11 ,   - 21 ,  0 ,  45 ,  66 ,   - 93 ]  
for num in list1 :  
    if num  <  0 :  
       print ( num ,  end  =  "" "" ) "
Write a python program for print all elements with digit 7.,"test _ list  =   [ 56 ,  72 ,  875 ,  9 ,  173 ]   
K  =  7
res  =   [ ele for ele in test _ list if str ( K )  in str ( ele )  ]  
print ( ""Elements with digit K  :  ""  +  str ( res )  ) "
Write a python program to find the sum and average of the list. Print the sum and average,"L  =   [ 4 ,  5 ,  1 ,  2 ,  9 ,  7 ,  10 ,  8 ]  
count  =  0
for i in L :  
    count  +  =  i 
avg  =  count / len ( L )  
print ( ""sum  =  "" ,  count )  
print ( ""average  =  "" ,  avg ) "
Write a python program to Remove Tuples of Length 1 from a list of tuples. Print the final list.,"test _ list  =   [  ( 4 ,  5 )  ,   ( 4 ,   )  ,   ( 8 ,  6 ,  7 )  ,   ( 1 ,   )  ,   ( 3 ,  4 ,  6 ,  7 )  ]  
K  =  1
res  =   [ ele for ele in test _ list if len ( ele )   !  =  K ]  
print ( ""Filtered list  :  ""  +  str ( res )  ) "
Write a python program to print a list of tuples from given list having number and its cube in each tuple,"list1  =   [ 1 ,  2 ,  5 ,  6 ]  
res  =   [  ( val ,  pow ( val ,  3 )  )  for val in list1 ]  
print ( res )  "
Write a python program to print the combination of tuples in list of tuples,"test _ list  =   [  (  [ 1 ,  2 ,  3 ]  ,  'gfg' )  ,   (  [ 5 ,  4 ,  3 ]  ,  'cs' )  ] 
res  =   [   ( tup1 ,  tup2 )  for i ,  tup2 in test _ list for tup1 in i  ]  
print ( ""The list tuple combination  :  ""  +  str ( res )  )  "
Write a python program to swap tuple elements in list of tuples. Print the output.,"test _ list  =   [  ( 3 ,  4 )  ,   ( 6 ,  5 )  ,   ( 7 ,  8 )  ]  
res  =   [  ( sub [ 1 ]  ,  sub [ 0 ]  )  for sub in test _ list ]  
print ( ""The swapped tuple list is  :  ""  +  str ( res )  )  "
write a python function that takes two path strings and return the combined path string,"import os
def path _ join ( PARENT _ DIR ,  DIR )  : 
    joined _ path  =  os . path . join ( PARENT _ DIR ,  DIR ) 
    return joined _ path
path _ join ( ""C :  / "" ,  ""DATA"" ) "
write a python function to read a text file and return the result,"def read _ file ( filepath = 'test . txt' )  : 
    with open ( filepath ,  'r' )  as file _ reader : 
        f _ read  =  file _ reader . read (  ) 
    return f _ read
read _ file (  ) "
write a python program to handle exception when a given value is less than 10,"def check ( x )  : 
    if x  <  10 : 
        raise ValueError ( 'x should not be less than 10 ! ' ) 
    else : 
        return x
check ( 9 ) "
write a python function to check if the given structure is a instance of list or dictionary,"def check _ insst ( obj )  : 
    if isinstance ( obj ,  list )  : 
        return ""list""
    elif isinstance ( obj ,  dict )  : 
        return ""dict""
    else : 
        return ""unknown""
check _ insst (  {  }  ) "
write a python function to check if the given structure is a instance of tuple or string,"def check _ inst _ tup _ str ( obj )  : 
    if isinstance ( obj ,  set )  : 
        return ""set""
    elif isinstance ( obj ,  tuple )  : 
        return ""tuple""
    else : 
        return ""unknown""
check _ inst _ tup _ str (  { 1 }  ) "
"write a python function that call another function and that function prints ""Inside B""","def A (  )  : 
    B (  ) 
def B (  )  : 
    print ( ""Inside B"" ) 
A (  ) "
write a python program to return the biggest character in a string (printable ascii characters),"from functools import reduce
input _ str  =  'tsai'
res  =  reduce ( lambda x ,  y :  x if ord ( x )   >  ord ( y )  else y ,  input _ str ) 
print ( f"" { res } "" ) "
write a python program to adds every 3rd number in a list,"from functools import reduce
input _ list  =   [ x for x in range ( 10 )  ] 
res  =  reduce ( lambda x ,  y :  x + y ,   [ i for idx ,  i in enumerate ( input _ list )  if  ( idx + 1 )  % 3 =  = 0 ]  ) 
print ( f"" { res } "" ) "
"write a python program which iterates two lists of numbers simultaneously and adds corresponding values, print the result","f _ list  =   [ 1 , 2 , 3 , 4 ] 
s _ list  =   [ 2 , 3 , 4 , 5 ] 
res  =   [ f _ n  + s _ n for f _ n ,  s _ n in zip ( f _ list ,  s _ list )  ] 
print ( f"" { res } "" ) "
write a python function that takes a list of numbers and calculate square of each number and return it in a list,"def square _ num ( mynumbers )  : 
    return list ( map ( lambda num :  num *  * 2 , mynumbers )  ) 
square _ num (  [ 1 , 2 , 3 ]  ) "
write a python function that takes two lists and combines them without any duplicates and return the list,"def combine _ lists ( L1 ,  L2 )  : 
    return L1  +   [ items for items in L2 if items not in L1 ] 
L1  =   [ 1 , 2 , 3 ] 
L2  =   [ 2 , 4 , 3 ] 
combine _ lists ( L1 , L2 ) "
write a python program to print all the keys in the dictionary and store it in a list,"sample _ dict  =   { '1' : 1 ,  '2' : 2 ,  '3' : 3 } 
key _ list  =  list ( sample _ dict . keys (  )  ) 
print ( f"" { key _ list } "" ) "
write a python program to remove duplicates from a list and print the result in list,"input _ list  =   [ 1 , 2 , 3 , 4 , 4 , 33 , 2 , 5 ] 
dedup  =  list ( set ( input _ list )  ) 
print ( f"" { dedup } "" ) "
"write a python function that takes a list of elements and n as input, extract and append first n characters and last n characters of each string and return the resultant list","def nchar  ( list1 , no )  : 
    return  [ items [  : no ]  + items [  - no :  ]  for items in list1 ] 
list1  =   [ ""ROHAN"" ,  ""END"" ] 
nchar ( list1 ,  3 ) "
"write a python function that takes two parameters, first parameter is a list of dictionary and second is a list of tuples. Append the list of tuples to the list of dictionary","def addentry  ( listname ,  addlist )  : 
    for names , ages in addlist : 
            listname . append ( addlist ) 
    return listname
addentry (  [  { '1' : ""A"" }  ]  ,   [  ( ""2"" ,  ""B"" )  ]  ) "
"write a python function that takes a dictionary and a string, appends the string to the list of values","def addnames _ in _ dict  ( dictname ,  name )  : 
    for i in dictname : 
        dictname [ i ]  . append ( name ) 
    return dictname
addnames _ in _ dict (  { ""1"" :  [ ""A"" ]  }  ,  ""Arun"" ) "
write a python program to iterate through the list and create a dictionary with integers as keys,"list _  =   [ 1 , 2 , 3 , 4 ] 
dict _ comp  =   { idx : value for idx , value in enumerate ( list _  )  } 
print ( f"" { dict _ comp } "" ) "
write a python function to add all even numbers between minimum and maximum value,"def add _ even _ num ( min ,  max )  : 
    return sum (  [ i for i in range ( min ,  max )  if i % 2 =  = 0 ]  ) 
add _ even _ num ( 1 ,  6 ) "
write a python program to iterate through a string using for loop,"h _ letters  =   [  ] 
for letter in 'human' : 
    h _ letters . append ( letter ) 
print ( f"" { h _ letters } "" ) "
write a python program to iterate through a string using lambda and print the result,"letters  =  list ( map ( lambda x :  x ,  'human' )  ) 
print ( letters ) "
write a python program to print python version using sys,"import sys
print ( f"" { sys . version } "" ) "
write a python program to merge two sorted lists,"a  =   [ 3 ,  4 ,  6 ,  10 ,  11 ,  18 ] 
b  =   [ 1 ,  5 ,  7 ,  12 ,  13 ,  19 ,  21 ] 
a . extend ( b ) 
c  =  sorted ( a ) 
print ( f"" { c } "" ) "
write a python program to index every 4th character from the below string,"code  =  'varCjjlopaxntrrgnbXrOPraiiItUuUuzaQlliyaxx * t # rgiffFoce & ntPls87C ! '
code [ 3 :  : 4 ] "
write a python program to split a string based on space,"strin  =  ""Hello how are you  ? ""
res  =  strin . split (  ) 
print ( f"" { res } "" ) "
write a python program to convert a dictionary to list of tuples,"dict _ new  =   { '1' : 'A' ,  '2' : 'B' } 
tup  =  dict _ new . items (  ) 
print ( list ( tup )  ) "
write a python program to remove an element from a list,"li  =   [ 1 ,  2 ,  3 ,  4 ] 
li . remove ( 1 ) 
li"
write a python program to print system time,"import time
print ( f"" { time . time (  )  } "" ) "
write a python program to replace all the negative values to zero and keep only positive values in the list,"original _ prices  =   [ 1 . 25 ,   - 9 . 45 ,  10 . 22 ,  3 . 78 ,   - 5 . 92 ,  1 . 16 ] 
prices  =   [ i if i  >  0 else 0 for i in original _ prices ] 
print ( f"" { prices } "" ) "
write a python function to generate random number between a  given range,"import random
def get _ weather _ data ( min ,  max )  : 
    return random . randrange ( min ,  max ) 
rand _ num  =  get _ weather _ data ( 11 ,  20 ) 
print ( f"" { rand _ num } "" ) "
write a python function which uses generator to sum all the numbers in a range,"min _ value  =  10
max _ value  =  10000
sum _ all  =  sum ( i  *  i for i in range ( min _ value ,  max _ value )  ) 
print ( f"" { sum _ all } "" ) "
write a python function which is decorated on another function,"def myDecorator ( func )  : 
    def new _ func ( n )  : 
        return ' $ '  +  func ( n )         
    return new _ func
 @ myDecorator
def myFunction ( a )  : 
    return ( a ) "
write a python function to convert given variable to said datatype,"def type _ conversion ( typ , a )  : 
  if ( typ )  =  = 'int' : 
    return ( int ( a )  ) 
  elif ( typ )  =  = 'float' : 
    return ( float ( a )  ) 
  else : 
    return ( str ( a )  ) 
type _ conversion ( 'str' , 1 ) "
Write a python function to add 2 iterables a and b such that a is even and b is odd,"n = 10
a  =   [  ] 
b  =   [  ] 
 _   =   [ a . append ( i )  if i % 2 =  = 0 else b . append ( i )  for i in range ( n )  ] 
def add ( a , b )  : 
    return  [ a + b for a , b in  ( zip ( a , b )  )  ] 
add ( a , b ) "
6. Write a program to strips every vowel from a string provided,"vowels  =   ( 'a' ,  'e' ,  'i' ,  'o' ,  'u' ) 
input _ string  =  ""hello""
print ( 'Vowel in a string' , ' ' . join (  [ x for x in input _ string . lower (  )  if x not in vowels ]  )  ) "
write a program to  adds every 5th number in a list,"input _ list  =   [ x for x in range ( 20 )  ] 
res = reduce (  ( lambda x ,  y :  x  +  y )  ,   [ val for idx ,  val in enumerate ( input _ list )  if  ( idx + 1 )  % 5 =  = 0 ]  )  
print ( 'Sum of every 5th element in the list is' ,  res ) "
Write a python function to identify type of given data structure,"def ds _ type ( ds )  : 
  return ( type ( ds )  ) 
l =  [ 1 , 2 , 3 , 4 ] 
ds _ type ( l ) "
Write a python function get unique value from tuple,"def unique _ values ( v )  : 
    return ( list ( set ( v )  )  ) 
t =  [  ( 1 , 2 )  ,  ( 3 , 4 )  ,  ( 4 , 3 )  ,  ( 1 , 2 )  ] 
unique _ values ( t ) "
write a program to convert temperature from Celsius to Fahrenheit,"Cel  =  90
Far  =  9 . 0 / 5 . 0  *  Cel  +  32
print ( ""Temperature : "" ,  Cel ,  ""Celsius  =  "" ,  Far ,  "" F"" ) "
Write a program to convert kilometers per hour to mile per hour,"kmh  =  16
mph  =   0 . 6214  *  kmh
print ( ""Speed : "" ,  kmh ,  ""KM / H  =  "" ,  mph ,  ""MPH"" ) "
Write a program to reverse a number,"n = int ( input ( ""Enter number :  "" )  ) 
rev = 0
while ( n > 0 )  : 
    dig = n % 10
    rev = rev * 10 + dig
    n = n /  / 10
print ( ""Reverse of the number : "" , rev ) "
Write a program to take an average of given scores,"s1 = 50
s2 = 77
s3 = 87
print ( 'Avg score is' ,  ( s1 + s2 + s3 )  / 3 ) "
Write a python program to print odd numbers in given range,"lower = int ( input ( ""Enter the lower limit for the range : "" )  ) 
upper = int ( input ( ""Enter the upper limit for the range : "" )  ) 
for i in range ( lower , upper + 1 )  : 
    if ( i % 2 !  = 0 )  : 
        print ( i ) "
Write a python program print all the integers that aren’t divisible by either 2 or 3 and lies between 1 and 25.,"for i in range ( 0 , 25 )  : 
    if ( i % 2 !  = 0 and i % 3 !  = 0 )  : 
        print ( i ) "
Write a program to concatinate two strings,"str1  =  'Good'
str2  = 'Morning ! '
print ( 'str1  +  str2  =  ' ,  str1  +  str2 ) 
print ( 'str1  *  3  = ' ,  str1  *  3 ) "
Write a program to get 3rd and last character of a given string,"string = ""Good Night""
print ( "" \ nSlicing characters between ""  + 
    ""3rd and last character :  "" )  
print ( string [ 3 :  - 1 ]  ) "
Write a program to delete a 3rd character from a given string,"String = 'welcome'
new _ str  =  """" 
for i in range ( len ( String )  )  :  
    if i  !  =  2 :  
        new _ str  =  new _ str  +  String [ i ]  
print ( new _ str ) "
Write a program to replace a string by a given string  in a sentence,"string  =  'This is beautiful picture'
string . replace ( 'beautiful' , 'good' ) "
Write a program to reverse a string,"string  =  'Today is bad day'
string [  :  :  - 1 ] "
write a python function get the maximum number in passed list,"def max _ check ( x )  : 
    max _ val  =  x [ 0 ]  
    for check in x :  
        if check  >  max _ val :  
            max _ val  =  check 
    return max _ val
print ( f' { max _ check (  [ 2 , 4 , 5 , 7 , 98 ]  )  } ' ) "
write a python function to get the minimum number in passed list,"def min _ check ( x )  : 
    min _ val  =  x [ 0 ]  
    for check in x :  
        if check  <  min _ val :  
            min _ val  =  check 
    return min _ val
print ( f' { min _ check (  [ 2 , 4 , 5 , 7 , 98 ]  )  } ' ) "
write a program to reverse the list elemnets,"list _   =   [ 40 , 0 , 1 , 29 , 3 ] 
rev _ list  =  list _  [  :  :  - 1 ] 
print ( f'reversed list :   { rev _ list } ' ) "
write a program to insert elemnet in the list after every nth element,"letters  =   [ 'a' , 'b' , 'c' , 'd' , 'e' , 'f' , 'g' , 'h' , 'i' , 'j' ] 
i  =  3
while i  <  len ( letters )  : 
    letters . insert ( i ,  'x' ) 
    i  +  =  4
letters"
write a program to find sum of elements in list,"total  =  0
print ( f'sum :   { sum (  [ total  +  x for x in  [ 1 ,  2 ,  3 ,  4 ,  5 ]  ]  )  } ' ) "
write a  program to get th ematched elemnets from two list,"a  =   [ 1 ,  2 ,  3 ,  4 ,  5 ] 
b  =   [ 9 ,  8 ,  7 ,  6 ,  5 ] 
 [ i for i ,  j in zip ( a ,  b )  if i  =  =  j ] "
write a  program to get the matched elements from two list,"a  =   [ 1 ,  2 ,  3 ,  4 ,  5 ] 
b  =   [ 9 ,  8 ,  7 ,  6 ,  5 ] 
 [ i for i ,  j in zip ( a ,  b )  if i  !  =  j ] "
write a python program to create dictionary from the lists,"L1  =   [ 'a' , 'b' , 'c' , 'd' ] 
L2  =   [ 1 , 2 , 3 , 4 ] 
d  =  dict ( zip ( L1 , L2 )  ) 
print ( f'dictionary :  { d } ' ) "
write a program to convert given dictonary to list of list key value pairs,"d  =   { 'Food' : 'Fish & Chips' , '2012' : 'Olympics' , 'Capital' : 'London' } 
list _ key _ value  =   [   [ k , v ]  for k ,  v in d . items (  )   ] 
print ( f'lsit _ key _ value :  { list _ key _ value } ' ) "
write a program to find the last position of a given substring in a given string,"str1  =  ""Emma is a data scientist who knows Python .  Emma works at google . ""
print ( f""Original String is :   { str1 } "" ) 
index  =  str1 . rfind ( ""Emma"" ) 
print ( f""Last occurrence of Emma starts at  { index } "" ) "
write a program to remove the empty list from the given list,"str _ list  =   [ ""Emma"" ,  ""Jon"" ,  """" ,  ""Kelly"" ,  None ,  ""Eric"" ,  """" ] 
print ( str _ list ) "
use built-in function filter to filter empty value,"new _ str _ list  =  list ( filter ( None ,  str _ list )  ) 
print ( ""After removing empty strings"" ) 
print ( new _ str _ list ) "
write a program to convert all the sentances present in the list to upper,"mylis  =   [ 'this is test' ,  'another test' ] 
print ( f' {  [ item . upper (  )  for item in mylis ]  } ' ) "
write a progarm to adds every 3rd number in a list,"from functools import reduce
input _ list  =   [ x for x in range ( 10 )  ] 
reduce (  ( lambda x ,  y :  x  +  y )  ,   [ val for idx ,  val in enumerate ( input _ list )  if  ( idx + 1 )  % 3 =  = 0 ]  ) "
write a program to calculate exponents of an input,"input  =  9
exponent  =  2
final  =  pow ( input ,  exponent ) 
print ( f'Exponent Value is :  { final } ' ) "
write a program to find and print the remainder of two number,"num1  =  12
num2  =  10
ratio  =  num1  %  num2
print ( f'remainder :  { ratio } ' ) "
"Write a program which will achieve given a Python list, remove all occurrence of an input from the list","list1  =   [ 5 ,  20 ,  15 ,  20 ,  25 ,  50 ,  20 ] 
def removeValue ( sampleList ,  val )  : 
   return  [ value for value in sampleList if value  !  =  val ] 
resList  =  removeValue ( list1 ,  20 ) 
print ( resList ) "
Convert decimal number to octal,"print ( ' % o , '  %   ( 8 )  ) "
Write a recursive function to calculate the sum of numbers from 0 to 10,"def calculateSum ( num )  : 
    if num : 
        return num  +  calculateSum ( num - 1 ) 
    else : 
        return 0
res  =  calculateSum ( 10 ) 
print ( res ) "
Generate a Python list of all the even numbers between two given numbers,"num1  =  4
num2  =  30
myval  =   [ i for i in range ( num1 ,  num2 ,  2 )  ] 
print ( myval ) 
aList  =   [ 4 ,  6 ,  8 ,  24 ,  12 ,  2 ] 
print ( max ( aList )  ) "
"Write a program to extract each digit from an integer, in the reverse order","number  =  7536
while  ( number  >  0 )  : 
    digit  =  number  %  10
    number  =  number  /  /  10
    print ( digit ,  end = "" "" ) "
Generate a random n-dimensional array of float numbers,"import numpy
random _ float _ array  =  numpy . random . rand ( 2 ,  2 ) 
print ( ""2 X 2 random float array in  [ 0 . 0 ,  1 . 0 ]   \ n"" ,  random _ float _ array , "" \ n"" ) "
write a python function to check if a given string is a palindrome,"def isPalindrome ( s )  : 
    return s  =  =  s [  :  :  - 1 ] "
write a function to reverse words of string,"def rev _ sentence ( sentence )  :   
    words  =  sentence . split ( ' ' )   
    reverse _ sentence  =  ' ' . join ( reversed ( words )  )   
    return reverse _ sentence "
write a program to check if a substring is present in a given string,"string  =  ""how are you ? ""
substring  =  ""are""
if  ( string . find ( substring )   =  =   - 1 )  :  
    print ( ""NO"" )  
else :  
    print ( ""YES"" )   "
write a program to print length of a string,"str1  =  ""great way to learn ! ""
print ( len ( str1 )  ) "
write a program to print even length words in a string,"str1  =  ""I am doing fine""
s  =  str1 . split ( ' ' ) 
for word in s :   
    if len ( word )  % 2 =  = 0 :  
        print ( word )   "
write a program to accept the strings which contains all vowels,"str1  =  "" _  _ main _  _ ""
if len ( set ( str1 )  . intersection ( ""AEIOUaeiou"" )  )  >  = 5 :  
  print ( 'accepted' )  
else :  
  print ( ""not accepted"" )  "
write a program to print count of number of unique matching characters in a pair of strings,"str1 = ""ababccd12 @ ""
str2 = ""bb123cca1 @ ""
matched _ chars  =  set ( str1 )   &  set ( str2 )  
print ( ""No .  of matching characters are  :  ""  +  str ( len ( matched _ chars )  )   ) "
write a program to remove all duplicate characters from a string,"str1  =  ""what a great day ! ""
print ( """" . join ( set ( str1 )  )  ) "
write a program to split and join a string with a hyphen delimiter,"str1  =  ""part of speech""
delimiter  =  "" - ""
list _ str  =  str1 . split ( "" "" ) 
new _ str  =  delimiter . join ( list _ str ) 
print ( ""Delimited String is :  ""  +  new _ str ) "
write a program to check if a string is binary or not,"str1 = ""01110011 a""
set1  =  set ( str1 ) 
if set1  =  =   { '0' , '1' }  or set1  =  =   { '0' }  or set1  =  =   { '1' }  : 
    print ( ""string is binary"" ) 
else : 
    print ( ""string is not binary"" ) "
write a function to remove i-th indexed character in a given string,"def remove _ char ( string ,  i )  : 
    str1  =  string [   :  i ]   
    str2  =  string [ i  +  1 :   ]  
    return str1  +  str2 "
write a function to rotate string left by a given length,"def rotate _ left ( input , d )  :   
    Lfirst  =  input [ 0  :  d ]   
    Lsecond  =  input [ d  :  ]   
    return  ( Lsecond  +  Lfirst )  "
write a function to rotate string right by a given length,"def rotate _ right ( input , d )  :   
    Rfirst  =  input [ 0  :  len ( input )  - d ]   
    Rsecond  =  input [ len ( input )  - d  :   ]   
    return  ( Rsecond  +  Rfirst )  "
write a function to replace all occurances of a substring in a string,"str1  =  ""Hello !  It is a Good thing""
substr1  =  ""Good""
substr2  =  ""bad""
replaced _ str  =  str1 . replace ( substr1 ,  substr2 ) 
print ( ""String after replace  : ""  +  str ( replaced _ str )  ) "
write a function that return space count,"def count _ space ( str1 )  :  
    count  =  0
    for i in range ( 0 ,  len ( str1 )  )  :  
        if str1 [ i ]   =  =  "" "" :  
            count  +  =  1
    return count"
write a program to break up string into individual elements,"str1  =  ""whatisthis""
split _ string  =  list ( '' . join ( str1 )  )  
print ( split _ string )  "
write a function to check if a lower case letter exists in a given string,"def check _ lower ( str1 )  : 
    for char in str1 :  
        k  =  char . islower (  )    
        if k  =  =  True :  
            return True 
    if ( k  !  =  1 )  :  
        return False"
write a function to check if a upper case letter exists in a given string,"def check _ upper ( str1 )  : 
    for char in str1 :  
        k  =  char . isupper (  )    
        if k  =  =  True :  
            return True
    if ( k  !  =  1 )  :  
        return False"
write a program to print number of words in a string,"str1  =  'It is a glorious day'
res  =  len ( str1 . split (  )  )  
print ( ""The number of words in string are  :  ""  +  str ( res )  )  "
write a program to print number of characters in a string,"str1  =  'It is a glorious day'
res  =  len ( str1 )  
print ( ""The number of characters in string are  :  "" ,  str ( res )  )  "
write a funtion that accepts two lists of equal length and converts them into a dictioinary,"def list _ to _ dict ( list1 ,  list2 )  : 
  return dict ( zip ( list1 ,  list2 )  ) "
write a python function that accepts a list of dictionaries and sorts it by a specified key,"def sort _ dict _ list ( dict _ list ,  sort _ key )  : 
  dict _ list . sort ( key = lambda item :  item . get ( sort _ key )  ) "
write a program to print the longest key in a dictioinary,"dict _ 1  =   { ""key1"" :  10 ,  ""keeeey2"" :  2 ,  ""ky3"" :  30 } 
max _ key = ''
for key in dict _ 1 : 
  if len ( key )  > len ( max _ key )  : 
    max _ key = key
print ( max _ key ) "
write a python function that accepts a dictionary that has unique values and returns its inversion,"def invert _ dict ( input _ dict )  : 
  my _ inverted _ dict  =   { value :  key for key ,  value in input _ dict . items (  )  } 
  return my _ inverted _ dict"
write a function to return the mean difference in the length of keys and values of dictionary comprising of strings only.,"def mean _ key _ val _ diff ( input _ dict )  : 
  sum _ diff  =  0
  for key ,  val in input _ dict . items (  )  : 
    sum _ diff  +  =  abs ( len ( val )   -  len ( key )  ) 
  return sum _ diff / len ( input _ dict ) "
write a python function to combine three lists of equal lengths into a nested dictionary and return it,"def lists _ to _ dict ( test _ list1 ,  test _ list2 ,  test _ list3 )  : 
  res  =   [  { a :   { b :  c }  }  for  ( a ,  b ,  c )  in zip ( test _ list1 ,  test _ list2 ,  test _ list3 )  ]  
  return res"
write a function that converts a integer dictionary into a list of tuples.,"def dict _ to _ tuple ( input _ dict )  : 
  out _ tuple  =   [  ( a ,  b )  for a , b in input _ dict . items (  )  ] 
  return out _ tuple"
write a Python program that sorts dictionary keys to a list using their values and prints this list.,"test _ dict  =   { 'Geeks'  :  2 ,  'for'  :  1 ,  'CS'  :  3 }  
res  =  list ( sum ( sorted ( test _ dict . items (  )  ,  key  =  lambda x : x [ 1 ]  )  ,   (  )  )  )  
print ( ""List after conversion from dictionary  :  "" ,  res ) "
write a program to convert date to timestamp and print the result,"import time 
import datetime 
str1  =  ""20 / 01 / 2020""
element  =  datetime . datetime . strptime ( str1 , "" % d /  % m /  % Y"" )  
timestamp  =  datetime . datetime . timestamp ( element )  
print ( timestamp ) "
write a python program to add an element to a list. Print the final list.,"lst  =   [ ""Jon"" ,  ""Kelly"" ,  ""Jessa"" ] 
lst . append ( ""Scott"" ) 
print ( lst ) "
write a python function to append all elements of one list to another,"def extend _ list ( list1 ,  list2 )  : 
    list1  =   [ 1 ,  2 ] 
    list2  =   [ 3 ,  4 ] 
    return list1 . extend ( list2 ) "
Write a  python program to print the last element of a list,"list1  =   [ 'p' , 'r' , 'o' , 'b' , 'e' ] 
print ( list1 [  - 1 ]  ) "
Write a python program to print positive Numbers in a List,"list1  =   [ 11 ,   - 21 ,  0 ,  45 ,  66 ,   - 93 ]  
for num in list1 :  
    if num  >  =  0 :  
       print ( num ,  end  =  "" "" )  "
Write a python function to multiply all values in a list,"def multiplyList ( myList )   : 
    result  =  1
    for x in myList : 
         result  =  result  *  x 
    return result "
Write a python program to print the smallest number in a list,"list1  =   [ 10 ,  20 ,  1 ,  45 ,  99 ]  
print ( ""Smallest element is : "" ,  min ( list1 )  )  "
Write a python program to remove even numbers from a list. Print the final list.,"list1  =   [ 11 ,  5 ,  17 ,  18 ,  23 ,  50 ]   
for ele in list1 :  
    if ele  %  2  =  =  0 :  
        list1 . remove ( ele )  
print ( ""New list after removing all even numbers :  "" ,  list1 )  "
Write a python program to print a list after removing elements from index 1 to 4,"list1  =   [ 11 ,  5 ,  17 ,  18 ,  23 ,  50 ]   
del list1 [ 1 : 5 ]  
print (  * list1 ) "
Write a python program to remove 11 and 18 from a list. Print the final list.,"list1  =   [ 11 ,  5 ,  17 ,  18 ,  23 ,  50 ]   
unwanted _ num  =   { 11 ,  18 }  
list1  =   [ ele for ele in list1 if ele not in unwanted _ num ]  
print ( ""New list after removing unwanted numbers :  "" ,  list1 ) "
Write a python function to get the Cumulative sum of a list,"def Cumulative ( lists )  :  
    cu _ list  =   [  ]  
    length  =  len ( lists )  
    cu _ list  =   [ sum ( lists [ 0 : x : 1 ]  )  for x in range ( 0 ,  length + 1 )  ]  
    return cu _ list [ 1 :  ] "
"Write a python program to print if a string ""hello"" is present in the list"," 
l  =   [ 1 ,  2 . 0 ,  'hello' , 'have' ,  'a' ,  'good' ,  'day' ]  
s  =  'hello'  
if s in l :  
    print ( f' { s }  is present in the list' )  
else :  
    print ( f' { s }  is not present in the list' )  "
Write a python fuction to create an empty list,"def emptylist (  )  : 
   return list (  )   "
Write a python program to print a list with all elements as 5 and of length 10,"list1  =   [ 5 ]   *  10
print ( list1 ) "
Write a python program to reverse a list and print it.,"def Reverse ( lst )  :  
    return  [ ele for ele in reversed ( lst )  ]  
lst  =   [ 10 ,  11 ,  12 ,  13 ,  14 ,  15 ]  
print ( Reverse ( lst )  )  "
Write a python program to print odd numbers in a List,"list1  =   [ 10 ,  21 ,  4 ,  45 ,  66 ,  93 ,  11 ]   
odd _ nos  =  list ( filter ( lambda x :   ( x  %  2  !  =  0 )  ,  list1 )  )  
print ( ""Odd numbers in the list :  "" ,  odd _ nos ) "
Write a python program to print negative Numbers in a List,"list1  =   [ 11 ,   - 21 ,  0 ,  45 ,  66 ,   - 93 ]  
for num in list1 :  
    if num  <  0 :  
       print ( num ,  end  =  "" "" ) "
Write a python program for print all elements with digit 7.,"test _ list  =   [ 56 ,  72 ,  875 ,  9 ,  173 ]   
K  =  7
res  =   [ ele for ele in test _ list if str ( K )  in str ( ele )  ]  
print ( ""Elements with digit K  :  ""  +  str ( res )  ) "
Write a python program to find the sum and average of the list. Print the sum and average,"L  =   [ 4 ,  5 ,  1 ,  2 ,  9 ,  7 ,  10 ,  8 ]  
count  =  0
for i in L :  
    count  +  =  i 
avg  =  count / len ( L )  
print ( ""sum  =  "" ,  count )  
print ( ""average  =  "" ,  avg ) "
Write a python program to Remove Tuples of Length 1 from a list of tuples. Print the final list.,"test _ list  =   [  ( 4 ,  5 )  ,   ( 4 ,   )  ,   ( 8 ,  6 ,  7 )  ,   ( 1 ,   )  ,   ( 3 ,  4 ,  6 ,  7 )  ]  
K  =  1
res  =   [ ele for ele in test _ list if len ( ele )   !  =  K ]  
print ( ""Filtered list  :  ""  +  str ( res )  ) "
Write a python program to print a list of tuples from given list having number and its cube in each tuple,"list1  =   [ 1 ,  2 ,  5 ,  6 ]  
res  =   [  ( val ,  pow ( val ,  3 )  )  for val in list1 ]  
print ( res )  "
Write a python program to print the combination of tuples in list of tuples,"test _ list  =   [  (  [ 1 ,  2 ,  3 ]  ,  'gfg' )  ,   (  [ 5 ,  4 ,  3 ]  ,  'cs' )  ] 
res  =   [   ( tup1 ,  tup2 )  for i ,  tup2 in test _ list for tup1 in i  ]  
print ( ""The list tuple combination  :  ""  +  str ( res )  )  "
Write a python program to swap tuple elements in list of tuples. Print the output.,"test _ list  =   [  ( 3 ,  4 )  ,   ( 6 ,  5 )  ,   ( 7 ,  8 )  ]  
res  =   [  ( sub [ 1 ]  ,  sub [ 0 ]  )  for sub in test _ list ]  
print ( ""The swapped tuple list is  :  ""  +  str ( res )  )  "
write a python program to multiply three numbers,"num1  =  1 . 5
num2  =  6 . 3
num3  =   - 2 . 3
product  =  num1  *  num2  *  num3
print ( f'Product :   { product } ' ) "
"write a python function that when given two numbers, would divide the first number by second number and return the quotient and remainder","def divide _ first _ number _ by _ second ( num1 ,  num2 )  : 
    return  ( num1  /  /  num2 )  ,   ( num1  %  num2 ) "
write a python function to return the largest and smallest numbers in the given list and return None if the list is empty,"def largest _ and _ smallest ( list _ of _ nums )  : 
    if list _ of _ nums : 
        return max ( list _ of _ nums )  ,  min ( list _ of _ nums ) 
    else : 
        return"
write a python function that would read the given input file path and print its contents,"def read _ and _ print _ file ( filepath )  : 
    with open ( filepath ,  ""r"" )  as infile : 
        print (  infile . read (  )   ) "
write a python program that would print the first n positive integers using a for loop,"n  =  62
for num in range ( n )  : 
    print ( num ) "
write a python function that returns the input list sorted in ascending order,"def sort _ ascending ( list _ to _ be _ sorted )  : 
    return sorted ( list _ to _ be _ sorted ) "
write a python function that returns the input list sorted in descending order,"def sort _ descending ( list _ to _ be _ sorted )  : 
    return sorted ( list _ to _ be _ sorted ,  reverse = True ) "
"write a python function that would return the sum of first n natural numbers, where n is the input","def sum _ first _ n ( n )  : 
    return  (  n  *   ( n + 1 )   )   /  /  2"
"write a recursive python function that would return the sum of first n natural numbers, where n is the input","def sum _ first _ n _ recursive ( n )  : 
    if n  =  =  0 : 
        return 0
    return sum _ first _ n _ recursive ( n - 1 )   +  n"
"write a python function that would filter a list of dictionaries where a specified key equals given value, list_of_dictionaries, key and value are inputs to this function.","def filter _ with _ key _ value ( list _ of _ dicts ,  key ,  value )  : 
    return list (  filter (  lambda x :  x . get ( key )   =  =  value ,  list _ of _ dicts  )   ) "
write a python function that returns the square of a given input number,"def square ( x )  : 
    return x *  * 2"
write a python program that asks for user input and prints the given input,"a  =  input ( ""User Input"" ) 
print ( a ) "
write a python function shifts and scales all numbers in the given list by the given mean and standard deviation,"def shift _ and _ scale ( list _ of _ nums ,  mean ,  std )  : 
    return  [   ( x - mean )   /  std for x in list _ of _ nums  ] "
write a python function that takes in a list of sequences and zips each corresponding element from the list into a tuple and returns the list of such tuples,"def zip _  ( list _ of _ seq )  : 
    return list ( zip (  * list _ of _ seq )  ) "
write python program that would merge two dictionaries by adding the second one into the first,"a  =   { ""a"" :  1 ,  ""b"" :  3 } 
b  =   { ""c"" :  1 ,  ""d"" :  3 } 
a . update ( b ) "
write a python function that would reverse the given string,"def reverse _ string ( str _ to _ be _ reversed )  : 
    return str _ to _ be _ reversed [  :  :  - 1 ] "
"write a python program that would print ""Hello World""","print ( ""Hello World"" ) "
write a python program that would swap variable values,"a  =  10
b  =  15
a ,  b  =  b ,  a"
write a python program that iterates over a dictionary and prints its keys and values,"a  =   { ""a"" : 1 ,  ""b"" : 2 ,  ""c"" : 3 ,  ""d"" : 4 } 
for k ,  v in a . items (  )  : 
    print ( k ,  v ) "
write a python function that would print the ASCII value of a given character,"def print _ ascii ( char )  : 
    print ( ord ( char )  ) "
write a python function that takes in two numbers and returns their HCF,"def hcf ( num1 ,  num2 )  : 
    smaller  =  num1 if num1  <  num2 else num2
    for i in range ( 1 ,  smaller + 1 )  : 
        if  ( num1  %  i  =  =  0 )  and  ( num2  %  i  =  =  0 )  : 
            hcf  =  i
    return hcf"
write a python function that takes in two numbers and returns their LCM,"def lcm ( num1 ,  num2 )  : 
    bigger  =  num1 if num1  >  num2 else num2
    while True : 
        if  ( bigger  %  num1  =  =  0 )  and  ( bigger  %  num2  =  =  0 )  : 
            break
        bigger  +  =  1
    return bigger"
"write a recursive python function to calculate sum of natural numbers upto n, where n is an argument","def recursive _ sum ( n )  : 
    if n  <  =  1 : 
        return n
    else : 
        return n  +  recursive _ sum ( n - 1 ) "
write a python function that deletes the last element of a list and returns the list and the deleted element,"def delete _ last _ element ( list _ to _ be _ processed )  : 
    deleted _ element  =  list _ to _ be _ processed . pop (  ) 
    return list _ to _ be _ processed ,  deleted _ element"
write a python function that takes in a list and returns a list containing the squares of the elements of the input list,"def square _ list _ elements ( list _ to _ be _ squared )  : 
    return list (  map ( lambda x :  x *  * 2 ,  list _ to _ be _ squared )   ) "
write a python program that prints out natural numbers less than or equal to the given number using a while loop,"input _ num  =  27
while input _ num : 
    print ( input _ num ) 
    input _ num  -  =  1"
"write a python function that takes two numbers. The function divides the first number by the second and returns the answer. The function returns None, if the second number is 0","def divide ( num1 ,  num2 )  : 
    if num2  =  =  0 : 
        return
    else : 
        return num1  /  num2"
write a python program uses else with for loop,"seq  =  ""abcde""
for k in seq : 
    if k  =  =  ""f"" : 
        break
else : 
    print ( ""f Not Found ! "" ) "
Write a function to return the mean of numbers in a list,"def cal _ mean ( num _ list : list )  -  > float : 
    if num _ list : 
        return sum ( num _ list )  / len ( num _ list ) 
    else : 
        return None"
Write a function to return the area of a equilateral triangle,"def cal _ eq _ triangle _ area ( a : float )  -  > float : 
    if a : 
        return  ( 3 *  *  ( 1 / 2 )  )  *  ( a *  * 2 )  / 4
    else : 
        return None"
Write a function to return the area of a right angle triangle,"def cal _ rt _ triangle _ area ( base : float , height : float )  -  > float : 
    if base and height : 
        return  ( base * height )  / 2
    else : 
        return None"
Write a function to return the cartisian distance of a point from origin,"def cal _ dist _ from _ orign ( x : float , y : float )  -  > float : 
    return  ( x *  * 2 + y *  * 2 )  *  *  ( 1 / 2 ) "
Write a function to return the cartisian distance between two points,"def cal _ cart _ distance ( x1 : float , y1 : float , x2 : float , y2 : float )  -  > float : 
    return  (  ( x1 - x2 )  *  * 2 +  ( y1 - y2 )  *  * 2 )  *  *  ( 1 / 2 ) "
Write a function to return the type roots of a quadratic equation ax**2 + bx + c = 0,"def root _ type ( a : float , b : float , c : float )  : 
    if b *  * 2 - 4 * a * c  >  =  0 : 
        return 'real'
    else : 
        return 'imaginary'"
Write a function to return the sum of the roots of a quadratic equation ax**2 + bx + c = 0,"def sum _ of _ roots ( a : float , c : float )  : 
    if a : 
        return c / a
    else : 
        return None"
Write a function to return the product of the roots of a quadratic equation ax**2 + bx + c = 0,"def prod _ of _ roots ( a : float , b : float )  : 
    if a : 
        return  - b / a
    else : 
        return None"
Write a function to return the profit or loss based on cost price and selling price,"def find _ profit _ or _ loss ( cp , sp )  : 
    if cp  >  sp : 
        return 'loss' ,  cp - sp
    elif cp  <  sp : 
        return 'profit' ,  sp - cp
    else : 
        return 'no profit or loss' ,  0"
Write a function to return the area of a rectangle,"def cal _ area _ rect ( length ,  breadth )  : 
    return length * breadth"
Write a function to return the area of a square,"def cal _ area _ square ( side )  : 
    return side *  * 2"
Write a function to return the area of a rhombus with diagonals q1 and q2,"def cal _ area _ rhombus ( q1 , q2 )  : 
    return  ( q1 * q2 )  / 2"
Write a function to return the area of a trapezium with base a base b and height h between parallel sides,"def cal _ area _ trapezium ( a , b , h )  : 
    return h *  ( a + b )  / 2"
Write a function to return the area of a circle of raidus r,"def cal _ area _ circle ( r )  : 
    pi  =  3 . 14
    return pi * r *  * 2"
Write a function to return the circumference of a circle,"def cal _ circumference ( r )  : 
    pi  =  3 . 14
    return 2 * pi * r"
Write a function to return the perimeter of a rectangle,"def cal _ perimeter _ rect ( length ,  bredth )  : 
    return 2 *  ( length + bredth ) "
Write a function to return the perimeter of a triangle,"def cal _ perimeter _ triangle ( s1 , s2 , s3 )  : 
    return s1 + s2 + s3"
Write a function to return the perimeter of a square,"def cal _ perimeter _ square ( side )  : 
    return 4 * side"
Write a function to return the perimeter of an equilateral triangle,"def cal _ perimeter _ eq _ triangle ( a )  : 
    return 3 * a"
Write a function to return the perimeter of a isoscales triangle,"def cal _ perimeter _ iso _ triangle ( s1 , s2 )  : 
    return 2 * s1 + s2"
Write a function to return the area of an ellipse,"def cal _ area _ ellipse ( minor ,  major )  : 
    pi  =  3 . 14
    return pi *  ( minor * major ) "
Write a function to return the lateral surface area of a cylinder,"def cal _ cylinder _ lat _ surf _ area ( height , radius )  : 
    pi = 3 . 14
    return 2 * pi * radius * height"
Write a function to return the curved surface area of a cone,"def cal _ cone _ curved _ surf _ area ( slant _ height , radius )  : 
    pi = 3 . 14
    return pi * radius * slant _ height"
Write a function to return the total surface area of a cube of side a,"def cal _ surface _ area _ cube ( a )  : 
    return 6 *  ( a *  * 2 ) "
"Write a function to return the total surface area of a cuboid of length l, bredth b and height h","def cal _ surface _ area _ cuboid ( l , b , h )  : 
    return 2 *  ( l * b + b * h + h * l ) "
Write a function to return the surface area of a sphere,"def cal _ area _ sphere ( radius )  : 
    pi  =  3 . 14
    return 4 * pi *  ( radius *  * 2 ) "
Write a function to return the surface area of a hemi-sphere,"def cal _ area _ hemisphere ( radius )  : 
    pi  =  3 . 14
    return 2 * pi *  ( radius *  * 2 ) "
Write a function to return the total surface area of a cylinder,"def cal _ cylinder _ surf _ area ( height , radius )  : 
    pi = 3 . 14
    return 2 * pi * radius *  * 2 *  + 2 * pi * radius * height"
Write a function to return the lateral surface area of a cone,"def cal _ cone _ lateral _ surf _ area ( height , radius )  : 
    pi = 3 . 14
    return pi * radius *  (  (  ( height *  * 2 )  +  ( radius *  * 2 )  )  *  *  ( 1 / 2 )  ) "
Write a function to return the volume of a cylinder,"def cal _ cylinder _ volume ( height ,  radius )  : 
    pi = 3 . 14
    return pi *  ( radius *  * 2 )  * height"
Write a function to return the volume of a cone,"def cal _ cone _ volume ( height , radius )  : 
    pi = 3 . 14
    return pi *  ( radius *  * 2 )  * height / 3"
Write a function to return the volume of a hemi sphere,"def cal _ hemisphere _ volume ( radius : float )  -  > float : 
    pi = 3 . 14
    return  ( 2 / 3 )  * pi *  ( radius *  * 3 ) "
Write a function to return the volume of a sphere,"def cal _ sphere _ volume ( radius : float )  -  > float : 
    pi = 3 . 14
    return  ( 4 / 3 )  * pi *  ( radius *  * 3 ) "
Write a function to return the volume of a cuboid,"def cal _ cuboid _ volume ( length : float ,  breadth : float ,  height : float )  -  > float : 
    return length * breadth * height"
Write a function to return the volume of a cube,"def cal _ cube _ volume ( side : float )  -  > float : 
    return side *  * 3"
Write a function to return the speed of moving object based of distance travelled in given time,"def cal _ speed ( distance : float , time : float )  -  > float : 
    return distance / time"
Write a function to return the distance covered by a moving object based on speend and given time,"def cal _ distance ( time : float , speed : float )  -  > float : 
    return time * speed"
Write a function to return the time taken by a given of moving object based of distance travelled in given time,"def cal _ time ( distance : float , speed : float )  -  > float : 
    return distance / speed"
Write a function to return the torque when a force f is applied at angle thea and distance for axis of rotation to place force applied is r,"def cal _ torque ( force : float , theta : float , r : float )  -  > float : 
    import math
    return force * r * math . sin ( theta ) "
Write a function to return the angualr veolcity based on augualr distance travelled in radian unit and time taken,"def cal _ angular _ velocity ( angular _ dist : float , time : float )  -  > float : 
    return angular _ dist / time"
Write a function to calculate the focal length of a lense buy the distance of object and distance of image from lense,"def cal _ focal _ length _ of _ lense ( u : float , v : float )  -  > float : 
    return  ( u * v )  /  ( u + v ) "
Write a function to calculate the gravitational force between two objects of mass m1 and m2 and distance of r between them,"def cal _ gforce ( mass1 : float , mass2 : float ,  distance : float )  -  > float : 
    g  =  6 . 674 *  ( 10 )  *  *  (  - 11 ) 
    return  ( g * mass1 * mass2 )  /  ( distance *  * 2 ) "
Write a function to calculate the current in the curcit where the resistance is R and voltage is V,"def cal _ current ( resistance : float ,  voltage : float )  -  > float : 
    return voltage / resistance"
Write a function to calculate the total capacitance of capacitors in parallel in a given list,"def cal _ total _ cap _ in _ parallel ( cap _ list : list )  -  > float : 
    return sum ( cap _ list ) "
Write a function to calculate the total resistance of resistances in parallel in a given list,"def cal _ total _ res _ in _ parallel ( res _ list : list )  -  > float : 
    return sum (  [ 1 / r for r in res _ list ]  ) "
Write a function to calculate the total resistance of resistances in series in a given list,"def cal _ total _ res _ in _ series ( res _ list : list )  -  > float : 
    return sum ( res _ list ) "
Write a function to calculate the moment of inertia of a ring of mass M and radius R,"def cal _ mi _ ring ( mass : float , radius : float )  -  > float : 
    return mass *  ( radius *  * 2 ) "
Write a function to calculate the moment of inertia of a sphere of mass M and radius R,"def cal _ mi _ sphere ( mass : float , radius : float )  -  > float : 
    return  ( 7 / 5 )  * mass *  ( radius *  * 2 ) "
"Write a function to calculate the pressure P of ideal gas based on ideal gas equation - Volume V, and Temperatue T are given","def find _ pressure _ of _ ideal _ gas ( volume : float ,  temp : float , n : float )  -  > float : 
    r  =  8 . 3145  #  gas constant R
    return  ( n * r * temp )  / volume"
Write a function to calculate the volume V of ideal gas based on ideal gas equation Pressure P and Tempreature T given,"def find _ volume _ of _ ideal _ gas ( pressure : float ,  temp : float , n : float )  -  > float : 
    r  =  8 . 3145  #  gas constant R
    return  ( n * r * temp )  / pressure"
Write a function to calculate the Temprature T of ideal gas based on ideal gas equation Pressure P and Volume V given,"def find _ temp _ of _ ideal _ gas ( pressure : float ,  volume : float , n : float )  -  > float : 
    r  =  8 . 3145  #  gas constant R
    return  ( pressure * volume )  / n * r"
"Write a function to calculate the velocity of an object with initial velocity u, time t and acceleration a","def cal _ final _ velocity ( initial _ velocity : float , accelration : float , time : float )  -  > float : 
    return initial _ velocity  +  accelration * time"
"Write a function to calculate the displacement of an object with initial velocity u, time t and acceleration a","def cal _ displacement ( initial _ velocity : float , accelration : float , time : float )  -  > float : 
    return initial _ velocity * time  +   . 5 * accelration *  ( time )  *  * 2"
Write a function to calculate amount of radioactive element left based on initial amount and half life,"def cal _ half _ life ( initail _ quatity : float ,  time _ elapsed : float ,  half _ life : float )  -  > float : 
    return initail _ quatity *  (  ( 1 / 2 )  *  *  ( time _ elapsed / half _ life )  ) "
Write a function to calculate the new selling price based on discount percentage,"def cal _ sp _ after _ discount ( sp : float , discount : float )  -  > float : 
    return sp *  ( 1  -  discount / 100 ) "
"Write a function to calculate the simple interest for principal p, rate r and time in years y","def get _ si ( p : float ,  r : float ,  t : float )  -  > float : 
    return  ( p * r * t )  / 100"
"Write a function to calculate the compound interest for principal p, rate r and time in years y","def get _ ci ( p : float ,  r : float ,  t : float ,  n : float )  -  > float : 
    return round ( p *  (  ( 1 +  ( r /  ( n * 100 )  )  )  *  *  ( n * t )  )   -  p , 2 ) "
Write a function to calculate the energy released by converting mass m in kg to energy,"def cal _ energy _ by _ mass ( mass : float )  -  > float : 
    c  =  300000
    return mass  *   ( c *  * 2 ) "
Write a function to calculate the kinetic energy of an object of mass m and velocity v,"def cal _ ke ( mass : float , velocity : float )  -  > float : 
    return  ( mass *  ( velocity )  *  * 2 )  / 2"
Write a function to calculate the potential energy of an object of mass m at height h,"def cal _ pe ( mass : float , height : float )  -  > float : 
    g  =  9 . 8
    return  ( mass * g * height ) "
Write a function to calculate the electrostatic force between two charged particles with charge q1 and q2 at a distance d apart,"def cal _ electrostatic _ force ( q1 , q2 , d )  : 
    k  =  9 *  ( 10 *  * 9 ) 
    return  ( k * q1 * q2 )  /  ( d *  * 2 ) "
Write a function to calculate the density given mass and volume,"def cal _ density ( mass , volume )  : 
    return  ( mass / volume ) "
Write a function to convert the temprature celsius 'c' to fahrenheit 'f' or fahrenheit to celsius,"def temp _ converter ( temp , temp _ given _ in  =  'f' )  : "
Return the converted temprature,"    
    if temp _ given _ in . lower (  )   =  =  'f' :   #  Convert to C
        return  ( temp  -  32 )   *   ( 5 / 9 ) 
    else :   #  Convert to F
        return  ( temp  *  9 / 5 )   +  32"
Write a function to find power of number using recursion,"def power ( N ,  P )  : 
    if  ( P  =  =  0 or P  =  =  1 )  : 
        return N
    else : 
        return  ( N  *  power ( N ,  P  -  1 )  ) 
print ( power ( 5 ,  2 )  ) "
Write a function to find time for a given angle.,"def calcAngle ( hh ,  mm )  : 
    hour _ angle  =  0 . 5  *   ( hh  *  60  +  mm ) 
    minute _ angle  =  6  *  mm
    angle  =  abs ( hour _ angle  -  minute _ angle ) 
    angle  =  min ( 360  -  angle ,  angle ) 
    return angle"
write a python function to make permutations from a list with given length,"def get _ permutations ( data _ list ,  l = 2 )  : 
    return list ( permutations ( data _ list ,  r = l )  ) "
write a python program to get all possible permutations of size of the string in lexicographic sorted order.,"def get _ ordered _ permutations ( word ,  k )  : 
     [ print ( '' . join ( x )  )  for x in sorted ( list ( permutations ( word ,  int ( k )  )  )  )  ] "
"write a python program to get all possible combinations, up to size of the string in lexicographic sorted order.","def get _ ordered _ combinations ( string ,  k )  : 
     [ print ( '' . join ( x )  )  for i in range ( 1 ,  int ( k )   +  1 )  for x in combinations ( sorted ( string )  ,  i )  ] "
write a python function to get all possible size replacement combinations of the string in lexicographic sorted order.,"def get _ ordered _ combinations _ with _ replacement ( string ,  k )  : 
     [ print ( '' . join ( x )  )  for x in combinations _ with _ replacement ( sorted ( string )  ,  int ( k )  )  ] "
write a python function for a string to swap the case of all letters.,"def swap _ case ( s )  : 
    return '' . join ( x for x in  ( i . lower (  )  if i . isupper (  )  else i . upper (  )  for i in s )  ) "
write a python function to check if given set is subset or not,"def check _ subset (  )  : 
    for  _  in range ( int ( input (  )  )  )  : 
        x ,  a ,  z ,  b  =  input (  )  ,  set ( input (  )  . split (  )  )  ,  input (  )  ,  set ( input (  )  . split (  )  ) 
    print ( a . issubset ( b )  ) "
"write a function to compress a given string. Suppose a character 'c' occurs consecutively X times in the string. Replace these consecutive occurrences of the character 'c' with  (X, c) in the string.","def compress ( text )  : 
    from itertools import groupby
    for k ,  g in groupby ( text )  : 
        print ( "" (  {  }  ,   {  }  ) "" . format ( len ( list ( g )  )  ,  k )  ,  end = "" "" ) "
write a python function to count 'a's in the repetition of a given string 'n' times.,"def repeated _ string ( s ,  n )  : 
    return s . count ( 'a' )   *   ( n  /  /  len ( s )  )   +  s [  : n  %  len ( s )  ]  . count ( 'a' ) "
write a python function that given five positive integers and find the minimum and maximum values that can be calculated by summing exactly four of the five integers.,"def min _ max (  )  : 
    nums  =   [ int ( x )  for x in input (  )  . strip (  )  . split ( ' ' )  ] 
    print ( sum ( nums )   -  max ( nums )  ,  sum ( nums )   -  min ( nums )  ) "
Write a python function to Count the Number of Lines in a Text File,"def check _ lines (  )  : 
    fname  =  input ( ""file name :  "" ) 
    num _ lines  =  0
    with open ( fname ,  'r' )  as f : 
        for line in f : 
            num _ lines  +  =  1
    print ( ""Number of lines  =  "" ,  num _ lines ) "
Write a python function that Counts the Number of Blank Spaces in a Text File,"def count _ blank _ space (  )  : 
    fname  =  input ( ""file name : "" ) 
    count  =  0
    with open ( fname ,  'r' )  as f : 
        for line in f : 
            count  +  =  line . count ( ' ' ) 
    return count"
Write a python function to check if 2 strings are anagrams or not,"def anagram ( s1 ,  s2 )  : 
    if sorted ( s1 )   =  =  sorted ( s2 )  : 
        return True
    else : 
        return False"
write a python function to get the most common word in text,"def most _ common ( text )  : 
    c  =  Counter ( text ) 
    return c . most _ common ( 1 ) "
write a python function to do bitwise multiplication on a given bin number by given shifts,"def bit _ mul ( n ,  shift )  : 
    return n  <  <  shift"
write a python function for bitwise division with given number of shifts,"def bit _ div ( n ,  shift )  : 
    return n  >  >  shift"
write a python function to get dot product between two lists of numbers,"def dot _ product ( a ,  b )  : 
    return sum ( e [ 0 ]   *  e [ 1 ]  for e in zip ( a ,  b )  ) "
write a python function to strip punctuations from a given string,"def strip _ punctuations ( s )  : 
    return s . translate ( str . maketrans ( '' ,  '' ,  string . punctuation )  ) "
write a python function that returns biggest character in a string,"from functools import reduce
def biggest _ char ( string )  : 
    if not isinstance ( string ,  str )  : 
        raise TypeError
    return reduce ( lambda x ,  y :  x if ord ( x )   >  ord ( y )  else y ,  string ) "
write a python function to Count the Number of Digits in a Number,"def count _ digits (  )  : 
    n  =  int ( input ( ""Enter number : "" )  ) 
    count  =  0
    while n  >  0 : 
        count  =  count  +  1
        n  =  n  /  /  10
    return count"
write a python function to count number of vowels in a string,"def count _ vowels ( text )  : 
    v  =  set ( 'aeiou' ) 
    for i in v : 
        print ( f' \ n  { i }  occurs  { text . count ( i )  }  times' ) "
write a python function to generate SHA256 for given text,"def get _ sha256 ( text )  : 
    import hashlib
    return hashlib . sha256 ( text )  . hexdigest (  ) "
write a python function to check if SHA256 hashed value is valid for given data or not,"def check _ sha256 _ hash ( hashed ,  data )  : 
    import hashlib
    return True if hashed  =  =  hashlib . sha256 ( data . encode (  )  )  . hexdigest (  )  else False"
write a python function with generator for an infinite sequence,"def infinite _ sequence (  )  : 
    n  =  0
    while True : 
        yield n
        n  +  =  1
import uuid"
write a python function to generate a Unique identifier across space and time in this cosmos.,"def get _ uuid (  )  : 
    return uuid . uuid4 (  ) 
import secrets"
write a python function to generate cryptographically strong pseudo-random data,"def get _ cryptographically _ secure _ data ( n = 101 )  : 
    return secrets . token _ bytes ( n )  ,  secrets . token _ hex ( n ) "
Write a python program to Read and print the Contents of a File,"a = str ( input ( ""Enter file name  . txt extension : "" )  ) 
file2 = open ( a , 'r' ) 
line = file2 . readline (  ) 
while ( line !  = """" )  : 
    print ( line ) 
    line = file2 . readline (  ) 
file2 . close (  ) "
Write a python program to Count the Number of Lines in a Text File,"fname  =  input ( ""Enter file name :  "" ) 
num _ lines  =  0
with open ( fname ,  'r' )  as f : 
    for line in f : 
        num _ lines  +  =  1
print ( ""Number of lines : "" ) 
print ( num _ lines ) "
Write a python function to Copy the Contents of One File into Another,"def copy ( from _ file ,  to _ file )  : 
    with open ( from _ file )  as f : 
        with open ( to _ file ,  ""w"" )  as f1 : 
            for line in f : 
                f1 . write ( line ) "
Write a python function that Capitalize the First Letter of Every Word in the File,"def capitalize ( fname )  : 
    with open ( fname ,  'r' )  as f : 
        for line in f : 
            l = line . title (  ) 
            print ( l ) "
Write a python function that prints the Contents of a File in Reverse Order,"def reverse _ content ( filename )  : 
    for line in reversed ( list ( open ( filename )  )  )  : 
        print ( line . rstrip (  )  ) "
Write a python Program to Flatten and print a List,"a =  [  [ 1 ,  [  [ 2 ]  ]  ,  [  [  [ 3 ]  ]  ]  ]  ,  [  [ 4 ]  , 5 ]  ] 
flatten = lambda l :  sum ( map ( flatten , l )  ,  [  ]  )  if isinstance ( l , list )  else  [ l ] 
print ( flatten ( a )  ) "
Write a Python function to print the GSD of Two Numbers,"def gcd ( a , b )  : 
    if ( b =  = 0 )  : 
        return a
    else : 
        return gcd ( b , a % b ) "
Write a Python function to Find the Power of a Number Using Recursion,"def power ( base , exp )  : 
    if ( exp =  = 1 )  : 
        return ( base ) 
    if ( exp !  = 1 )  : 
        return ( base * power ( base , exp - 1 )  ) "
Write a Python function to Count and print the Number of Vowels Present in a String using Sets,"def count _ vowels ( s )  : 
    count  =  0
    vowels  =  set ( ""aeiou"" ) 
    for letter in s : 
        if letter in vowels : 
            count  +  =  1
    return count"
Write a Python Program to prints Common Letters in Two Input Strings,"s1 = 'python'
s2 = 'schoolofai'
a = list ( set ( s1 )  & set ( s2 )  ) 
print ( ""The common letters are : "" ) 
for i in a : 
    print ( i ) "
Write a Python Program that Prints which Letters are in the First String but not in the Second,"s1 = 'python'
s2 = 'schoolofai'
a = list ( set ( s1 )  - set ( s2 )  ) 
print ( ""The letters are : "" ) 
for i in a : 
    print ( i ) "
Write a Python Program to Concatenate Two Dictionaries Into One,"def concat _ dic ( d1 ,  d2 )  : 
    return d1 . update ( d2 ) "
Write a Python Program to Multiply All the Items in a Dictionary,"def mul _ dict ( d )  : 
    tot = 1
    for i in d :     
        tot = tot * d [ i ] 
    return tot"
Write a Python Program to Remove the Given Key from a Dictionary,"def remove _ item _ dict ( d ,  key )  : 
    if key in d :  
        del d [ key ] 
    else : 
        print ( ""Key not found ! "" ) 
        exit ( 0 ) "
Write a Python Program to Map Two Lists into a Dictionary,"def map _ dict ( keys ,  values )  : 
    return dict ( zip ( keys , values )  ) "
Write a Python Program to Remove the nth Index Character from a Non-Empty String,"def remove ( string ,  n )  :   
      first  =  string [  : n ]    
      last  =  string [ n + 1 :  ]   
      return first  +  last"
Write a Python Program to Detect if Two Strings are Anagrams,"def anagram _ check ( s1 ,  s2 )  : 
    if ( sorted ( s1 )  =  = sorted ( s2 )  )  : 
        return True
    else : 
        return False"
Write a Python Program to Form a New String where the First Character and the Last Character have been Exchanged,"def change ( string )  : 
      return string [  - 1 :  ]   +  string [ 1 :  - 1 ]   +  string [  : 1 ] "
Write a Python Program to Remove the Characters of Odd Index Values in a String,"def modify ( string )  :   
    final  =  """"   
    for i in range ( len ( string )  )  :   
        if i  %  2  =  =  0 :   
            final  =  final  +  string [ i ]   
    return final"
Write a Python Program to Count and print Number of Lowercase Characters in a String,"string = 'This is an Assignment'
count = 0
for i in string : 
      if ( i . islower (  )  )  : 
            count = count + 1
print ( ""The number of lowercase characters is : "" ) 
print ( count ) "
Write a Python Program to Find the Intersection of Two Lists,"def main ( alist ,  blist )  : 
    def intersection ( a ,  b )  : 
        return list ( set ( a )   &  set ( b )  ) 
    return intersection ( alist ,  blist ) "
Write a Python Program to Create a List of Tuples with the First Element as the Number and Second Element as the Square of the Number using list comprehension,"l _ range = 2
u _ range = 5
a =  [  ( x , x *  * 2 )  for x in range ( l _ range , u _ range + 1 )  ] "
Write a Python Program to print all Numbers in a Range which are Perfect Squares and Sum of all Digits in the Number is Less than 10,"l = 6
u = 9
a =  [ x for x in range ( l , u + 1 )  if  ( int ( x *  * 0 . 5 )  )  *  * 2 =  = x and sum ( list ( map ( int , str ( x )  )  )  )  < 10 ] 
print ( a ) "
Write a Python Program to Swap the First and Last Value of a List,"a =  [ 2 ,  3 ,  8 ,  9 ,  2 ,  4 ,  6 ] 
n  =  len ( a ) 
temp = a [ 0 ] 
a [ 0 ]  = a [ n - 1 ] 
a [ n - 1 ]  = temp
print ( ""New list is : "" ) 
print ( a ) "
Write a Python Program to Remove and print the Duplicate Items from a List,"a =  [ 2 ,  3 ,  8 ,  9 ,  2 ,  4 ,  6 ] 
b  =  set (  ) 
unique  =   [  ] 
for x in a : 
    if x not in b : 
        unique . append ( x ) 
        b . add ( x ) 
print ( ""Non - duplicate items : "" ) 
print ( unique ) "
Write a Python Program to Read a List of Words and Return the Length of the Longest One,"a =  [ 'the' ,  'tsai' ,  'python' ] 
max1 = len ( a [ 0 ]  ) 
temp = a [ 0 ] 
for i in a : 
    if ( len ( i )  > max1 )  : 
       max1 = len ( i ) 
       temp = i
print ( ""The word with the longest length is : "" ) 
print ( temp ) "
Write a Python function to Check Whether a Given Year is a Leap Year,"def leapyear _ check ( year )  : 
    if ( year % 4 =  = 0 and year % 100 !  = 0 or year % 400 =  = 0 )  : 
        return True
    else : 
        return False"
Write a Python Program to print all the Divisors of an Integer,"n = 60
print ( ""The divisors of the number are : "" ) 
for i in range ( 1 , n + 1 )  : 
    if ( n % i =  = 0 )  : 
        print ( i ) "
Write a Python Program to Check if a Number is an Armstrong Number,"def amstrong _ check ( n )  : 
    a = list ( map ( int , str ( n )  )  ) 
    b = list ( map ( lambda x : x *  * 3 , a )  ) 
    if ( sum ( b )  =  = n )  : 
        return True
    else : 
        return False"
Write a Python Program to Check if a Number is a Perfect Number,"def perfect _ no _ check ( n )  : 
    sum1  =  0
    for i in range ( 1 ,  n )  : 
        if ( n  %  i  =  =  0 )  : 
            sum1  =  sum1  +  i
    if  ( sum1  =  =  n )  : 
        return True
    else : 
        return False"
Write a Python Program to Check if a Number is a Prime Number,"def prime _ no _ check ( a )  : 
    k = 0
    for i in range ( 2 , a /  / 2 + 1 )  : 
        if ( a % i =  = 0 )  : 
            k = k + 1
    if ( k <  = 0 )  : 
        return True
    else : 
        return False"
Write a Python Program to print the Sum of First N Natural Numbers,"n = 7
sum1  =  0
while ( n  >  0 )  : 
    sum1 = sum1 + n
    n = n - 1
print ( ""The sum of first n natural numbers is"" , sum1 ) "
Write a Python Program to print the Number of Times a Particular Number Occurs in a List,"a =  [ 2 ,  3 ,  8 ,  9 ,  2 ,  4 ,  6 ] 
k = 0
num = int ( input ( ""Enter the number to be counted : "" )  ) 
for j in a : 
    if ( j =  = num )  : 
        k = k + 1
print ( ""Number of times"" , num , ""appears is"" , k ) "
Write a Python Program to test and print Collatz Conjecture for a Given Number,"def collatz ( n )  : 
    while n  >  1 : 
        print ( n ,  end = ' ' ) 
        if  ( n  %  2 )  : 
            n  =  3 * n  +  1
        else : 
            n  =  n /  / 2
    print ( 1 ,  end = '' ) "
Write a Python function to Count Set Bits in a Number,"def count _ set _ bits ( n )  : 
    count  =  0
    while n : 
        n  &  =  n  -  1
        count  +  =  1
    return count"
Write a Python Program to Convert Gray Code to Binary,"def gray _ to _ binary ( n )  : 
    """"""Convert Gray codeword to binary and return it . """"""
    n  =  int ( n ,  2 ) 
    mask  =  n
    while mask  !  =  0 : 
        mask  >  >  =  1
        n  ^  =  mask
    return bin ( n )  [ 2 :  ] "
Write a Python Program to Convert Binary to Gray Code,"def binary _ to _ gray ( n )  : 
    """"""Convert Binary to Gray codeword and return it . """"""
    n  =  int ( n ,  2 ) 
    n  ^  =   ( n  >  >  1 ) 
    return bin ( n )  [ 2 :  ] "
Write a Python Program to print the Reverse a Given Number,"n = 1023
rev = 0
while ( n > 0 )  : 
    dig = n % 10
    rev = rev * 10 + dig
    n = n /  / 10
print ( ""Reverse of the number : "" , rev ) "
Write a Python function to calculate dot product of two given sequence,"def dot _ product ( a ,  b )  : 
    return sum (  e [ 0 ]  * e [ 1 ]  for e in zip ( a ,  b )  ) "
Write a Python function to strip vowels from a string,"def vowel _ stripping ( string )  : 
    '''This function takes a string as an input strips out vowels and returns stripted out string'''
    return """" . join (  [ x for x in string if x not in ( 'a' , 'e' , 'i' , 'o' , 'u' )  ]  ) "
Write a Python function that calculate interior angle of a equilateral polygon,"def interior _ angle ( no _ of _ sides )  : 
    return  ( no _ of _ sides  -  2 )   *  180  /  no _ of _ sides"
Write a Python function that calculate side length of a equilateral polygon,"import math
def side _ length ( no _ of _ sides ,  circumradius )  : 
    return 2  *  circumradius  *  math . sin ( math . pi  /  no _ of _ sides ) "
write a python function to print every alternate number in the user provided list,"def print _ alternate _ numbers ( list1 )  : 
	print ( list1 [  :  : 2 ]  ) "
write a python function  to convert a list of string list to a string list,"def convert _ to _ string _ list ( list _ of _ string _ list )  : 
	res  =   [ '' . join ( str ( b )  for b in eval ( a )  )  for a in list _ of _ string _ list ]  
	return res"
write a python program to clear a list,"given _ list  -   =   [ 6 ,  0 ,  4 ,  1 ]  
given _ list . clear (  ) "
write a python program to sort and print a list,"given _ list  -   =   [ 6 ,  0 ,  4 ,  1 ]  
sorted _ list  =  sorted ( given _ list ) 
print ( f'sorted list is  { sorted _ list } ' ) "
Write Python Program to print if a Number is Odd or Even,"num  =  102
if  ( num  %  2 )   =  =  0 : 
   print ( f"" { num }  is Even"" ) 
else : 
   print ( f"" { num }  is Odd"" ) "
write a python Program to print the ASCII value of the given character,"c  =  'p'
print ( ""The ASCII value of '""  +  c  +  ""' is"" ,  ord ( c )  ) "
write Python Program to print the Sum of 10 Natural Numbers,"num  =  10
if num  <  0 : 
   print ( ""Enter a positive number"" ) 
else : 
   sum  =  0
   while ( num  >  0 )  : 
       sum  +  =  num
       num  -  =  1
   print ( ""The sum is"" ,  sum ) "
write  a Python Program to Swap Two Variables and print them,"x  =  5
y  =  10
temp  =  x
x  =  y
y  =  temp
print ( 'The value of x after swapping :   {  } ' . format ( x )  ) 
print ( 'The value of y after swapping :   {  } ' . format ( y )  ) "
Write a Python Program to Convert Kilometers to Miles,"kilometers  =  10000
conv _ fac  =  0 . 621371
miles  =  kilometers  *  conv _ fac
print ( ' % 0 . 2f kilometers is equal to  % 0 . 2f miles'  %  ( kilometers , miles )  ) "
Write Python Program to Convert Celsius To Fahrenheit,"celsius  =  37 . 5
fahrenheit  =   ( celsius  *  1 . 8 )   +  32
print ( ' % 0 . 1f degree Celsius is equal to  % 0 . 1f degree Fahrenheit'  %  ( celsius , fahrenheit )  ) "
Write Python Program to print the Square Root of a number,"num  =  8 
num _ sqrt  =  num  *  *  0 . 5
print ( 'The square root of  % 0 . 3f is  % 0 . 3f' %  ( num  , num _ sqrt )  ) "
Write python function to count number of 1s in binary representation of an integer.,"def  countSetBits ( n )  :  
    count  =  0
    while  ( n )  :  
        count  +  =  n  &  1
        n  >  >  =  1
    return count "
Write Python function to check if a string is palindrome or not,"def isPalindrome ( s )  : 
    return s  =  =  s [  :  :  - 1 ] "
Write a python program to reverse a string,"s  =  ""i like this program very much""
words  =  s . split ( ' ' ) 
string  =  [  ] 
for word in words : 
    string . insert ( 0 ,  word ) 
print ( ""Reversed String : "" ) 
print ( "" "" . join ( string )  ) "
Write a python function to merge two Dictionaries,"def Merge ( dict1 ,  dict2 )  : 
    return ( dict2 . update ( dict1 )  ) "
Write a Python function to count number of lists in a list of lists,"def countList ( lst )  :  
    count  =  0
    for el in lst :  
        if type ( el )  =  =  type (  [  ]  )  :  
            count +  =  1          
    return count "
Write a Python program to print largest element in an array,"arr  =   [ 10 ,  324 ,  45 ,  90 ,  9808 ]  
print ( f'the largest element in the array is  { max ( arr )  } ' ) "
Write a Python function to interchange first and last elements in a list,"def swapList ( newList )  :  
    size  =  len ( newList )  
    temp  =  newList [ 0 ]  
    newList [ 0 ]   =  newList [ size  -  1 ]  
    newList [ size  -  1 ]   =  temp 
    return newList"
Write a Python function to multiply all values in the list,"def multiplyList ( myList )   : 
    result  =  1
    for x in myList : 
         result  =  result  *  x 
    return result "
write a Python program to print positive numbers in a list,"list1  =   [ 11 ,   - 21 ,  0 ,  45 ,  66 ,   - 93 ]  
for num in list1 :  
    if num  >  =  0 :  
       print ( num ,  end  =  "" "" )  "
Write a Python program to print negative numbers in a list,"list1  =   [ 11 ,   - 21 ,  0 ,  45 ,  66 ,   - 93 ]  
for num in list1 :  
    if num  <  0 :  
       print ( num ,  end  =  "" "" )  	"
Write a python program to Count occurrences of given element in a list,"def countX ( lst ,  x )  :  
    return lst . count ( x ) "
Write a python function to remove numeric digits from given string,"def removedigits ( ini _ string )  : 
	res  =  '' . join (  [ i for i in ini _ string if not i . isdigit (  )  ]  )  
    return res"
Write a Python program to print the number words in a sentence,"test _ string  =  ""India is my country""
res  =  len ( test _ string . split (  )  )  
print  ( f""The number of words in string are  :   { res } "" )  "
Write a python function to Check whether triangle is valid or not if three points are given,"def checkTriangle ( x1 ,  y1 ,  x2 ,  y2 ,  x3 ,  y3 )  :  
    a  =   ( x1  *   ( y2  -  y3 )   +  x2  *   ( y3  -  y1 )   +  x3  *   ( y1  -  y2 )  )  
    if a  =  =  0 :  
        return False 
    else :  
        return True"
Write a python function to Check whether triangle is valid or not if sides are given,"def checkValidity ( a ,  b ,  c )  :   
    if  ( a  +  b  <  =  c )  or  ( a  +  c  <  =  b )  or  ( b  +  c  <  =  a )   :  
        return False
    else :  
        return True "
Write a python function to extract odd length words in String,"def findoddlenthwords ( test _ str )  : 
	res  =   [  ]  
	for ele in test _ str . split (  )  :  
		if len ( ele )   %  2  :  
			res . append ( ele )  
	return res"
Write a python function to extract even length words in String,"def findevenlenthwords ( test _ str )  : 
	res  =   [  ]  
	for ele in test _ str . split (  )  :  
		if len ( ele )   %  2  =  =  0 :  
			res . append ( ele )   
	return res"
Write a python program to print Words lengths in String,"test _ string  =  ""India is my country""
res  =  list ( map ( len ,  test _ string . split (  )  )  )  
print  ( ""The list of words lengths is  :  ""  +  str ( res )  )  "
Write a python program to check if a number is positive or negative,"num  =  15
if num  >  0 : 
   print ( f""Positive number"" ) 
elif num  =  =  0 : 
   print ( f""Zero"" ) 
else : 
   print ( f""Negative number"" ) "
write a Python Program to Display the multiplication Table of given number,"num  =  12
for i in range ( 1 ,  11 )  : 
   print ( num ,  'x' ,  i ,  ' = ' ,  num * i )    "
write a Python function to Convert Decimal to Binary,"def convertToBinary ( n )  : 
   if n  >  1 : 
       convertToBinary ( n /  / 2 ) 
   print ( n  %  2 , end  =  '' ) "
write a Python Program to Count and print the Number of Each Vowel in the input string,"vowels  =  'aeiou'
ip _ str  =  'India is my country'
ip _ str  =  ip _ str . casefold (  ) 
count  =   {  }  . fromkeys ( vowels , 0 ) 
for char in ip _ str : 
   if char in count : 
       count [ char ]   +  =  1
print ( count ) "
Write a Python function to compute simple interest,"def simple _ interest ( p , t , r )  :  
    si  =   ( p  *  t  *  r )  / 100
    return si "
Write a Python function to compute compound interest,"def compound _ interest ( principle ,  rate ,  time )  :   
    Amount  =  principle  *   ( pow (  ( 1  +  rate  /  100 )  ,  time )  )  
    CI  =  Amount  -  principle 
    return CI"
Write a Python function for Program to find area of a circle,"def findArea ( r )  :  
    PI  =  3 . 142
    return PI  *   ( r * r ) "
Write a python function to find Area Of Rectangle,"def areaRectangle ( a ,  b )  :  
    return  ( a  *  b )  "
Write a python function to find perimeter Of Rectangle,"def perimeterRectangle ( a ,  b )  :  
    return  ( 2  *   ( a  +  b )  ) "
Write a python program to print the Sum of digits of a number,"n  =  12345
q  =  0
while ( n > 0 )  : 
 r = n % 10
 q = q + r
 n = n /  / 10
print ( ""Sum of digits is :  "" + str ( q )  ) 	"
Write a python program to sort alphabetically the words form a string provided by the user,"def sortwords ( my _ str )  : 
	words  =  my _ str . split (  ) 
	words . sort (  ) 
	return ' ' . join ( words ) "
"Write a python function to replace all the spaces in an entered string with a hyphen ""-""","def replacetext ( string )  : 
    string  =  string . replace ( "" "" ,  "" - "" ) 
    return string"
write a python program to rotate a list 10 times and print it,"list  =   [ 11 , 22 , 33 , 44 , 55 , 66 , 77 , 88 , 99 ] 
n  =  10
finalList  =   [  ] 
for i in range ( 0 ,  N )  : 
    finalList . append ( list [  ( i + d )  % N ]  ) 
print ( finalList ) "
write a Python Program to Add two binary numbers and print the sum,"num1  =  '00001'
num2  =  '10001'
sum  =  bin ( int ( num1 , 2 )   +  int ( num2 , 2 )  ) 
print ( sum ) "
write a Python Program to Calculate and print the Average of Numbers in a Given List,"a =   [ 11 , 22 , 33 , 44 , 55 , 66 , 77 , 88 , 99 ] 
avg = sum ( a )  / len ( a ) 
print ( ""Average of elements in the list"" , round ( avg , 2 )  ) "
write a Python function to convert binary to Gray codeword,"def binary _ to _ gray ( n )  : 
    n  =  int ( n ,  2 ) 
    n  ^  =   ( n  >  >  1 ) 
    return bin ( n )  [ 2 :  ] "
write a Python function to convert Gray code to binary,"def gray _ to _ binary ( n )  : 
    n  =  int ( n ,  2 )   #  convert to int
    mask  =  n
    while mask  !  =  0 : 
        mask  >  >  =  1
        n  ^  =  mask
    return bin ( n )  [ 2 :  ] "
write a Python Program to Replace all Occurrences of ‘a’ with $ in a String,"def replacestring ( txt )  : 
	return txt . replace ( 'A' , ' $ ' ) "
write a python program to Print Quotient and Remainder of two numbers,"a  =  15
b  =  4
quotient = a /  / b
remainder = a % b
print ( ""Quotient is : "" , quotient ) 
print ( ""Remainder is : "" , remainder ) "
write a python program to print the Area of a Triangle Given All Three Sides,"a  =  15
b  =  9
c  =  7
s =  ( a + b + c )  / 2
area =  ( s *  ( s - a )  *  ( s - b )  *  ( s - c )  )   *  *  0 . 5
print ( ""Area of the triangle is :  "" , round ( area , 2 )  ) "
write a Python Program to print all the Divisors of an Integer,"n  =  20
print ( ""The divisors of the number are : "" ) 
for i in range ( 1 , n + 1 )  : 
    if ( n % i =  = 0 )  : 
        print ( i ) 		"
Write a python program to print dimension in centimeter to inches,"cm  =  50
inches = 0 . 394 * cm
print ( ""The dimension in inches "" , round ( inches , 2 )  ) "
Write a python program to print dimension in centimeter to feet,"cm  =  50
feet = 0 . 0328 * cm
print ( ""The dimension in feet "" , round ( feet , 2 )  ) "
write Python Program to print the Union of two Lists,"l1  =   [ 11 , 22 , 33 , 44 ] 
l2  =   [ 55 , 66 , 77 , 88 ] 
union  =  list ( set (  )  . union ( l1 , l2 )  )  
print ( 'The Union of two lists is : ' , union ) "
write a python function to Check if a Substring is Present in a Given String,"def checksubstring ( string , sub _ string )  : 
	if ( string . find ( sub _ str )  =  =  - 1 )  : 
      return False
	else : 
		return True"
Write a Python Program to Multiply All the Items in a Dictionary and print the result,"d =  { 'A' : 10 , 'B' : 10 , 'C' : 239 } 
tot = 1
for i in d :     
    tot = tot * d [ i ] 
print ( tot ) "
Write Python Program to print Common Letters in Two Input Strings,"s1 = ""Trump was the American President""
s2 = ""Who is the American President now ? ""
a = list ( set ( s1 )  & set ( s2 )  ) 
print ( ""The common letters are : "" ) 
for i in a : 
    print ( i ) "
Write a Python function to Find Whether a Number is a Power of Two,"def is _ power _ of _ two ( n )  : 
    if n  <  =  0 : 
        return False
    else : 
        return n  &   ( n  -  1 )   =  =  0"
Write a Python Program to Search the Number of Times a Particular Number Occurs in a List,"a  =   [ 2 , 3 , 2 , 3 , 4 , 4 , 5 , 5 , 6 , 6 , 6 ] 
k = 0
num = 6
for j in a : 
    if ( j =  = num )  : 
        k = k + 1
print ( ""Number of times"" , num , ""appears is"" , k ) "
write Python function to Clear the Rightmost Set Bit of a Number,"def clear _ rightmost _ set _ bit ( n )  : 
    return n  &   ( n  -  1 ) "
Write a Python function to Find the Intersection of Two Lists,"def intersection ( a ,  b )  : 
    return list ( set ( a )   &  set ( b )  ) "
write a Python function to Sort a List According to the Length of the Elements.,"def sortlistwithlen ( list )  : 
	list . sort ( key = len ) 
	return list"
Write a Python Program to Print an Identity Matrix,"n  =  3
for i in range ( 0 , n )  : 
    for j in range ( 0 , n )  : 
        if ( i =  = j )  : 
            print ( ""1"" , sep = "" "" , end = "" "" ) 
        else : 
            print ( ""0"" , sep = "" "" , end = "" "" )  	"
Write a Python Program to print Those Numbers which are Divisible by 7 and Multiple of 5 in a Given Range of Numbers,"lower  =  1
upper  =  100
for i in range  ( lower , upper + 1 )  : 
    if ( i % 7 =  = 0 and i % 5 =  = 0 )  : 
        print ( i ) "
write Python function to find the Length of the Longest One element in the list,"def findlongest ( list )  : 
	max1 = len ( list [ 0 ]  ) 
	temp = list [ 0 ] 
	for i in list : 
		if ( len ( i )  > max1 )  : 
		   max1 = len ( i ) 
		   temp = i
	return temp"
write a Python function to Detect if Two Strings are Anagrams,"def check _ if _ anagram ( s1 , s2 )  : 
	if ( sorted ( s1 )  =  = sorted ( s2 )  )  : 
		  return True
	else : 
		  return False"
Write Python Program to print the Length of a String Without Using a Library Function,"string =  ""United States of America""
count = 0
for i in string : 
      count = count + 1
print ( ""Length of the string is : "" ) 
print ( count ) "
Write a Python Program to Find the Second Largest Number in a List,"a =   [ 11 , 22 , 33 , 44 , 55 , 66 , 77 , 88 , 99 ] 
a . sort (  ) 
print ( ""Second largest element is : "" , a [ n - 2 ]  ) "
Write a Python Program to Count Number of Lowercase Characters in a String and print the result,"string = ""SriNAtH""
count = 0
for i in string : 
      if ( i . islower (  )  )  : 
            count = count + 1
print ( ""The number of lowercase characters is : "" ) 
print ( count ) "
write a Python Program to Sum All the Items in a Dictionary and print the result,"d =  { 'A' : 100 , 'B' : 540 , 'C' : 239 } 
print ( ""Total sum of values in the dictionary : "" ) 
print ( sum ( d . values (  )  )  ) "
write Python function to Count the Frequency of Words Appearing in a String Using a Dictionary,"def countword ( test _ string )  : 
	l =  [  ] 
	l = test _ string . split (  ) 
	wordfreq =  [ l . count ( p )  for p in l ] 
	return ( dict ( zip ( l , wordfreq )  )  ) "
write Python Program to Read the Contents of a File,"a = str ( input ( ""Enter the name of the file with  . txt extension : "" )  ) 
file2 = open ( a , 'r' ) 
line = file2 . readline (  ) 
while ( line !  = """" )  : 
    print ( line ) 
    line = file2 . readline (  ) 
file2 . close (  ) 	"
write Python Program to Count the Number of Lines in a Text File,"fname  =  input ( ""Enter file name :  "" ) 
num _ lines  =  0
with open ( fname ,  'r' )  as f : 
    for line in f : 
        num _ lines  +  =  1
print ( ""Number of lines : "" ) 
print ( num _ lines ) "
write a Python Program to Read a File and Capitalize the First Letter of Every Word in the File,"fname  =  input ( ""Enter file name :  "" ) 
with open ( fname ,  'r' )  as f : 
    for line in f : 
        l = line . title (  ) 
        print ( l ) "
write Python Program to Read the Contents of a File in Reverse Order,"filename = input ( ""Enter file name :  "" ) 
for line in reversed ( list ( open ( filename )  )  )  : 
    print ( line . rstrip (  )  ) "
write a Python function to Remove the Given Key from a Dictionary,"def deletekey ( dict , key ) 
	if key in dict :  
		del dict [ key ] 
	return dict"
Write a python function to remove an item from list,"def deleteelement ( list ,  item )  : 
	list . remove ( item ) 
	return list"
write a python function to Check if a given string is binary string or not,"def check ( string )   :   
    s  =   { '0' ,  '1' }  
    if s  =  =  p or p  =  =   { '0' }  or p  =  =   { '1' }  :  
        return True 
    else  :  
        return False"
write a python function to compute minimum number of rotations required to get the same string,"def findRotations ( str )  :  
    tmp  =  str  +  str
    n  =  len ( str )    
    for i in range ( 1 ,  n  +  1 )  :  
        substring  =  tmp [ i :  i + n ]  
        if  ( str  =  =  substring )  :  
            return i 
    return n "
write a Python function to check if count of divisors is even or odd,"def NumOfDivisor ( n )  :  
    if n  <  1 :  
        return
    root _ n  =  n *  * 0 . 5
    if root _ n *  * 2  =  =  n :  
        print ( ""Odd"" )  
    else :  
        print ( ""Even"" )  "
Write a program to merge two python dictionaries and print merged dictionary,"d1  =   { 'a' :  100 ,  'b' :  200 } 
d2  =   { 'x' :  300 ,  'y' :  200 } 
d  =  d1 . copy (  ) 
d . update ( d2 ) 
print ( d ) "
write a python function to concatenate two integers like string concatenation and return concatenated number as integer,"def concat _ two _ numbers ( num1 ,  num2 )  : 
    combined _ num  =  str ( num1 )   +  str ( num2 ) 
    return int ( combined _ num ) "
"With a given integral number n, write a program to generate a dictionary that contains (i, i*i*i) such that is an integral number between 1 and n (both included). and then the program should print the dictionary.","n  =  8
d  =  dict (  ) 
for i in range ( 1 , n + 1 )  : 
    d [ i ]   =  i * i * i
print ( d ) "
Write a program which accepts a sequence of comma-separated numbers from console and generate a list and a tuple which contains every number.,"values = input (  ) 
l = values . split ( "" , "" ) 
t = tuple ( l ) 
print ( l ) 
print ( t ) "
Write a Python function that takes a sequence of numbers and determines whether all the numbers are different from each other,"def test _ distinct ( data )  : 
  if len ( data )   =  =  len ( set ( data )  )  : 
    return True
  else : 
    return False"
Write a Python function to find the number of zeros at the end of a factorial of a given positive number.,"def factendzero ( n )  : 
  x  =  n  /  /  5
  y  =  x 
  while x  >  0 : 
    x  /  =  5
    y  +  =  int ( x ) 
  return y"
Write a Python function to remove leading zeros from an IP address,"import re
regex  =  ' \  .  [ 0 ]  * '
def remove _ leading _ zeros ( ip )  : 
    modified _ ip  =  re . sub ( regex ,  ' . ' ,  ip ) 
    return modified _ ip"
Write a Python function to return binary value of a given integer,"def int _ to _ bin ( a )  : 
  return bin ( a ) "
Write a Python function to return octal value of a given integer,"def int _ to _ oct ( a )  : 
  return oct ( a ) "
Write a Python function to return hexadecimal value of a given integer,"def int _ to _ hex ( a )  : 
  return hex ( a ) "
Write a Python program to typecast given input to integer,"num  =  int ( input ( ""Input a value :  "" )  ) 
print ( num ) "
Write a Python program to typecast given input to float,"num  =  float ( input ( ""Input a value :  "" )  ) 
print ( num ) "
Write a Python program to check/test multiple variables against a value,"a  =  10
b  =  20
c  =  30
if 10 in  { a ,  b ,  c }  : 
  print ( ""True"" ) 
else : 
  print ( ""False"" )   "
"Write a Python class that will initiate a number, input a number and print the number","class Number : 
	def  _  _ init _  _  ( self ,  num )  : 
		self . num  =  num
	def inputNum ( self )  : 
		self . num  =  int ( input ( ""Enter an integer number :  "" )  ) 
	def printNum ( self )  : 
		print ( self . num ) "
"Write a Python function to find the simple interest in Python when principle amount, rate of interest and time is given","def simple _ interest ( p , r , t )  : 
    si  =   ( p * r * t )  / 100
    return si"
"Write a Python function to find the compound interest in Python when principle amount, rate of interest and time is given","def compound _ interest ( p , r , t )  : 
    ci  =  p  *   ( pow (  ( 1  +  r  /  100 )  ,  t )  )  
    return ci"
Write a Python function to check whether a person is eligible for voting or not based on their age,"def vote _ eligibility ( age )  : 
	if age >  = 18 : 
	    status = ""Eligible""
	else : 
	    status = ""Not Eligible""
	return status"
Write a Python function to find the BMI for given weight and height of a person,"def bmi _ calculator ( height ,  weight )  : 
	bmi  =  weight /  ( height *  * 2 ) 
	return bmi"
Write a Python function to find the maximum ODD number from a given list,"def odd _ max _ checker ( list1 )  : 
	maxnum  =  0
	for num in list1 : 
	    if num % 2  !  =  0 : 
	        if num  >  maxnum : 
	            maxnum  =  num
	return maxnum"
Write a Python function to find the maximum EVEN number from a given list,"def even _ max _ checker ( list1 )  : 
	maxnum  =  0
	for num in list1 : 
	    if num % 2  =  =  0 : 
	        if num  >  maxnum : 
	            maxnum  =  num
	return maxnum"
Write a Python program to print the calendar of any given year,"import calendar
year = 2020
print ( calendar . calendar ( year )  ) "
Write a Python function to print whether the given Date is valid or not,"def date _ validator ( d , m , y )  : 
	import datetime 
	try : 
		s = datetime . date ( y , m , d ) 
		print ( ""Date is valid . "" ) 
	except ValueError :  
		print ( ""Date is invalid . "" ) "
Write a Python function to find the N-th number which is both square and cube,"def nth _ sq _ and _ cube ( N )  : 
	R  =  N *  * 6
	return R"
Write a Python function to check whether a number is a power of another number or not,"def power _ checker ( a , b )  : 
	import math
	s = math . log ( a , b ) 
	p = round ( s ) 
	if  ( b *  * p )  =  = a : 
	    return f' { a }  is the power of  { b }  . '
	else : 
	    return f' { a }  is NOT the power of  { b }  . '"
Write a Python program to print the list of all keywords,"import keyword
print ( ""Python keywords are .  .  . "" ) 
print ( keyword . kwlist ) "
Write a Python function to find the intersection of two arrays,"def array _ intersection ( A , B )  : 
	inter = list ( set ( A )  & set ( B )  ) 
	return inter"
Write a Python function to find the union of two arrays,"def array _ union ( A , B )  : 
	union = list ( set ( A )  | set ( B )  ) 
	return union"
Write a Python program to print shape of an array/ matrix,"import numpy as np
A  =  np . array (  [  [ 1 , 2 , 3 ]  ,  [ 2 , 3 , 5 ]  ,  [ 3 , 6 , 8 ]  ,  [ 323 , 623 , 823 ]  ]  ) 
print ( ""Shape of the matrix A :  "" ,  A . shape ) "
Write a Python program to print rank of an array/ matrix,"import numpy as np
A  =  np . array (  [  [ 4 , 5 , 8 ]  ,   [ 7 , 1 , 4 ]  ,   [ 5 , 5 , 5 ]  ,   [ 2 , 3 , 6 ]  ]  ) 
print ( ""Rank of the matrix A :  "" ,  np . linalg . matrix _ rank ( A )  ) "
Write a Python program to print trace of an array/ matrix,"import numpy as np
A  =  np . array (  [  [ 4 , 5 , 8 ]  ,   [ 5 , 5 , 5 ]  ,   [ 2 , 3 , 6 ]  ]  ) 
print ( ""Trace of the matrix A :  "" ,  np . trace ( A )  ) "
Write a Python program to print euclidean distance between two array/ vectors,"import numpy as np
a  =  np . array (  [ 78 ,  84 ,  87 ,  91 ,  76 ]  ) 
b  =  np . array (  [ 92 ,  83 ,  91 ,  79 ,  89 ]  ) 
dist  =  np . linalg . norm ( a - b ) 
print ( 'Differnce in performance between A and B  :  ' ,  dist ) "
Write a Python function to print number with commas as thousands separators,"def formattedNumber ( n )  : 
  return  ( "" {  :  ,  } "" . format ( n )  ) "
Write a Python function to count occurrence of a word in the given text,"def text _ searcher ( text ,  word )  : 
    count  =  0
    for w in text . split (  )  : 
        if w  =  =  word : 
            count  =  count  +  1
    return count"
Write a Python function to capitalizes the first letter of each word in a string,"def capitalize ( text )  : 
  return text . title (  ) "
Write a Python function to remove falsy values from a list,"def newlist ( lst )  : 
  return list ( filter ( None ,  lst )  ) "
Write a Python function to to find the sum of all digits of a given integer,"def sum _ of _ digits ( num )  : 
  if num  =  =  0 : 
    return 0
  else : 
    return num  %  10  +  sum _ of _ digits ( int ( num  /  10 )  ) "
Write a Python function to check all elements of a list are the same or not,"def check _ equal ( a )  : 
  return a [ 1 :  ]   =  =  a [  :  - 1 ] "
Write a Python program to print Square root of matrix elements,"mat1  =  np . array (  [  [ 10 , 20 , 30 ]  ,  [ 40 , 50 , 60 ]  ,  [ 70 , 80 , 90 ]  ]  ) 
print ( np . sqrt ( mat1 )  ) "
Write a Python function that returns the integer obtained by reversing the digits of the given integer,"def reverse ( n )  : 
    s = str ( n )  
    p = s [  :  :  - 1 ] 
    return p "
Write a Python program to keep only top 2 most frequent values as it is and replace everything else as ‘Other’ in a series,"import pandas as pd
import numpy as np
np . random . RandomState ( 100 ) 
ser  =  pd . Series ( np . random . randint ( 1 ,  5 ,   [ 12 ]  )  ) 
ser [  ~ ser . isin ( ser . value _ counts (  )  . index [  : 2 ]  )  ]   =  'Other'
print ( ser ) "
Write a Python program to create a TimeSeries starting ‘2000-01-01’ and 10 weekends (saturdays) after that having random numbers as values,"import pandas as pd
import numpy as np
ser  =  pd . Series ( np . random . randint ( 1 , 10 , 10 )  ,  pd . date _ range ( '2000 - 01 - 01' ,  periods = 10 ,  freq = 'W - SAT' )  ) 
print ( ser ) "
Write a Python program to find the positions of numbers that are multiples of 3 from a series,"import pandas as pd
import numpy as np
ser  =  pd . Series ( np . random . randint ( 1 ,  10 ,  7 )  ) 
print ( np . argwhere ( ser . values  %  3  =  =  0 )  ) "
"Write a Python function that Given a string, display only those characters which are present at an even index number","def printEveIndexChar ( str )  : 
  for i in range ( 0 ,  len ( str )  - 1 ,  2 )  : 
    print ( ""index [ "" , i , "" ] "" ,  str [ i ]   ) "
"Write a Python function that Given a string and an integer number n, remove characters from a string starting from zero up to n and return a new string","def removeChars ( str ,  n )  : 
  return str [ n :  ] "
"Write a Python function that Given a list of numbers, return True if first and last number of a list is same","def isFirst _ And _ Last _ Same ( numberList )  : 
    firstElement  =  numberList [ 0 ] 
    lastElement  =  numberList [  - 1 ] 
    if  ( firstElement  =  =  lastElement )  : 
        return True
    else : 
        return False"
"Write a Python function that Given a list of numbers, Iterate it and print only those numbers which are divisible of 5","def findDivisible ( numberList )  : 
    for num in numberList : 
        if  ( num  %  5  =  =  0 )  : 
            print ( num ) "
"Write a Python program to return a set of all elements in either A or B, but not both","set1  =   { 10 ,  20 ,  30 ,  40 ,  50 } 
set2  =   { 30 ,  40 ,  50 ,  60 ,  70 } 
print ( set1 . symmetric _ difference ( set2 )  ) "
Write a Python program to Subtract a week ( 7 days) from a given date in Python,"from datetime import datetime ,  timedelta
given _ date  =  datetime ( 2020 ,  2 ,  25 ) 
days _ to _ subtract  =  7
res _ date  =  given _ date  -  timedelta ( days = days _ to _ subtract ) 
print ( res _ date ) "
Write a Python program to Find the day of week of a given date,"from datetime import datetime
given _ date  =  datetime ( 2020 ,  7 ,  26 ) 
print ( given _ date . strftime ( ' % A' )  ) "
Write a Python program to Convert following datetime instance into string format,"from datetime import datetime
given _ date  =  datetime ( 2020 ,  2 ,  25 ) 
string _ date  =  given _ date . strftime ( "" % Y -  % m -  % d  % H :  % M :  % S"" ) 
print ( string _ date ) "
Write a Python program to convert two equal length sets to dictionary,"keys  =   { 'Ten' ,  'Twenty' ,  'Thirty' } 
values  =   { 10 ,  20 ,  30 } 
sampleDict  =  dict ( zip ( keys ,  values )  ) 
print ( sampleDict ) "
Write a program which will find all such numbers which are divisible by 7 but are not a multiple of 5 between 2000 and 3200 (both included).,"l =  [  ] 
for i in range ( 2000 ,  3201 )  : 
    if  ( i % 7 =  = 0 )  and  ( i % 5 !  = 0 )  : 
        l . append ( str ( i )  ) "
Write a program that will determine the object type,"def typeIdentifier ( object )  : 
  return f'object type  :   { type ( object )  } '"
Write a program that will determine the memory usage by python process,"import os ,  psutil
print ( psutil . Process ( os . getpid (  )  )  . memory _ info (  )  . rss  /  1024  *  *  2 ) "
Write a function that will provide the ascii value of a character,"def charToASCII ( chr )  : 
  return f'ASCII value of  { chr }  is :   { ord ( chr )  } '"
Write a function to reverse a string,"def revStr ( inp )  : 
  inp  =  inp [  :  :  - 1 ] 
  return inp"
Write a function to determine the bits used by any number,"def totalBits ( n )  : 
	return f'total number of bits used in  { n }  is  :   { len ( bin ( n )  [ 2 :   ]  )  } '"
Write a program to swap two variables inplace,"a , b  =  b , a"
Write a program that prints the words in a comma-separated sequence after sorting them alphabetically.,"items =  [ x for x in input (  )  . split ( ' , ' )  ] 
items . sort (  ) 
print ( ' , ' . join ( items )  ) "
Write a function that will convert a string into camelCase,"from re import sub
def camelCase ( string )  : 
  string  =  sub ( r"" (  _  |  -  )  + "" ,  "" "" ,  string )  . title (  )  . replace ( "" "" ,  """" ) 
  return string [ 0 ]  . lower (  )   +  string [ 1 :  ] "
Write a function to remove empty list from a list using list comprehension,"def removeEmptyList ( li )  : 
  res  =   [ ele for ele in li if ele  !  =   [  ]  ]  
  return res"
Write a function to Find the size of a Tuple in Python without garbage values,"Tuple  =   ( 10 , 20 ) 
def sizeOfTuple ( tup )  : 
  return f'Size of Tuple :   { str ( Tuple .  _  _ sizeof _  _  (  )  )  }  bytes' "
Write a function that finds a list is homogeneous,"def homoList ( li )  : 
  res  =  True
  for i in li :  
      if not isinstance ( i ,  type ( li [ 0 ]  )  )  :  
          res  =  False 
          break
  return res"
Write a function to remove a given date type elements from a list.,"def removeDataType ( li , dType )  : 
    res  =   [  ] 
    for i in li : 
        if not isinstance ( i ,  dType )  : 
            res . append ( i ) 
    return res"
"Write a python function to find out the occurence of ""i"" element before first ""j"" in the list","def firstOccurence ( arr ,  i , j )  : 
  res  =  0
  for k in arr :          
      if k  =  =  j :  
          break
      if k  =  =  i :  
          res  +  =  1
  return res"
Write a program to check whether a file/path/direcory exists or not,"file _ path  =  ""path / here""
import os . path
os . path . exists ( file _ path ) "
Write a program to merge two python dictionaries,"x =  { 'key1' : 'val1' , 'key2' : 'val2' } 
y =  { 'key3' : 'val3' , 'key4' : 'val4' } 
z  =   {  *  * x ,   *  * y }   #  z  =  x  |  y  "
Write a program to convert dictionary into JSON,"import json
data  =   { ""key1""  :  ""value1"" ,  ""key2""  :  ""value2"" } 
jsonData  =  json . dumps ( data ) 
print ( jsonData ) "
Write a function to Check whether following json is valid or invalid,"import json
def validateJSON ( jsonData )  : 
    try : 
        json . loads ( jsonData ) 
    except ValueError as err : 
        return False
    return True"
Write a function to add two positive integers without using the '+' operator,"def add _ without _ plus _ operator ( a ,  b )  : 
    while b  !  =  0 : 
        data  =  a  &  b
        a  =  a  ^  b
        b  =  data  <  <  1
    return a"
Write a program to compute the number of digits in multiplication of two given integers,"a , b  =  312 ,  410
print ( len ( str ( a * b )  )  ) "
Write a function to return the area of a rhombus,"def area ( d1 ,  a )  :  
    d2  =   ( 4 *  ( a *  * 2 )   -  d1 *  * 2 )  *  * 0 . 5
    area  =  0 . 5  *  d1  *  d2 
    return ( area )  "
"Write a function that Given a number, find the most significant bit number which is set bit and which is in power of two","def setBitNumber ( n )  :  
    if  ( n  =  =  0 )  :  
        return 0
    msb  =  0 
    n  =  int ( n  /  2 )  
    while  ( n  >  0 )  :  
        n  =  int ( n  /  2 )  
        msb  +  =  1
    return  ( 1  <  <  msb )  "
Write a function to calculate volume of Triangular Pyramid,"def volumeTriangular ( a ,  b ,  h )  :  
    return  ( 0 . 1666 )   *  a  *  b  *  h "
Write a function to calculate volume of Square Pyramid,"def volumeSquare ( b ,  h )  :  
    return  ( 0 . 33 )   *  b  *  b  *  h "
Write a function to calculate Volume of Pentagonal Pyramid,"def volumePentagonal ( a ,  b ,  h )  :  
    return  ( 0 . 83 )   *  a  *  b  *  h "
Write a function to calculate Volume of Hexagonal Pyramid,"def volumeHexagonal ( a ,  b ,  h )  :  
    return a  *  b  *  h"
Write a Python program to check a list is empty or not,"l  =   [  ] 
if not l : 
print ( ""List is empty"" ) "
Write a Python program to remove duplicates from a list.,"a  =   [ 10 , 20 , 30 , 20 , 10 , 50 , 60 , 40 , 80 , 50 , 40 ] 
dup _ items  =  set (  ) 
uniq _ items  =   [  ] 
for x in a : 
if x not in dup _ items : 
uniq _ items . append ( x ) 
dup _ items . add ( x ) 
print ( dup _ items ) "
Write a Python function that takes two lists and returns True if they have at least one common member,"def common _ data ( list1 ,  list2 )  : 
result  =  False
for x in list1 : 
for y in list2 : 
if x  =  =  y : 
result  =  True
return result
print ( common _ data (  [ 1 , 2 , 3 , 4 , 5 ]  ,   [ 5 , 6 , 7 , 8 , 9 ]  )  ) "
Write a Python program to get the difference between the two lists,"list1  =   [ 1 ,  2 ,  3 ,  4 ] 
list2  =   [ 1 ,  2 ] 
print ( list ( set ( list1 )   -  set ( list2 )  )  ) "
Write a Python program to convert a list of multiple integers into a single integer,"L  =   [ 11 ,  33 ,  50 ] 
x  =  int ( """" . join ( map ( str ,  L )  )  ) 
print ( ""Single Integer :  "" , x ) "
Write a Python program to check if all dictionaries in a list are empty or not.,"my _ list  =   [  {  }  ,  {  }  ,  {  }  ] 
my _ list1  =   [  { 1 , 2 }  ,  {  }  ,  {  }  ] 
print ( all ( not d for d in my _ list )  ) 
print ( all ( not d for d in my _ list1 )  ) "
Write a Python program to count the number of characters (character frequency) in a string,"def char _ frequency ( str1 )  : 
dict  =   {  } 
for n in str1 : 
keys  =  dict . keys (  ) 
if n in keys : 
dict [ n ]   +  =  1
else : 
dict [ n ]   =  1
return dict
print ( char _ frequency ( 'google . com' )  ) "
Write a python program to replace the first character occurence in the later part of the string,"def change _ char ( str1 )  : 
char  =  str1 [ 0 ] 
length  =  len ( str1 ) 
str1  =  str1 . replace ( char ,  ' $ ' ) 
str1  =  char  +  str1 [ 1 :  ] 
return str1
print ( change _ char ( 'restart' )  ) "
Write a Python program to count and display the vowels of a given text,"def vowel ( text )  : 
vowels  =  ""aeiuoAEIOU""
print ( len (  [ letter for letter in text if letter in vowels ]  )  ) 
print (  [ letter for letter in text if letter in vowels ]  ) 
vowel ( 'zekelabs' ) "
"Write a Python script to generate and print a dictionary that contains a number (between 1 and n) in the form (x, x*x)","n = int ( input ( ""Input a number :  "" )  ) 
d  =  dict (  ) 
for x in range ( 1 , n + 1 )  : 
d [ x ]  = x * x
print ( d ) "
Write a Python program to convert a list into a nested dictionary of keys.,"num _ list  =   [ 1 ,  2 ,  3 ,  4 ] 
new _ dict  =  current  =   {  } 
for name in num _ list : 
current [ name ]   =   {  } 
current  =  current [ name ] 
print ( new _ dict ) "
Write a Python program to sort a list alphabetically in a dictionary.,"num  =   { 'n1' :   [ 2 ,  3 ,  1 ]  ,  'n2' :   [ 5 ,  1 ,  2 ]  ,  'n3' :   [ 3 ,  2 ,  4 ]  } 
sorted _ dict  =   { x :  sorted ( y )  for x ,  y in num . items (  )  } 
print ( sorted _ dict ) "
Write a Python program to count the elements in a list until an element is a tuple,"num  =   [ 10 , 20 , 30 ,  ( 10 , 20 )  , 40 ] 
ctr  =  0
for n in num : 
if isinstance ( n ,  tuple )  : 
break
ctr  +  =  1
print ( ctr ) "
Write a Python program to convert a tuple to a string.,"tup  =   ( 'e' ,  'x' ,  'e' ,  'r' ,  'c' ,  'i' ,  's' ,  'e' ,  's' ) 
str  =  '' . join ( tup ) 
print ( str ) "
Write a Python program to find the repeated items of a tuple,"tuplex  =  2 ,  4 ,  5 ,  6 ,  2 ,  3 ,  4 ,  4 ,  7
count  =  tuplex . count ( 4 ) 
print ( count ) "
Write a Python program to convert a tuple to a dictionary.,"tuplex  =   (  ( 2 ,  ""w"" )  ,  ( 3 ,  ""r"" )  ) 
print ( dict (  ( y ,  x )  for x ,  y in tuplex )  ) "
Write a Python program to sort a tuple by its float element.,"price  =   [  ( 'item1' ,  '12 . 20' )  ,   ( 'item2' ,  '15 . 10' )  ,   ( 'item3' ,  '24 . 5' )  ] 
print (  sorted ( price ,  key = lambda x :  float ( x [ 1 ]  )  ,  reverse = True )  ) "
Write a Python program to add member(s) in a set,"color _ set  =  set (  ) 
color _ set . add ( ""Red"" ) 
color _ set . update (  [ ""Blue"" ,  ""Green"" ]  ) 
print ( color _ set ) "
Write a Python program to create a symmetric difference,"setx  =  set (  [ ""apple"" ,  ""mango"" ]  ) 
sety  =  set (  [ ""mango"" ,  ""orange"" ]  ) 
setc  =  setx  ^  sety
print ( setc ) "
Write a Python program that prints all the numbers from 0 to 6 except 3 and 6,"for x in range ( 6 )  : 
if  ( x  =  =  3 or x =  = 6 )  : 
continue
print ( x , end = ' ' ) 
print ( "" \ n"" ) "
Write a Python program to get the Fibonacci series between 0 to 50.,"x , y = 0 , 1
while y < 50 : 
print ( y ) 
x , y  =  y , x + y"
Write a Python program to find numbers between 100 and 400 (both included) where each digit of a number is an even number. The numbers obtained should be printed in a comma-separated sequence,"items  =   [  ] 
for i in range ( 100 ,  401 )  : 
s  =  str ( i ) 
if  ( int ( s [ 0 ]  )  % 2 =  = 0 )  and  ( int ( s [ 1 ]  )  % 2 =  = 0 )  and  ( int ( s [ 2 ]  )  % 2 =  = 0 )  : 
items . append ( s ) 
print (  "" , "" . join ( items"
Write a Python program to create the multiplication table (from 1 to 10) of a number.,"n  =  int ( input ( ""Input a number :  "" )  ) 
for i in range ( 1 , 11 )  : 
print ( n , 'x' , i , ' = ' , n * i ) "
Write a Python function to find the Max of three numbers.,"def max _ of _ two (  x ,  y  )  : 
if x  >  y : 
return x
return y
def max _ of _ three (  x ,  y ,  z  )  : 
return max _ of _ two (  x ,  max _ of _ two (  y ,  z  )   ) 
print ( max _ of _ three ( 3 ,  6 ,   - 5 )  ) "
Write a Python function to sum all the numbers in a list,"def sum ( numbers )  : 
total  =  0
for x in numbers : 
total  +  =  x
return total
print ( sum (  ( 8 ,  2 ,  3 ,  0 ,  7 )  )  ) "
Write a Python function to multiply all the numbers in a list,"def multiply ( numbers )  : 
total  =  1
for x in numbers : 
total  *  =  x
return total
print ( multiply (  ( 8 ,  2 ,  3 ,   - 1 ,  7 )  )  ) "
Write a Python function that takes a list and returns a new list with unique elements of the first list,"def unique _ list ( l )  : 
x  =   [  ] 
for a in l : 
if a not in x : 
x . append ( a ) 
return x
print ( unique _ list (  [ 1 , 2 , 3 , 3 , 3 , 3 , 4 , 5 ]  )  ) "
Write a Python program to print the even numbers from a given list,"def is _ even _ num ( l )  : 
enum  =   [  ] 
for n in l : 
if n  %  2  =  =  0 : 
enum . append ( n ) 
return enum
print ( is _ even _ num (  [ 1 ,  2 ,  3 ,  4 ,  5 ,  6 ,  7 ,  8 ,  9 ]  )  ) "
Write a Python program to access a function inside a function,"def test ( a )  : 
def add ( b )  : 
nonlocal a
a  +  =  1
return a + b
return add
func =  test ( 4 ) 
print ( func ( 4 )  ) "
Write a Python program to detect the number of local variables declared in a function.,"def abc (  )  : 
x  =  1
y  =  2
str1 =  ""w3resource""
print ( abc .  _  _ code _  _  . co _ nlocals ) "
"Write a Python program to check number either positive , negative or zero","num  =  int  ( input  ( ""Enter Integer Number :  "" )  ) 
if num  =  =  0 : 
print  ( ""Zero Entered"" ) 
elif num  >  0 : 
print  ( ""Positive Number Entered"" ) 
elif num  <  0 : 
print  ( ""Negative Number Entered"" ) "
Write a python program to Sum of n positive Integer,"n  =  int  ( input  ( ""Enter Value of n :  "" )  ) 
sum  =  0
x  =  0
while x  !  =  n + 1 :   # because we need to include n in sum
sum  +  =  x
x +  = 1
print ( ""Sum of n positive Integer till  {  }  is  {  } "" . format ( n , sum )  ) "
Write a python function to compute 5/0 using try except,"try : 
print ( ""Division  =   {  } "" . format ( 5 / 0 )  ) 
except ZeroDivisionError : 
print  ( ""5 cannot be divided by O"" ) "
Write a python program to Accept the String and print the words composed of digits only,"Text  =  input  ( ""Enter Text :  "" ) 
Digits  =  """"
for i in Text : 
if i . isnumeric (  )  : 
Digits  +  = i + "" ""
print ( ""Digits used in given strings are :   {  } "" . format ( Digits )  ) "
Write a python program to program to compute 1/2+2/3+3/4+...+n/n+1 with a given n input by console (n>0).,"num  =  int  ( input  ( ""Enter Number :  "" )  ) 
sum  =  0
for i in range ( num + 1 )  : 
sum  +  =  float ( i /  ( i + 1 )  ) 
print  ( ""Sum :   {  :  . 2f } "" . format ( sum )  ) "
Write a python program to program to compute: f(n)=f(n-1)+100 when n>0 and f(0)=1,"def f ( n )  : 
if n  =  =  0  : 
return 0
else : 
return f ( n - 1 )  + 100
n  =  int ( input ( ""Enter Number :  "" )  ) 
print ( ""f ( n - 1 )  + 100  =  "" ,  f ( n )  ) "
"Write a python program to define a function with a generator which can iterate the numbers, which are divisible by 7, between a given range 0 and n.","def Generator ( n )  : 
for i in range ( n + 1 )  : 
if i % 7  =  =  0 : 
yield i
n  =  int ( input ( ""Enter Number :  "" )  ) 
for i in Generator ( n )  : 
print ( i , end  =  "" "" ) "
Write a python program to make a recursive function to get the sum,"def rec ( n )  : 
if n  =  =  0 : 
return n
return rec ( n - 1 )   +  n
n  =  int ( input (  )  ) 
sum  =  rec ( n ) 
print ( sum ) "
Write a python program to count the frequency of letters of the string and print the letters in descending order of frequency.,"word  =  input (  ) 
dct  =   {  } 
for i in word : 
dct [ i ]   =  dct . get ( i , 0 )   +  1
dct  =  sorted ( dct . items (  )  , key = lambda x :   (  - x [ 1 ]  , x [ 0 ]  )  ) 
for i in dct : 
print ( i [ 0 ]  , i [ 1 ] "
Write a python program using lambda funtion to square a number,square2  =  lambda num :  num  *  num
Write a python program to uppercase strings using lambda and map,"people  =   [ ""Darcy"" ,  ""Christina"" ,  ""Diana"" ] 
peeps  =  list ( map ( lambda name :  name . upper (  )  ,  people )  ) 
print ( peeps ) "
"Write a python program to filter names not starting with ""a""","names  =   [ 'austin' ,  'penny' ,  'anthony' ,  'rihana' ,  'billy' ,  'angel' ] 
a _ names  =  list ( filter ( lambda name :  name [ 0 ]   =  =  'a' ,  names )  ) 
print ( a _ names ) "
Write a python program to return dict with {student:highest score} USING MAP+LAMBDA,"midterms  =   [ 80 ,  91 ,  78 ] 
finals  =   [ 98 ,  89 ,  53 ] 
students  =   [ 'dan' ,  'ang' ,  'kate' ] 
final _ grades  =  dict ( zip ( students , map ( lambda pair :  max ( pair )  , zip ( midterms ,  finals )  )  )  ) "
Write a python function to sum variable number of arguments,"def sum _ all (  * args )  : 
total  =  0
for num in args : 
total  +  =  num
return total"
Write a python program to print even length words in a string,"def printWords ( s )  : 
s  =  s . split ( ' ' ) 
for word in s : 
if len ( word )  % 2 =  = 0 : 
print ( word ) 
s  =  ""This is a python language""
printWords ( s ) "
Write a python program which can compute the factorial of a given number.,"ef fact ( x )  : 
if x  =  =  0 : 
return 1
return x  *  fact ( x  -  1 ) 
x = int ( raw _ input (  )  ) 
print  ( fact ( x )  ) "
Write a function to compute 5/0 and use try/except to catch the exceptions.,"def throws (  )  : 
return 5 / 0
try : 
throws (  ) 
except ZeroDivisionError : 
print  ( ""division by zero ! "" ) 
except Exception ,  err : 
print  ( 'Caught an exception' ) 
finally : 
print  ( 'In finally block for cleanup' ) "
"Write a python program to print the list after removing the 0th, 2nd, 4th,6th numbers in [12,24,35,70,88,120,155].","li  =   [ 12 , 24 , 35 , 70 , 88 , 120 , 155 ] 
li  =   [ x for  ( i , x )  in enumerate ( li )  if i % 2 !  = 0 ] 
print ( li ) "
Write a python program for selection sort,"for i in range ( len ( A )  )  : 
min _ idx  =  i
for j in range ( i + 1 ,  len ( A )  )  : 
if A [ min _ idx ]   >  A [ j ]  : 
min _ idx  =  j
A [ i ]  ,  A [ min _ idx ]   =  A [ min _ idx ]  ,  A [ i ] "
Write a python program to find length of list using recursion,"def length ( lst )  : 
if not lst : 
return 0
return 1  +  length ( lst [ 1 :  : 2 ]  )   +  length ( lst [ 2 :  : 2 ]  ) 
a =  [ 1 , 2 , 3 ] 
print ( ""Length of the string is :  "" ) 
print ( a ) "
write a python program to shuffle the items in a list and print it,"from random import shuffle
mylist  =   [ 1 ,  2 ,  3 ,  4 ,  5 ] 
shuffle ( mylist ) 
print ( mylist ) "
write a python program that adds the elements of a list to a set and prints the set,"my _ set  =   { 1 ,  2 ,  3 } 
my _ list  =   [ 4 ,  5 ,  6 ] 
my _ set . update ( my _ list ) 
print ( my _ set ) "
write a python program that prints the circumference of a circle,"import math
radius  =  10
print ( f'Area :   { 2  *  math . pi  *  radius } ' ) "
write a python program that prints the area of a rectangle,"length  =  10
width  =  5
print ( f'Area :   { length  *  width } ' ) "
write a python program that prints the area of a square,"side  =  5
print ( f'Area :   { side  *  side } ' ) "
write a python program to create a dictionary with numbers 1 to 5 as keys and the numbers in english as values,"number _ dict  =   { 
1 :  'one' , 
2 :  'two' , 
3 :  'three' , 
4 :  'four' , 
5 :  'five'
 } "
write a python program to remove words less than a specified length from a sentence,"sentence  =  'this is my sentence and i will write it my way'
minlength  =  3
result  =   [ word for word in sentence . split ( ' ' )  if len ( word )   >  =  minlength ] "
write a python program to keep words less than a specified length in a sentence,"sentence  =  'this is my sentence and i will write it my way'
maxlength  =  3
result  =   [ word for word in sentence . split ( ' ' )  if len ( word )   <  =  minlength ] "
write a python function that takes a list as an input and converts all numbers to positive numbers and returns the new list,"def make _ all _ positive ( nums )  : 
return  [ num if num  >  0 else  - num for num in nums ] "
write a python function that takes a list as an input and converts all numbers to negative numbers and returns the new list,"def make _ all _ negative ( nums )  : 
return  [ num if num  <  0 else  - num for num in nums ] "
write a python program to print the words in a sentence in reverse order,"sentence  =  'the quick brown fox'
words  =  sentence . split ( ' ' ) 
words . reverse (  ) 
print ( ' ' . join ( words )  ) "
write a python program to replace each word in a sentence with the length of the word and print it,"sentence  =  'the quick brown fox jumps over the lazy dog'
words  =  sentence . split ( ' ' ) 
lengths  =   [ str ( len ( word )  )  for word in words ] 
print ( ' ' . join ( lengths )  ) "
write a python program to convert a set to a list,"myset  =   { 1 ,  2 ,  4 ,  7 } 
mylist  =  list ( myset ) "
write a python program to convert a list to a dictionary where the key is the index and the value is the item in the list,"my _ list  =   [ 1 ,  8 ,  1 ,  2 ,  2 ,  9 ] 
my _ dict  =   { key :  value for key ,  value in enumerate ( my _ list )  } "
write a python function that returns True if the sum of two provided numbers is even,"def is _ prod _ even ( num1 ,  num2 )  : 
sum  =  num1  +  num2
return not sum  %  2"
write a python program to print the first 5 items in a list,"my _ list  =   [ 1 ,  2 ,  3 ,  4 ,  5 ,  6 ,  7 ,  8 ,  9 ,  10 ] 
print ( my _ list [  : 5 ]  ) "
write a python program to print the last 3 items in a list,"my _ list  =   [ 1 ,  2 ,  3 ,  4 ,  5 ,  6 ,  7 ,  8 ,  9 ,  10 ] 
print ( my _ list [  - 3 :  ]  ) "
write a python program to subtract two numbers and print it,"num1  =  1 . 5
num2  =  6 . 3
difference  =  num1  -  num2
print ( f'Difference :   { difference } ' ) "
write a python program to print 5 random integers between 10 and 20,"import random
print ( random . sample ( range ( 10 ,  20 )  ,  5 )  ) "
write a python program to delete a variable,"i  =  10
del i"
write a python program to perform multiple assignments,a  =  b  =  c  =  1
write a python program to swap two numbers," ( x ,  y )   =   ( 1 ,  2 ) 
print ( f'Before swapping :  x :   { x }  ,  y :   { y } ' ) 
 ( y ,  x )   =   ( x ,  y ) 
print ( f'After swapping :  x :   { x }  ,  y :   { y } ' ) "
write a python program to print bitwise AND operation,"a  =  60
b  =  13
a _ and _ b  =  a & b
print ( a _ and _ b ) "
write a python program to print bitwise OR operation,"a  =  60
b  =  13
a _ or _ b  =  a | b
print ( a _ or _ b ) "
write a python program to print bitwise XOR operation,"a  =  60
b  =  13
a _ xor _ b  =  a ^ b
print ( a _ xor _ b ) "
write a python program to print binary ones complement on a variable,"a  =  60
ones _ complement _ a  =   ~ a
print ( ones _ complement _ a ) "
write a python program to print binary left shift on a variable,"a  =  60
binary _ left _ shift  =  a <  < 2
print ( binary _ left _ shift ) "
write a python program to print binary right shift on a variable,"a  =  60
binary _ right _ shift  =  a >  > 2
print ( binary _ right _ shift ) "
write a python function to check if an item exists in a list and return the boolean value,"def item _ exists ( lst ,  item )  : 
    if item in lst : 
        return True
    else : 
        return False"
write a python function to get the type of a variable,"def get _ type ( var )  : 
    return ( type ( var )  ) "
write a python function to check if an object is an instance of a given class,"def check _ instance ( derived _ class ,  base _ class )  : 
    return ( isinstance ( derived _ class ,  base _ class )  ) "
write a python function to accept user input to continue,"def get _ userinput (  )  : 
    while ( 1 )  : 
        do _ continue  =  raw _ input ( 'Do you want to continue ( y / n )  ? ' ) 
        if do _ continue  =  =  'y' or do _ continue  =  =  'n' : 
            return do _ continue"
write a python program to create a raw string,str1  =  r'hello \ n'
write a python function to get the value of maximum integer allowed on the system,"def get _ max _ integer (  )  : 
    import sys
    return sys . maxsize"
write a python function to get the absolute value of a number,"def get _ absolute _ value ( i )  : 
    return ( abs ( i )  ) "
write a python function to return the exponential of a number,"def get _ exponential _ value ( i )  : 
    import math
    return ( math . exp ( i )  ) "
write a python function to return the natural logarithm of a number,"def get _ natural _ log _ value ( i )  : 
    import math
    return ( math . log ( i )  ) "
write a python function to return the base 10 logarithm of a number,"def get _ natural _ log _ value ( i )  : 
    import math
    return ( math . log10 ( i )  ) "
write a python function to return the square root of a number,"def get _ sqrt ( i )  : 
    import math
    return ( math . sqrt ( i )  ) "
write a python program to print the maximum integer in a list of integers,"lst  =   [ 23 ,  10 ,  55 ,  43 ] 
lst . sort (  ) 
max  =  lst [  - 1 ] "
write a python program to print the minimum integer in a list of integers,"lst  =   [ 23 ,  10 ,  55 ,  43 ] 
lst . sort (  ) 
min  =  lst [ 0 ] "
write a python program to print a random number between 0 and 1,"import random
print ( random . uniform ( 0 ,  1 )  ) "
write a python program to concatenate two strings and print,"str1  =  'hello'
str2  =  ' world ! '
print ( str1  +  str2 ) "
write a python program to print the ascii value of a character,"str1  =  'a'
print ( ord ( str1 )  ) "
write a python program to print current date and time,"import datetime
print ( datetime . datetime . now (  )  ) "
write a python program to capitalize a string,"str1  =  'hello'
print ( str1 . capitalize (  )  ) "
write a python program to clone a list,"a  =   [ 1 ,  2 ,  3 ] 
b  =  a [  :  ] "
write a python program to print a list in reverse,"a  =   [ 1 ,  2 ,  3 ] 
print ( a [  :  :  - 1 ]  ) "
write a python program to print a list in sorted order,"basket  =   [ 'apple' ,  'orange' ,  'apple' ,  'pear' ,  'orange' ,  'banana' ] 
print ( sorted ( basket )  ) "
write a python function to return union of two sets,"def union _ set ( set1 ,  set2 )  : 
    return set1 | set2"
"write a python program to print a set of all elements in either set1 or set2, but not both","set1  =   { 10 ,  20 ,  30 ,  40 ,  50 } 
set2  =   { 30 ,  40 ,  50 ,  60 ,  70 } 
print ( set1 . symmetric _ difference ( set2 )  ) "
write a python program to print names of the entries in the directory given by path,"path  =  ' / home'
import os
print ( os . listdir ( path )  ) "
write a python program to create a directory named path,"path  =  'test'
import os
os . mkdir ( path ) "
write a python function to check if a string is a palindrome or not,"def isPalindrome ( s )  : 
    return s  =  =  s [  :  :  - 1 ] "
write a python program to print sum of elements in a list,"lst  =  range ( 5 ) 
print ( sum ( lst )  ) "
write python code to merge two dictionaries,"def merge _ dict ( dict1 ,  dict2 )  : 
    return ( dict2 . update ( dict1 )  ) 
dict1  =   { 'a' :  10 ,  'b' :  8 } 
dict2  =   { 'd' :  6 ,  'c' :  4 } 
merge _ dict ( dict1 ,  dict2 ) 
print ( dict2 ) "
write python code to print temperature in celsius to fahrenheit,"celsius  =  37 . 5
fahrenheit  =   ( celsius  *  1 . 8 )   +  32
print ( ' % 0 . 1f degree Celsius is equal to  % 0 . 1f degree Fahrenheit'  %  ( celsius , fahrenheit )  ) "
write python function to detect if a number is even number,"def is _ even ( num )  : 
    return (  ( num  %  2 )   =  =  0 ) "
write python function to detect if a number is odd number,"def is _ odd ( num )  : 
    return (  ( num  %  2 )   !  =  0 ) "
write a python program to convert Kilometers to Miles,"kilometers  =  float ( input ( ""Enter value in kilometers :  "" )  ) 
conv _ fac  =  0 . 621371
miles  =  kilometers  *  conv _ fac
print ( ' % 0 . 2f kilometers is equal to  % 0 . 2f miles'  %  ( kilometers , miles )  ) "
"write a python program to check if a number is positive, negative or 0","num  =  float ( input ( ""Enter a number :  "" )  ) 
if num  >  0 : 
   print ( ""Positive number"" ) 
elif num  =  =  0 : 
   print ( ""Zero"" ) 
else : 
   print ( ""Negative number"" ) "
write a python function to find the factors of a number,"def print _ factors ( x )  : 
   print ( ""The factors of"" , x , ""are : "" ) 
   for i in range ( 1 ,  x  +  1 )  : 
       if x  %  i  =  =  0 : 
           print ( i ) "
Write a Python program to get the last day of a specified year and month.,"import calendar
year  =  2020
month  =  12 
print ( calendar . monthrange ( year ,  month )  [ 1 ]  ) "
Write a Python program to convert a string to datetime.,"from datetime import datetime
date _ object  =  datetime . strptime ( 'Jul 1 2014 2 : 43PM' ,  ' % b  % d  % Y  % I :  % M % p' ) 
print ( date _ object ) "
Write a Python program to subtract five days from current date,"from datetime import date ,  timedelta
dt  =  date . today (  )   -  timedelta ( 5 ) 
print ( 'Current Date  : ' , date . today (  )  ) 
print ( '5 days before Current Date  : ' , dt ) "
Write a Python program to convert Year/Month/Day to Day of Year.,"import datetime
today  =  datetime . datetime . now (  ) 
day _ of _ year  =   ( today  -  datetime . datetime ( today . year ,  1 ,  1 )  )  . days  +  1
print ( day _ of _ year ) "
Write a  program to split strings using split function.,"string  =  ""India is my country . ""
string _ list  =  string . split ( ' ' ) 
print ( string _ list ) "
write a Python program to multiply two numbers and print it,"num1  =  1 . 5
num2  =  6 . 3
product  =  num1  *  num2
print ( f'product :   { product } ' ) "
"Write a Python program to find those numbers which are divisible by 7 and multiple of 5, between 1500 and 2700 and print the result.","nl  =   [  ] 
for x in range ( 1500 ,  2700 )  : 
    if  ( x % 7 =  = 0 )  and  ( x % 5 =  = 0 )  : 
        nl . append ( str ( x )  ) 
print ( "" \ n"" . join ( nl )  ) "
"Write a python program to Convert a list of characters into a string and print it : Example :   Input ['a', 'b', 'c', 'd']  Output abcd","s  =   [ 'a' , 'b' , 'c' , 'd' ] 
x  =  """" . join ( s ) 
print ( x ) "
"Write a Python program to find common items from two lists. Example:   input  color1 = ""Red"", ""Green"", ""Orange"", ""White""  color2 = ""Black"", ""Green"", ""White"", ""Pink""  output  {'Green', 'White'}","color1  =  ""Red"" ,  ""Green"" ,  ""Orange"" ,  ""White""
color2  =  ""Black"" ,  ""Green"" ,  ""White"" ,  ""Pink""
print ( set ( color1 )   &  set ( color2 )  ) "
Write a Python program to Calculate the sum of the digits of a random three-digit number and print the result.,"import random 
n  =  random (  )   *  900  +  100 
n  =  int ( n )  
print ( n )  
a  =  n  /  /  100 
b  =   ( n  /  /  10 )   %  10 
c  =  n  %  10 
print ( a  +  b  +  c ) "
Write a Python program to find the greatest common divisor (GCD)(Euclidean algorithm) and print the result.,"a  =  int ( input (  )  ) 
b  =  int ( input (  )  ) 
while a  !  =  0 and b  !  =  0 : 
    if a  >  b : 
        a  %  =  b
    else : 
        b  %  =  a
gcd  =  a  +  b
print ( gcd ) "
"Write a program to Expand and print a string like ""a-z""  Example: enter first string :b   enter last string: e  Output : bcde","first  =  input ( ""The first :  "" ) 
last  =  input ( ""The last :  "" ) 
while first  <  =  last : 
    print ( first ,  end = '' ) 
    first  =  chr ( ord ( first )   +  1 ) 
print (  ) "
"Write a Python program to generate all permutations of a list in Python. Example:  Input [1,2,3]  Output [(1, 2, 3), (1, 3, 2), (2, 1, 3), (2, 3, 1), (3, 1, 2), (3, 2, 1)]","import itertools
print ( list ( itertools . permutations (  [ 1 , 2 , 3 ]  )  )  ) "
"Write a python program to swap cases in a string and print. In other words, convert all lowercase letters to uppercase letters and vice versa and print the result  Example:input:InDiAaa  Output: iNdIaAA","s  =  input (  ) 
print ( s . swapcase (  )  ) "
Write a python program to print all the values in a dictionary.,"d  =    { 'a' : 1 , 'b' : 2 , 'c' : 3 , 'd' : 4 } 
print ( d . values (  )  ) "
Write a python program to print all the keys in a dictionary.,"d  =    { 'a' : 1 , 'b' : 2 , 'c' : 3 , 'd' : 4 } 
print ( d . keys (  )  ) "
Write a python program to print a given string without spaces,"s  =  ""I love India   now I will be printed without any space""
for i in s : 
    if i =  = ' ' :  continue
    print ( i , end = '' ) "
Write a python program to print only upto the letter 't' in a given string.,"s  =  ""hi i love python""
i = 0
while s [ i ]  !  = 't' : 
    print ( s [ i ]  , end = '' ) 
    i +  = 1"
Write a python program to print the length of a given string.,"sample _ str  =  ""Python is good for datascience""
print ( len ( sample _ str )  ) "
Write a python program to turn every item of a list into its square.,"sample _ list  =   [ 1 ,  2 ,  3 ,  4 ,  5 ,  6 ,  7 ] 
square _ list  =    [ x  *  x for x in sample _ list ] 
print ( square _ list ) "
Write a python program to print a new set with all items from both sets by removing duplicates,"set1  =   { 10 ,  20 ,  30 ,  40 ,  50 } 
set2  =   { 30 ,  40 ,  50 ,  60 ,  70 } 
print ( set1 . union ( set2 )  ) "
write a list comprehension in python to get a list of even numbers when a range is given,"N  =  20
number _ list  =   [  x for x in range ( N )  if x  %  2  =  =  0 ] 
print ( f'List of Even Numbers : ' ,  number _ list ) "
write a list comprehension in python to get a list of odd numbers when a range is given,"N  =  20
number _ list  =   [  x for x in range ( N )  if x  %  2  !  =  0 ] 
print ( f'List of Odd Numbers : ' ,  number _ list ) "
write a python function to display the Fibonacci series,"def recur _ fibo ( n )  : 
   if n  <  =  1 : 
       return n
   else : 
       return ( recur _ fibo ( n - 1 )   +  recur _ fibo ( n - 2 )  ) "
write a python lambda function to get remainder when divisor and divident are given,"remainder  =  lambda Divident ,  Divisor :  Divident  %  Divisor
print ( remainder ( 5 , 2 )  ) "
write a python function to convert degree celsius to degree fahrenheit,"def fahrenheit ( celsius )  : 
    return  ( celsius  *  1 . 8 )   +  32"
write a python function to convert degree fahrenheit to degree celsius," def celsius ( fahrenheit )  : 
    return  ( fahrenheit  -  32 )   /  1 . 8"
write a python function to get the factorial of a given number,"def factorial ( n )  : 
    if n  =  =  1 : 
        return n
    else : 
        return n * factorial ( n - 1 ) "
write a python program to remove punctuations in a string," punctuations  =  ''' !  (  )  -  [  ]  {  }  ;  : '"" \  ,  <  >  .  /  ?  @  #  $  %  ^  &  *  _  ~ '''
 string  =  '' . join ( e for e in d if e not in punctuations ) "
write a python program to print the ASCII value of a character," c  =  'p'
 print ( ""The ASCII value of '""  +  c  +  ""' is"" ,  ord ( c )  ) "
write a python program to swap two numbers," a  =  1
 b  =  2
 a ,  b  =  b ,  a"
write a python lambda function to add three numbers," x  =  lambda a ,  b ,  c  :  a  +  b  +  c
 print ( x ( 5 ,  6 ,  2 )  ) "
write a python program to convert a list of values in kilometers to feet," kilometer  =   [ 39 . 2 ,  36 . 5 ,  37 . 3 ,  37 . 8 ] 
 feet  =  map ( lambda x :  float ( 3280 . 8399 )  * x ,  kilometer ) 
 print ( list ( feet )  ) "
write a python list comprehension to flatten a list of lists," list _ of _ list  =   [  [ 1 , 2 , 3 ]  ,  [ 4 , 5 , 6 ]  ,  [ 7 , 8 ]  ]  ` 
 flatten  =   [ y for x in list _ of _ list for y in x ] "
write a python list comprehension to transpose a 2D matrix (provided as list)," matrix  =   [  [ 1 , 2 , 3 ]  ,  [ 4 , 5 , 6 ]  ,  [ 7 , 8 , 9 ]  ] 
 matrixT  =   [  [ row [ i ]  for row in matrix ]  for i in range ( len ( matrix [ 0 ]  )  )  ] "
write a python list comprehension to print numbers in a given string," string  =  ""Hello 12345 World""
 numbers  =   [ x for x in string if x . isdigit (  )  ] 
 print  ( numbers ) "
write a python function to linearly search an array for a given number and return its index else return -1,"def search ( arr ,  n ,  x )  :  
    for i in range ( 0 ,  n )  :  
        if  ( arr [ i ]   =  =  x )  :  
            return i 
    return  - 1"
write a python function to obtain the square root of a number," def squareRoot ( n )  :  
        x  =  n 
        y  =  1
        e  =  0 . 000001
        while ( x  -  y  >  e )  :   
            x  =   ( x  +  y )  / 2
            y  =  n  /  x   
        return x "
write a dictionary comprehension in python so that the values are square of the key number,"  square _ dict  =   { num :  num * num for num in range ( 1 ,  11 )  } 
  print ( square _ dict ) "
write a python program to get indexes for each element in a list using enumerate,"  l1  =   [ ""eat"" , ""sleep"" , ""repeat"" ]  
  for ele in enumerate ( l1 )  :  
      print  ( ele )  "
write a python program to get indexes starting at a specified number for each element in a list using enumerate,"  l1  =   [ ""eat"" , ""sleep"" , ""repeat"" ]  
  for count , ele in enumerate ( l1 , 100 )  :  
      print  ( count , ele  ) "
write a python program to demonstarate working of map,"  def addition ( n )  :  
    return n  +  n   
  numbers  =   ( 1 ,  2 ,  3 ,  4 )  
  result  =  map ( addition ,  numbers )  
  print ( list ( result )  )  "
write a python function to calculate simple interest,"  def simple _ interest ( p , t , r )  :   
    si  =   ( p  *  t  *  r )  / 100    
    return si "
write a python function to calculate compound interest," 
 def compound _ interest ( principle ,  rate ,  time )  :  
    Amount  =  principle  *   ( pow (  ( 1  +  rate  /  100 )  ,  time )  )  
    CI  =  Amount  -  principle 
    print ( ""Compound interest is"" ,  CI )  "
write a python function to convert a list of characters to a string," def convert ( s )  :  
     str1  =  """" 
     return ( str1 . join ( s )  )  "
write a python function to find the sum of digits in a number until one digit (no more than one digit)," def digSum ( n )  :  
    sum  =  0
    while ( n  >  0 or sum  >  9 )  :  
        if ( n  =  =  0 )  :  
            n  =  sum
            sum  =  0         
        sum  +  =  n  %  10
        n  =  int ( n / 10 )     
    return sum"
write a python function to get the sum of numbers in a given digit," def getSum ( n )  :      
    sum  =  0
    for digit in str ( n )  :    
      sum  +  =  int ( digit )         
    return sum"
write a python function to find the largest number in an array," def largest ( arr , n )  :  
    max  =  arr [ 0 ]  
    for i in range ( 1 ,  n )  :  
        if arr [ i ]   >  max :  
            max  =  arr [ i ]  
    return max"
write a python function to find the nth catalan number,"def catalan ( n )  :  
    if n  <  =  1 :  
        return 1
    res  =  0
    for i in range ( n )  :  
        res  +  =  catalan ( i )   *  catalan ( n - i - 1 )  
    return res "
write a python program to add two hexadecimal numbers," a  =  ""B""
 b  =  ""C""
 sum  =  hex ( int ( a ,  16 )   +  int ( b ,  16 )  )  
 print ( sum [ 2 :  ]  )  "
write a python program to add two octal numbers," a  =  ""123""
 b  =  ""456""
 sum  =  oct ( int ( a ,  8 )   +  int ( b ,  8 )  )  
 print ( sum [ 2 :  ]  )  "
write a python program to add two binary numbers," a  =  ""1101""
 b  =  ""100""
 sum  =  bin ( int ( a ,  2 )   +  int ( b ,  2 )  )   
 print ( sum [ 2 :  ]  )  "
write s python program to print the union of two sets," A  =   { 1 ,  2 ,  3 ,  4 ,  5 } 
 B  =   { 4 ,  5 ,  6 ,  7 ,  8 } 
 print ( A  |  B ) "
write s python program to print the intersection of two sets," A  =   { 1 ,  2 ,  3 ,  4 ,  5 } 
 B  =   { 4 ,  5 ,  6 ,  7 ,  8 } 
 print ( A  &  B ) "
write s python program to print the difference of two sets," A  =   { 1 ,  2 ,  3 ,  4 ,  5 } 
 B  =   { 4 ,  5 ,  6 ,  7 ,  8 } 
 print ( A  -  B ) "
write s python program to print the symmetric difference of two sets," A  =   { 1 ,  2 ,  3 ,  4 ,  5 } 
 B  =   { 4 ,  5 ,  6 ,  7 ,  8 } 
 print ( A  ^  B ) "
write a python function to calculate nPr," def nPr ( n ,  r )  :   
    def fact ( n )  :   
        if  ( n  <  =  1 )  :  
            return 1
        return n  *  fact ( n  -  1 ) 
    return int ( fact ( n )   / 
                fact ( n  -  r )  ) "
write a python function to calculate the volume of ellipsoid," def volumeOfEllipsoid ( r1 ,  r2 ,  r3 )  :  
    return 1 . 33  *  22  *  r1  *  r2  *  r3 / 7"
write a python function to calculate the area of tetraheadron," def area _ of _ tetrahedron ( side )  :  
    return  ( 1 . 73205  *  
            ( side  *  side )  )  ; "
write a python function to find the volume of tetraheadron," def vol _ tetra ( side )  :  
    volume  =   ( side  *  *  3  /   ( 6  *  1 . 414 )  )  
    return round ( volume ,  2 ) "
write a python function to determing the volume of a cube whose space diagonal measure is given,"  def CubeVolume ( d )  :  
    Volume  =   ( 1 . 73205  *  pow ( d ,  3 )  )   /  9
    return Volume"
write a python function to print Floyd's triangle,"  
  def loydTriangle ( n )  :    
    val  =  1
    for i in range ( 1 ,  n  +  1 )  :  
        for j in range ( 1 ,  i  +  1 )  :  
            print ( val ,  end  =  "" "" )  
            val  +  =  1       
        print ( """" )  "
write a python function to find the area of a circumscribed circle of an equilateral triangle,"  
   def area _ cicumscribed ( a )  :  
    return  ( a  *  a  *   ( 3 . 14159265  /  3 )  )  "
write a python function to find the side of a octogon inscribed in a square,"  
  def octaside ( a )  :  
    if a  <  0 :  
        return  - 1
    s  =  a  /   ( 1 . 414  +  1 )  
    return s "
write a python program to find the area of enneagon," 
  length  =  6
  Nonagon _ area  =  6 . 1818  *   ( length  *  *  2 )   
  print ( ""Area of regular Nonagon is  =  "" ,  Nonagon _ area )  "
write a python function to find the nth pronic number," 
 def findRectNum ( n )  :  
    return n *  ( n  +  1 )  "
write a python function to find the sum of N pronic numbers," 
 def calculateSum ( N )  :  
    return  ( N  *   ( N  -  1 )   /  /  2  +  
            N  *   ( N  -  1 )   *   ( 2  *  
                 N  -  1 )   /  /  6 )  ;  "
write a python function to find the sum of first N even numbers,"  
  def evensum ( n )  :  
    curr  =  2
    sum  =  0
    i  =  1 
    while i  <  =  n :  
        sum  +  =  curr  
        curr  +  =  2
        i  =  i  +  1
    return sum"
write a python function to check whether a number can be written as a sum of 3 primes (Goldbach Weak Coonjecture)," 
 def check ( n )  :  
  if n  %  2  =  =  1 and n  >  5 :  
    print ( 'YES' )  
  else :  
    print ( 'NO' )  "
write a python function to find the nth perrin number," 
 def per ( n )  :  
    if  ( n  =  =  0 )  :  
        return 3 ;  
    if  ( n  =  =  1 )  :  
        return 0 ;  
    if  ( n  =  =  2 )  :  
        return 2 ;  
    return per ( n  -  2 )   +  per ( n  -  3 )  ;  "
write a python function to implement linear extrapolation," 
 def extrapolate ( d ,  x )  :  
    y  =   ( d [ 0 ]  [ 1 ]   +   ( x  -  d [ 0 ]  [ 0 ]  )   /  
         ( d [ 1 ]  [ 0 ]   -  d [ 0 ]  [ 0 ]  )   *  
         ( d [ 1 ]  [ 1 ]   -  d [ 0 ]  [ 1 ]  )  )  ;     
    return y ;   "
write a python function to print the collatz sequence," 
 def printCollatz ( n )  :  
    while n  !  =  1 :  
        print ( n ,  end  =  ' ' )  
        if n  &  1 :  
            n  =  3  *  n  +  1
        else :  
            n  =  n  /  /  2  
    print ( n )  "
write a python function to find the sum of two numbers without using arithematic operators," 
 def Add ( x ,  y )  :  
    while  ( y  !  =  0 )  :  
        carry  =  x  &  y 
        x  =  x  ^  y 
        y  =  carry  <  <  1     
    return x "
write a python function to subtract two numbers without using arithemmatic operators,"  
  def subtract ( x ,  y )  :   
    while  ( y  !  =  0 )  :  
        borrow  =   (  ~ x )   &  y 
        x  =  x  ^  y 
        y  =  borrow  <  <  1
    return x "
write a python function to check whether the number is a perfect square without finding square root," 
 def isPerfectSquare ( n )   : 
    i  =  1
    while ( i  *  i <  =  n )  : 
        if  (  ( n  %  i  =  =  0 )  and  ( n  /  i  =  =  i )  )  : 
            return True          
        i  =  i  +  1
    return False"
write a python function to find the square root of a number using babylonian method," 
 def squareRoot ( n )  :  
        x  =  n 
        y  =  1
        e  =  0 . 000001
        while ( x  -  y  >  e )  :  
            x  =   ( x  +  y )  / 2
            y  =  n  /  x 
        return x "
write a python function to check whether the given number is a Buzz number or not," 
 def isBuzz ( num )   :  
    return  ( num  %  10  =  =  7 or num  %  7  =  =  0 )   "
write a python function to print two composite numbers whose difference is N," 
 def find _ composite _ nos ( n )   :   
    print ( 9  *  n ,  8  *  n )  ;   "
write a python function to return count of number of vowels in a sentence,"def count _ vowels ( sentence )  : 
   count  =  0
   for letter in sentence : 
      if letter in ""aeiouAEIOU"" : 
         count  +  =  1
   return count"
write a python function to check if a given string is a palindrome,"def is _ palindrome ( string )  : 
   return string  =  =  string [  :  :  - 1 ] "
write a program to print the nth fibonacci number,"n1  =  1
n2  =  1
n  =  5
for  _  in range ( n )  : 
   n1 ,  n2  =  n2 ,  n1  +  n2
print ( n2 ) "
write a function to return the square of first N numbers,"def get _ squares ( n )  : 
   return  [ i * i for i in range ( n )  ] "
write a python function to return only even numbers in a list,"def filter _ even ( nums )  : 
   return list ( filter ( lambda num :  num  %  2  =  =  0 ,  nums )  ) "
write a python function to return only odd numbers in a list,"def filter _ odd ( nums )  : 
   return list ( filter ( lambda num :  num  %  2  =  =  1 ,  nums )  ) "
write a python program to calculate the sum of numbers using reduce and print it,"from functools import reduce
nums  =   [ 1 ,  2 ,  3 ,  4 ,  5 ,  10 ,  20 ,  30 ,  40 ,  50 ] 
total _ sum  =  reduce ( lambda a ,  b :  a  +  b ,  nums ) 
print ( f'Sum :   { total _ sum } ' ) "
write a python program to print unique numbers in a list,"numbers  =   [ 1 ,  2 ,  2 ,  3 ,  4 ,  4 ,  5 ,  6 ] 
unique  =  set ( numbers ) 
print ( f'Unique numbers :   { list ( unique )  } ' ) "
write a python function to repeat a given string n times,"def repeat _ string ( string ,  frequency )  : 
   return string  *  frequency"
write a program to capitalize the first letter of every word in a string and print it,"string  =  'The quick brown fox jumps over the lazy dog'
print ( string . title (  )  ) "
write a function that merges two dictionaries,"def merge _ dictionaries ( dict1 ,  dict2 )  : 
   return  {  *  * dict1 ,   *  * dict2 } "
write a program to merge two lists into a dictionary,"keys  =   [ 1 ,  2 ,  3 ] 
values  =   [ 'aye' ,  'bee' ,  'sea' ] 
dictionary  =  dict ( zip ( keys ,  values )  ) "
write a python function that inverts the key and values in a dict and returns it,"def invert _ dict ( dictionary )  : 
   inverted _ dict  =   { value :  key for key ,  value in dictionary . items (  )  } 
   return inverted _ dict"
write a python program to print the difference in days between two dates,"from datetime import date
date1  =  date ( 2020 ,  10 ,  25 ) 
date2  =  date ( 2020 ,  12 ,  25 ) 
print ( f'Difference between dates :   {  ( date2  -  date1 )  . days } ' ) "
write a python function that returns the weighted average of numbers,"def get _ weighted _ average ( numbers ,  weightage )  : 
   return sum ( x  *  y for x ,  y in zip ( numbers ,  weightage )  )   /  sum ( weightage ) "
write a python program to print all prime numbers in a given interval,"lower  =  900
upper  =  1000
for num in range ( lower ,  upper  +  1 )  : 
   if num  >  1 : 
      for i in range ( 2 ,  num )  : 
         if  ( num  %  i )   =  =  0 : 
               break
      else : 
         print ( num ) "
write a python function to return words in a sentence in sorted order,"def get _ sorted _ words ( sentence )  : 
   words  =   [ word for word in sentence . split (  )  ] 
   words . sort (  ) 
   return words"
write a python function to return the nth fibonacci number,"def fib ( n )  : 
   if n  <  =  1 : 
      return n
   else : 
      return  ( fib ( n - 1 )   +  fib ( n - 2 )  ) "
write a python function to return the sum of first n numbers,"def sum _ of _ nums ( n )  : 
   if n  <  =  1 : 
      return n
   else : 
      return n  +  sum _ of _ nums ( n - 1 ) "
write a python function to return the factorial of a number,"def fact ( n )  : 
   if n  =  =  1 : 
      return n
   else : 
      return n  *  fact ( n - 1 ) "
write a python program to print the factors of a number,"num  =  320
for i in range ( 1 ,  num  +  1 )  : 
   if num  %  i  =  =  0 : 
      print ( i ) "
write a python function that returns the gcd of two numbers,"def gcd ( x ,  y )  : 
   if x  >  y : 
      smaller  =  y
   else : 
      smaller  =  x
   for i in range ( 1 ,  smaller  +  1 )  : 
      if (  ( x  %  i  =  =  0 )  and  ( y  %  i  =  =  0 )  )  : 
         gcd  =  i
   return gcd"
write a python program to print the ASCII value of a character,"character  =  'x'
print ( f'The ASCII value of  { character }  is  { ord ( character )  } ' ) "
write a python program to print the character of an ASCII value,"value  =  65
print ( f'The ASCII value  { value }  is of the character  { chr ( value )  } ' ) "
write a python function to print the binary value of a decimal number,"def print _ binary ( dec )  : 
   print ( bin ( dec )  ) "
write a python function to print the octal value of a decimal number,"def print _ octal ( dec )  : 
   print ( oct ( dec )  ) "
write a python function to print the hexadecimal value of a decimal number,"def print _ hexadecimal ( dec )  : 
   print ( hex ( dec )  ) "
write a python program that prints the sum of natural numbers up to a given number,"num  =  16
sum  =  0
while  ( num  >  0 )  : 
   sum  +  =  num
   num  -  =  1
print ( f'The sum is  { sum } ' ) "
write a python function to return the number of lines in a file,"def count _ lines ( filename )  : 
   with open ( filename ,  'r' )  as f : 
      contents  =  f . read (  )  . split ( ' \ n' ) 
      return len ( contents ) "
write a program to print the current date and time,"from datetime import datetime
now  =  datetime . now (  ) 
print ( now ) "
write a python program to extract the file name and extension of a file,"import os
filename ,  extension  =  os . path . splitext ( ' / path / to / some / file . ext' ) "
write a python program to merge two lists,"odd  =   [ 1 ,  3 ,  5 ,  7 ,  9 ] 
even  =   [ 2 ,  4 ,  6 ,  8 ,  10 ] 
odd . extend ( even ) "
write a python program to print a random vowel,"import random
vowels  =   [ 'a' ,  'e' ,  'i' ,  'o' ,  'u' ] 
print ( random . choice ( vowels )  ) "
write a python program to flip a coin 100 times and print number of heads and tails,"import random
heads  =  0
tails  =  0
for i in range ( 100 )  : 
   if ( random . choice (  [ True ,  False ]  )  )  : 
      heads  +  =  1
   else : 
      tails  +  =  1
print ( f' { heads }  heads ,   { tails }  tails' ) "
write a python program to print common elements in two lists,"list _ a  =   [ 1 ,  2 ,  3 ,  4 ,  5 ,  6 ,  7 ] 
list _ b  =   [ 2 ,  4 ,  6 ,  8 ,  10 ] 
print ( f'Common elements :   {  set ( list _ a )  . intersection ( set ( list _ b )  )   } ' ) "
write a python program to print squares of numbers until 20,"for i in range ( 20 )  : 
   print ( i * i ) "
write a python function to print a given string n times,"def printn ( string ,  n )  : 
   print ( string  *  n ) "
write a python program that creates a dictionary whose keys are numbers from 1 to 10 and values are squares of the key,"square _ dict  =   {  } 
for i in range ( 1 ,  11 )  : 
   square _ dict [ i ]   =  i * i"
write a python class called Person that has a name property,"class Person : 
   def  _  _ init _  _  ( self ,  name )  : 
      self . name  =  name"
write a python function that takes two strings as a parameter and prints the shorter one,"def print _ shorter ( str1 ,  str2 )  : 
   if  ( len ( str1 )   >  len ( str2 )  )  : 
      print ( str2 ) 
   else : 
      print ( str1 ) "
write a program to compute the count of each word in a sentence and print it,"word _ freq  =   {  } 
line  =  'how many how words does this many have'
for word in line . split (  )  : 
   word _ freq [ word ]   =  word _ freq . get ( word ,  0 )   +  1
print ( word _ freq ) "
write a python function that squares every number in a list using a list comprehension and returns the result,"def square _ numbers ( nums )  : 
   return  [ i * i for i in nums ] "
write a python program that converts a binary number to decimal and prints it,"binary _ num  =  '1010101'
decimal _ num  =  int ( binary _ num ,  2 ) 
print ( decimal _ num ) "
write a python program that converts a octal number to octal and prints it,"octal _ num  =  '17'
decimal _ num  =  int ( octal _ num ,  8 ) 
print ( decimal _ num ) "
write a python program that converts a hexadecimal number to hexadecimal and prints it,"hexadecimal _ num  =  'FF'
decimal _ num  =  int ( hexadecimal _ num ,  16 ) 
print ( decimal _ num ) "
write a python program that alphabetically sorts the words in a sentence and prints it,"sentence  =  'the quick brown fox jumps'
sorted _ words  =  sentence . split ( ' ' ) 
sorted _ words . sort (  ) 
print ( ' ' . join ( sorted _ words )  ) "
write a python program that prints the area of a circle,"import math
radius  =  5
print ( f'Area :   { math . pi  *  radius  *  radius } ' ) "
write a python function that returns a dictionary with the area and perimeter of a rectangle,"def calculate _ rect _ properties ( width ,  height )  : 
   return  { 
      'perimeter' :  2  *   ( width  +  height )  , 
      'area' :  width  *  height
    } "
write a python program that removes all blank spaces in a sentence and prints it,"sentence  =  'the quick brown fox'
print ( sentence . replace ( ' ' ,  '' )  ) "
write a python program that prints all characters at even indexes in a sentence,"sentence  =  'the quick brown fox'
print ( sentence [  :  : 2 ]  ) "
write a python program that prints every third character in a sentence,"sentence  =  'the quick brown fox'
print ( sentence [  :  : 3 ]  ) "
write a program to remove odd numbers from a list using list comprehensions,"nums  =   [ 1 ,  2 ,  3 ,  4 ,  5 ,  6 ,  7 ,  8 ] 
no _ odd _ nums  =   [ i for i in nums if i  %  2  =  =  0 ] "
write a program to remove even numbers from a list using list comprehensions,"nums  =   [ 1 ,  2 ,  3 ,  4 ,  5 ,  6 ,  7 ,  8 ] 
no _ even _ nums  =   [ i for i in nums if i  %  2  =  =  1 ] "
write a program to print 5 random numbers between 100 and 200,"import random
print ( random . sample ( range ( 100 ,  200 )  ,  5 )  ) "
write a program to print 5 even random numbers between 10 and 100,"import random
print ( random . sample (  [ i for i in range ( 10 ,  100 )  if i % 2  =  =  0 ]  ,  5 )  ) "
write a program to print 5 odd random numbers between 100 and 200,"import random
print ( random . sample (  [ i for i in range ( 10 ,  100 )  if i % 2  =  =  1 ]  ,  5 )  ) "
write a program to print 5 random numbers divisible by 4 between 100 and 200,"import random
print ( random . sample (  [ i for i in range ( 10 ,  100 )  if i % 4  =  =  0 ]  ,  5 )  ) "
write a program that adds corresponding elements in two lists and prints a new list,"list1  =   [ 1 ,  2 ,  3 ,  4 ,  5 ] 
list2  =   [ 5 ,  4 ,  3 ,  2 ,  1 ] 
sum _ list  =   [ a + b for  ( a , b )  in zip ( list1 ,  list2 )  ] 
print ( sum _ list ) "
write a program that subtracts corresponding elements in two lists and prints a new list,"list1  =   [ 1 ,  2 ,  3 ,  4 ,  5 ] 
list2  =   [ 5 ,  4 ,  3 ,  2 ,  1 ] 
diff _ list  =   [ a - b for  ( a , b )  in zip ( list1 ,  list2 )  ] 
print ( diff _ list ) "
write a program that multiplies corresponding elements in two lists and prints a new list,"list1  =   [ 1 ,  2 ,  3 ,  4 ,  5 ] 
list2  =   [ 5 ,  4 ,  3 ,  2 ,  1 ] 
prod _ list  =   [ a * b for  ( a , b )  in zip ( list1 ,  list2 )  ] 
print ( prod _ list ) "
write a program that divides corresponding elements in two lists and prints a new list,"list1  =   [ 1 ,  2 ,  3 ,  4 ,  5 ] 
list2  =   [ 5 ,  4 ,  3 ,  2 ,  1 ] 
quot _ list  =   [ a / b for  ( a , b )  in zip ( list1 ,  list2 )  ] 
print ( quot _ list ) "
write a python program to print 5 random vowels,"import random
vowels  =   [ 'a' ,  'e' ,  'i' ,  'o' ,  'u' ] 
print (  [ random . choice ( vowels )  for  _  in range ( 5 )  ]  ) "
write a python program that creates a dictionary whose keys are numbers from 1 to 10 and values are cubes of the key,"cube _ dict  =   {  } 
for i in range ( 1 ,  11 )  : 
   cube _ dict [ i ]   =  i  *  *  3"
write a program to create a string variable and print the amount of memory it consumes,"import sys
string _ var  =  'string variable'
print ( sys . getsizeof ( string _ var )  ) "
write a python function that joins strings in a list and returns the result,"def join _ string _ parts ( str _ list )  : 
   return "" "" . join ( str _ list ) "
write a python program that reverses an integer and prints it,"num  =  12345
reversed  =  int ( str ( num )  [  :  :  - 1 ]  ) 
print ( reversed ) "
write a python program that sorts and prints a comma separated list of values,"values  =  'one , two , three , four , five'
items  =  values . split ( ' , ' ) 
items . sort (  ) 
print ( ' , ' . join ( items )  ) "
write a python program to print unique words in a sentence,"sentence  =  'the king is the one'
unique  =  set ( sentence . split ( ' ' )  ) 
print ( unique ) "
write a python program that multiplies a tuple n times and print the result,"my _ tuple  =   ( 1 ,  2 ,  3 ) 
n  =  3
print ( my _ tuple  *  3 ) "
write a python program to multiply three numbers and print the result,"num1  =  2
num2  =  4
num3  =  6
print ( num1  *  num2  *  num3 ) "
write a python program to print the sum of first n numbers,"n  =  10
sum  =  0
while n  >  0 : 
   sum  +  =  n
   n  -  =  1
print ( sum ) "
write a python program to print the factorial of a number,"num  =  5
fact  =  1
while num  >  0 : 
   fact  *  =  num
   num  -  =  1
print ( fact ) "
write a python function to return the factors of a number,"def get _ factors ( num )  : 
   factors  =   [  ] 
   for i in range ( 1 ,  num  +  1 )  : 
      if num  %  i  =  =  0 : 
         factors . append ( i ) 
   return factors"
write a python function that returns True if the product of two provided numbers is even,"def is _ prod _ even ( num1 ,  num2 )  : 
   prod  =  num1  *  num2
   return not prod  %  2"
write a python function that returns True if the sum of two provided numbers is even,"def is _ prod _ even ( num1 ,  num2 )  : 
   sum  =  num1  +  num2
   return not sum  %  2"
write a python program to print the first 5 items in a list,"my _ list  =   [ 1 ,  2 ,  3 ,  4 ,  5 ,  6 ,  7 ,  8 ,  9 ,  10 ] 
print ( my _ list [  : 5 ]  ) "
write a python program to print the last 3 items in a list,"my _ list  =   [ 1 ,  2 ,  3 ,  4 ,  5 ,  6 ,  7 ,  8 ,  9 ,  10 ] 
print ( my _ list [  - 3 :  ]  ) "
write a python program to print the items in a list apart from the first 4,"my _ list  =   [ 1 ,  2 ,  3 ,  4 ,  5 ,  6 ,  7 ,  8 ,  9 ,  10 ] 
print ( my _ list [ 4 :  ]  ) "
write a python function that makes all negative values in a list zero and returns it,"def make _ negative _ zero ( items )  : 
   return  [ 0 if item  <  0 else item for item in items ] "
write a python program to shuffle the items in a list and print it,"from random import shuffle
mylist  =   [ 1 ,  2 ,  3 ,  4 ,  5 ] 
shuffle ( mylist ) 
print ( mylist ) "
write a python program that adds the elements of a list to a set and prints the set,"my _ set  =   { 1 ,  2 ,  3 } 
my _ list  =   [ 4 ,  5 ,  6 ] 
my _ set . update ( my _ list ) 
print ( my _ set ) "
write a python program that prints the circumference of a circle,"import math
radius  =  10
print ( f'Area :   { 2  *  math . pi  *  radius } ' ) "
write a python program that prints the area of a rectangle,"length  =  10
width  =  5
print ( f'Area :   { length  *  width } ' ) "
write a python program that prints the area of a square,"side  =  5
print ( f'Area :   { side  *  side } ' ) "
write a python program to create a dictionary with numbers 1 to 5 as keys and the numbers in english as values,"number _ dict  =   { 
   1 :  'one' , 
   2 :  'two' , 
   3 :  'three' , 
   4 :  'four' , 
   5 :  'five'
 } "
write a python program to remove words less than a specified length from a sentence,"sentence  =  'this is my sentence and i will write it my way'
minlength  =  3
result  =   [ word for word in sentence . split ( ' ' )  if len ( word )   >  =  minlength ] "
write a python program to keep words less than a specified length in a sentence,"sentence  =  'this is my sentence and i will write it my way'
maxlength  =  3
result  =   [ word for word in sentence . split ( ' ' )  if len ( word )   <  =  minlength ] "
write a python function that takes a list as an input and converts all numbers to positive numbers and returns the new list,"def make _ all _ positive ( nums )  : 
   return  [ num if num  >  0 else  - num for num in nums ] "
write a python function that takes a list as an input and converts all numbers to negative numbers and returns the new list,"def make _ all _ negative ( nums )  : 
   return  [ num if num  <  0 else  - num for num in nums ] "
write a python program to print the words in a sentence in reverse order,"sentence  =  'the quick brown fox'
words  =  sentence . split ( ' ' ) 
words . reverse (  ) 
print ( ' ' . join ( words )  ) "
write a python program to replace each word in a sentence with the length of the word and print it,"sentence  =  'the quick brown fox jumps over the lazy dog'
words  =  sentence . split ( ' ' ) 
lengths  =   [ str ( len ( word )  )  for word in words ] 
print ( ' ' . join ( lengths )  ) "
write a python program to convert a set to a list,"myset  =   { 1 ,  2 ,  4 ,  7 } 
mylist  =  list ( myset ) "
write a python program to convert a list to a dictionary where the key is the index and the value is the item in the list,"my _ list  =   [ 1 ,  8 ,  1 ,  2 ,  2 ,  9 ] 
my _ dict  =   { key :  value for key ,  value in enumerate ( my _ list )  } "
"1 write a program to get numbers = 1,3,11,42,12,4001","from collections import Iterable
highestnumber  =   - 999
for i in numbers : 
  if i  >  highestnumber : 
    highestnumber  =  i
print ( numbers . index ( highestnumber )  ) "
"2 write a program to get numbers = 1,3,11,42,12,4001","highestnumber  =   - 999
for i in numbers : 
  if i  >  highestnumber : 
    highestnumber  =  i
print ( numbers . index ( highestnumber )  ) "
3 add 1 to all elements in list python,"lst  =   [ 1 , 2 , 3 ] 
list ( map ( lambda x : x + 1 ,  lst )  ) "
4 add a string to each element of a list python,"my _ list  =   [ 'foo' ,  'fob' ,  'faz' ,  'funk' ] 
string  =  'bar'
list2  =  list ( map ( lambda orig _ string :  orig _ string  +  string ,  my _ list )  ) "
5 add a third dimension matrix dataset python,"x  =   [ 2D _ matrix ]   #  To convert from a 2 - D to 3 - D
x  =   [  [  [ value1 ]  ]  ]   #  To convert from a 1 - D to 3 - D"
6 python add all values of another list,"a  =   [ 1 ,  2 ,  3 ] 
b  =   [ 4 ,  5 ,  6 ] 
a  +  =  b"
7 add a value to the start of a list python,"var = 7
array  =   [ 1 , 2 , 3 , 4 , 5 , 6 ] 
array . insert ( 0 , var ) "
8 print into lowersase an uppercase sentence in python,"s  =  ""Kilometer""
print ( s . lower (  )  ) 
mydictionary  :   { 1 :  1 ,  7 :  2 ,  4 :  2 ,  3 :  1 ,  8 :  1 } 
sortedDictionary  =  sorted ( mydictionary . keys (  )  ) "
10 limit decimals to only two decimals in python,"answer  =  str ( round ( answer ,  2 )  ) "
11 print how many keys are in a dictionary python,"a  =   { 'foo' : 42 ,  'bar' : 69 } 
print ( len ( a )  ) "
11 access index of a character in a string python,"foo  =  'Hello'
foo . find ( 'lo' ) "
12 python print last element of list,"mylist  =   [ 0 ,  1 ,  2 ] 
print ( myList [  - 1 ]  )  "
13 how to add a blank line in python,"print ( """" ) "
14 how to add element at first position in array python,"x  =   [ 1 , 3 , 4 ] 
a  =  2
x . insert ( 1 , a ) "
15 how to add extra zeros after decimal in python,"format ( 2 . 0 ,  ' . 6f' ) 
'2 . 000000'"
16 how to add list numbers in python,"numbers  =   [ 1 , 2 , 3 , 4 , 5 , 1 , 4 , 5 ]  
Sum  =  sum ( numbers )  "
17 split list into lists of equal length python," [ lst [ i : i  +  n ]  for i in range ( 0 ,  len ( lst )  ,  n )  ] "
19 capitalize first letter in python in list,"my _ list  =   [ 'apple pie' ,  'orange jam' ] 
my _ list [ 0 ]  . capitalize (  ) 
if ( all ( x in test _ list for x in sub _ list )  )  :  
    flag  =  True"
21 write a function to check if string is camelcase pythonpython by Breakable Buffalo on Aug 09 2020 Donate,"def is _ camel _ case ( s )  : 
    return s  !  =  s . lower (  )  and s  !  =  s . upper (  )  and "" _ "" not in s
isinstance ( string ,  bytes ) "
23 how to check nth prime in python,"x = int ( input (  )  ) 
n , c = 1 , 0
while ( c < x )  : 
    n +  = 1
    for i in range ( 2 , n + 1 )  : 
        if ( n % i =  = 0 )  : 
            break
    if ( i =  = n )  : 
        c = c + 1"
24 how to convert fahrenheit to celsius in python,"Celsius  =   ( Fahrenheit  -  32 )   *  5 . 0 / 9 . 0
a = 6
print ( bin ( a )  ) "
26 write a python function to convert from base 2 to base 10 in pythonpython by TheRubberDucky on Nov 06 2020 Donate,"def getBaseTen ( binaryVal )  : 
    count  =  0
    binaryVal  =  binaryVal [  :  :  - 1 ] 
	for i in range ( 0 ,  len ( binaryVal )  )  : 
    	if ( binaryVal [ i ]   =  =  ""1"" )  : 
            count  +  =  2 *  * i
    return count"
27 write a python funtion to execute bash commands,"import subprocess
subprocess . call (  [ ""sudo"" ,  ""apt"" ,  ""update"" ]  ) "
27 write a function to generate and print a random number between 0 and 22,"import random
n  =  random . randint ( 0 , 22 ) 
print ( n ) "
28 to get a random element from an array in python,"import random
list _   =   [ 1 , 2 , 3 , 4 ] 
random . choice ( list _  ) "
29 print current day in python,"from datetime import date
today  =  date . today (  ) 
print ( ""Today's date : "" ,  today ) "
30 program to count number of cpu cores available,"import os
os . cpu _ count (  ) "
30 get rid of all null values in array python,"mylist  =   [ 1 ,  2 ,  3 ,  '' ,  4 ] 
mylist  =   [ i for i in mylist if i ] "
31 get the most common number in python,"from statistics import mode
mode (  ( 1 ,  2 ,  4 ,  4 ,  5 ,  4 ,  4 ,  2 ,  3 ,  8 ,  4 ,  4 ,  4 )  ) "
32 print current version of python,"import sys
print ( sys . version ) "
34 write a python function to convert a string  into xml,"import xml . etree . ElementTree as ET
root  =  ET . fromstring ( country _ data _ as _ string ) 
import xml . etree . ElementTree as ET
tree  =  ET . parse ( 'filename . xml' )  
tree _ root  =  tree . getroot (  )  "
36 python parse datetime from string,"from datetime import datetime
datetime _ object  =  datetime . strptime ( 'Jun 1 2005  1 : 33PM' ,  ' % b  % d  % Y  % I :  % M % p' ) "
37 print list as matrix in python without bracketspython by Bright Butterfly on Jun 14 2020 Donate,"data  =   [ 7 ,  7 ,  7 ,  7 ] 
print (  * data ,  sep = '' ) "
38 how to read a specific line from a text file in python,"line  =  open ( ""file . txt"" ,  ""r"" )  . readlines (  )  [ 7 ] "
39 how to remove integer from string in python,"s  =  '12abcd405'
result  =  '' . join (  [ i for i in s if not i . isdigit (  )  ]  ) "
40 write a function to return the nth fibonacci in python,"def Fibonacci ( n )  :  
    if n < 0 :  
        print ( ""Incorrect input"" ) 
    elif n =  = 1 :  
        return 0
    elif n =  = 2 :  
        return 1
    else :  
        return Fibonacci ( n - 1 )  + Fibonacci ( n - 2 )  "
41 how to sort a list in python using lambda,"data  =   [  ( ""Apples"" ,  5 ,  ""20"" )  ,   ( ""Pears"" ,  1 ,  ""5"" )  ,   ( ""Oranges"" ,  6 ,  ""10"" )  ] 
data . sort ( key = lambda x : x [ 0 ]  ) "
43 write a to time a python script,"from datetime import datetime
start  =  datetime . now (  ) 
do _ something (  )  :  .  .  . 
print ( datetime . now (  )   -  start ) "
48 write a python program to merge a list of dictionaires,"result  =   {  } 
for d in L : 
    result . update ( d ) "
51 write a python function to find a missing number in a list of consecutive natural numbers,"def getMissingNo ( A )  :  
    n  =  len ( A )  
    total  =   ( n  +  1 )  *  ( n  +  2 )  / 2
    sum _ of _ A  =  sum ( A )  
    return total  -  sum _ of _ A "
52 write a python program to normalize a list of numbers and print the result,"a  =   [ 2 , 4 , 10 , 6 , 8 , 4 ] 
amin ,  amax  =  min ( a )  ,  max ( a ) 
for i ,  val in enumerate ( a )  : 
    a [ i ]   =   ( val - amin )   /   ( amax - amin ) 
print ( a ) "
54 Write a Python function to check if a number is a perfect square,"def is _ perfect _ square ( n )  : 
    x  =  n  /  /  2
    y  =  set (  [ x ]  ) 
    while x  *  x  !  =  n : 
        x  =   ( x  +   ( n  /  /  x )  )   /  /  2
        if x in y :  return False
        y . add ( x ) 
    return True"
57 Write a Python function to find the single number in a list that doesn't occur twice.,"def single _ number ( arr )  : 
    result  =  0
    for i in arr : 
        result  ^  =  i
    return result"
58 Write a Python function to find the single element in a list where every element appears three times except for one.,"def single _ number ( arr )  : 
    ones ,  twos  =  0 ,  0
    for x in arr : 
        ones ,  twos  =   ( ones  ^  x )   &   ~ twos ,   ( ones  &  x )   |   ( twos  &   ~ x ) 
    assert twos  =  =  0
    return ones"
59 Write a function program to add the digits of a positive integer repeatedly until the result has a single digit.,"def add _ digits ( num )  : 
        return  ( num  -  1 )   %  9  +  1 if num  >  0 else 0"
61 Write a Python function to reverse the bits of an integer (32 bits unsigned).,"def reverse _ Bits ( n )  : 
        result  =  0
        for i in range ( 32 )  : 
            result  <  <  =  1
            result  |  =  n  &  1
            n  >  >  =  1
        return result"
62 Write a Python function to check a sequence of numbers is an arithmetic progression or not.,"def is _ arithmetic ( l )  : 
    delta  =  l [ 1 ]   -  l [ 0 ] 
    for index in range ( len ( l )   -  1 )  : 
        if not  ( l [ index  +  1 ]   -  l [ index ]   =  =  delta )  : 
             return False
    return True"
64 Write a Python function to compute the sum of the two reversed numbers and display the sum in reversed form.,"def reverse _ sum ( n1 ,  n2 )  : 
    return int ( str ( int ( str ( n1 )  [  :  :  - 1 ]  )   +  int ( str ( n2 )  [  :  :  - 1 ]  )  )  [  :  :  - 1 ]  ) "
65 Write a Python function to check if a given string is an anagram of another given string.,"def is _ anagram ( str1 ,  str2 )  : 
    list _ str1  =  list ( str1 ) 
    list _ str1 . sort (  ) 
    list _ str2  =  list ( str2 ) 
    list _ str2 . sort (  ) 
    return  ( list _ str1  =  =  list _ str2 ) "
66 Write a Python function to push all zeros to the end of a list.,"def move _ zero ( num _ list )  : 
    a  =   [ 0 for i in range ( num _ list . count ( 0 )  )  ] 
    x  =   [  i for i in num _ list if i  !  =  0 ] 
    x . extend ( a ) 
    return ( x ) "
67 Write a Python function to the push the first number to the end of a list.,"def move _ last ( num _ list )  : 
    a  =   [ num _ list [ 0 ]  for i in range ( num _ list . count ( num _ list [ 0 ]  )  )  ] 
    x  =   [  i for i in num _ list if i  !  =  num _ list [ 0 ]  ] 
    x . extend ( a ) 
    return ( x ) "
68 Write a Python function to find the length of the last word.,"def length _ of _ last _ word ( s )  : 
        words  =  s . split (  ) 
        if len ( words )   =  =  0 : 
            return 0
        return len ( words [  - 1 ]  ) "
70 Write a Python function to find the single number which occurs odd numbers and other numbers occur even number.,"def odd _ occurrence ( arr )  : 
    result  =  0
    for element in arr : 
        result  =  result  ^  element
    return result"
73 Write a python function to find the difference between the sum of the squares of the first two hundred natural numbers and the square of the sum.,"r  =  range ( 1 ,  201 ) 
a  =  sum ( r ) 
print  ( a  *  a  -  sum ( i * i for i in r )  ) "
74 Write a Python function to compute s the sum of the digits of the number 2 to the power 20.,"def digits _ sum (  )  : 
	n  =  2 *  * 20
	ans  =  sum ( int ( c )  for c in str ( n )  ) 
	return str ( ans ) "
75 Write a Python program to compute the sum of all the multiples of 3 or 5 below 500.,"n  =  0
for i in range ( 1 , 500 )  : 
     if not i  %  5 or not i  %  3 : 
         n  =  n  +  i
print ( n ) "
76 Write a Python function to converting an integer to a string in any base.,"def to _ string ( n , base )  : 
   conver _ tString  =  ""0123456789ABCDEF""
   if n  <  base : 
      return conver _ tString [ n ] 
   else : 
      return to _ string ( n /  / base , base )   +  conver _ tString [ n  %  base"
77 Write a Python function to calculate the geometric sum of n-1.,"def geometric _ sum ( n )  : 
  if n  <  0 : 
    return 0
  else : 
    return 1  /   ( pow ( 2 ,  n )  )   +  geometric _ sum ( n  -  1 ) "
78 Write a Python function to find the greatest common divisor (gcd) of two integers.,"def Recurgcd ( a ,  b )  : 
	low  =  min ( a ,  b ) 
	high  =  max ( a ,  b ) 
	if low  =  =  0 : 
		return high
	elif low  =  =  1 : 
		return 1
	else : 
		return Recurgcd ( low ,  high % low ) "
"79 Write a program to print which will find all such numbers which are divisible by 7 but are not a multiple of 5,","between 2000 and 3200  ( both included )  .   
l =  [  ] 
for i in range ( 2000 ,  3201 )  : 
    if  ( i % 7 =  = 0 )  and  ( i % 5 !  = 0 )  : 
        l . append ( str ( i )  ) 
print ' , ' . join ( l ) "
81 Write a Python program to convert a given Bytearray to Hexadecimal string.,"def bytearray _ to _ hexadecimal ( list _ val )  : 
     result  =  '' . join ( ' {  : 02x } ' . format ( x )  for x in list _ val )   
     return ( result ) "
83 Write a Python program to move all spaces to the front of a given string in single traversal.,"def moveSpaces ( str1 )  :  
    no _ spaces  =   [ char for char in str1 if char !  = ' ' ]    
    space =  len ( str1 )   -  len ( no _ spaces ) 
    result  =  ' ' * space    
    return result  +  '' . join ( no _ spaces ) "
84 Write a Python program to find maximum length of consecutive 0’s in a given binary string.,"def max _ consecutive _ 0 ( input _ str )  :  
     return  max ( map ( len , input _ str . split ( '1' )  )  ) 
str1  =  '111000010000110'
print ( ""Original string : ""  +  str1 ) 
print ( ""Maximum length of consecutive 0 ’ s : "" ) "
85 Write a Python program that iterate over elements repeating each as many times as its count.,"from collections import Counter
c  =  Counter ( p = 4 ,  q = 2 ,  r = 0 ,  s =  - 2 ) 
print ( list ( c . elements (  )  )  ) "
86 Write a Python program to generate groups of five consecutive numbers in a list,"l  =   [  [ 5 * i  +  j for j in range ( 1 , 6 )  ]  for i in range ( 5 )  ] 
print ( l ) "
87 Write a Python program to print the list in a list of lists whose sum of elements is the highest.,"print ( max ( num ,  key = sum )  ) "
91 Write a Python function to create a multidimensional list (lists of lists) with zeros and print the output.,"nums  =   [  ] 
for i in range ( 3 )  : 
    nums . append (  [  ]  ) 
    for j in range ( 2 )  : 
        nums [ i ]  . append ( 0 ) 
print ( ""Multidimensional list : "" ) 
print ( nums ) "
98 Write a Python program to multiply two integers without using the '*' operator in python.,"def multiply ( x ,  y )  : 
    if y  <  0 : 
        return  - multiply ( x ,   - y ) 
    elif y  =  =  0 : 
        return 0
    elif y  =  =  1 : 
        return x
    else : 
        return x  +  multiply ( x ,  y  -  1 ) "
write a function to merge two sorted lists,"def merge _ lists ( lst1 ,  lst2 )  : "
write a function to right rotate a given list by given input,"def right _ rotate ( lst ,  n )  : 
    n  =  n  %  len ( lst ) 
    return lst [  - n :  ]   +  lst [  :  - n ] "
"With a given tuple (1,2,3,4,5,6,7,8,9,10), write a program to print the first half values in one line and the last half values in one line.","tp =  ( 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 ) 
tp1 = tp [  : 5 ] 
tp2 = tp [ 5 :  ] 
print ( tp1 ) 
print ( tp2 ) "
"Write a program which accepts a string as input to print ""Yes"" if the string is ""yes"" or ""YES"" or ""Yes"", otherwise print ""No"".","s =  input (  ) 
if s =  = ""yes"" or s =  = ""YES"" or s =  = ""Yes"" : 
    print ( ""Yes"" ) 
else : 
    print ( ""No"" ) "
"Write a program which can filter even numbers in a list by using filter function. The list is: [1,2,3,4,5,6,7,8,9,10].","li  =   [ 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 ] 
evenNumbers  =  filter ( lambda x :  x % 2 =  = 0 ,  li ) 
print ( evenNumbers ) "
"Write a program which can map() to make a list whose elements are square of elements in [1,2,3,4,5,6,7,8,9,10].","li  =   [ 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 ] 
squaredNumbers  =  map ( lambda x :  x *  * 2 ,  li ) 
print ( squaredNumbers ) "
"Write a program which can map() and filter() to make a list whose elements are square of even number in [1,2,3,4,5,6,7,8,9,10] and print it","li  =   [ 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 ] 
evenNumbers  =  map ( lambda x :  x *  * 2 ,  filter ( lambda x :  x % 2 =  = 0 ,  li )  ) 
print ( evenNumbers ) "
Write a program which can filter() to make a list whose elements are even number between 1 and 20 (both included).,"evenNumbers  =  filter ( lambda x :  x % 2 =  = 0 ,  range ( 1 , 21 )  ) 
print ( evenNumbers ) "
"Assuming that we have some email addresses in the ""username@companyname.com"" format, please write program to print the user name of a given email address. Both user names and company names are composed of letters only.","import re
emailAddress  =  'bing @ google . com'
pat2  =  "" (  \ w +  )  @  (  (  \ w +  \  .  )  +  ( com )  ) ""
r2  =  re . match ( pat2 , emailAddress ) 
print ( r2 . group ( 1 )  ) "
"Assuming that we have some email addresses in the ""username@companyname.com"" format, please write program to print the company name of a given email address. Both user names and company names are composed of letters only.","import re
emailAddress  =  'bing @ google . com'
pat2  =  "" (  \ w +  )  @  (  \ w +  )  \  .  ( com ) ""
r2  =  re . match ( pat2 , emailAddress ) 
print ( r2 . group ( 2 )  ) "
Write a program which accepts a sequence of words separated by whitespace as input to print the words composed of digits only.,"import re
s  =  input (  ) 
print ( re . findall ( "" \ d + "" , s )  ) 
unicodeString  =  u""hello world ! ""
print ( unicodeString ) "
Write a program to read an ASCII string and to convert it to a unicode string encoded by utf-8.,"s  =  input (  ) 
u  =  unicode (  s  , ""utf - 8"" ) 
print ( u ) "
Write a program to compute 1/2+2/3+3/4+...+n/n+1 with a given n input by input parameters.,"n = int ( input (  )  ) 
sum = 0 . 0
for i in range ( 1 , n + 1 )  : 
    sum  +  =  float ( float ( i )  /  ( i + 1 )  ) 
print ( sum ) "
Write a function to compute: f(n)=f(n-1)+100 when n>0 and f(0)=1 with a given n input by input parameters.,"def f ( n )  : 
    if n =  = 0 : 
        return 0
    else : 
        return f ( n - 1 )  + 100"
Please write a function to compute the Fibonacci sequence until a given number via input paramters.,"def fibo ( n )  : 
    if n  =  =  0 :  return 0
    elif n  =  =  1 :  return 1
    else :  return f ( n - 1 )  + f ( n - 2 ) "
Please write a function using generator to print the even numbers between 0 and n in comma separated form while n is input by console.,"def EvenGenerator ( n )  : 
    i = 0
    while i <  = n : 
        if i % 2 =  = 0 : 
            yield i
        i +  = 1"
Please write a function using generator to print the numbers which can be divisible by 5 and 7 between 0 and n in comma separated form while n is input by console.,"def NumGenerator ( n )  : 
    for i in range ( n + 1 )  : 
        if i % 5 =  = 0 and i % 7 =  = 0 : 
            yield i"
"Please write assert statements to verify that every number in the list [2,4,6,8] is even.","li  =   [ 2 , 4 , 6 , 8 ] 
for i in li : 
    assert i % 2 =  = 0"
Please write a program which accepts basic mathematic expression from console and print the evaluation result.,"expression  =  input (  ) 
print ( eval ( expression )  ) "
Please generate a random float where the value is between 10 and 100 using Python math module.,"import random
print ( random . random (  )  * 100 ) "
Please generate a random float where the value is between 5 and 95 using Python math module.,"import random
print ( random . random (  )  * 100 - 5 ) "
Please write a program to output a random even number between 0 and 10 inclusive using random module and list comprehension.,"import random
print ( random . choice (  [ i for i in range ( 11 )  if i % 2 =  = 0 ]  )  ) "
"Please write a program to output a random number, which is divisible by 5 and 7, between 0 and 10 inclusive using random module and list comprehension","import random
print ( random . choice (  [ i for i in range ( 201 )  if i % 5 =  = 0 and i % 7 =  = 0 ]  )  ) "
Please write a program to generate a list with 5 random numbers between 100 and 200 inclusive.,"import random
print ( random . sample ( range ( 100 )  ,  5 )  ) "
Please write a program to randomly generate a list with 5 even numbers between 100 and 200 inclusive.,"import random
print ( random . sample (  [ i for i in range ( 100 , 201 )  if i % 2 =  = 0 ]  ,  5 )  ) "
"Please write a program to randomly generate a list with 5 numbers, which are divisible by 5 and 7 , between 1 and 1000 inclusive.","import random
print ( random . sample (  [ i for i in range ( 1 , 1001 )  if i % 5 =  = 0 and i % 7 =  = 0 ]  ,  5 )  ) "
Please write a program to randomly print a integer number between 7 and 15 inclusive.,"import random
print ( random . randrange ( 7 , 16 )  ) "
"Please write a program to compress and decompress the string ""hello world!hello world!hello world!hello world!"".","import zlib
s  =  b'hello world ! hello world ! hello world ! hello world ! '
t  =  zlib . compress ( s ) 
print ( t ) 
print ( zlib . decompress ( t )  ) "
"Please write a program to print the running time of execution of ""1+1"" for 100 times.","from timeit import Timer
t  =  Timer ( ""for i in range ( 100 )  : 1 + 1"" ) 
print ( t . timeit (  )  ) "
"Please write a program to shuffle and print the list [3,6,7,8].","from random import shuffle
li  =   [ 3 , 6 , 7 , 8 ] 
shuffle ( li ) 
print ( li ) "
"Please write a program to shuffle and print the list [3,6,7,8].","from random import shuffle
li  =   [ 3 , 6 , 7 , 8 ] 
shuffle ( li ) 
print ( li ) "
"Please write a program to print the list after removing delete even numbers in [5,6,77,45,22,12,24].","li  =   [ 5 , 6 , 77 , 45 , 22 , 12 , 24 ] 
li  =   [ x for x in li if x % 2 !  = 0 ] 
print ( li ) "
"By using list comprehension, please write a program to print the list after removing delete numbers which are divisible by 5 and 7 in [12,24,35,70,88,120,155].","li  =   [ 12 , 24 , 35 , 70 , 88 , 120 , 155 ] 
li  =   [ x for x in li if x % 5 !  = 0 and x % 7 !  = 0 ] 
print ( li ) "
"By using list comprehension, please write a program to print the list after removing the 0th, 2nd, 4th,6th numbers in [12,24,35,70,88,120,155].","li  =   [ 12 , 24 , 35 , 70 , 88 , 120 , 155 ] 
li  =   [ x for  ( i , x )  in enumerate ( li )  if i % 2 !  = 0 ] 
print ( li ) "
"By using list comprehension, please write a program generate a 3*5*8 3D array whose each element is 0.","array  =   [  [   [ 0 for col in range ( 8 )  ]  for col in range ( 5 )  ]  for row in range ( 3 )  ] 
print ( array ) "
"By using list comprehension, please write a program to print the list after removing the 0th,4th,5th numbers in [12,24,35,70,88,120,155].","li  =   [ 12 , 24 , 35 , 70 , 88 , 120 , 155 ] 
li  =   [ x for  ( i , x )  in enumerate ( li )  if i not in  ( 0 , 4 , 5 )  ] 
print ( li ) "
"By using list comprehension, please write a program to print the list after removing the value 24 in [12,24,35,24,88,120,155].","li  =   [ 12 , 24 , 35 , 24 , 88 , 120 , 155 ] 
li  =   [ x for x in li if x !  = 24 ] 
print ( li ) "
"With two given lists [1,3,6,78,35,55] and [12,24,35,24,88,120,155], write a program to make a list whose elements are intersection of the above given lists.","set1 = set (  [ 1 , 3 , 6 , 78 , 35 , 55 ]  ) 
set2 = set (  [ 12 , 24 , 35 , 24 , 88 , 120 , 155 ]  ) 
set1  &  =  set2
li = list ( set1 ) 
print ( li ) "
Please write a program which count and print the numbers of each character in a string input by console.,"dic  =   {  } 
s = input (  ) 
for s in s : 
    dic [ s ]   =  dic . get ( s , 0 )  + 1
print ( ' \ n' . join (  [ ' % s ,  % s'  %   ( k ,  v )  for k ,  v in dic . items (  )  ]  )  ) "
Please write a program which accepts a string from console and print it in reverse order.,"s = input (  ) 
s  =  s [  :  :  - 1 ] 
print ( s ) "
Please write a program which accepts a string from console and print the characters that have even indexes.,"s = input (  ) 
s  =  s [  :  : 2 ] 
print ( s ) "
"Please write a program which prints all permutations of [1,2,3]","import itertools
print ( list ( itertools . permutations (  [ 1 , 2 , 3 ]  )  )  ) "
Write a program to solve a classic ancient Chinese puzzle:  We count 35 heads and 94 legs among the chickens and rabbits in a farm. How many rabbits and how many chickens do we have?,"def solve ( numheads , numlegs )  : 
    ns = 'No solutions ! '
    for i in range ( numheads + 1 )  : 
        j = numheads - i
        if 2 * i + 4 * j =  = numlegs : 
            return i , j
    return ns , ns"
"Write a program which will find all such numbers which are divisible by 7 but are not a multiple of 5, between 2000 and 3200 (both included).   The numbers obtained should be printed in a comma-separated sequence on a single line.","l =  [  ] 
for i in range ( 2000 ,  3201 )  : 
    if  ( i % 7 =  = 0 )  and  ( i % 5 !  = 0 )  : 
        l . append ( str ( i )  ) 
print ( ' , ' . join ( l )  ) "
Write a function which can compute the factorial of a given numbers.   The results should be printed in a comma-separated sequence on a single line.,"def fact ( x )  : 
    if x  =  =  0 : 
        return 1
    return x  *  fact ( x  -  1 ) 
x = int ( input (  )  ) 
print ( fact ( x )  ) "
"With a given integral number n, write a program to generate a dictionary that contains (i, i*i) such that is an integral number between 1 and n (both included). and then the program should print the dictionary.","n = int ( input (  )  ) 
d = dict (  ) 
for i in range ( 1 , n + 1 )  : 
    d [ i ]  = i * i
print ( d ) "
Write a program that accepts a comma separated sequence of words as input and prints the words in a comma-separated sequence after sorting them alphabetically.,"items =  [ x for x in input (  )  . split ( ' , ' )  ] 
items . sort (  ) 
print ( ' , ' . join ( items )  ) "
Write a program that accepts sequence of lines as input and prints the lines after making all characters in the sentence capitalized.,"lines  =   [  ] 
while True : 
    s  =  input (  ) 
    if s : 
        lines . append ( s . upper (  )  ) 
    else : 
        break ; 
for sentence in lines : 
    print ( sentence ) "
Write a program that accepts a sequence of whitespace separated words as input and prints the words after removing all duplicate words and sorting them alphanumerically.,"s  =  input (  ) 
words  =   [ word for word in s . split ( "" "" )  ] 
print ( "" "" . join ( sorted ( list ( set ( words )  )  )  )  ) "
Write a program which accepts a sequence of comma separated 4 digit binary numbers as its input and then check whether they are divisible by 5 or not. The numbers that are divisible by 5 are to be printed in a comma separated sequence.,"value  =   [  ] 
items =  [ x for x in input (  )  . split ( ' , ' )  ] 
for p in items : 
    intp  =  int ( p ,  2 ) 
    if not intp % 5 : 
        value . append ( p ) 
print ( ' , ' . join ( value )  ) "
"Write a function with a generator which can iterate the numbers, which are divisible by 7, between a given range 0 and n.","def putNumbers ( n )  : 
    i  =  0
    while i < n : 
        j = i
        i = i + 1
        if j % 7 =  = 0 : 
            yield j
for i in reverse ( 100 )  : 
    print ( i ) "
Write a method which can calculate and return square value of number,"def square ( num )  : 
    return num  *  *  2"
Please write a program to print Python built-in functions document of abs(),print ( abs .  _  _ doc _  _  ) 
Please write a program to print Python built-in functions document of int(),print ( int .  _  _ doc _  _  ) 
Please write a program to print Python built-in functions document of input(),"print ( input .  _  _ doc _  _  ) 
class Person : 
    name  =  ""Person""
    def  _  _ init _  _  ( self ,  name  =  None )  : 
        self . name  =  name"
Define a function which can compute the sum of two numbers.,"def sum _ nums ( number1 ,  number2 )  : 
	return number1 + number2"
Define a function that can convert a integer into a string and print it in console.,"def convert _ to _ str ( n )  : 
    print ( str ( n )  ) "
Define a function that can receive two integral numbers in string form and compute their sum and then print it in console.,"def sum _ of _ ints ( s1 , s2 )  : 
    print ( int ( s1 )  + int ( s2 )  ) "
Define a function that can accept two strings as input and concatenate them and then print it in console.,"def add ( s1 , s2 )  : 
    print ( s1 + s2 ) "
"Define a function that can accept two strings as input and print the string with maximum length in console. If two strings have the same length, then the function should print al l strings line by line.","def max _ len _ str ( s1 , s2 )  : 
    len1  =  len ( s1 ) 
    len2  =  len ( s2 ) 
    if len1 > len2 : 
        print ( s1 ) 
    elif len2 > len1 : 
        print ( s2 ) 
    else : 
        print ( s1 ) 
        print ( s2 ) "
"Define a function that can accept an integer number as input and print the ""It is an even number"" if the number is even, otherwise print ""It is an odd number"".","def even _ or _ odd _ num ( n )  : 
    if n % 2  =  =  0 : 
        print ( ""It is an even number"" ) 
    else : 
        print ( ""It is an odd number"" ) "
Define a function which can print a dictionary where the keys are numbers between 1 and 3 (both included) and the values are square of keys.,"def print _ dict _ keys _ val _ 1 (  )  : 
    d = dict (  ) 
    d [ 1 ]  = 1
    d [ 2 ]  = 2 *  * 2
    d [ 3 ]  = 3 *  * 2
    print ( d ) "
Define a function which can print a dictionary where the keys are numbers between 1 and 20 (both included) and the values are square of keys.,"def print _ dict _ keys _ val _ 2 (  )  : 
	d = dict (  ) 
	for i in range ( 1 , 21 )  : 
		d [ i ]  = i *  * 2
	print ( d ) "
Define a function which can generate a dictionary where the keys are numbers between 1 and 20 (both included) and the values are square of keys. The function should just print the values only.,"def print _ dict _ keys _ val _ 3 (  )  : 
	d = dict (  ) 
	for i in range ( 1 , 21 )  : 
		d [ i ]  = i *  * 2
	for  ( k , v )  in d . items (  )  : 	
		print ( v ) "
Define a function which can generate a dictionary where the keys are numbers between 1 and 20 (both included) and the values are square of keys. The function should just print the keys only.,"def print _ dict _ keys _ val _ 4 (  )  : 
	d = dict (  ) 
	for i in range ( 1 , 21 )  : 
		d [ i ]  = i *  * 2
	for k in d . keys (  )  : 	
		print ( k ) "
Define a function which can generate and print a list where the values are square of numbers between 1 and 20 (both included).,"def printList (  )  : 
	li = list (  ) 
	for i in range ( 1 , 21 )  : 
		li . append ( i *  * 2 ) 
	print ( li ) "
Define a function which can generate a list where the values are square of numbers between 1 and 20 (both included). Then the function needs to print the first 5 elements in the list.,"def printList (  )  : 
	li = list (  ) 
	for i in range ( 1 , 21 )  : 
		li . append ( i *  * 2 ) 
	print ( li [  : 5 ]  ) "
Define a function which can generate a list where the values are square of numbers between 1 and 20 (both included). Then the function needs to print the last 5 elements in the list.,"def printList (  )  : 
	li = list (  ) 
	for i in range ( 1 , 21 )  : 
		li . append ( i *  * 2 ) 
	print ( li [  - 5 :  ]  ) "
Define a function which can generate a list where the values are square of numbers between 1 and 20 (both included). Then the function needs to print all values except the first 5 elements in the list.,"def printList (  )  : 
	li = list (  ) 
	for i in range ( 1 , 21 )  : 
		li . append ( i *  * 2 ) 
	print ( li [ 5 :  ]  ) "
Define a function which can generate and print a tuple where the value are square of numbers between 1 and 20 (both included).,"def printTuple (  )  : 
	li = list (  ) 
	for i in range ( 1 , 21 )  : 
		li . append ( i *  * 2 ) 
	print ( tuple ( li )  ) "
write a python function to Calculate the date of n days from the given date.,"from datetime import datetime ,  timedelta
def add _ days ( n ,  d  =  datetime . today (  )  )  : 
  return d  +  timedelta ( n ) "
write a python function to check if all elements in a list are equal.,"def all _ equal ( lst )  : 
  return len ( set ( lst )  )   =  =  1"
write a python function to check if all elements in a list are unique.,"def all _ unique ( lst )  : 
  return len ( lst )   =  =  len ( set ( lst )  ) "
write a python function to find the average of two or more numbers and return the average,"def average (  * args )  : 
  return sum ( args ,  0 . 0 )   /  len ( args ) "
write a python function to convert a user provided string to camelcase,"from re import sub
def camel ( s )  : 
  s  =  sub ( r"" (  _  |  -  )  + "" ,  "" "" ,  s )  . title (  )  . replace ( "" "" ,  """" ) 
  return '' . join (  [ s [ 0 ]  . lower (  )  ,  s [ 1 :  ]  ]  ) "
write a python function to capitalize the first letter of a string,"def capitalize ( s ,  lower _ rest  =  False )  : 
  return '' . join (  [ s [  : 1 ]  . upper (  )  ,   ( s [ 1 :  ]  . lower (  )  if lower _ rest else s [ 1 :  ]  )  ]  ) "
write a python function to convert Celsius to Fahrenheit.,"def celsius _ to _ fahrenheit ( degrees )  : 
  return  (  ( degrees  *  1 . 8 )   +  32 ) "
write a python function to convert a given string into a list of words.,"import re
def words ( s ,  pattern  =  ' [ a - zA - Z -  ]  + ' )  : 
  return re . findall ( pattern ,  s ) "
write a python function thats returns a flat list of all the values in a flat dictionary,"def values _ only ( flat _ dict )  : 
  return list ( flat _ dict . values (  )  ) "
write a python function thats accepts a list and returns most frequent element that appears in a list,"def most _ frequent ( list )  : 
    return max ( set ( list )  ,  key  =  list . count ) "
write a python program to create multiplication table of 5,"n = 5
for i in range ( 1 , 11 )  : 
   print ( n , 'x' , i , ' = ' , n * i ) "
write a python function to create multiplication table from the user provided number,"def multiplication _ table ( n )  : 
  for i in range ( 1 , 11 )  : 
    print ( n , 'x' , i , ' = ' , n * i ) "
write a python program to print a dictionary where the keys are numbers between 1 and 10 (both included) and the values are square of keys.,"d = dict (  ) 
for x in range ( 1 , 11 )  : 
    d [ x ]  = x *  * 2
print ( d ) "
write a Python program to calculate simple interest,"p  =  10000
t  =  6
r  =  8
si  =   ( p  *  t  *  r )  / 100
print ( f'Simple interest is  { si } ' ) "
write a python Program to find area of circle,"PI  =  3 . 14
radius  =  float ( 6 ) 
area  =  PI  *  radius  *  radius
circumference  =  2  *  PI  *  radius
print ( f'Area Of a Circle  { area } ' ) 
print ( f'Circumference Of a Circle  { circumference } ' ) "
write a python function to find the area of a circle using the user provided circumference,"def area _ of _ circle ( circumference )  : 
  circumference  =  float ( circumference ) 
  PI  =  3 . 14
  area  =   ( circumference  *  circumference )  /  ( 4  *  PI ) 
  print ( f'Area Of a Circle  { area } ' ) "
write a python function to find the area of a circle using the user provided diameter,"def area _ of _ circle ( diameter )  : 
  PI  =  3 . 14
  area  =   ( PI / 4 )   *   ( diameter  *  diameter ) 
  print ( f'Area Of a Circle  { area } ' ) "
write a python function to generate 4 digit OTP,"import math ,  random 
def generateOTP (  )   :  
    digits  =  ""0123456789""
    OTP  =  """" 
    for i in range ( 4 )   :  
        OTP  +  =  digits [ math . floor ( random . random (  )   *  10 )  ]  
    return OTP"
write a python function to generate 6 digit OTP,"import math ,  random 
def generateOTP (  )   :   
    digits  =  ""0123456789""
    OTP  =  """" 
    for i in range ( 6 )   :  
        OTP  +  =  digits [ math . floor ( random . random (  )   *  10 )  ]   
    return OTP"
write a python program to calculate distance between tao points,"import math
p1  =   [ 4 ,  0 ] 
p2  =   [ 6 ,  6 ] 
distance  =  math . sqrt (   (  ( p1 [ 0 ]  - p2 [ 0 ]  )  *  * 2 )  +  (  ( p1 [ 1 ]  - p2 [ 1 ]  )  *  * 2 )   ) 
print ( f""The distance between  { p1 }  and  { p2 }  is  { distance } "" ) "
write a python function to calculate compound interest,"def compound _ interest ( principle ,  rate ,  time )  :  
    Amount  =  principle  *   ( pow (  ( 1  +  rate  /  100 )  ,  time )  )  
    CI  =  Amount  -  principle 
    print ( f""Compound interest is  { CI } "" ) "
write a python function to convert hours to minutes,"def convert _ to _ minutes ( num _ hours )  : 
    minutes  =  num _ hours  *  60
    return minutes"
write a python function to convert hours to seconds,"def convert _ to _ seconds ( num _ hours )  : 
    minutes  =  num _ hours  *  60
    seconds  =  minutes  *  60
    return seconds"
write a python program to print all integers that aren’t divisible by either 2 or 3 and lies between 1 and 50.,"for i in range ( 0 , 50 )  : 
  if (  ( i % 2 !  = 0 )   &   ( i % 3 !  = 0 )  )  : 
      print ( i ) "
write a python function to print odd numbers between user provided ranges,"def odd _ numbers ( lower , upper )  : 
  for i in range ( lower , upper + 1 )  : 
    if ( i % 2 !  = 0 )  : 
        print ( i ) "
write a python program to find sum of natural numbers up to a 16,"num  =  16
if num  <  0 : 
   print ( ""Enter a positive number"" ) 
else : 
   sum  =  0
   while ( num  >  0 )  : 
       sum  +  =  num
       num  -  =  1
   print ( ""The sum is"" ,  sum ) "
write a python program to check if the list is empty,"l  =   [  ] 
if not l : 
  print ( ""List is empty"" ) 
else : 
  print ( ""List is not empty"" ) "
write a python program to get index values for a list in the form of key:value pair using enumerate,"my _ list  =   [ 'a' ,  'b' ,  'c' ,  'd' ,  'e' ] 
for index ,  value in enumerate ( my _ list )  : 
    print ( ' { 0 }  :   { 1 } ' . format ( index ,  value )  ) "
write a python program to merge two dictionaries,"dict _ 1  =   { 'apple' :  9 ,  'banana' :  6 } 
dict _ 2  =   { 'banana' :  4 ,  'orange' :  8 } 
combined _ dict  =   {  *  * dict _ 1 ,   *  * dict _ 2 } 
print ( combined _ dict ) "
write a python function to check if all elements in a list are unique or not,"def unique ( l )  : 
    if len ( l )  =  = len ( set ( l )  )  : 
        print ( ""All elements are unique"" ) 
    else : 
        print ( ""List has duplicates"" ) "
write a python function to calculate the age with the user provided date of birth,"from datetime import date
def calculate _ age ( dtob )  : 
    today  =  date . today (  ) 
    return today . year  -  dtob . year  -   (  ( today . month ,  today . day )   <   ( dtob . month ,  dtob . day )  ) "
write a python function to check if a user provided number is a perfect square.,"def is _ perfect _ square ( n )  : 
    x  =  n  /  /  2
    y  =  set (  [ x ]  ) 
    while x  *  x  !  =  n : 
        x  =   ( x  +   ( n  /  /  x )  )   /  /  2
        if x in y :  return False
        y . add ( x ) 
    return True"
write a python function that removes element from a list using a user provided number,"def drop ( a ,  n  =  1 )  : 
  return a [ n :  ] "
write a program function to check if given words appear together in a list of sentence,"def check ( sentence ,  words )  :  
    res  =   [ all (  [ k in s for k in words ]  )  for s in sentence ]  
    return  [ sentence [ i ]  for i in range ( 0 ,  len ( res )  )  if res [ i ]  ] "
write a python program  to convert list of tuples into list,"lt  =   [  ( 'English' ,  2 )  ,   ( 'Maths' ,  4 )  ,   ( 'Science' ,  '6' )  ]  
out  =   [ item for t in lt for item in t ]   
print ( out ) "
write a python program to count the number of words in a sentence,"test _ string  =  ""This is a good book""
res  =  len ( test _ string . split (  )  )  
print  ( f""The number of words in string are  :  { str ( res )  } "" ) "
write a python function to count the occurrences of a value in a list.,"def count _ occurrences ( lst ,  val )  : 
  return lst . count ( val ) "
write a python function to return the length of user provided string in bytes,"def byte _ size ( s )  : 
  return len ( s . encode ( 'utf - 8' )  ) "
write a python program to split the string into chunks of size 3,"str  =  'CarBadBoxNumKeyValRayCppSan'
n  =  3
chunks  =   [ str [ i : i + n ]  for i in range ( 0 ,  len ( str )  ,  n )  ] 
print ( chunks ) "
write a python function to read first n lines from a file,"def file _ read _ from _ head ( fname ,  nlines )  : 
    from itertools import islice
    with open ( fname )  as f : 
      for line in islice ( f ,  nlines )  : 
        print ( line ) "
write a python program to check whether a person is eligible to vote or not,"age = 23
if age >  = 18 : 
        status = ""Eligible""
else : 
    status = ""Not Eligible""
print ( ""You are "" , status , "" for Vote . "" ) "
"write a python program to check if a number is positive, negative or zero.","num  =  5
if num  >  0 : 
   print ( ""It is positive number"" ) 
elif num  =  =  0 : 
   print ( ""It is Zero"" ) 
else : 
   print ( ""It is a negative number"" ) "
write a python program to get numbers divisible by fifteen from a list,"num _ list  =   [ 45 ,  55 ,  60 ,  37 ,  100 ,  105 ,  220 ] 
result  =  list ( filter ( lambda x :   ( x  %  15  =  =  0 )  ,  num _ list )  ) 
print ( f""Numbers divisible by 15 are  { result } "" ) "
write a python function to append text to a user provided file,"def file _ read ( fname )  : 
    with open ( fname ,  ""w"" )  as myfile : 
      myfile . write ( ""Appending line one \ n"" ) 
      myfile . write ( ""Appending line two"" ) 
      txt  =  open ( fname ) 
      print ( txt . read (  )  ) "
write a python function to pad a user provided number to specified length,"def pad _ number ( n ,  l )  : 
  return str ( n )  . zfill ( l ) "
write a python function to convert a user provided list of dictionaries into a list of values corresponding to the user specified key,"def pluck ( lst ,  key )  : 
  return  [ x . get ( key )  for x in lst ] "
write a python function to convert the values of RGB components to a hexadecimal color code.,"def rgb _ to _ hex ( r ,  g ,  b )  : 
  return  ( ' {  : 02X } '  *  3 )  . format ( r ,  g ,  b ) "
write a python function to reverse a user provided list or string,"def reverse ( itr )  : 
  return itr [  :  :  - 1 ] "
write a python function to convert an angle from radians to degrees.,"def rads _ to _ degrees ( rad )  : 
  return  ( rad  *  180 . 0 )   /  3 . 14"
write a python function that returns a list of elements that exist in both user provided lists.,"def similarity ( a ,  b )  : 
  return  [ item for item in a if item in b ] "
write a python function that converts a user provided string to snake case,"from re import sub
def snake ( s )  : 
  return ' _ ' . join ( 
    sub ( ' (  [ A - Z ]  [ a - z ]  +  ) ' ,  r'  \ 1' , 
    sub ( ' (  [ A - Z ]  +  ) ' ,  r'  \ 1' , 
    s . replace ( ' - ' ,  ' ' )  )  )  . split (  )  )  . lower (  ) "
write a python function that sorts a list based on the user provided list of indexes.,"def sort _ by _ indexes ( lst ,  indexes ,  reverse = False )  : 
  return  [ val for  (  _  ,  val )  in sorted ( zip ( indexes ,  lst )  ,  key = lambda x :   \ 
          x [ 0 ]  ,  reverse = reverse )  ] "
write a python function to sort the dictionary by key,"def sort _ dict _ by _ key ( d ,  reverse  =  False )  : 
  return dict ( sorted ( d . items (  )  ,  reverse  =  reverse )  ) "
write a python function to sort the dictionary by values,"def sort _ dict _ by _ value ( d ,  reverse  =  False )  : 
  return dict ( sorted ( d . items (  )  ,  key  =  lambda x :  x [ 1 ]  ,  reverse  =  reverse )  ) "
write a python function to capitalize first letter of a string,"def capitalize ( s ,  lower _ rest  =  False )  : 
  return '' . join (  [ s [  : 1 ]  . upper (  )  ,   ( s [ 1 :  ]  . lower (  )  if lower _ rest else s [ 1 :  ]  )  ]  ) "
write a python function that chunks a list into smaller lists of a specified size,"from math import ceil
def chunk ( lst ,  size )  : 
  return list ( 
    map ( lambda x :  lst [ x  *  size : x  *  size  +  size ]  , 
      list ( range ( ceil ( len ( lst )   /  size )  )  )  )  ) "
write a python function to calculate a sigmoid value for any user provided real numbers,"def sigmoid ( x )  : 
  return 1  /   ( 1  +  math . exp (  - x )  ) "
write a python program to count the number of lower case in a string,"string = ""This is a very good place to Visit""
count = 0
for i in string : 
      if ( i . islower (  )  )  : 
            count = count + 1
print ( f""The number of lowercase characters is :  { count } "" ) "
write a python program to find the sequences of one upper case letter followed by lower case letters.,"import re
text = ""Albert""
patterns  =  ' [ A - Z ]  +  [ a - z ]  +  $ '
if re . search ( patterns ,  text )  : 
  print ( 'Found a match ! ' ) 
else : 
  print ( 'Not matched ! ' ) "
write a python program to find the number of files in a directory,"import os
dir = ' . '
list  =  os . listdir ( dir )  
number _ files  =  len ( list ) 
print ( f'There are  { number _ files }  file in the directory' ) "
write a python function to clamp a number within a user specified range,"def clamp _ number ( num ,  a ,  b )  : 
  return max ( min ( num ,  max ( a ,  b )  )  ,  min ( a ,  b )  ) "
write a python function that returns every nth element in a list,"def every _ nth ( lst ,  nth )  : 
  return lst [ nth  -  1 :  : nth ] "
write a python function that returns first element of a list,"def head ( lst )  : 
  return lst [ 0 ] "
write a python function to check if two lists contains same elements regardless of order,"def have _ same _ contents ( a ,  b )  : 
  for v in set ( a  +  b )  : 
    if a . count ( v )   !  =  b . count ( v )  : 
      return False
  return True"
write a python function to rotate the given list by n times toward left,"def rotate ( lst ,  offset )  : 
  return lst [ offset :  ]   +  lst [  : offset ] "
write a python function to transpose a user provided two dimensional list,"def transpose ( lst )  : 
  return list ( zip (  * lst )  ) "
write a python function to convert a user provided date to iso representation,"from datetime import datetime
def to _ iso _ date ( d )  : 
  return d . isoformat (  ) "
write a python function that returns binary representation of given number,"def to _ binary ( n )  : 
  return bin ( n ) "
write a python function to calculate weighted average of two or more numbers,"def weighted _ average ( nums ,  weights )  : 
  return sum ( x  *  y for x ,  y in zip ( nums ,  weights )  )   /  sum ( weights ) "
write a python function to return sum of the powers between two numbers,"def sum _ of _ powers ( end ,  power  =  2 ,  start  =  1 )  : 
  return sum (  [  ( i )   *  *  power for i in range ( start ,  end  +  1 )  ]  ) "
write a python program to generate random float numbers in a specific numerical range.,"import random
for x in range ( 6 )  : 
    print ( ' {  : 04 . 3f } ' . format ( random . uniform ( x ,  100 )  )  ,  end = ' ' ) "
write a python program to drop microseconds from datetime.,"import datetime
dt  =  datetime . datetime . today (  )  . replace ( microsecond = 0 ) 
dt"
write a python program to convert unix timestamp string to readable date.,"import datetime
unix _ timestamp = ""1284105682""
print ( 
    datetime . datetime . fromtimestamp ( 
        int ( unix _ timestamp ) 
     )  . strftime ( ' % Y -  % m -  % d  % H :  % M :  % S' ) 
 ) "
write a python function to calculate the day difference between two user provided dates,"def days _ diff ( start ,  end )  : 
  return  ( end  -  start )  . days"
write a python function to decapitalize the first letter of user provided string.,"def decapitalize ( s ,  upper _ rest  =  False )  : 
  return '' . join (  [ s [  : 1 ]  . lower (  )  ,   ( s [ 1 :  ]  . upper (  )  if upper _ rest else s [ 1 :  ]  )  ]  ) "
write a program to calculate exponents of an input,"input  =  9
exponent  =  2
final  =  pow ( input ,  exponent ) 
print ( f'Exponent Value is :  { final } ' ) "
write a program to find and print the remainder of two number,"num1  =  12
num2  =  10
ratio  =  num1  %  num2
print ( f'remainder :  { ratio } ' ) "
"Write a program which will achieve given a Python list, remove all occurrence of an input from the list","list1  =   [ 5 ,  20 ,  15 ,  20 ,  25 ,  50 ,  20 ] 
def removeValue ( sampleList ,  val )  : 
   return  [ value for value in sampleList if value  !  =  val ] 
resList  =  removeValue ( list1 ,  20 ) 
print ( resList ) "
Convert decimal number to octal,"print ( ' % o , '  %   ( 8 )  ) "
Write a recursive function to calculate the sum of numbers from 0 to 10,"def calculateSum ( num )  : 
    if num : 
        return num  +  calculateSum ( num - 1 ) 
    else : 
        return 0
res  =  calculateSum ( 10 ) 
print ( res ) "
Generate a Python list of all the even numbers between two given numbers,"num1  =  4
num2  =  30
myval  =   [ i for i in range ( num1 ,  num2 ,  2 )  ] 
print ( myval ) 
aList  =   [ 4 ,  6 ,  8 ,  24 ,  12 ,  2 ] 
print ( max ( aList )  ) "
"Write a program to extract each digit from an integer, in the reverse order","number  =  7536
while  ( number  >  0 )  : 
    digit  =  number  %  10
    number  =  number  /  /  10
    print ( digit ,  end = "" "" ) "
Generate a random n-dimensional array of float numbers,"import numpy
random _ float _ array  =  numpy . random . rand ( 2 ,  2 ) 
print ( ""2 X 2 random float array in  [ 0 . 0 ,  1 . 0 ]   \ n"" ,  random _ float _ array , "" \ n"" ) "
1 write a python function to add to add two numbers,"def return _ exponential ( num1 ,  num2 )  : 
    return num1  *  *  num2"
2 write a python function to split a string at space,"def string _ split _ at _ space ( string )  : 
    return string . split (  ) "
3 write a python program to convert a string to a char array,"def char _ array ( string )  : 
    return list ( string ) "
4 write a python function to print the factorial of a number,"def factorial ( x )  : 
    prod  =  1
    for i in range ( 1 ,  x  +  1 )  : 
        prod  *  =  i
    return prod"
5 write a python function to accept a number and return all the numbers from 0 to that number,"def print _ numbers ( x )  : 
    for i in range ( x )  : 
        print ( i ) "
6 write a python function that concatenates two stings,"def concat ( s1 ,  s2 )  : 
    return s1  +  s2"
7 write a python function to return every second number from a list,"def every _ other _ number ( lst )  : 
    return lst [  :  : 2 ] "
7 write a python function to return every nth number from a list,"def every _ nth _ number ( lst ,  n )  : 
    return lst [  :  : n ] "
"8 write a python function to accept a key, value pair and return a dictionary","def create _ dictionary ( key ,  value )  : 
    return  { str ( key )  :  value } "
"9 write a python function to update a dictionary with a new key, value pair","def update _ dictionary ( dict ,  key ,  value )  : 
    dict [ str ( key )  ]   =  value
    return dict"
11 write a python function to return the length of an array plus 27,"def return _ length ( arr )  : 
    return len ( arr )   +  27"
12  write a python function to return the third last element of an array,"def return _ last ( arr )  : 
    return arr [  - 3 ] "
13  write a function to calculate the mean of an array,"def calc _ mean ( arr )  : 
    sum  =  0
    for i in range ( len ( arr )  )  : 
        sum  +  =  arr [ i ] 
    return sum  /  len ( arr ) "
15 write a function to implement a binary tree,"class BinTree : 
    def  _  _ init _  _  ( self ,  key )  : 
        self . left  =  None
        self . right  =  None
        self . val  =  key"
17 write a function to initialize a linked list,"class Cell : 
    def  _  _ init _  _  ( self ,  val )  : 
        self . val  =  val
        self . next  =  None
class LinkedList : 
    def  _  _ init _  _  ( self )  : 
        self . head  =  None"
20 write a function which returns the count of each token in a given sentence as a dictionary,"from collections import Counter
def count _ tokens ( sent )  : 
    sent  =  list ( sent ) 
    return dict ( Counter ( sent )  ) "
21 write a function that removes all the punctuations from a string,"import string
def remove _ punct ( s )  : 
    return """" . join ( ch for ch in s if ch not in set ( string . punctuation )  ) "
22 write a function that counts the sum of every element in the odd place in a list,"from functools import reduce
def count _ second ( lst )  : 
    return reduce ( lambda x ,  y :  x  +  y ,  lst [  :  : 2 ]  ) "
23 write a function that returns the square root of the third power of every number in a list,"def comp _ power ( lst )  : 
    return list ( map ( lambda x :  x  *  *  1 . 5 ,  lst )  ) "
23 write a function to calculate the residual sum of squares between two lists of the same size,"def rss ( lst1 ,  lst2 )  : 
    diff  =   [ lst1 [ x ]   -  lst2 [ x ]  for x in range ( len ( lst1 )  )  ] 
    return sum ( list ( map ( lambda x :  x  *  *  2 ,  diff )  )  ) "
25 write a funtion to print all the files in the current directory,"import os
def list _ files (  )  : 
    return os . listdir (  ) "
26 write a generator in python which returns a random number between 0 and a million,"import random
def yield _ a _ number (  )  : 
    yield random . randint ( 0 ,  1000000 ) "
27 write a program that filters a list for even numbers only and returns their sum,"def map _ reduce ( lst )  : 
    return reduce ( lambda x ,  y :  x  +  y ,  filter ( lambda x :  x  %  2  =  =  0 ,  lst )  ) 
print ( map _ reduce (  [ 1 ,  2 ,  3 ,  4 ,  5 ]  )  ) "
28 write a program that return the first n numbers from a list,"def sub _ list ( lst ,  ind )  : 
    return lst [  : ind ] 
print ( sub _ list (  [ 1 ,  2 ,  3 ,  4 ,  5 ,  56 ]  ,  3 )  ) "
"30 write a function that accepts two numbers or lists or dictionaries and returns True if the two are equal, and False otherwise","def check _ assert ( item1 ,  item2 )  : 
    try : 
        assert item1  =  =  item2
        return True
    except AssertionError : 
        return False"
34 write a program to generate a random number between two ranges,"import random
def rand _ range ( low ,  high )  : 
    return random . randrange ( low ,  high ) "
35 Write a python function that sorts a list of strings by their length in the descending order,"def sort _ by _ len ( arr )  : 
    return sorted ( arr ,  reverse = True ,  key = lambda x :  len ( x )  ) "
36 Write a  python function that returns the Highest Common Factor of two given numbers,"def calculate _ hcf ( x1 ,  x2 )  : 
    if x1  =  =  0 : 
        return x2
    else : 
        return hcf ( x2  %  x1 ,  x1 ) "
38 write a python program which takes in a dictionary with unique values and converts keys into values and vice versa,"def flip _ dict ( d )  : 
    tmp _ dict  =   {  } 
    for pair in d . items (  )  : 
        tmp _ dict [ pair [ 1 ]  ]   =  pair [ 0 ] 
    return tmp _ dict
print ( flip _ dict (  { ""a"" :  10 ,  ""b"" :  20 ,  ""c"" :  15 }  )  ) "
39 write a python function to return a list of all punctuations from the string library,"import string
def return _ punct (  )  : 
    return string . punctuation"
40 write a python function that takes in a string and returns it in lowercase,"def to _ lower ( s )  : 
    return s . lower (  ) "
41 write a python function that takes in a string and returns it in uppercase,"def to _ upper ( s )  : 
    return s . upper (  ) "
42 write a python program that converts lower case letters to uppercase and vice versa,"def flip _ case ( s )  : 
    s  =   [ int ( ord ( x )  )  for x in s ] 
    s  =   [ x  -  32 if x  >  =  97 else x  +  32 for x in s ] 
    s  =   [ chr ( x )  for x in s ] 
    return """" . join ( s ) "
43 Define a function which returns the current working directory,"import os
def get _ cwd (  )  : 
    return os . getcwd (  ) "
44 Define a python function that can read text file from a given URL,"import requests
def read _ data ( url )  : 
    data  =  requests . get ( url )  . text
    return data"
45 Define a python function which can generate a list where the values are square of numbers between 1 and 20 (both included). Then the function needs to print the last 5 elements in the list.,"import requests
def get _ status ( url )  : 
    data  =  requests . get ( url ) 
    return data . status _ code"
46 Define a function which can generate a list where the values are square of numbers between 1 and 20 (both included). Then the function needs to print all values except the first 5 elements in the list.,"import requests
def get _ encoding ( url )  : 
    data  =  requests . get ( url ) 
    return data . encoding"
47 write a python function that accepts a valid path and changes the current working directory,"import os
def change _ dir ( path )  : 
    return os . chdir ( path ) "
48 write a python function that checks if a given key is present in the environment,"import os
def get _ env _ path ( key )  : 
    return os . getenv ( key ) "
49 Write a generator that returns True / False randomly,"import random
def generate _ tf (  )  : 
    rand  =  random . random (  ) 
    if rand  >  0 . 5 : 
        yield True
    else : 
        yield False"
50 write a python program to normalize an array such that it sums upto 1,"def normalize ( arr )  : 
    return  [ float ( i )   /  sum ( arr )  for i in arr ] 
print ( normalize (  [ 1 ,  2 ,  3 ,  4 ,  5 ]  )  ) "
51 write a python program to perform Softmax operation on an input array,"import math
def softmax ( arr )  : 
    e _ arr  =   [ math . exp ( x )  for x in arr ] 
    e _ soft  =   [ i  /  sum ( e _ arr )  for i in e _ arr ] 
    return e _ soft
print ( softmax (  [ 3 . 0 ,  1 . 0 ,  0 . 2 ]  )  ) "
52 Write a python program to calculate the slope of a line given two points,"def slope _ of _ a _ line ( x1 ,  x2 ,  y1 ,  y2 )  : 
    del _ x  =  x2  -  x1
    del _ y  =  y2  -  y1
    return float ( del _ y )   /  del _ x
print ( slope _ of _ a _ line ( 0 ,  10 ,  0 ,  10 )  ) "
53 write a python function which checks if a number is a perfect square,"import math
def is _ perfect _ square ( num )  : 
    sq _ root  =  round ( math . sqrt ( num )  ) 
    if num  =  =  sq _ root  *  *  2 : 
        return True
    else : 
        return False"
54 Write a python function that implements the ReLU function,"def relu ( arr )  : 
    return  [ x if x  >  0 else 0 for x in arr ] "
55 Write a python program that pads a given python list to a given length at the end and prints the modified list,"def pad _ arr _ end ( arr ,  pad _ len )  : 
    pad _ arr  =   [ 0 ]   *   ( pad _ len  -  len ( arr )  ) 
    return arr . extend ( pad _ arr ) 
tmp  =   [ 1 ,  2 ,  3 ,  4 ,  5 ] 
pad _ arr _ end ( tmp ,  10 ) 
print ( tmp ) "
56 write a python function to implement the sigmoid activation function,"import math
def sigmoid ( x )  : 
    return 1  /   ( 1  +  math . exp (  - x )  ) "
57 write a python function to implement the tanh activation function,"import math
def tanh ( x )  : 
    return  ( math . exp ( 2  *  x )   -  1 )   /   ( math . exp ( 2  *  x )   +  1 ) "
59 Write a python program that adds a time delay between a loop that prints numbers between 0 and 10,"import time
def print _ loop _ with _ delay ( sec )  : 
    for i in range ( 0 ,  10 )  : 
        time . sleep ( sec ) 
        print ( i ) "
60 Write a function to return the the unique tokens from a string,"def unique _ tokens ( st )  : 
    return set ( st ) "
61 write a python function to return the standard deviation of a list of numbers,"import math
def st _ dev ( arr )  : 
    avg  =  sum ( arr )   /  len ( arr ) 
    ss _ dev  =  sum (  [  ( x  -  avg )   *  *  2 for x in arr ]  ) 
    return math . sqrt ( ss _ dev  /   ( len ( arr )   -  1 )  ) "
62 write a python function to return mode of the data,"import statistics
def mode ( arr )  : 
    return statistics . mode ( arr ) "
"63 Write a python function which returns true if all the numbers in a list negative, else return False","def are _ all _ negative ( arr )  : 
    filt _ arr  =  list ( filter ( lambda x :  x  <  0 ,  arr )  ) 
    if len ( filt _ arr )   =  =  len ( arr )  : 
        return True
    else : 
        return False"
64 Write a python function that checks if all the numbers in a list sum upto 1. Returns False otherwise,"def sum _ upto _ one ( arr )  : 
    arr _ sum  =  sum ( arr ) 
    try : 
        assert float ( arr _ sum )   =  =  1 . 0
        return True
    except AssertionError : 
        return False"
65 write a program to output a random even number between 0 and 10 inclusive using random module and list comprehension.,"import random
print ( random . choice (  [ i for i in range ( 11 )  if i  %  2  =  =  0 ]  )  ) "
"66 write a program to output a random number, which is divisible by 5 and 7, between 0 and 10 inclusive using random module and list comprehension.","import random
print ( random . choice (  [ i for i in range ( 201 )  if i  %  5  =  =  0 and i  %  7  =  =  0 ]  )  ) "
67 write a program to generate a list with 5 random numbers between 100 and 200 inclusive.,"import random
print ( random . sample ( range ( 100 )  ,  5 )  ) "
68 write a program to randomly generate a list with 5 even numbers between 100 and 200 inclusive.,"import random
print ( random . sample (  [ i for i in range ( 100 ,  201 )  if i  %  2  =  =  0 ]  ,  5 )  ) "
"69 write a program to randomly generate a list with 5 numbers, which are divisible by 5 and 7 , between 1 and 1000 inclusive.","import random
print ( random . sample (  [ i for i in range ( 1 ,  1001 )  if i  %  5  =  =  0 and i  %  7  =  =  0 ]  ,  5 )  ) "
70 write a program to randomly print a integer number between 7 and 15 inclusive.,"import random
print ( random . randrange ( 7 ,  16 )  ) "
71 write a python function to count the length of the string,"def len _ str ( st )  : 
    return len ( st ) "
"72 write a program to print the running time of execution of ""1+1"" for 100 times.","from timeit import Timer
t  =  Timer ( ""for i in range ( 100 )  : 1 + 1"" ) 
print ( t . timeit (  )  ) "
"73 write a program to shuffle and print the list [3,6,7,8].","from random import shuffle
li  =   [ 3 ,  6 ,  7 ,  8 ] 
shuffle ( li ) 
print ( li ) "
"74 write a program to shuffle and print the list [3,6,7,8].","from random import shuffle
li  =   [ 3 ,  6 ,  7 ,  8 ] 
shuffle ( li ) 
print ( li ) "
"76 Write a program to print the list after removing delete even numbers in [5,6,77,45,22,12,24].","li  =   [ 5 ,  6 ,  77 ,  45 ,  22 ,  12 ,  24 ] 
li  =   [ x for x in li if x  %  2  !  =  0 ] 
print ( li ) "
"77 By using list comprehension, write a program to print the list after removing delete numbers which are divisible by 5 and 7 in [12,24,35,70,88,120,155].","li  =   [ 12 ,  24 ,  35 ,  70 ,  88 ,  120 ,  155 ] 
li  =   [ x for x in li if x  %  5  !  =  0 and x  %  7  !  =  0 ] 
print ( li ) "
"78 By using list comprehension, write a program to print the list after removing the 0th, 2nd, 4th,6th numbers in [12,24,35,70,88,120,155].","li  =   [ 12 ,  24 ,  35 ,  70 ,  88 ,  120 ,  155 ] 
li  =   [ x for  ( i ,  x )  in enumerate ( li )  if i  %  2  !  =  0 ] 
print ( li ) "
"79 By using list comprehension, write a program generate a 3*5*8 3D array whose each element is 0.","array  =   [  [  [ 0 for col in range ( 8 )  ]  for col in range ( 5 )  ]  for row in range ( 3 )  ] 
print ( array ) "
"80 By using list comprehension, write a program to print the list after removing the 0th,4th,5th numbers in [12,24,35,70,88,120,155].","li  =   [ 12 ,  24 ,  35 ,  70 ,  88 ,  120 ,  155 ] 
li  =   [ x for  ( i ,  x )  in enumerate ( li )  if i not in  ( 0 ,  4 ,  5 )  ] 
print ( li ) "
"81 By using list comprehension, write a program to print the list after removing the value 24 in [12,24,35,24,88,120,155].","li  =   [ 12 ,  24 ,  35 ,  24 ,  88 ,  120 ,  155 ] 
li  =   [ x for x in li if x  !  =  24 ] 
print ( li ) "
"82 With two given lists [1,3,6,78,35,55] and [12,24,35,24,88,120,155], write a program to make a list whose elements are intersection of the above given lists.","set1  =  set (  [ 1 ,  3 ,  6 ,  78 ,  35 ,  55 ]  ) 
set2  =  set (  [ 12 ,  24 ,  35 ,  24 ,  88 ,  120 ,  155 ]  ) 
set1  &  =  set2
li  =  list ( set1 ) 
print ( li ) "
85 write a program which count and print the numbers of each character in a string,"dic  =   {  } 
s  =  ""JRR Tolkien""
for s in s : 
    dic [ s ]   =  dic . get ( s ,  0 )   +  1
print ( "" \ n"" . join (  [ "" % s ,  % s""  %   ( k ,  v )  for k ,  v in dic . items (  )  ]  )  ) "
86 write a program which accepts a string and counts the number of words in it,"def num _ of _ words ( st )  : 
    return len ( st . split (  )  ) "
87 write a function which accepts a string prints the characters that have even indexes.,"def every _ alternate _ char ( s )  : 
    s  =  s [  :  : 2 ] 
    return s"
"88 write a program which prints all permutations of [1,2,3]","import itertools
print ( list ( itertools . permutations (  [ 1 ,  2 ,  3 ]  )  )  ) "
89 Write a program to solve a classic ancient Chinese puzzle:  We count 35 heads and 94 legs among the chickens and rabbits in a farm. How many rabbits and how many chickens do we have?,"def solve ( numheads ,  numlegs )  : 
    ns  =  ""No solutions ! ""
    for i in range ( numheads  +  1 )  : 
        j  =  numheads  -  i
        if 2  *  i  +  4  *  j  =  =  numlegs : 
            return i ,  j
    return ns ,  ns"
90 Write a python function to round down a given decimal number,"import math
def apply _ ceil ( num )  : 
    return math . ceil ( x ) "
91 Write a python function to round up a given decimal number,"import math
def apply _ floor ( num )  : 
    return math . floor ( num ) "
92 Write a python function to round off a given decimal number,"def apply _ round ( num )  : 
    return round ( num ) "
93 write a python function to find One's compliment of a number,"import math
def OnesComplement ( num )  : 
    bits  =  int ( math . floor ( math . log ( num )   /  math . log ( 2 )  )   +  1 ) 
    return  (  ( 1  <  <  bits )   -  1 )   ^  num"
94 write a python function that takes in a decimal number and prints it's binary representation,"def dec2bin ( num )  : 
    print ( format ( num ,  ""b"" )  ) "
95 write a python function that accepts a binary string and converts it into an equivalent decimal number,"def bin2dec ( num )  : 
    return int ( num ,  2 ) "
96 write a python function that takes a number and returns an array of the number duplicated n times,"def duplicate _ array ( num ,  n )  : 
    num  =   [ num ]   *  n
    return num"
98 write a python function that calculates the midpoint between two numbers,"def midpoint ( a ,  b )  : 
    lar  =  b if b  >  a else a
    sm  =  a if b  >  a else b
    return float ( lar  +  sm )   /  2"
99 write a  python function that accepts a string and reverses it,"def reverse ( st )  : 
    return st [  :  :  - 1 ] "
write a python program to add two numbers,"num1  =  5465461
num2  =  8765468
sum  =  num1  +  num2
print ( f'Sum :   { sum } ' ) "
write a python function to add two user provided numbers and return the sum,"def add _ two _ numbers ( num1 ,  num2 )  :     
    sum  =  num1  +  num2    
    return sum"
write a program to find length of list,"l  =   [ 1 , 2 , 3 , 4 , 5 ] 
print ( len ( l )  ) "
write a function to find length of list,"def get _ list _ length ( l )  : 
    return len ( l ) "
write a program to convert tuple to list,"t  =   ( 1 , 2 , 4 , 5 , 6 ) 
print ( f'list :  { list ( t )  } ' ) "
write a function to convert tuple to list,"def convert _ tuple2list ( t )  : 
    return list ( t ) "
write a program to convert list to tuple,"l  =   [ 'a' , 4 , 5 ] 
print ( f'tuple :  { tuple ( l )  } ' ) "
write a function to convert list to tuple,"def list2tuple ( l )  : 
    return tuple ( l ) "
write a function to find length of list,"def tuple _ lenght ( t )  : 
    return len ( t ) "
write a program to find length of list,"t  =  1 , 2 , 3 , 4 , 5
print ( f'tuple length :   { len ( t )  } ' ) "
write a program to concat two list,"l1  =   [ 1 , 2 , 3 ] 
l2  =   [ 4 , 5 , 6 ] 
print ( f'sum  :   { l1  +  l2 } ' ) "
write a functiom to concat two list,"l1  =   [ 1 , 2 , 3 ] 
l2  =   [ 4 , 5 , 6 ] 
def list _ concat ( l1 , l2 )  : 
    return l1  +  l2 "
write Python code to convert Celsius scale to Fahrenheit scale,"def Cel _ To _ Fah ( n )  :  
    return  ( n * 1 . 8 )  + 32
n  =  20
print ( int ( Cel _ To _ Fah ( n )  )  )  "
write Function to convert temperature  from degree Celsius to Kelvin,"def Celsius _ to _ Kelvin ( C )  :  
    return  ( C  +  273 . 15 )  
C  =  100 
print ( ""Temperature in Kelvin  (  K  )   =  "" ,   
                    Celsius _ to _ Kelvin ( C )  )  "
write Python code to convert radian to degree,"def Convert ( radian )  :  
    pi  =  3 . 14159
    degree  =  radian  *   ( 180 / pi )  
    return degree 
radian  =  5
print ( ""degree  = "" ,  ( Convert ( radian )  )  )  "
Driven code,"mat  =   [  [ 1 ,  2 ,  3 ]  ,  
        [  4 ,  5 ,  6  ]  ,  
        [  7 ,  8 ,  9  ]  ]  ;  
rotateMatrix ( mat )  ;  "
write  Function to left rotate n by d bits,"def leftRotate ( n ,  d )  :  
    INT _ BITS  =  32
    return  ( n  <  <  d )  |  ( n  >  >   ( INT _ BITS  -  d )  )  
n  =  16
d  =  2
print ( ""Left Rotation of"" , n , ""by"" , d , ""is"" , end = "" "" )  
print ( leftRotate ( n ,  d )  )  "
write Python3 code to demonstrate to create a substring from string,"ini _ string  =  'xbzefdgstb'
sstring  =  ini _ string [ 2 : 7 : 2 ]  
print  ( 'resultant substring { sstring } ' )  "
Program to cyclically rotate an array by one,"def cyclicRotate ( input )  :  
    print  (  [ input [  - 1 ]  ]   +  input [ 0 :  - 1 ]  )  "
write Python3 code to demonstrate list slicing from K to end using None,"test _ list  =   [ 5 ,  6 ,  2 ,  3 ,  9 ]  
K  =  2
res  =  test _ list [ K  :  None ]  
print  ( f""The sliced list is  :  { str ( res )  }  ""   )  "
write Python code t get difference of two lists Using set(),"def Diff ( li1 ,  li2 )  : 
	return  ( list ( list ( set ( li1 )  - set ( li2 )  )   +  list ( set ( li2 )  - set ( li1 )  )  )  ) 
li1  =   [ 10 ,  15 ,  20 ,  25 ,  30 ,  35 ,  40 ] 
li2  =   [ 25 ,  40 ,  35 ] 
print ( Diff ( li1 ,  li2 )  ) "
write a program for round for integers,"integer  =  18
print ( f""Round off value  :   { round ( integer  ,   - 1 )  } "" ) "
write a program for floating pointwrite a program,"print ( f""Round off value  :   { round ( 51 . 6 )  } "" ) "
write Program to demonstrate conditional operator,"a ,  b  =  10 ,  20
min  =  a if a  <  b else b 
print ( min )  "
"write Python program to demonstrate ternary operator using tuples, Dictionary and lambda","a ,  b  =  10 ,  20
print (   ( b ,  a )   [ a  <  b ]   )  
print (  { True :  a ,  False :  b }   [ a  <  b ]  )  
print (  ( lambda :  b ,  lambda :  a )  [ a  <  b ]  (  )  )  "
"write a python program using ""any"" function","print  ( any (  [ False ,  True ,  False ,  False ]  )  )  "
"write a python program using ""all"" function","print  ( all (  [ False ,  True ,  False ,  False ]  )  )  "
write Python3 code to demonstrate working of Check if tuple has any None value using any() + map() + lambda,"test _ tup  =   ( 10 ,  4 ,  5 ,  6 ,  None )  
res  =  any ( map ( lambda ele :  ele is None ,  test _ tup )  )  
print ( ""Does tuple contain any None value  ?   :  ""  +  str ( res )  )  "
write Python3 code to demonstrate working of Check if tuple has any None value using not + all(),"test _ tup  =   ( 10 ,  4 ,  5 ,  6 ,  None )  
print ( ""The original tuple  :  ""  +  str ( test _ tup )  )   
res  =  not all ( test _ tup )  
print ( ""Does tuple contain any None value  ?   :  ""  +  str ( res )  )  "
write Python program to demonstrate printing of complete multidimensional list row by row.,"a  =   [  [ 2 ,  4 ,  6 ,  8 ,  10 ]  ,   [ 3 ,  6 ,  9 ,  12 ,  15 ]  ,   [ 4 ,  8 ,  12 ,  16 ,  20 ]  ]  
for record in a :  
	print ( record )  "
write a program for Adding a sublist,"a  =   [  [ 2 ,  4 ,  6 ,  8 ,  10 ]  ,   [ 3 ,  6 ,  9 ,  12 ,  15 ]  ,   [ 4 ,  8 ,  12 ,  16 ,  20 ]  ]  
a . append (  [ 5 ,  10 ,  15 ,  20 ,  25 ]  )  
print ( a )  "
write a program for  Extending a sublist,"a  =   [  [ 2 ,  4 ,  6 ,  8 ,  10 ]  ,   [ 3 ,  6 ,  9 ,  12 ,  15 ]  ,   [ 4 ,  8 ,  12 ,  16 ,  20 ]  ]  
a [ 0 ]  . extend (  [ 12 ,  14 ,  16 ,  18 ]  )  
print ( a )  "
write a program for Reversing a sublist,"a  =   [  [ 2 ,  4 ,  6 ,  8 ,  10 ]  ,   [ 3 ,  6 ,  9 ,  12 ,  15 ]  ,   [ 4 ,  8 ,  12 ,  16 ,  20 ]  ]  
a [ 2 ]  . reverse (  )  
print ( a )  "
write a Python3 program to demonstrate the use of replace() method,"string  =  ""geeks for geeks geeks geeks geeks""
print ( string . replace ( ""geeks"" ,  ""Geeks"" )  )  
print ( string . replace ( ""geeks"" ,  ""GeeksforGeeks"" ,  3 )  )  "
write a program Creating a Dictionary  with Integer Keys,"Dict  =   { 1 :  'Geeks' ,  2 :  'For' ,  3 :  'Geeks' }  
print ( "" \ nDictionary with the use of Integer Keys :  "" )  
print ( Dict )  "
program Creating a Dictionary with Mixed keys,"Dict  =   { 'Name' :  'Geeks' ,  1 :   [ 1 ,  2 ,  3 ,  4 ]  }  
print ( "" \ nDictionary with the use of Mixed Keys :  "" )  
print ( Dict )  "
write a program Creating an empty Dictionary,"Dict  =   {  }  
print ( ""Empty Dictionary :  "" )  
print ( Dict )  "
write a program Creating a Dictionary  with dict() method,"Dict  =  dict (  { 1 :  'Geeks' ,  2 :  'For' ,  3 : 'Geeks' }  )  
print ( "" \ nDictionary with the use of dict (  )  :  "" )  
print ( Dict )  "
write a program Creating a Dictionary with each item as a Pair,"Dict  =  dict (  [  ( 1 ,  'Geeks' )  ,   ( 2 ,  'For' )  ]  )  
print ( "" \ nDictionary with each item as a pair :  "" )  
print ( Dict )  "
write a program Creating a Nested Dictionary as shown in the below image,"Dict  =   { 1 :  'Geeks' ,  2 :  'For' ,  
        3 :  { 'A'  :  'Welcome' ,  'B'  :  'To' ,  'C'  :  'Geeks' }  }  
print ( Dict )  "
write a program Creating a Dictionary,"Dict  =   { 1 :  'Geeks' ,  'name' :  'For' ,  3 :  'Geeks' }  
print ( ""Accessing a element using get : "" )  
print ( Dict . get ( 3 )  )  "
write a python Creating a Dictionary and  Accessing element using key,"Dict  =   { 'Dict1' :   { 1 :  'Geeks' }  ,  
    'Dict2' :   { 'Name' :  'For' }  }  
print ( Dict [ 'Dict1' ]  )  
print ( Dict [ 'Dict1' ]  [ 1 ]  )  
print ( Dict [ 'Dict2' ]  [ 'Name' ]  )  "
write a rpogram Deleting an arbitrary key  using popitem() function in dictionary,"Dict  =   { 1 :  'Geeks' ,  'name' :  'For' ,  3 :  'Geeks' }  
pop _ ele  =  Dict . popitem (  )  
print ( "" \ nDictionary after deletion :  ""  +  str ( Dict )  )  
print ( ""The arbitrary pair returned is :  ""  +  str ( pop _ ele )  )  "
write a  program for Deleting entire Dictionary,"Dict  =   { 1 :  'Geeks' ,  'name' :  'For' ,  3 :  'Geeks' }  
Dict . clear (  )  
print ( "" \ nDeleting Entire Dictionary :  "" )  
print ( Dict )  "
write Python3 program for illustration of values() method of dictionary,"dictionary  =   { ""raj"" :  2 ,  ""striver"" :  3 ,  ""vikram"" :  4 }  
print ( dictionary . values (  )  )  "
write Python program to illustrate enumerate function,"l1  =   [ ""eat"" , ""sleep"" , ""repeat"" ]  
s1  =  ""geek""
obj1  =  enumerate ( l1 )  
obj2  =  enumerate ( s1 )  
print  ( ""Return type : "" , type ( obj1 )   ) 
print (  list ( enumerate ( l1 )  )   ) 
print (  list ( enumerate ( s1 , 2 )  )   ) "
write Python program to illustrate  enumerate function in loops,"l1  =   [ ""eat"" , ""sleep"" , ""repeat"" ]  
for count , ele in enumerate ( l1 , 100 )  :  
    print  ( count , ele  ) "
write Python code to convert string to list,"def Convert _ 1 ( string )  :  
    li  =  list ( string . split ( "" "" )  )  
    return li 
str1  =  ""Geeks for Geeks""
print ( Convert ( str1 )  )  "
Python code to convert string to list,"def Convert _ 2 ( string )  :  
    li  =  list ( string . split ( "" - "" )  )  
    return li 
str1  =  ""Geeks - for - Geeks""
print ( Convert ( str1 )  )  "
write Python code to convert string to list character-wise,"def Convert _ 3 ( string )  :  
    list1 =  [  ]  
    list1 [  : 0 ]  = string 
    return list1 
str1 = ""ABCD""
print ( Convert ( str1 )  )  "
write Python3 code to demonstrate convert list of strings to list of tuples Using map() + eval,"test _ list  =   [ '4 ,  1' ,  '3 ,  2' ,  '5 ,  3' ]  
print ( ""The original list  :  ""  +  str ( test _ list )  )  
res  =  list ( map ( eval ,  test _ list )  )  
print ( ""The list after conversion to tuple list  :  ""  +  str ( res )  )  "
write a python program to swap two numbers and print it,"num1  =  5
num2  =  10
temp  =  num1
num1  =  num2
num2  =  temp
print ( ""The value of num1 after swapping :   {  } "" . format ( num1 )  ) 
print ( ""The value of num2 after swapping :   {  } "" . format ( num2 )  ) 
3 .  "
write a python function to add user provided list and return the result,"def addlist ( list1 , list2 )  : 
    result  =  list1 + list2
    return result
answer  =  addlist (  [ 'cat' , 'dog' ]  ,  [ 'samsung' , 'oneplus' ]  ) 
4 . "
write a python function to reverse user provided list and return the result,"def reverselist ( inlist )  :     
    inlist  =  inlist [  :  :  - 1 ]  
    return inlist
result  =  reverselist (  [ 1 , 2 ]  ) 
5 . "
write a python function to find the largest element in an array and return the result,"def largest ( arr )  : 
    max  =  arr [ 0 ] 
    n  =  len ( arr ) 
    for i in range ( 1 , n )  : 
        if arr [ i ]   >  max : 
            max  =  arr [ i ] 
        return max
largest (  [ 1 , 20 , 3 ]  )     
7 . "
write a python function to check if a string is palindrome or not and print the result,"def isPalindrome ( s )  : 
    if  ( s  =  =  s [  :  :  - 1 ]  )  : 
        print ( ""Given string is palindrome"" ) 
    else : 
        print ( ""Given string is not palindrome"" ) 
s  =  ""malayalam""
isPalindrome ( s ) 
8 . "
Write a function to convert Kilometers to Miles,"def Kilometers _ to _ Miles ( km )  : 
    conv _ fac  =  0 . 621371
    miles  =  km  *  conv _ fac
    return miles
9 .  "
Write a function to convert Miles to Kilometers,"def Miles _ to _ Kilometers ( m )  : 
    conv _ fac  =  0 . 621371
    kilometers  =  m  /  conv _ fac
    return kilometers    
10 .  "
Write a function to Convert Celsius To Fahrenheit,"def Celsius _ To _ Fahrenheit ( c )  : 
    fahrenheit  =   ( c  *  1 . 8 )   +  32
    return fahrenheit
11 . "
Write a fucntion to convert Fahrenheit to Celsius,"def Fahrenheit _ to _ Celsius ( f )  : 
    celsius  =   ( f  -  32 )   /  1 . 8
    return celsius
12 . "
"Write a program which will find all such numbers which are divisible by 7 but are not a multiple of 5, between 2000 and 3200 (both included). The numbers obtained should be printed in a comma-separated sequence on a single line.","l =  [  ] 
for i in range ( 2000 ,  3201 )  : 
    if  ( i % 7 =  = 0 )  and  ( i % 5 !  = 0 )  : 
        l . append ( str ( i )  ) 
print ' , ' . join ( l ) "
Write a program which can compute the factorial of a given numbers. The results should be printed in a comma-separated sequence on a single line.,"def fact ( x )  : 
    if x  =  =  0 : 
        return 1
    return x  *  fact ( x  -  1 ) 
x = int ( raw _ input (  )  ) 
print fact ( x ) "
"With a given integral number n, write a program to generate a dictionary that contains (i, i*i) such that is an integral number between 1 and n (both included). and then the program should print the dictionary.","n = int ( raw _ input (  )  ) 
d = dict (  ) 
for i in range ( 1 , n + 1 )  : 
    d [ i ]  = i * i
print d"
Write a program that accepts a comma separated sequence of words as input and prints the words in a comma-separated sequence after sorting them alphabetically.,"items =  [ x for x in raw _ input (  )  . split ( ' , ' )  ] 
items . sort (  ) 
print ' , ' . join ( items ) "
Write a program that accepts sequence of lines as input and prints the lines after making all characters in the sentence capitalized.,"lines  =   [  ] 
while True : 
    s  =  raw _ input (  ) 
    if s : 
        lines . append ( s . upper (  )  ) 
    else : 
        break ; 
for sentence in lines : 
    print sentence"
Write a program that accepts a sequence of whitespace separated words as input and prints the words after removing all duplicate words and sorting them alphanumerically.,"s  =  raw _ input (  ) 
words  =   [ word for word in s . split ( "" "" )  ] 
print "" "" . join ( sorted ( list ( set ( words )  )  )  ) "
Write a program which accepts a sequence of comma separated 4 digit binary numbers as its input and then check whether they are divisible by 5 or not. The numbers that are divisible by 5 are to be printed in a comma separated sequence.,"value  =   [  ] 
items =  [ x for x in raw _ input (  )  . split ( ' , ' )  ] 
for p in items : 
    intp  =  int ( p ,  2 ) 
    if not intp % 5 : 
        value . append ( p ) 
print ' , ' . join ( value ) "
Write a method which can calculate square value of number,"def square ( num )  : 
    return num  *  *  2"
Define a function which can compute the sum of two numbers.,"def SumFunction ( number1 ,  number2 )  : 
	return number1 + number2"
Define a function that can convert a integer into a string and print it in console.,"def printValue ( n )  : 
	print str ( n ) "
Define a function that can convert a integer into a string and print it in console.,"def printValue ( n )  : 
	print str ( n ) "
Define a function that can receive two integral numbers in string form and compute their sum and then print it in console.,"def printValue ( s1 , s2 )  : 
	print int ( s1 )  + int ( s2 ) "
Define a function that can accept two strings as input and concatenate them and then print it in console.,"def printValue ( s1 , s2 )  : 
	print s1 + s2"
"Define a function that can accept two strings as input and print the string with maximum length in console. If two strings have the same length, then the function should print al l strings line by line.","def printValue ( s1 , s2 )  : 
	len1  =  len ( s1 ) 
	len2  =  len ( s2 ) 
	if len1 > len2 : 
		print s1
	elif len2 > len1 : 
		print s2
	else : 
		print s1
		print s2"
"Define a function that can accept an integer number as input and print the ""It is an even number"" if the number is even, otherwise print ""It is an odd number"".","def checkValue ( n )  : 
	if n % 2  =  =  0 : 
		print ""It is an even number""
	else : 
		print ""It is an odd number"""
Define a function which can print a dictionary where the keys are numbers between 1 and 3 (both included) and the values are square of keys.,"def printDict (  )  : 
	d = dict (  ) 
	d [ 1 ]  = 1
	d [ 2 ]  = 2 *  * 2
	d [ 3 ]  = 3 *  * 2
	print d"
Define a function which can print a dictionary where the keys are numbers between 1 and 20 (both included) and the values are square of keys.,"def printDict (  )  : 
	d = dict (  ) 
	for i in range ( 1 , 21 )  : 
		d [ i ]  = i *  * 2
	print d"
Define a function which can generate a dictionary where the keys are numbers between 1 and 20 (both included) and the values are square of keys. The function should just print the values only.,"def printDict (  )  : 
	d = dict (  ) 
	for i in range ( 1 , 21 )  : 
		d [ i ]  = i *  * 2
	for  ( k , v )  in d . items (  )  : 	
		print v"
Define a function which can generate a dictionary where the keys are numbers between 1 and 20 (both included) and the values are square of keys. The function should just print the keys only.,"def printDict (  )  : 
	d = dict (  ) 
	for i in range ( 1 , 21 )  : 
		d [ i ]  = i *  * 2
	for k in d . keys (  )  : 	
		print k"
Define a function which can generate and print a list where the values are square of numbers between 1 and 20 (both included).,"def printList (  )  : 
	li = list (  ) 
	for i in range ( 1 , 21 )  : 
		li . append ( i *  * 2 ) 
	print li"
Define a function which can generate a list where the values are square of numbers between 1 and 20 (both included). Then the function needs to print the first 5 elements in the list.,"def printList (  )  : 
	li = list (  ) 
	for i in range ( 1 , 21 )  : 
		li . append ( i *  * 2 ) 
	print li [  : 5 ] "
Define a function which can generate a list where the values are square of numbers between 1 and 20 (both included). Then the function needs to print the last 5 elements in the list.,"def printList (  )  : 
	li = list (  ) 
	for i in range ( 1 , 21 )  : 
		li . append ( i *  * 2 ) 
	print li [  - 5 :  ] "
Define a function which can generate a list where the values are square of numbers between 1 and 20 (both included). Then the function needs to print all values except the first 5 elements in the list.,"def printList (  )  : 
	li = list (  ) 
	for i in range ( 1 , 21 )  : 
		li . append ( i *  * 2 ) 
	print li [ 5 :  ] "
Define a function which can generate and print a tuple where the value are square of numbers between 1 and 20 (both included).,"def printTuple (  )  : 
	li = list (  ) 
	for i in range ( 1 , 21 )  : 
		li . append ( i *  * 2 ) 
	print tuple ( li ) "
"With a given tuple (1,2,3,4,5,6,7,8,9,10), write a program to print the first half values in one line and the last half values in one line.","tp =  ( 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 ) 
tp1 = tp [  : 5 ] 
tp2 = tp [ 5 :  ] 
print tp1
print tp2"
"Write a program to generate and print another tuple whose values are even numbers in the given tuple (1,2,3,4,5,6,7,8,9,10).","tp =  ( 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 ) 
li = list (  ) 
for i in tp : 
	if tp [ i ]  % 2 =  = 0 : 
		li . append ( tp [ i ]  ) 
tp2 = tuple ( li ) 
print tp2"
"Write a program which accepts a string as input to print ""Yes"" if the string is ""yes"" or ""YES"" or ""Yes"", otherwise print ""No"".","s =  raw _ input (  ) 
if s =  = ""yes"" or s =  = ""YES"" or s =  = ""Yes"" : 
    print ""Yes""
else : 
    print ""No"""
"Write a program which can filter even numbers in a list by using filter function. The list is: [1,2,3,4,5,6,7,8,9,10].","li  =   [ 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 ] 
evenNumbers  =  filter ( lambda x :  x % 2 =  = 0 ,  li ) 
print evenNumbers"
"Write a program which can map() to make a list whose elements are square of elements in [1,2,3,4,5,6,7,8,9,10].","li  =   [ 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 ] 
squaredNumbers  =  map ( lambda x :  x *  * 2 ,  li ) 
print squaredNumbers"
"Write a program which can map() and filter() to make a list whose elements are square of even number in [1,2,3,4,5,6,7,8,9,10].","li  =   [ 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 ] 
evenNumbers  =  map ( lambda x :  x *  * 2 ,  filter ( lambda x :  x % 2 =  = 0 ,  li )  ) 
print evenNumbers"
Write a program which can filter() to make a list whose elements are even number between 1 and 20 (both included).,"evenNumbers  =  filter ( lambda x :  x % 2 =  = 0 ,  range ( 1 , 21 )  ) 
print evenNumbers"
"Assuming that we have some email addresses in the ""username@companyname.com"" format, write program to print the user name of a given email address. Both user names and company names are composed of letters only.","import re
emailAddress  =  raw _ input (  ) 
pat2  =  "" (  \ w +  )  @  (  (  \ w +  \  .  )  +  ( com )  ) ""
r2  =  re . match ( pat2 , emailAddress ) 
print r2 . group ( 1 ) "
"Assuming that we have some email addresses in the ""username@companyname.com"" format, write program to print the company name of a given email address. Both user names and company names are composed of letters only.","import re
emailAddress  =  raw _ input (  ) 
pat2  =  "" (  \ w +  )  @  (  \ w +  )  \  .  ( com ) ""
r2  =  re . match ( pat2 , emailAddress ) 
print r2 . group ( 2 ) "
Write a program which accepts a sequence of words separated by whitespace as input to print the words composed of digits only.,"import re
s  =  raw _ input (  ) 
print re . findall ( "" \ d + "" , s ) 
unicodeString  =  u""hello world ! ""
print unicodeString"
Write a program to read an ASCII string and to convert it to a unicode string encoded by utf-8.,"s  =  raw _ input (  ) 
u  =  unicode (  s  , ""utf - 8"" ) 
print u"
Write a program to compute 1/2+2/3+3/4+...+n/n+1 with a given n input by console (n>0).,"n = int ( raw _ input (  )  ) 
sum = 0 . 0
for i in range ( 1 , n + 1 )  : 
    sum  +  =  float ( float ( i )  /  ( i + 1 )  ) 
print sum"
Write a program to compute: f(n)=f(n-1)+100 when n>0 and f(0)=1,"def f ( n )  : 
    if n =  = 0 : 
        return 0
    else : 
        return f ( n - 1 )  + 100
n = int ( raw _ input (  )  ) 
print f ( n ) "
Write a program to add an integer and [revious non negative integer,"Solution : 
def f ( n )  : 
    if n  =  =  0 :  return 0
    elif n  =  =  1 :  return 1
    else :  return f ( n - 1 )  + f ( n - 2 ) "
"write assert statements to verify that every number in the list [2,4,6,8] is even.","li  =   [ 2 , 4 , 6 , 8 ] 
for i in li : 
    assert i % 2 =  = 0"
write a program which accepts basic mathematic expression from console and print the evaluation result.,"expression  =  raw _ input (  ) 
print eval ( expression ) "
generate a random float where the value is between 10 and 100 using Python math module.,"import random
print random . random (  )  * 100"
generate a random float where the value is between 5 and 95 using Python math module.,"import random
print random . random (  )  * 100 - 5"
write a program to output a random even number between 0 and 10 inclusive using random module and list comprehension.,"import random
print random . choice (  [ i for i in range ( 11 )  if i % 2 =  = 0 ]  ) "
"write a program to output a random number, which is divisible by 5 and 7, between 0 and 10 inclusive using random module and list comprehension.","import random
print random . choice (  [ i for i in range ( 201 )  if i % 5 =  = 0 and i % 7 =  = 0 ]  ) "
write a program to generate a list with 5 random numbers between 100 and 200 inclusive.,"import random
print random . sample ( range ( 100 )  ,  5 ) "
write a program to randomly generate a list with 5 even numbers between 100 and 200 inclusive.,"import random
print random . sample (  [ i for i in range ( 100 , 201 )  if i % 2 =  = 0 ]  ,  5 ) "
"write a program to randomly generate a list with 5 numbers, which are divisible by 5 and 7 , between 1 and 1000 inclusive.","import random
print random . sample (  [ i for i in range ( 1 , 1001 )  if i % 5 =  = 0 and i % 7 =  = 0 ]  ,  5 ) "
write a program to randomly print a integer number between 7 and 15 inclusive.,"import random
print random . randrange ( 7 , 16 ) "
"write a program to compress and decompress the string ""hello world!hello world!hello world!hello world!"".","import zlib
s  =  'hello world ! hello world ! hello world ! hello world ! '
t  =  zlib . compress ( s ) 
print t
print zlib . decompress ( t ) "
"write a program to print the running time of execution of ""1+1"" for 100 times.","from timeit import Timer
t  =  Timer ( ""for i in range ( 100 )  : 1 + 1"" ) 
print t . timeit (  ) "
"write a program to shuffle and print the list [3,6,7,8].","from random import shuffle
li  =   [ 3 , 6 , 7 , 8 ] 
shuffle ( li ) 
print li"
"write a program to shuffle and print the list [3,6,7,8].","from random import shuffle
li  =   [ 3 , 6 , 7 , 8 ] 
shuffle ( li ) 
print li"
"Write a program to print the list after removing delete even numbers in [5,6,77,45,22,12,24].","li  =   [ 5 , 6 , 77 , 45 , 22 , 12 , 24 ] 
li  =   [ x for x in li if x % 2 !  = 0 ] 
print li"
"By using list comprehension, write a program to print the list after removing delete numbers which are divisible by 5 and 7 in [12,24,35,70,88,120,155].","li  =   [ 12 , 24 , 35 , 70 , 88 , 120 , 155 ] 
li  =   [ x for x in li if x % 5 !  = 0 and x % 7 !  = 0 ] 
print li"
"By using list comprehension, write a program to print the list after removing the 0th, 2nd, 4th,6th numbers in [12,24,35,70,88,120,155].","li  =   [ 12 , 24 , 35 , 70 , 88 , 120 , 155 ] 
li  =   [ x for  ( i , x )  in enumerate ( li )  if i % 2 !  = 0 ] 
print li"
"By using list comprehension, write a program generate a 3*5*8 3D array whose each element is 0.","array  =   [  [   [ 0 for col in range ( 8 )  ]  for col in range ( 5 )  ]  for row in range ( 3 )  ] 
print array"
"By using list comprehension, write a program to print the list after removing the 0th,4th,5th numbers in [12,24,35,70,88,120,155].","li  =   [ 12 , 24 , 35 , 70 , 88 , 120 , 155 ] 
li  =   [ x for  ( i , x )  in enumerate ( li )  if i not in  ( 0 , 4 , 5 )  ] 
print li"
"By using list comprehension, write a program to print the list after removing the value 24 in [12,24,35,24,88,120,155].","li  =   [ 12 , 24 , 35 , 24 , 88 , 120 , 155 ] 
li  =   [ x for x in li if x !  = 24 ] 
print li"
"With two given lists [1,3,6,78,35,55] and [12,24,35,24,88,120,155], write a program to make a list whose elements are intersection of the above given lists.","set1 = set (  [ 1 , 3 , 6 , 78 , 35 , 55 ]  ) 
set2 = set (  [ 12 , 24 , 35 , 24 , 88 , 120 , 155 ]  ) 
set1  &  =  set2
li = list ( set1 ) 
print li"
write a program which count and print the numbers of each character in a string input by console.,"dic  =   {  } 
s = raw _ input (  ) 
for s in s : 
    dic [ s ]   =  dic . get ( s , 0 )  + 1
print ' \ n' . join (  [ ' % s ,  % s'  %   ( k ,  v )  for k ,  v in dic . items (  )  ]  ) "
write a program which accepts a string from console and print it in reverse order.,"s = raw _ input (  ) 
s  =  s [  :  :  - 1 ] 
print s"
write a program which accepts a string from console and print the characters that have even indexes.,"s = raw _ input (  ) 
s  =  s [  :  : 2 ] 
print s"
"write a program which prints all permutations of [1,2,3]","import itertools
print list ( itertools . permutations (  [ 1 , 2 , 3 ]  )  ) "
Write a program to solve a classic ancient Chinese puzzle:  We count 35 heads and 94 legs among the chickens and rabbits in a farm. How many rabbits and how many chickens do we have?,"def solve ( numheads , numlegs )  : 
    ns = 'No solutions ! '
    for i in range ( numheads + 1 )  : 
        j = numheads - i
        if 2 * i + 4 * j =  = numlegs : 
            return i , j
    return ns , ns"
write a program to count characters in a string,"st  =  ""AmmarAdil""
count  =   {  } 
for a in st : 
    if a in count : 
        count [ a ]  +  = 1
    else : 
        count [ a ]   =  1
print ( 'Count' ,  count ) "
write a program to print count of vowels in a string,"st  =  ""ammaradil""
vowle  =   [ 'a' ,  'e' ,  'i' ,  'o' ,  'u' ] 
count  =  0
for s in st : 
    if s in vowle : 
        count  =  count + 1
print ( ""Count"" ,  count ) "
write program to convert string to upper case,"st  =  ""ammar adil""
upper _ st  =  st . upper (  ) 
print ( ""Upper Case"" ,  upper _ st ) "
write program to convert string to lower case,"st  =  ""AMMAR ADIL""
lower _ st  =  st . lower (  ) 
print ( ""Lower Case"" ,  lower _ st ) "
write a program to find union of 2 arrays,"a  =   { 1 ,  2 ,  3 ,  4 } 
b  =   { 3 ,  4 ,  5 ,  6 } 
union _ both  =  a . union ( b ) 
print ( ""Union"" ,  union _ both ) "
write a program to find intersection,"a  =   { 1 ,  2 ,  3 ,  4 } 
b  =   { 3 ,  4 ,  5 ,  6 } 
intersection _ both  =  a . intersection ( b ) 
print ( ""Intersection"" ,  intersection _ both ) "
"write a program to join all items in a tuple into a string, using a hash character as separator","myTuple  =   ( ""John"" ,  ""Peter"" ,  ""Vicky"" ) 
x  =  "" # "" . join ( myTuple ) 
print ( x ) "
write a program to remove spaces at the beginning and at the end of the string,"txt  =  ""     banana     ""
x  =  txt . strip (  ) 
print ( ""of all fruits"" ,  x ,  ""is my favorite"" ) "
write a program to remove the leading and trailing characters,"txt  =  "" ,  ,  ,  ,  , rrttgg .  .  .  .  . banana .  .  .  . rrr""
x  =  txt . strip ( "" ,  . grt"" ) 
print ( x ) "
write a program to split a string into a list where each line is a list item,"txt  =  ""Thank you for the music \ nWelcome to the jungle""
x  =  txt . splitlines (  ) 
print ( x ) "
write a program to find index of a word in given string,"txt  =  ""Hello ,  welcome to my world . ""
x  =  txt . index ( ""welcome"" ) 
print ( x ) "
write a program to find ceil of a number,"import math
number  =  34 . 564
ce  =  math . ceil ( number ) 
print ( 'Ceil' ,  ce ) "
write a program to find absoluute number of a given number,"import math
number  =  34 . 564
fa  =  math . fabs ( number ) 
print ( 'Fabs' ,  fa ) "
write a program to find factorinal of a number,"import math
number  =  8
fa  =  math . factorial ( number ) 
print ( 'Factorial' ,  fa ) "
write a program to find exponential of a number,"import math
number  =  3
print ( 'Exponential' ,  math . exp ( number )  ) "
write a program to find log of a number,"import math
num  =  5
base  =  7
print ( ""Log _ x _ b"" ,  math . log ( num ,  base )  ) "
write a program to find cosine of a number,"import math
num  =  45
print ( ""Cosine"" ,  math . cos ( num )  ) "
write a program to find sin of a number,"import math
num  =  45
print ( ""Sin"" ,  math . sin ( num )  ) "
write a program to find tangent of a number,"import math
num  =  45
print ( ""Tangent"" ,  math . tan ( num )  ) "
Write a program to print bit wise AND of two numbers,"a  =  60             #  60  =  0011 1100
b  =  13             #  13  =  0000 1101
c  =  a  &  b         #  12  =  0000 1100
print ( ""AND"" ,  c ) "
Write a program to print bit wise OR of two numbers,"a  =  60
b  =  13
c  =  a  |  b
print ( ""OR"" ,  c ) "
Write a program to print bit wise XOR of two numbers,"a  =  60
b  =  13
c  =  a  ^  b
print ( ""XOR"" ,  c ) "
Write a program to calculate Binary Ones Complement of a number,"a  =  60
c  =   ~ a
print ( ""Binary Ones Complement"" ,  c ) "
write a program to Binary Left Shift a number,"c  =  a  <  <  2
print ( ""Binary Left Shift"" ,  c ) "
write a program to Binary Right Shift a number,"c  =  a  >  >  2
print ( ""Binary Right Shift"" ,  c ) "
